!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
-format	GNUmakefile	/^	git archive --format=tar HEAD | gzip > lab$(LAB)-handin.tar.gz$/;"	m
ALLOC_ZERO	kern/pmap.h	/^	ALLOC_ZERO = 1<<0,$/;"	e	enum:__anon2
ALT	kern/console.c	222;"	d	file:
AR	GNUmakefile	/^AR	:= $(GCCPREFIX)ar$/;"	m
ARRAYSIZE	user/testbss.c	5;"	d	file:
AS	GNUmakefile	/^AS	:= $(GCCPREFIX)as$/;"	m
ASM	lib/string.c	9;"	d	file:
ASM	obj/fs/fs.asm	/^#define ASM 1$/;"	d
ASM	obj/kern/kernel.asm	/^#define ASM 1$/;"	d
ASM	obj/user/badsegment.asm	/^#define ASM 1$/;"	d
ASM	obj/user/breakpoint.asm	/^#define ASM 1$/;"	d
ASM	obj/user/buggyhello.asm	/^#define ASM 1$/;"	d
ASM	obj/user/buggyhello2.asm	/^#define ASM 1$/;"	d
ASM	obj/user/cat.asm	/^#define ASM 1$/;"	d
ASM	obj/user/divzero.asm	/^#define ASM 1$/;"	d
ASM	obj/user/dumbfork.asm	/^#define ASM 1$/;"	d
ASM	obj/user/echo.asm	/^#define ASM 1$/;"	d
ASM	obj/user/evilhello.asm	/^#define ASM 1$/;"	d
ASM	obj/user/fairness.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultalloc.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultallocbad.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultbadhandler.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultdie.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultevilhandler.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultnostack.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultread.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultreadkernel.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultregs.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultwrite.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultwritekernel.asm	/^#define ASM 1$/;"	d
ASM	obj/user/forktree.asm	/^#define ASM 1$/;"	d
ASM	obj/user/hello.asm	/^#define ASM 1$/;"	d
ASM	obj/user/icode.asm	/^#define ASM 1$/;"	d
ASM	obj/user/idle.asm	/^#define ASM 1$/;"	d
ASM	obj/user/init.asm	/^#define ASM 1$/;"	d
ASM	obj/user/ls.asm	/^#define ASM 1$/;"	d
ASM	obj/user/lsfd.asm	/^#define ASM 1$/;"	d
ASM	obj/user/num.asm	/^#define ASM 1$/;"	d
ASM	obj/user/pingpong.asm	/^#define ASM 1$/;"	d
ASM	obj/user/pingpongs.asm	/^#define ASM 1$/;"	d
ASM	obj/user/primes.asm	/^#define ASM 1$/;"	d
ASM	obj/user/primespipe.asm	/^#define ASM 1$/;"	d
ASM	obj/user/sendpage.asm	/^#define ASM 1$/;"	d
ASM	obj/user/sh.asm	/^#define ASM 1$/;"	d
ASM	obj/user/softint.asm	/^#define ASM 1$/;"	d
ASM	obj/user/spawnhello.asm	/^#define ASM 1$/;"	d
ASM	obj/user/spin.asm	/^#define ASM 1$/;"	d
ASM	obj/user/stresssched.asm	/^#define ASM 1$/;"	d
ASM	obj/user/testbss.asm	/^#define ASM 1$/;"	d
ASM	obj/user/testfdsharing.asm	/^#define ASM 1$/;"	d
ASM	obj/user/testfile.asm	/^#define ASM 1$/;"	d
ASM	obj/user/testkbd.asm	/^#define ASM 1$/;"	d
ASM	obj/user/testpipe.asm	/^#define ASM 1$/;"	d
ASM	obj/user/testpiperace.asm	/^#define ASM 1$/;"	d
ASM	obj/user/testpiperace2.asm	/^#define ASM 1$/;"	d
ASM	obj/user/testpteshare.asm	/^#define ASM 1$/;"	d
ASM	obj/user/testshell.asm	/^#define ASM 1$/;"	d
ASM	obj/user/yield.asm	/^#define ASM 1$/;"	d
ASSERT	kern/lapic.c	25;"	d	file:
Argstate	inc/args.h	/^struct Argstate {$/;"	s
BACKTRACE_RE	grade-lab1	/^BACKTRACE_RE = r"^ *ebp +f01[0-9a-z]{5} +eip +f0100[0-9a-z]{3} +args +([0-9a-z]+)"$/;"	v
BCAST	kern/lapic.c	28;"	d	file:
BLKBITSIZE	inc/fs.h	13;"	d
BLKFILES	inc/fs.h	45;"	d
BLKSECTS	fs/fs.h	5;"	d
BLKSIZE	inc/fs.h	12;"	d
BUFLEN	lib/readline.c	4;"	d	file:
BUFLEN	obj/kern/kernel.asm	/^#define BUFLEN 1024$/;"	d
BUFLEN	obj/user/sh.asm	/^#define BUFLEN 1024$/;"	d
BUFLEN	obj/user/testkbd.asm	/^#define BUFLEN 1024$/;"	d
BUFSIZ	user/sh.c	3;"	d	file:
BUSY	kern/lapic.c	30;"	d	file:
C	kern/console.c	289;"	d	file:
CAPSLOCK	kern/console.c	224;"	d	file:
CC	GNUmakefile	/^CC	:= $(GCCPREFIX)gcc -pipe$/;"	m
CFLAGS	GNUmakefile	/^CFLAGS := $(CFLAGS) $(DEFS) $(LABDEFS) -O1 -fno-builtin -I$(TOP) -MD$/;"	m
CGA_BASE	kern/console.h	13;"	d
CGA_BUF	kern/console.h	14;"	d
CHECK	user/faultregs.c	43;"	d	file:
CHECK	user/faultregs.c	65;"	d	file:
CHECKSUM	kern/entry.S	/^#define CHECKSUM (-(MULTIBOOT_HEADER_MAGIC + MULTIBOOT_HEADER_FLAGS))$/;"	d
CMDBUF_SIZE	kern/monitor.c	16;"	d	file:
CMDBYTE	inc/kbdreg.h	60;"	d
COLORS	gradelib.py	/^COLORS = {"default": "\\033[0m", "red": "\\033[31m", "green": "\\033[32m"}$/;"	v
COM1	kern/console.c	27;"	d	file:
COM_DLL	kern/console.c	31;"	d	file:
COM_DLM	kern/console.c	32;"	d	file:
COM_FCR	kern/console.c	36;"	d	file:
COM_IER	kern/console.c	33;"	d	file:
COM_IER_RDI	kern/console.c	34;"	d	file:
COM_IIR	kern/console.c	35;"	d	file:
COM_LCR	kern/console.c	37;"	d	file:
COM_LCR_DLAB	kern/console.c	38;"	d	file:
COM_LCR_WLEN8	kern/console.c	39;"	d	file:
COM_LSR	kern/console.c	44;"	d	file:
COM_LSR_DATA	kern/console.c	45;"	d	file:
COM_LSR_TSRE	kern/console.c	47;"	d	file:
COM_LSR_TXRDY	kern/console.c	46;"	d	file:
COM_MCR	kern/console.c	40;"	d	file:
COM_MCR_DTR	kern/console.c	42;"	d	file:
COM_MCR_OUT2	kern/console.c	43;"	d	file:
COM_MCR_RTS	kern/console.c	41;"	d	file:
COM_RX	kern/console.c	29;"	d	file:
COM_TX	kern/console.c	30;"	d	file:
CONSBUFSIZE	kern/console.c	388;"	d	file:
CPUS	GNUmakefile	/^CPUS ?= 1$/;"	m
CPU_HALTED	kern/cpu.h	/^	CPU_HALTED,$/;"	e	enum:__anon1
CPU_STARTED	kern/cpu.h	/^	CPU_STARTED,$/;"	e	enum:__anon1
CPU_UNUSED	kern/cpu.h	/^	CPU_UNUSED = 0,$/;"	e	enum:__anon1
CR0_AM	inc/mmu.h	86;"	d
CR0_CD	inc/mmu.h	88;"	d
CR0_EM	inc/mmu.h	81;"	d
CR0_ET	inc/mmu.h	83;"	d
CR0_MP	inc/mmu.h	80;"	d
CR0_NE	inc/mmu.h	84;"	d
CR0_NW	inc/mmu.h	87;"	d
CR0_PE	inc/mmu.h	79;"	d
CR0_PG	inc/mmu.h	89;"	d
CR0_TS	inc/mmu.h	82;"	d
CR0_WP	inc/mmu.h	85;"	d
CR4_DE	inc/mmu.h	94;"	d
CR4_MCE	inc/mmu.h	92;"	d
CR4_PCE	inc/mmu.h	91;"	d
CR4_PSE	inc/mmu.h	93;"	d
CR4_PVI	inc/mmu.h	96;"	d
CR4_TSD	inc/mmu.h	95;"	d
CR4_VME	inc/mmu.h	97;"	d
CRT_COLS	kern/console.h	17;"	d
CRT_ROWS	kern/console.h	16;"	d
CRT_SIZE	kern/console.h	18;"	d
CTL	kern/console.c	221;"	d	file:
CURRENT_TEST	gradelib.py	/^CURRENT_TEST = None$/;"	v
Command	kern/monitor.c	/^struct Command {$/;"	s	file:
CpuInfo	kern/cpu.h	/^struct CpuInfo {$/;"	s
DEASSERT	kern/lapic.c	26;"	d	file:
DEBUG_SPINLOCK	kern/spinlock.h	7;"	d
DELIVS	kern/lapic.c	24;"	d	file:
DEPTH	user/forktree.c	5;"	d	file:
DISKMAP	fs/fs.h	9;"	d
DISKSIZE	fs/fs.h	12;"	d
DPL_USER	inc/mmu.h	309;"	d
Dev	inc/fd.h	/^struct Dev {$/;"	s
Dir	fs/fsformat.c	/^struct Dir$/;"	s	file:
Disassembly	obj/boot/boot.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/fs/fs.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/kern/kernel.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/badsegment.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/breakpoint.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/buggyhello.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/buggyhello2.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/cat.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/divzero.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/dumbfork.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/echo.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/evilhello.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/fairness.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultalloc.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultallocbad.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultbadhandler.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultdie.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultevilhandler.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultnostack.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultread.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultreadkernel.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultregs.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultwrite.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultwritekernel.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/forktree.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/hello.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/icode.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/idle.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/init.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/ls.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/lsfd.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/num.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/pingpong.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/pingpongs.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/primes.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/primespipe.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/sendpage.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/sh.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/softint.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/spawnhello.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/spin.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/stresssched.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testbss.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testfdsharing.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testfile.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testkbd.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testpipe.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testpiperace.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testpiperace2.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testpteshare.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testshell.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/yield.asm	/^Disassembly of section .text:$/;"	l
E	grade-lab4	/^def E(s, trim=False):$/;"	f
E0ESC	kern/console.c	228;"	d	file:
ELFHDR	boot/main.c	33;"	d	file:
ELF_MAGIC	inc/elf.h	4;"	d
ELF_PROG_FLAG_EXEC	inc/elf.h	52;"	d
ELF_PROG_FLAG_READ	inc/elf.h	54;"	d
ELF_PROG_FLAG_WRITE	inc/elf.h	53;"	d
ELF_PROG_LOAD	inc/elf.h	49;"	d
ELF_SHN_UNDEF	inc/elf.h	63;"	d
ELF_SHT_NULL	inc/elf.h	57;"	d
ELF_SHT_PROGBITS	inc/elf.h	58;"	d
ELF_SHT_STRTAB	inc/elf.h	60;"	d
ELF_SHT_SYMTAB	inc/elf.h	59;"	d
ENABLE	kern/lapic.c	19;"	d	file:
ENVGENSHIFT	kern/env.c	22;"	d	file:
ENVX	inc/env.h	30;"	d
ENV_CREATE	kern/env.h	29;"	d
ENV_DYING	inc/env.h	/^	ENV_DYING,$/;"	e	enum:__anon8
ENV_FREE	inc/env.h	/^	ENV_FREE = 0,$/;"	e	enum:__anon8
ENV_NOT_RUNNABLE	inc/env.h	/^	ENV_NOT_RUNNABLE$/;"	e	enum:__anon8
ENV_PASTE3	kern/env.h	27;"	d
ENV_RUNNABLE	inc/env.h	/^	ENV_RUNNABLE,$/;"	e	enum:__anon8
ENV_RUNNING	inc/env.h	/^	ENV_RUNNING,$/;"	e	enum:__anon8
ENV_TYPE_FS	inc/env.h	/^	ENV_TYPE_FS,		\/\/ File system server$/;"	e	enum:EnvType
ENV_TYPE_USER	inc/env.h	/^	ENV_TYPE_USER = 0,$/;"	e	enum:EnvType
EOI	kern/lapic.c	17;"	d	file:
ERROR	kern/lapic.c	39;"	d	file:
ESR	kern/lapic.c	20;"	d	file:
EXTPHYSMEM	inc/memlayout.h	93;"	d
E_BAD_ENV	inc/error.h	/^	E_BAD_ENV	,	\/\/ Environment doesn't exist or otherwise$/;"	e	enum:__anon6
E_BAD_PATH	inc/error.h	/^	E_BAD_PATH	,	\/\/ Bad path$/;"	e	enum:__anon6
E_EOF	inc/error.h	/^	E_EOF		,	\/\/ Unexpected end of file$/;"	e	enum:__anon6
E_FAULT	inc/error.h	/^	E_FAULT		,	\/\/ Memory fault$/;"	e	enum:__anon6
E_FILE_EXISTS	inc/error.h	/^	E_FILE_EXISTS	,	\/\/ File already exists$/;"	e	enum:__anon6
E_INVAL	inc/error.h	/^	E_INVAL		,	\/\/ Invalid parameter$/;"	e	enum:__anon6
E_IPC_NOT_RECV	inc/error.h	/^	E_IPC_NOT_RECV	,	\/\/ Attempt to send to env that is not recving$/;"	e	enum:__anon6
E_MAX_OPEN	inc/error.h	/^	E_MAX_OPEN	,	\/\/ Too many files are open$/;"	e	enum:__anon6
E_NOT_EXEC	inc/error.h	/^	E_NOT_EXEC	,	\/\/ File not a valid executable$/;"	e	enum:__anon6
E_NOT_FOUND	inc/error.h	/^	E_NOT_FOUND	, 	\/\/ File or block not found$/;"	e	enum:__anon6
E_NOT_SUPP	inc/error.h	/^	E_NOT_SUPP	,	\/\/ Operation not supported$/;"	e	enum:__anon6
E_NO_DISK	inc/error.h	/^	E_NO_DISK	,	\/\/ No free space left on disk$/;"	e	enum:__anon6
E_NO_FREE_ENV	inc/error.h	/^	E_NO_FREE_ENV	,	\/\/ Attempt to create a new environment beyond$/;"	e	enum:__anon6
E_NO_MEM	inc/error.h	/^	E_NO_MEM	,	\/\/ Request failed due to memory shortage$/;"	e	enum:__anon6
E_UNSPECIFIED	inc/error.h	/^	E_UNSPECIFIED	= 1,	\/\/ Unspecified or unknown problem$/;"	e	enum:__anon6
Eipdebuginfo	kern/kdebug.h	/^struct Eipdebuginfo {$/;"	s
Elf	inc/elf.h	/^struct Elf {$/;"	s
Env	inc/env.h	/^struct Env {$/;"	s
EnvType	inc/env.h	/^enum EnvType {$/;"	g
FDTABLE	lib/fd.c	8;"	d	file:
FEC_PR	inc/mmu.h	123;"	d
FEC_U	inc/mmu.h	125;"	d
FEC_WR	inc/mmu.h	124;"	d
FILEDATA	lib/fd.c	11;"	d	file:
FILEVA	fs/serv.c	41;"	d	file:
FIXED	kern/lapic.c	31;"	d	file:
FL_AC	inc/mmu.h	117;"	d
FL_AF	inc/mmu.h	102;"	d
FL_CF	inc/mmu.h	100;"	d
FL_DF	inc/mmu.h	107;"	d
FL_ID	inc/mmu.h	120;"	d
FL_IF	inc/mmu.h	106;"	d
FL_IOPL_0	inc/mmu.h	110;"	d
FL_IOPL_1	inc/mmu.h	111;"	d
FL_IOPL_2	inc/mmu.h	112;"	d
FL_IOPL_3	inc/mmu.h	113;"	d
FL_IOPL_MASK	inc/mmu.h	109;"	d
FL_NT	inc/mmu.h	114;"	d
FL_OF	inc/mmu.h	108;"	d
FL_PF	inc/mmu.h	101;"	d
FL_RF	inc/mmu.h	115;"	d
FL_SF	inc/mmu.h	104;"	d
FL_TF	inc/mmu.h	105;"	d
FL_VIF	inc/mmu.h	118;"	d
FL_VIP	inc/mmu.h	119;"	d
FL_VM	inc/mmu.h	116;"	d
FL_ZF	inc/mmu.h	103;"	d
FSREQ_FLUSH	inc/fs.h	/^	FSREQ_FLUSH,$/;"	e	enum:__anon5
FSREQ_OPEN	inc/fs.h	/^	FSREQ_OPEN = 1,$/;"	e	enum:__anon5
FSREQ_READ	inc/fs.h	/^	FSREQ_READ,$/;"	e	enum:__anon5
FSREQ_REMOVE	inc/fs.h	/^	FSREQ_REMOVE,$/;"	e	enum:__anon5
FSREQ_SET_SIZE	inc/fs.h	/^	FSREQ_SET_SIZE,$/;"	e	enum:__anon5
FSREQ_STAT	inc/fs.h	/^	FSREQ_STAT,$/;"	e	enum:__anon5
FSREQ_SYNC	inc/fs.h	/^	FSREQ_SYNC$/;"	e	enum:__anon5
FSREQ_WRITE	inc/fs.h	/^	FSREQ_WRITE,$/;"	e	enum:__anon5
FS_MAGIC	inc/fs.h	54;"	d
FTYPE_DIR	inc/fs.h	49;"	d
FTYPE_REG	inc/fs.h	48;"	d
FVA	obj/user/testfile.asm	/^#define FVA ((struct Fd*)0xCCCCC000)$/;"	d
FVA	user/testfile.c	5;"	d	file:
Fd	inc/fd.h	/^struct Fd {$/;"	s
FdFile	inc/fd.h	/^struct FdFile {$/;"	s
File	inc/fs.h	/^struct File {$/;"	s
Fsipc	inc/fs.h	/^union Fsipc {$/;"	u
Fsreq_flush	inc/fs.h	/^	struct Fsreq_flush {$/;"	s	union:Fsipc
Fsreq_open	inc/fs.h	/^	struct Fsreq_open {$/;"	s	union:Fsipc
Fsreq_read	inc/fs.h	/^	struct Fsreq_read {$/;"	s	union:Fsipc
Fsreq_remove	inc/fs.h	/^	struct Fsreq_remove {$/;"	s	union:Fsipc
Fsreq_set_size	inc/fs.h	/^	struct Fsreq_set_size {$/;"	s	union:Fsipc
Fsreq_stat	inc/fs.h	/^	struct Fsreq_stat {$/;"	s	union:Fsipc
Fsreq_write	inc/fs.h	/^	struct Fsreq_write {$/;"	s	union:Fsipc
Fsret_read	inc/fs.h	/^	struct Fsret_read {$/;"	s	union:Fsipc
Fsret_stat	inc/fs.h	/^	struct Fsret_stat {$/;"	s	union:Fsipc
GCCPREFIX	GNUmakefile	/^GCCPREFIX := $(shell if i386-jos-elf-objdump -i 2>&1 | grep '^elf32-i386$$' >\/dev\/null 2>&1; \\$/;"	m
GCC_LIB	GNUmakefile	/^GCC_LIB := $(shell $(CC) $(CFLAGS) -print-libgcc-file-name)$/;"	m
GDBClient	gradelib.py	/^class GDBClient(object):$/;"	c
GDBPORT	GNUmakefile	/^GDBPORT	:= $(shell expr `id -u` % 5000 + 25000)$/;"	m
GD_KD	inc/memlayout.h	16;"	d
GD_KT	inc/memlayout.h	15;"	d
GD_TSS0	inc/memlayout.h	19;"	d
GD_UD	inc/memlayout.h	18;"	d
GD_UT	inc/memlayout.h	17;"	d
Gatedesc	inc/mmu.h	/^struct Gatedesc {$/;"	s
ICRHI	kern/lapic.c	32;"	d	file:
ICRLO	kern/lapic.c	21;"	d	file:
ID	kern/lapic.c	14;"	d	file:
IDE_BSY	fs/ide.c	10;"	d	file:
IDE_DF	fs/ide.c	12;"	d	file:
IDE_DRDY	fs/ide.c	11;"	d	file:
IDE_ERR	fs/ide.c	13;"	d	file:
IMAGES	GNUmakefile	/^IMAGES = $(OBJDIR)\/kern\/kernel.img$/;"	m
INDEX2DATA	lib/fd.c	16;"	d	file:
INDEX2FD	lib/fd.c	14;"	d	file:
INIT	kern/lapic.c	22;"	d	file:
IOPHYSMEM	inc/memlayout.h	92;"	d
IO_PIC1	kern/picirq.h	12;"	d
IO_PIC2	kern/picirq.h	13;"	d
IO_RTC	kern/kclock.h	9;"	d
IO_RTC	kern/lapic.c	137;"	d	file:
IRQ_ERROR	inc/trap.h	40;"	d
IRQ_IDE	inc/trap.h	39;"	d
IRQ_KBD	inc/trap.h	36;"	d
IRQ_OFFSET	inc/trap.h	32;"	d
IRQ_SERIAL	inc/trap.h	37;"	d
IRQ_SLAVE	kern/picirq.h	15;"	d
IRQ_SPURIOUS	inc/trap.h	38;"	d
IRQ_TIMER	inc/trap.h	35;"	d
JOS_INC_ARGS_H	inc/args.h	2;"	d
JOS_INC_ASSERT_H	inc/assert.h	4;"	d
JOS_INC_CPU_H	kern/cpu.h	3;"	d
JOS_INC_ELF_H	inc/elf.h	2;"	d
JOS_INC_ENV_H	inc/env.h	4;"	d
JOS_INC_ERROR_H	inc/error.h	4;"	d
JOS_INC_FD_H	inc/fd.h	6;"	d
JOS_INC_FS_H	inc/fs.h	4;"	d
JOS_INC_LIB_H	inc/lib.h	8;"	d
JOS_INC_MEMLAYOUT_H	inc/memlayout.h	2;"	d
JOS_INC_MMU_H	inc/mmu.h	2;"	d
JOS_INC_PARTITION_H	inc/partition.h	2;"	d
JOS_INC_SPINLOCK_H	kern/spinlock.h	2;"	d
JOS_INC_STDARG_H	inc/stdarg.h	4;"	d
JOS_INC_STDIO_H	inc/stdio.h	2;"	d
JOS_INC_STRING_H	inc/string.h	2;"	d
JOS_INC_SYSCALL_H	inc/syscall.h	2;"	d
JOS_INC_TRAP_H	inc/trap.h	2;"	d
JOS_INC_TYPES_H	fs/fsformat.c	25;"	d	file:
JOS_INC_TYPES_H	inc/types.h	2;"	d
JOS_INC_X86_H	inc/x86.h	2;"	d
JOS_KBDREG_H	inc/kbdreg.h	2;"	d
JOS_KERN_ENV_H	kern/env.h	4;"	d
JOS_KERN_KCLOCK_H	kern/kclock.h	4;"	d
JOS_KERN_KDEBUG_H	kern/kdebug.h	2;"	d
JOS_KERN_MONITOR_H	kern/monitor.h	2;"	d
JOS_KERN_PICIRQ_H	kern/picirq.h	4;"	d
JOS_KERN_PMAP_H	kern/pmap.h	4;"	d
JOS_KERN_SCHED_H	kern/sched.h	4;"	d
JOS_KERN_SYSCALL_H	kern/syscall.h	2;"	d
JOS_KERN_TRAP_H	kern/trap.h	4;"	d
JOS_STAB_H	inc/stab.h	2;"	d
KADDR	kern/pmap.h	38;"	d
KADDR	obj/kern/kernel.asm	/^#define KADDR(pa) _kaddr(__FILE__, __LINE__, pa)$/;"	d
KBCMDP	inc/kbdreg.h	29;"	d
KBC_AUXDISABLE	inc/kbdreg.h	32;"	d
KBC_AUXECHO	inc/kbdreg.h	36;"	d
KBC_AUXENABLE	inc/kbdreg.h	33;"	d
KBC_AUXTEST	inc/kbdreg.h	34;"	d
KBC_AUXWRITE	inc/kbdreg.h	37;"	d
KBC_DISABLE	inc/kbdreg.h	66;"	d
KBC_ECHO	inc/kbdreg.h	71;"	d
KBC_ENABLE	inc/kbdreg.h	67;"	d
KBC_KBDDISABLE	inc/kbdreg.h	40;"	d
KBC_KBDECHO	inc/kbdreg.h	35;"	d
KBC_KBDENABLE	inc/kbdreg.h	41;"	d
KBC_KBDTEST	inc/kbdreg.h	39;"	d
KBC_MODEIND	inc/kbdreg.h	70;"	d
KBC_PULSE0	inc/kbdreg.h	42;"	d
KBC_PULSE1	inc/kbdreg.h	43;"	d
KBC_PULSE2	inc/kbdreg.h	44;"	d
KBC_PULSE3	inc/kbdreg.h	45;"	d
KBC_RAMREAD	inc/kbdreg.h	30;"	d
KBC_RAMWRITE	inc/kbdreg.h	31;"	d
KBC_RESEND	inc/kbdreg.h	64;"	d
KBC_RESET	inc/kbdreg.h	63;"	d
KBC_SELFTEST	inc/kbdreg.h	38;"	d
KBC_SETDEFAULT	inc/kbdreg.h	65;"	d
KBC_SETTABLE	inc/kbdreg.h	69;"	d
KBC_TYPEMATIC	inc/kbdreg.h	68;"	d
KBDATAP	inc/kbdreg.h	47;"	d
KBOUTP	inc/kbdreg.h	48;"	d
KBR_ACK	inc/kbdreg.h	76;"	d
KBR_BREAK	inc/kbdreg.h	79;"	d
KBR_ECHO	inc/kbdreg.h	81;"	d
KBR_EXTENDED	inc/kbdreg.h	74;"	d
KBR_FAILURE	inc/kbdreg.h	78;"	d
KBR_OVERRUN	inc/kbdreg.h	77;"	d
KBR_RESEND	inc/kbdreg.h	75;"	d
KBR_RSTDONE	inc/kbdreg.h	80;"	d
KBSTATP	inc/kbdreg.h	19;"	d
KBS_DIB	inc/kbdreg.h	20;"	d
KBS_IBF	inc/kbdreg.h	21;"	d
KBS_NOSEC	inc/kbdreg.h	24;"	d
KBS_OCMD	inc/kbdreg.h	23;"	d
KBS_PERR	inc/kbdreg.h	27;"	d
KBS_RERR	inc/kbdreg.h	26;"	d
KBS_TERR	inc/kbdreg.h	25;"	d
KBS_WARM	inc/kbdreg.h	22;"	d
KC8_CPU	inc/kbdreg.h	57;"	d
KC8_IGNSEC	inc/kbdreg.h	56;"	d
KC8_KDISABLE	inc/kbdreg.h	55;"	d
KC8_KENABLE	inc/kbdreg.h	59;"	d
KC8_MDISABLE	inc/kbdreg.h	54;"	d
KC8_MENABLE	inc/kbdreg.h	58;"	d
KC8_TRANS	inc/kbdreg.h	53;"	d
KERNBASE	inc/memlayout.h	87;"	d
KERN_CFLAGS	GNUmakefile	/^KERN_CFLAGS := $(CFLAGS) -DJOS_KERNEL -gstabs$/;"	m
KEY_DEL	inc/kbdreg.h	14;"	d
KEY_DN	inc/kbdreg.h	8;"	d
KEY_END	inc/kbdreg.h	6;"	d
KEY_HOME	inc/kbdreg.h	5;"	d
KEY_INS	inc/kbdreg.h	13;"	d
KEY_LF	inc/kbdreg.h	9;"	d
KEY_PGDN	inc/kbdreg.h	12;"	d
KEY_PGUP	inc/kbdreg.h	11;"	d
KEY_RT	inc/kbdreg.h	10;"	d
KEY_UP	inc/kbdreg.h	7;"	d
KSTACKTOP	inc/memlayout.h	96;"	d
KSTKGAP	inc/memlayout.h	98;"	d
KSTKSIZE	inc/memlayout.h	97;"	d
K_LDCMDBYTE	inc/kbdreg.h	51;"	d
K_RDCMDBYTE	inc/kbdreg.h	50;"	d
LAB	conf/lab.mk	/^LAB=5$/;"	m
LABSETUP	GNUmakefile	/^LABSETUP ?= .\/$/;"	m
LD	GNUmakefile	/^LD	:= $(GCCPREFIX)ld$/;"	m
LDFLAGS	GNUmakefile	/^LDFLAGS := -m elf_i386$/;"	m
LEVEL	kern/lapic.c	27;"	d	file:
LINT0	kern/lapic.c	37;"	d	file:
LINT1	kern/lapic.c	38;"	d	file:
LOAD_REGS	user/faultregs.c	23;"	d	file:
LOG2NENV	inc/env.h	28;"	d
MAKE_TIMESTAMP	gradelib.py	/^MAKE_TIMESTAMP = 0$/;"	v
MASKED	kern/lapic.c	40;"	d	file:
MAX	inc/types.h	49;"	d
MAXARGS	homework/hw2-shell/sh.c	13;"	d	file:
MAXARGS	kern/monitor.c	260;"	d	file:
MAXARGS	obj/user/sh.asm	/^#define MAXARGS 16$/;"	d
MAXARGS	user/sh.c	20;"	d	file:
MAXERROR	inc/error.h	/^	MAXERROR$/;"	e	enum:__anon6
MAXFD	lib/fd.c	6;"	d	file:
MAXFILESIZE	inc/fs.h	27;"	d
MAXNAMELEN	inc/fs.h	17;"	d
MAXOPEN	fs/serv.c	40;"	d	file:
MAXPATHLEN	inc/fs.h	20;"	d
MAX_DIR_ENTS	fs/fsformat.c	35;"	d	file:
MAX_IRQS	kern/picirq.h	9;"	d
MC_NVRAM_SIZE	kern/kclock.h	12;"	d
MC_NVRAM_START	kern/kclock.h	11;"	d
MIN	inc/types.h	43;"	d
MMIOBASE	inc/memlayout.h	102;"	d
MMIOLIM	inc/memlayout.h	101;"	d
MONO_BASE	kern/console.h	11;"	d
MONO_BUF	kern/console.h	12;"	d
MON_CMD_DECL	kern/monitor.h	14;"	d
MON_CMD_DECL	kern/monitor.h	29;"	d
MPBOOTPHYS	kern/mpentry.S	/^#define MPBOOTPHYS(s) ((s) - mpentry_start + MPENTRY_PADDR)$/;"	d
MPBUS	kern/mpconfig.c	67;"	d	file:
MPENTRY_PADDR	inc/memlayout.h	142;"	d
MPIOAPIC	kern/mpconfig.c	68;"	d	file:
MPIOINTR	kern/mpconfig.c	69;"	d	file:
MPLINTR	kern/mpconfig.c	70;"	d	file:
MPPROC	kern/mpconfig.c	66;"	d	file:
MPPROC_BOOT	kern/mpconfig.c	63;"	d	file:
MULTIBOOT_HEADER_FLAGS	kern/entry.S	/^#define MULTIBOOT_HEADER_FLAGS (0)$/;"	d
MULTIBOOT_HEADER_MAGIC	kern/entry.S	/^#define MULTIBOOT_HEADER_MAGIC (0x1BADB002)$/;"	d
NATIVE_CFLAGS	GNUmakefile	/^NATIVE_CFLAGS := $(CFLAGS) $(DEFS) $(LABDEFS) -I$(TOP) -MD -Wall$/;"	m
NBUCKET	ph.c	9;"	d	file:
NCC	GNUmakefile	/^NCC	:= gcc $(CC_VER) -pipe$/;"	m
NCOMMANDS	kern/monitor.c	35;"	d	file:
NCPU	kern/cpu.h	11;"	d
NDIRECT	inc/fs.h	23;"	d
NENV	inc/env.h	29;"	d
NHANDLERS	fs/serv.c	293;"	d	file:
NHANDLERS	obj/fs/fs.asm	/^#define NHANDLERS (sizeof(handlers)\/sizeof(handlers[0]))$/;"	d
NINDIRECT	inc/fs.h	25;"	d
NKEYS	ph.c	10;"	d	file:
NM	GNUmakefile	/^NM	:= $(GCCPREFIX)nm$/;"	m
NO	kern/console.c	218;"	d	file:
NPDENTRIES	inc/mmu.h	45;"	d
NPTENTRIES	inc/mmu.h	46;"	d
NSYSCALLS	inc/syscall.h	/^	NSYSCALLS$/;"	e	enum:__anon9
NULL	inc/stdio.h	7;"	d
NULL	inc/types.h	5;"	d
NUMLOCK	kern/console.c	225;"	d	file:
NVRAM_BASEHI	kern/kclock.h	16;"	d
NVRAM_BASELO	kern/kclock.h	15;"	d
NVRAM_CENTURY	kern/kclock.h	27;"	d
NVRAM_EXTHI	kern/kclock.h	20;"	d
NVRAM_EXTLO	kern/kclock.h	19;"	d
NVRAM_PEXTHI	kern/kclock.h	24;"	d
NVRAM_PEXTLO	kern/kclock.h	23;"	d
N_BCOMM	inc/stab.h	37;"	d
N_BINCL	inc/stab.h	29;"	d
N_BSLINE	inc/stab.h	25;"	d
N_DSLINE	inc/stab.h	24;"	d
N_ECOML	inc/stab.h	39;"	d
N_ECOMM	inc/stab.h	38;"	d
N_EINCL	inc/stab.h	32;"	d
N_ENTRY	inc/stab.h	33;"	d
N_EXCL	inc/stab.h	35;"	d
N_FNAME	inc/stab.h	16;"	d
N_FUN	inc/stab.h	17;"	d
N_GSYM	inc/stab.h	15;"	d
N_LBRAC	inc/stab.h	34;"	d
N_LCSYM	inc/stab.h	19;"	d
N_LENG	inc/stab.h	40;"	d
N_LSYM	inc/stab.h	28;"	d
N_MAIN	inc/stab.h	20;"	d
N_PC	inc/stab.h	21;"	d
N_PSYM	inc/stab.h	31;"	d
N_RBRAC	inc/stab.h	36;"	d
N_RSYM	inc/stab.h	22;"	d
N_SLINE	inc/stab.h	23;"	d
N_SO	inc/stab.h	27;"	d
N_SOL	inc/stab.h	30;"	d
N_SSYM	inc/stab.h	26;"	d
N_STSYM	inc/stab.h	18;"	d
OBJCOPY	GNUmakefile	/^OBJCOPY	:= $(GCCPREFIX)objcopy$/;"	m
OBJDIR	GNUmakefile	/^OBJDIR := obj$/;"	m
OBJDIRS	GNUmakefile	/^OBJDIRS :=$/;"	m
OBJDUMP	GNUmakefile	/^OBJDUMP	:= $(GCCPREFIX)objdump$/;"	m
OTHERS	kern/lapic.c	29;"	d	file:
O_ACCMODE	inc/lib.h	126;"	d
O_CREAT	inc/lib.h	128;"	d
O_EXCL	inc/lib.h	130;"	d
O_MKDIR	inc/lib.h	131;"	d
O_RDONLY	inc/lib.h	123;"	d
O_RDWR	inc/lib.h	125;"	d
O_TRUNC	inc/lib.h	129;"	d
O_WRONLY	inc/lib.h	124;"	d
OpenFile	fs/serv.c	/^struct OpenFile {$/;"	s	file:
OptionParser	gradelib.py	/^from optparse import OptionParser$/;"	i
PACKAGEDATE	conf/lab.mk	/^PACKAGEDATE=Thu Oct 30 10:08:10 EDT 2014$/;"	m
PADDR	kern/pmap.h	26;"	d
PADDR	obj/kern/kernel.asm	/^#define PADDR(kva) _paddr(__FILE__, __LINE__, kva)$/;"	d
PATH	homework/hw2-shell/sh.c	/^char * PATH[] = {$/;"	v
PCINT	kern/lapic.c	36;"	d	file:
PDX	inc/mmu.h	33;"	d
PDXSHIFT	inc/mmu.h	55;"	d
PERIODIC	kern/lapic.c	35;"	d	file:
PERL	GNUmakefile	/^PERL	:= perl$/;"	m
PFTEMP	inc/memlayout.h	137;"	d
PGADDR	inc/mmu.h	42;"	d
PGNUM	inc/mmu.h	30;"	d
PGOFF	inc/mmu.h	39;"	d
PGSHIFT	inc/mmu.h	49;"	d
PGSIZE	inc/mmu.h	48;"	d
PIPEBUFSIZ	lib/pipe.c	20;"	d	file:
PTABLE_MAGIC	inc/partition.h	14;"	d
PTABLE_MAGIC_OFFSET	inc/partition.h	13;"	d
PTABLE_OFFSET	inc/partition.h	11;"	d
PTE_A	inc/mmu.h	63;"	d
PTE_ADDR	inc/mmu.h	76;"	d
PTE_AVAIL	inc/mmu.h	70;"	d
PTE_COW	lib/fork.c	8;"	d	file:
PTE_D	inc/mmu.h	64;"	d
PTE_G	inc/mmu.h	66;"	d
PTE_P	inc/mmu.h	58;"	d
PTE_PCD	inc/mmu.h	62;"	d
PTE_PS	inc/mmu.h	65;"	d
PTE_PWT	inc/mmu.h	61;"	d
PTE_SHARE	inc/lib.h	80;"	d
PTE_SYSCALL	inc/mmu.h	73;"	d
PTE_U	inc/mmu.h	60;"	d
PTE_W	inc/mmu.h	59;"	d
PTSHIFT	inc/mmu.h	52;"	d
PTSIZE	inc/mmu.h	51;"	d
PTX	inc/mmu.h	36;"	d
PTXSHIFT	inc/mmu.h	54;"	d
PTYPE_DOS_EXTENDED	inc/partition.h	20;"	d
PTYPE_JOSFS	inc/partition.h	18;"	d
PTYPE_JOS_KERN	inc/partition.h	17;"	d
PTYPE_LINUX_EXTENDED	inc/partition.h	22;"	d
PTYPE_W95_EXTENDED	inc/partition.h	21;"	d
PageInfo	inc/memlayout.h	/^struct PageInfo {$/;"	s
Partitiondesc	inc/partition.h	/^struct Partitiondesc {$/;"	s
Pipe	lib/pipe.c	/^struct Pipe {$/;"	s	file:
Popen	gradelib.py	/^from subprocess import check_call, Popen$/;"	i
Proghdr	inc/elf.h	/^struct Proghdr {$/;"	s
Pseudodesc	inc/mmu.h	/^struct Pseudodesc {$/;"	s
PushRegs	inc/trap.h	/^struct PushRegs {$/;"	s
QEMU	GNUmakefile	/^QEMU := $(shell if which qemu > \/dev\/null; \\$/;"	m
QEMU	gradelib.py	/^class QEMU(object):$/;"	c
QEMUOPTS	GNUmakefile	/^QEMUOPTS = -hda $(OBJDIR)\/kern\/kernel.img -serial mon:stdio -gdb tcp::$(GDBPORT)$/;"	m
RELOC	kern/entry.S	/^#define	RELOC(x) ((x) - KERNBASE)$/;"	d
RELOC	kern/mpentry.S	/^#define RELOC(x) ((x) - KERNBASE)$/;"	d
ROUNDDOWN	inc/types.h	58;"	d
ROUNDUP	fs/fsformat.c	34;"	d	file:
ROUNDUP	inc/types.h	64;"	d
Runner	gradelib.py	/^class Runner():$/;"	c
SAVE_REGS	user/faultregs.c	13;"	d	file:
SCROLLLOCK	kern/console.c	226;"	d	file:
SECTSIZE	boot/main.c	32;"	d	file:
SECTSIZE	fs/fs.h	4;"	d
SEG	inc/mmu.h	142;"	d
SEG	inc/mmu.h	172;"	d
SEG16	inc/mmu.h	176;"	d
SEG_FAULT	inc/mmu.h	170;"	d
SEG_NULL	inc/mmu.h	139;"	d
SEG_NULL	inc/mmu.h	168;"	d
SETCALLGATE	inc/mmu.h	296;"	d
SETGATE	inc/mmu.h	282;"	d
SHIFT	kern/console.c	220;"	d	file:
SOL	ph.c	8;"	d	file:
SRL	kern/entry.S	/^#define SRL(val, shamt)		(((val) >> (shamt)) & ~(-1 << (32 - (shamt))))$/;"	d
STARTUP	kern/lapic.c	23;"	d	file:
STA_A	inc/mmu.h	189;"	d
STA_C	inc/mmu.h	186;"	d
STA_E	inc/mmu.h	185;"	d
STA_R	inc/mmu.h	188;"	d
STA_W	inc/mmu.h	187;"	d
STA_X	inc/mmu.h	184;"	d
STS_CG16	inc/mmu.h	195;"	d
STS_CG32	inc/mmu.h	201;"	d
STS_IG16	inc/mmu.h	197;"	d
STS_IG32	inc/mmu.h	202;"	d
STS_LDT	inc/mmu.h	193;"	d
STS_T16A	inc/mmu.h	192;"	d
STS_T16B	inc/mmu.h	194;"	d
STS_T32A	inc/mmu.h	199;"	d
STS_T32B	inc/mmu.h	200;"	d
STS_TG	inc/mmu.h	196;"	d
STS_TG16	inc/mmu.h	198;"	d
STS_TG32	inc/mmu.h	203;"	d
SVR	kern/lapic.c	18;"	d	file:
SYMBOLS	obj/user/sh.asm	/^#define SYMBOLS "<|>&;()"$/;"	d
SYMBOLS	user/sh.c	187;"	d	file:
SYS_cgetc	inc/syscall.h	/^	SYS_cgetc,$/;"	e	enum:__anon9
SYS_cputs	inc/syscall.h	/^	SYS_cputs = 0,$/;"	e	enum:__anon9
SYS_env_destroy	inc/syscall.h	/^	SYS_env_destroy,$/;"	e	enum:__anon9
SYS_env_set_pgfault_upcall	inc/syscall.h	/^	SYS_env_set_pgfault_upcall,$/;"	e	enum:__anon9
SYS_env_set_status	inc/syscall.h	/^	SYS_env_set_status,$/;"	e	enum:__anon9
SYS_env_set_trapframe	inc/syscall.h	/^	SYS_env_set_trapframe,$/;"	e	enum:__anon9
SYS_exofork	inc/syscall.h	/^	SYS_exofork,$/;"	e	enum:__anon9
SYS_getenvid	inc/syscall.h	/^	SYS_getenvid,$/;"	e	enum:__anon9
SYS_ipc_recv	inc/syscall.h	/^	SYS_ipc_recv,$/;"	e	enum:__anon9
SYS_ipc_try_send	inc/syscall.h	/^	SYS_ipc_try_send,$/;"	e	enum:__anon9
SYS_page_alloc	inc/syscall.h	/^	SYS_page_alloc,$/;"	e	enum:__anon9
SYS_page_map	inc/syscall.h	/^	SYS_page_map,$/;"	e	enum:__anon9
SYS_page_unmap	inc/syscall.h	/^	SYS_page_unmap,$/;"	e	enum:__anon9
SYS_yield	inc/syscall.h	/^	SYS_yield,$/;"	e	enum:__anon9
Secthdr	inc/elf.h	/^struct Secthdr {$/;"	s
Segdesc	inc/mmu.h	/^struct Segdesc {$/;"	s
Stab	inc/stab.h	/^struct Stab {$/;"	s
Stat	inc/fd.h	/^struct Stat {$/;"	s
Super	inc/fs.h	/^struct Super {$/;"	s
TAR	GNUmakefile	/^TAR	:= gtar$/;"	m
TCCR	kern/lapic.c	42;"	d	file:
TDCR	kern/lapic.c	43;"	d	file:
TEMP_ADDR	obj/user/sendpage.asm	/^#define TEMP_ADDR	((char*)0xa00000)$/;"	d
TEMP_ADDR	user/sendpage.c	9;"	d	file:
TEMP_ADDR_CHILD	obj/user/sendpage.asm	/^#define TEMP_ADDR_CHILD	((char*)0xb00000)$/;"	d
TEMP_ADDR_CHILD	user/sendpage.c	10;"	d	file:
TESTS	gradelib.py	/^TESTS = []$/;"	v
TICR	kern/lapic.c	41;"	d	file:
TIMER	kern/lapic.c	33;"	d	file:
TOP	GNUmakefile	/^TOP = .$/;"	m
TPR	kern/lapic.c	16;"	d	file:
TRAPHANDLER	kern/trapentry.S	/^#define TRAPHANDLER(name, num)						\\$/;"	d
TRAPHANDLER_NOEC	kern/trapentry.S	/^#define TRAPHANDLER_NOEC(name, num)					\\$/;"	d
T_ALIGN	inc/trap.h	23;"	d
T_BOUND	inc/trap.h	11;"	d
T_BRKPT	inc/trap.h	9;"	d
T_DBLFLT	inc/trap.h	14;"	d
T_DEBUG	inc/trap.h	7;"	d
T_DEFAULT	inc/trap.h	30;"	d
T_DEVICE	inc/trap.h	13;"	d
T_DIVIDE	inc/trap.h	6;"	d
T_FPERR	inc/trap.h	22;"	d
T_GPFLT	inc/trap.h	19;"	d
T_ILLOP	inc/trap.h	12;"	d
T_MCHK	inc/trap.h	24;"	d
T_NMI	inc/trap.h	8;"	d
T_OFLOW	inc/trap.h	10;"	d
T_PGFLT	inc/trap.h	20;"	d
T_SEGNP	inc/trap.h	17;"	d
T_SIMDERR	inc/trap.h	25;"	d
T_STACK	inc/trap.h	18;"	d
T_SYSCALL	inc/trap.h	29;"	d
T_TSS	inc/trap.h	16;"	d
Taskstate	inc/mmu.h	/^struct Taskstate {$/;"	s
TerminateTest	gradelib.py	/^class TerminateTest(Exception):$/;"	c
Trapframe	inc/trap.h	/^struct Trapframe {$/;"	s
UENVS	inc/memlayout.h	116;"	d
ULDFLAGS	GNUmakefile	/^ULDFLAGS := -T user\/user.ld$/;"	m
ULIM	inc/memlayout.h	104;"	d
UPAGES	inc/memlayout.h	114;"	d
USED	inc/lib.h	24;"	d
USER_CFLAGS	GNUmakefile	/^USER_CFLAGS := $(CFLAGS) -DJOS_USER -gstabs$/;"	m
USTABDATA	inc/memlayout.h	139;"	d
USTACKTOP	inc/memlayout.h	128;"	d
UTEMP	inc/memlayout.h	134;"	d
UTEMP2	lib/spawn.c	5;"	d	file:
UTEMP2USTACK	lib/spawn.c	4;"	d	file:
UTEMP3	lib/spawn.c	6;"	d	file:
UTEXT	inc/memlayout.h	131;"	d
UTOP	inc/memlayout.h	123;"	d
UTrapframe	inc/trap.h	/^struct UTrapframe {$/;"	s
UVPT	inc/memlayout.h	112;"	d
UXSTACKTOP	inc/memlayout.h	125;"	d
UserStabData	kern/kdebug.c	/^struct UserStabData {$/;"	s	file:
V	conf/env.mk	/^V = @$/;"	m
VA	user/testptelibrary.c	3;"	d	file:
VA	user/testpteshare.c	4;"	d	file:
VER	kern/lapic.c	15;"	d	file:
WEBSUB	GNUmakefile	/^WEBSUB = https:\/\/ccutler.scripts.mit.edu\/6.828\/handin.py$/;"	m
WHITESPACE	kern/monitor.c	259;"	d	file:
WHITESPACE	obj/user/sh.asm	/^#define WHITESPACE " \\t\\r\\n"$/;"	d
WHITESPACE	user/sh.c	186;"	d	file:
X1	kern/lapic.c	34;"	d	file:
_CONSOLE_H_	kern/console.h	4;"	d
_GDBPORT	gradelib.py	/^    _GDBPORT = None$/;"	v	class:QEMU
__all__	gradelib.py	/^__all__ = []$/;"	v
__init__	gradelib.py	/^    def __init__(self, *default_monitors):$/;"	m	class:Runner
__init__	gradelib.py	/^    def __init__(self, *make_args):$/;"	m	class:QEMU
__init__	gradelib.py	/^    def __init__(self, port, timeout=15):$/;"	m	class:GDBClient
__monitor_start	gradelib.py	/^    def __monitor_start(self, output):$/;"	m	class:Runner	file:
__react	gradelib.py	/^    def __react(self, reactors, timeout):$/;"	m	class:Runner	file:
__send	gradelib.py	/^    def __send(self, cmd):$/;"	m	class:GDBClient	file:
__send_break	gradelib.py	/^    def __send_break(self):$/;"	m	class:GDBClient	file:
__spin_initlock	kern/spinlock.c	/^__spin_initlock(struct spinlock *lk, char *name)$/;"	f
_alltraps	kern/trapentry.S	/^_alltraps:$/;"	l
_alltraps	obj/kern/kernel.asm	/^_alltraps:$/;"	l
_gettoken	user/sh.c	/^_gettoken(char *s, char **p1, char **p2)$/;"	f
_kaddr	kern/pmap.h	/^_kaddr(const char *file, int line, physaddr_t pa)$/;"	f
_pad	inc/fs.h	/^	char _pad[PGSIZE];$/;"	m	union:Fsipc
_paddr	kern/pmap.h	/^_paddr(const char *file, int line, void *kva)$/;"	f
_panic	kern/init.c	/^_panic(const char *file, int line, const char *fmt,...)$/;"	f
_panic	lib/panic.c	/^_panic(const char *file, int line, const char *fmt, ...)$/;"	f
_pgfault_handler	lib/pgfault.c	/^void (*_pgfault_handler)(struct UTrapframe *utf);$/;"	v
_pgfault_handler	obj/fs/fs.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/faultalloc.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/faultallocbad.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/faultdie.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/faultnostack.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/faultregs.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/forktree.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/pingpong.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/pingpongs.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/primes.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/primespipe.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/sendpage.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/sh.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/spin.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/stresssched.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/testfdsharing.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/testpipe.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/testpiperace.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/testpiperace2.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/testpteshare.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/testshell.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_upcall	lib/pfentry.S	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/fs/fs.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/faultalloc.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/faultallocbad.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/faultdie.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/faultnostack.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/faultregs.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/forktree.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/pingpong.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/pingpongs.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/primes.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/primespipe.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/sendpage.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/sh.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/spin.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/stresssched.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/testfdsharing.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/testpipe.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/testpiperace.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/testpiperace2.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/testpteshare.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/testshell.asm	/^_pgfault_upcall:$/;"	l
_pipeisclosed	lib/pipe.c	/^_pipeisclosed(struct Fd *fd, struct Pipe *p)$/;"	f	file:
_start	kern/entry.S	/^_start = RELOC(entry)$/;"	d
_start	lib/entry.S	/^_start:$/;"	l
_start	obj/fs/fs.asm	/^_start:$/;"	l
_start	obj/kern/kernel.asm	/^_start = RELOC(entry)$/;"	d
_start	obj/user/badsegment.asm	/^_start:$/;"	l
_start	obj/user/breakpoint.asm	/^_start:$/;"	l
_start	obj/user/buggyhello.asm	/^_start:$/;"	l
_start	obj/user/buggyhello2.asm	/^_start:$/;"	l
_start	obj/user/cat.asm	/^_start:$/;"	l
_start	obj/user/divzero.asm	/^_start:$/;"	l
_start	obj/user/dumbfork.asm	/^_start:$/;"	l
_start	obj/user/echo.asm	/^_start:$/;"	l
_start	obj/user/evilhello.asm	/^_start:$/;"	l
_start	obj/user/fairness.asm	/^_start:$/;"	l
_start	obj/user/faultalloc.asm	/^_start:$/;"	l
_start	obj/user/faultallocbad.asm	/^_start:$/;"	l
_start	obj/user/faultbadhandler.asm	/^_start:$/;"	l
_start	obj/user/faultdie.asm	/^_start:$/;"	l
_start	obj/user/faultevilhandler.asm	/^_start:$/;"	l
_start	obj/user/faultnostack.asm	/^_start:$/;"	l
_start	obj/user/faultread.asm	/^_start:$/;"	l
_start	obj/user/faultreadkernel.asm	/^_start:$/;"	l
_start	obj/user/faultregs.asm	/^_start:$/;"	l
_start	obj/user/faultwrite.asm	/^_start:$/;"	l
_start	obj/user/faultwritekernel.asm	/^_start:$/;"	l
_start	obj/user/forktree.asm	/^_start:$/;"	l
_start	obj/user/hello.asm	/^_start:$/;"	l
_start	obj/user/icode.asm	/^_start:$/;"	l
_start	obj/user/idle.asm	/^_start:$/;"	l
_start	obj/user/init.asm	/^_start:$/;"	l
_start	obj/user/ls.asm	/^_start:$/;"	l
_start	obj/user/lsfd.asm	/^_start:$/;"	l
_start	obj/user/num.asm	/^_start:$/;"	l
_start	obj/user/pingpong.asm	/^_start:$/;"	l
_start	obj/user/pingpongs.asm	/^_start:$/;"	l
_start	obj/user/primes.asm	/^_start:$/;"	l
_start	obj/user/primespipe.asm	/^_start:$/;"	l
_start	obj/user/sendpage.asm	/^_start:$/;"	l
_start	obj/user/sh.asm	/^_start:$/;"	l
_start	obj/user/softint.asm	/^_start:$/;"	l
_start	obj/user/spawnhello.asm	/^_start:$/;"	l
_start	obj/user/spin.asm	/^_start:$/;"	l
_start	obj/user/stresssched.asm	/^_start:$/;"	l
_start	obj/user/testbss.asm	/^_start:$/;"	l
_start	obj/user/testfdsharing.asm	/^_start:$/;"	l
_start	obj/user/testfile.asm	/^_start:$/;"	l
_start	obj/user/testkbd.asm	/^_start:$/;"	l
_start	obj/user/testpipe.asm	/^_start:$/;"	l
_start	obj/user/testpiperace.asm	/^_start:$/;"	l
_start	obj/user/testpiperace2.asm	/^_start:$/;"	l
_start	obj/user/testpteshare.asm	/^_start:$/;"	l
_start	obj/user/testshell.asm	/^_start:$/;"	l
_start	obj/user/yield.asm	/^_start:$/;"	l
_update_ipc_fields	obj/kern/kernel.asm	/^_update_ipc_fields:$/;"	l
_user_mem_check	kern/pmap.c	/^_user_mem_check(struct Env *env, const void* va, int perm)$/;"	f	file:
_warn	kern/init.c	/^_warn(const char *file, int line, const char *fmt,...)$/;"	f
addr	obj/fs/fs.asm	/^	addr = ROUNDDOWN(addr, BLKSIZE);$/;"	d
addr	obj/fs/fs.asm	/^    addr = ROUNDDOWN(addr, BLKSIZE);$/;"	d
addr_6845	kern/console.c	/^static unsigned addr_6845;$/;"	v	file:
addr_6845	obj/kern/kernel.asm	/^		addr_6845 = CGA_BASE;$/;"	d
addr_6845	obj/kern/kernel.asm	/^		addr_6845 = MONO_BASE;$/;"	d
after	user/faultregs.c	/^static struct regs before, during, after;$/;"	v	typeref:struct:	file:
again	obj/user/sh.asm	/^again:$/;"	l
alloc	fs/fsformat.c	/^alloc(uint32_t bytes)$/;"	f
alloc_block	fs/fs.c	/^alloc_block(void)$/;"	f
altflag	obj/fs/fs.asm	/^			altflag = 1;$/;"	d
altflag	obj/fs/fs.asm	/^		altflag = 0;$/;"	d
altflag	obj/kern/kernel.asm	/^			altflag = 1;$/;"	d
altflag	obj/kern/kernel.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/badsegment.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/badsegment.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/breakpoint.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/breakpoint.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/buggyhello.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/buggyhello.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/buggyhello2.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/buggyhello2.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/cat.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/cat.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/divzero.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/divzero.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/dumbfork.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/dumbfork.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/echo.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/echo.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/evilhello.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/evilhello.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/fairness.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/fairness.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultalloc.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultalloc.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultallocbad.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultallocbad.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultbadhandler.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultbadhandler.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultdie.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultdie.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultevilhandler.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultevilhandler.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultnostack.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultnostack.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultread.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultread.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultreadkernel.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultreadkernel.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultregs.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultregs.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultwrite.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultwrite.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultwritekernel.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultwritekernel.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/forktree.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/forktree.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/hello.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/hello.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/icode.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/icode.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/idle.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/idle.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/init.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/init.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/ls.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/ls.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/lsfd.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/lsfd.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/num.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/num.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/pingpong.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/pingpong.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/pingpongs.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/pingpongs.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/primes.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/primes.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/primespipe.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/primespipe.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/sendpage.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/sendpage.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/sh.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/sh.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/softint.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/softint.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/spawnhello.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/spawnhello.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/spin.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/spin.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/stresssched.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/stresssched.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/testbss.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testbss.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/testfdsharing.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testfdsharing.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/testfile.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testfile.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/testkbd.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testkbd.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/testpipe.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testpipe.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/testpiperace.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testpiperace.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/testpiperace2.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testpiperace2.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/testpteshare.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testpteshare.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/testshell.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testshell.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/yield.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/yield.asm	/^		altflag = 0;$/;"	d
any_matches	obj/kern/kernel.asm	/^		any_matches = 1;$/;"	d
apicid	kern/mpconfig.c	/^	uint8_t apicid;                 \/\/ local APIC id$/;"	m	struct:mpproc	file:
arg	obj/user/ls.asm	/^	arg = (unsigned char) *args->curarg;$/;"	d
arg	obj/user/lsfd.asm	/^	arg = (unsigned char) *args->curarg;$/;"	d
arg	obj/user/sh.asm	/^	arg = (unsigned char) *args->curarg;$/;"	d
argc	inc/args.h	/^	int *argc;$/;"	m	struct:Argstate
argc	obj/kern/kernel.asm	/^	argc = 0;$/;"	d
argc	obj/user/sh.asm	/^	argc = 0;$/;"	d
argnext	lib/args.c	/^argnext(struct Argstate *args)$/;"	f
argnextvalue	lib/args.c	/^argnextvalue(struct Argstate *args)$/;"	f
args	obj/kern/kernel.asm	/^		args = stack_top + 2;$/;"	d
args_exist	lib/entry.S	/^args_exist:$/;"	l
args_exist	obj/fs/fs.asm	/^args_exist:$/;"	l
args_exist	obj/user/badsegment.asm	/^args_exist:$/;"	l
args_exist	obj/user/breakpoint.asm	/^args_exist:$/;"	l
args_exist	obj/user/buggyhello.asm	/^args_exist:$/;"	l
args_exist	obj/user/buggyhello2.asm	/^args_exist:$/;"	l
args_exist	obj/user/cat.asm	/^args_exist:$/;"	l
args_exist	obj/user/divzero.asm	/^args_exist:$/;"	l
args_exist	obj/user/dumbfork.asm	/^args_exist:$/;"	l
args_exist	obj/user/echo.asm	/^args_exist:$/;"	l
args_exist	obj/user/evilhello.asm	/^args_exist:$/;"	l
args_exist	obj/user/fairness.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultalloc.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultallocbad.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultbadhandler.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultdie.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultevilhandler.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultnostack.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultread.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultreadkernel.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultregs.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultwrite.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultwritekernel.asm	/^args_exist:$/;"	l
args_exist	obj/user/forktree.asm	/^args_exist:$/;"	l
args_exist	obj/user/hello.asm	/^args_exist:$/;"	l
args_exist	obj/user/icode.asm	/^args_exist:$/;"	l
args_exist	obj/user/idle.asm	/^args_exist:$/;"	l
args_exist	obj/user/init.asm	/^args_exist:$/;"	l
args_exist	obj/user/ls.asm	/^args_exist:$/;"	l
args_exist	obj/user/lsfd.asm	/^args_exist:$/;"	l
args_exist	obj/user/num.asm	/^args_exist:$/;"	l
args_exist	obj/user/pingpong.asm	/^args_exist:$/;"	l
args_exist	obj/user/pingpongs.asm	/^args_exist:$/;"	l
args_exist	obj/user/primes.asm	/^args_exist:$/;"	l
args_exist	obj/user/primespipe.asm	/^args_exist:$/;"	l
args_exist	obj/user/sendpage.asm	/^args_exist:$/;"	l
args_exist	obj/user/sh.asm	/^args_exist:$/;"	l
args_exist	obj/user/softint.asm	/^args_exist:$/;"	l
args_exist	obj/user/spawnhello.asm	/^args_exist:$/;"	l
args_exist	obj/user/spin.asm	/^args_exist:$/;"	l
args_exist	obj/user/stresssched.asm	/^args_exist:$/;"	l
args_exist	obj/user/testbss.asm	/^args_exist:$/;"	l
args_exist	obj/user/testfdsharing.asm	/^args_exist:$/;"	l
args_exist	obj/user/testfile.asm	/^args_exist:$/;"	l
args_exist	obj/user/testkbd.asm	/^args_exist:$/;"	l
args_exist	obj/user/testpipe.asm	/^args_exist:$/;"	l
args_exist	obj/user/testpiperace.asm	/^args_exist:$/;"	l
args_exist	obj/user/testpiperace2.asm	/^args_exist:$/;"	l
args_exist	obj/user/testpteshare.asm	/^args_exist:$/;"	l
args_exist	obj/user/testshell.asm	/^args_exist:$/;"	l
args_exist	obj/user/yield.asm	/^args_exist:$/;"	l
argstart	lib/args.c	/^argstart(int *argc, char **argv, struct Argstate *args)$/;"	f
argv	homework/hw2-shell/sh.c	/^  char *argv[MAXARGS];   \/\/ arguments to the command to be exec-ed$/;"	m	struct:execcmd	file:
argv	inc/args.h	/^	const char **argv;$/;"	m	struct:Argstate
argv_store	obj/user/icode.asm	/^	argv_store = (uintptr_t*) (ROUNDDOWN(string_store, 4) - 4 * (argc + 1));$/;"	d
argv_store	obj/user/init.asm	/^	argv_store = (uintptr_t*) (ROUNDDOWN(string_store, 4) - 4 * (argc + 1));$/;"	d
argv_store	obj/user/sh.asm	/^	argv_store = (uintptr_t*) (ROUNDDOWN(string_store, 4) - 4 * (argc + 1));$/;"	d
argv_store	obj/user/spawnhello.asm	/^	argv_store = (uintptr_t*) (ROUNDDOWN(string_store, 4) - 4 * (argc + 1));$/;"	d
argv_store	obj/user/testpteshare.asm	/^	argv_store = (uintptr_t*) (ROUNDDOWN(string_store, 4) - 4 * (argc + 1));$/;"	d
argv_store	obj/user/testshell.asm	/^	argv_store = (uintptr_t*) (ROUNDDOWN(string_store, 4) - 4 * (argc + 1));$/;"	d
argvalue	inc/args.h	/^	const char *argvalue;$/;"	m	struct:Argstate
argvalue	lib/args.c	/^argvalue(struct Argstate *args)$/;"	f
assert	inc/assert.h	14;"	d
assert_equal	gradelib.py	/^def assert_equal(got, expect, msg=""):$/;"	f
assert_lines_match	gradelib.py	/^def assert_lines_match(text, *regexps, **kw):$/;"	f
assert_lines_match_kw	gradelib.py	/^    def assert_lines_match_kw(no=[]):$/;"	f	function:assert_lines_match
backtrace	kern/monitor.h	/^MON_CMD_DECL(backtrace);$/;"	v
barrier	barrier.c	/^barrier()$/;"	f	file:
barrier	barrier.c	/^struct barrier {$/;"	s	file:
barrier_cond	barrier.c	/^  pthread_cond_t barrier_cond;$/;"	m	struct:barrier	file:
barrier_init	barrier.c	/^barrier_init(void)$/;"	f	file:
barrier_mutex	barrier.c	/^  pthread_mutex_t barrier_mutex;$/;"	m	struct:barrier	file:
base	obj/fs/fs.asm	/^			base = 10;$/;"	d
base	obj/fs/fs.asm	/^			base = 16;$/;"	d
base	obj/fs/fs.asm	/^			base = 8;$/;"	d
base	obj/fs/fs.asm	/^		base = 10;$/;"	d
base	obj/kern/kernel.asm	/^			base = 10;$/;"	d
base	obj/kern/kernel.asm	/^			base = 16;$/;"	d
base	obj/kern/kernel.asm	/^			base = 8;$/;"	d
base	obj/kern/kernel.asm	/^		base = 10;$/;"	d
base	obj/kern/kernel.asm	/^	base = va_end;$/;"	d
base	obj/user/badsegment.asm	/^			base = 10;$/;"	d
base	obj/user/badsegment.asm	/^			base = 16;$/;"	d
base	obj/user/badsegment.asm	/^			base = 8;$/;"	d
base	obj/user/badsegment.asm	/^		base = 10;$/;"	d
base	obj/user/breakpoint.asm	/^			base = 10;$/;"	d
base	obj/user/breakpoint.asm	/^			base = 16;$/;"	d
base	obj/user/breakpoint.asm	/^			base = 8;$/;"	d
base	obj/user/breakpoint.asm	/^		base = 10;$/;"	d
base	obj/user/buggyhello.asm	/^			base = 10;$/;"	d
base	obj/user/buggyhello.asm	/^			base = 16;$/;"	d
base	obj/user/buggyhello.asm	/^			base = 8;$/;"	d
base	obj/user/buggyhello.asm	/^		base = 10;$/;"	d
base	obj/user/buggyhello2.asm	/^			base = 10;$/;"	d
base	obj/user/buggyhello2.asm	/^			base = 16;$/;"	d
base	obj/user/buggyhello2.asm	/^			base = 8;$/;"	d
base	obj/user/buggyhello2.asm	/^		base = 10;$/;"	d
base	obj/user/cat.asm	/^			base = 10;$/;"	d
base	obj/user/cat.asm	/^			base = 16;$/;"	d
base	obj/user/cat.asm	/^			base = 8;$/;"	d
base	obj/user/cat.asm	/^		base = 10;$/;"	d
base	obj/user/divzero.asm	/^			base = 10;$/;"	d
base	obj/user/divzero.asm	/^			base = 16;$/;"	d
base	obj/user/divzero.asm	/^			base = 8;$/;"	d
base	obj/user/divzero.asm	/^		base = 10;$/;"	d
base	obj/user/dumbfork.asm	/^			base = 10;$/;"	d
base	obj/user/dumbfork.asm	/^			base = 16;$/;"	d
base	obj/user/dumbfork.asm	/^			base = 8;$/;"	d
base	obj/user/dumbfork.asm	/^		base = 10;$/;"	d
base	obj/user/echo.asm	/^			base = 10;$/;"	d
base	obj/user/echo.asm	/^			base = 16;$/;"	d
base	obj/user/echo.asm	/^			base = 8;$/;"	d
base	obj/user/echo.asm	/^		base = 10;$/;"	d
base	obj/user/evilhello.asm	/^			base = 10;$/;"	d
base	obj/user/evilhello.asm	/^			base = 16;$/;"	d
base	obj/user/evilhello.asm	/^			base = 8;$/;"	d
base	obj/user/evilhello.asm	/^		base = 10;$/;"	d
base	obj/user/fairness.asm	/^			base = 10;$/;"	d
base	obj/user/fairness.asm	/^			base = 16;$/;"	d
base	obj/user/fairness.asm	/^			base = 8;$/;"	d
base	obj/user/fairness.asm	/^		base = 10;$/;"	d
base	obj/user/faultalloc.asm	/^			base = 10;$/;"	d
base	obj/user/faultalloc.asm	/^			base = 16;$/;"	d
base	obj/user/faultalloc.asm	/^			base = 8;$/;"	d
base	obj/user/faultalloc.asm	/^		base = 10;$/;"	d
base	obj/user/faultallocbad.asm	/^			base = 10;$/;"	d
base	obj/user/faultallocbad.asm	/^			base = 16;$/;"	d
base	obj/user/faultallocbad.asm	/^			base = 8;$/;"	d
base	obj/user/faultallocbad.asm	/^		base = 10;$/;"	d
base	obj/user/faultbadhandler.asm	/^			base = 10;$/;"	d
base	obj/user/faultbadhandler.asm	/^			base = 16;$/;"	d
base	obj/user/faultbadhandler.asm	/^			base = 8;$/;"	d
base	obj/user/faultbadhandler.asm	/^		base = 10;$/;"	d
base	obj/user/faultdie.asm	/^			base = 10;$/;"	d
base	obj/user/faultdie.asm	/^			base = 16;$/;"	d
base	obj/user/faultdie.asm	/^			base = 8;$/;"	d
base	obj/user/faultdie.asm	/^		base = 10;$/;"	d
base	obj/user/faultevilhandler.asm	/^			base = 10;$/;"	d
base	obj/user/faultevilhandler.asm	/^			base = 16;$/;"	d
base	obj/user/faultevilhandler.asm	/^			base = 8;$/;"	d
base	obj/user/faultevilhandler.asm	/^		base = 10;$/;"	d
base	obj/user/faultnostack.asm	/^			base = 10;$/;"	d
base	obj/user/faultnostack.asm	/^			base = 16;$/;"	d
base	obj/user/faultnostack.asm	/^			base = 8;$/;"	d
base	obj/user/faultnostack.asm	/^		base = 10;$/;"	d
base	obj/user/faultread.asm	/^			base = 10;$/;"	d
base	obj/user/faultread.asm	/^			base = 16;$/;"	d
base	obj/user/faultread.asm	/^			base = 8;$/;"	d
base	obj/user/faultread.asm	/^		base = 10;$/;"	d
base	obj/user/faultreadkernel.asm	/^			base = 10;$/;"	d
base	obj/user/faultreadkernel.asm	/^			base = 16;$/;"	d
base	obj/user/faultreadkernel.asm	/^			base = 8;$/;"	d
base	obj/user/faultreadkernel.asm	/^		base = 10;$/;"	d
base	obj/user/faultregs.asm	/^			base = 10;$/;"	d
base	obj/user/faultregs.asm	/^			base = 16;$/;"	d
base	obj/user/faultregs.asm	/^			base = 8;$/;"	d
base	obj/user/faultregs.asm	/^		base = 10;$/;"	d
base	obj/user/faultwrite.asm	/^			base = 10;$/;"	d
base	obj/user/faultwrite.asm	/^			base = 16;$/;"	d
base	obj/user/faultwrite.asm	/^			base = 8;$/;"	d
base	obj/user/faultwrite.asm	/^		base = 10;$/;"	d
base	obj/user/faultwritekernel.asm	/^			base = 10;$/;"	d
base	obj/user/faultwritekernel.asm	/^			base = 16;$/;"	d
base	obj/user/faultwritekernel.asm	/^			base = 8;$/;"	d
base	obj/user/faultwritekernel.asm	/^		base = 10;$/;"	d
base	obj/user/forktree.asm	/^			base = 10;$/;"	d
base	obj/user/forktree.asm	/^			base = 16;$/;"	d
base	obj/user/forktree.asm	/^			base = 8;$/;"	d
base	obj/user/forktree.asm	/^		base = 10;$/;"	d
base	obj/user/hello.asm	/^			base = 10;$/;"	d
base	obj/user/hello.asm	/^			base = 16;$/;"	d
base	obj/user/hello.asm	/^			base = 8;$/;"	d
base	obj/user/hello.asm	/^		base = 10;$/;"	d
base	obj/user/icode.asm	/^			base = 10;$/;"	d
base	obj/user/icode.asm	/^			base = 16;$/;"	d
base	obj/user/icode.asm	/^			base = 8;$/;"	d
base	obj/user/icode.asm	/^		base = 10;$/;"	d
base	obj/user/idle.asm	/^			base = 10;$/;"	d
base	obj/user/idle.asm	/^			base = 16;$/;"	d
base	obj/user/idle.asm	/^			base = 8;$/;"	d
base	obj/user/idle.asm	/^		base = 10;$/;"	d
base	obj/user/init.asm	/^			base = 10;$/;"	d
base	obj/user/init.asm	/^			base = 16;$/;"	d
base	obj/user/init.asm	/^			base = 8;$/;"	d
base	obj/user/init.asm	/^		base = 10;$/;"	d
base	obj/user/ls.asm	/^			base = 10;$/;"	d
base	obj/user/ls.asm	/^			base = 16;$/;"	d
base	obj/user/ls.asm	/^			base = 8;$/;"	d
base	obj/user/ls.asm	/^		base = 10;$/;"	d
base	obj/user/lsfd.asm	/^			base = 10;$/;"	d
base	obj/user/lsfd.asm	/^			base = 16;$/;"	d
base	obj/user/lsfd.asm	/^			base = 8;$/;"	d
base	obj/user/lsfd.asm	/^		base = 10;$/;"	d
base	obj/user/num.asm	/^			base = 10;$/;"	d
base	obj/user/num.asm	/^			base = 16;$/;"	d
base	obj/user/num.asm	/^			base = 8;$/;"	d
base	obj/user/num.asm	/^		base = 10;$/;"	d
base	obj/user/pingpong.asm	/^			base = 10;$/;"	d
base	obj/user/pingpong.asm	/^			base = 16;$/;"	d
base	obj/user/pingpong.asm	/^			base = 8;$/;"	d
base	obj/user/pingpong.asm	/^		base = 10;$/;"	d
base	obj/user/pingpongs.asm	/^			base = 10;$/;"	d
base	obj/user/pingpongs.asm	/^			base = 16;$/;"	d
base	obj/user/pingpongs.asm	/^			base = 8;$/;"	d
base	obj/user/pingpongs.asm	/^		base = 10;$/;"	d
base	obj/user/primes.asm	/^			base = 10;$/;"	d
base	obj/user/primes.asm	/^			base = 16;$/;"	d
base	obj/user/primes.asm	/^			base = 8;$/;"	d
base	obj/user/primes.asm	/^		base = 10;$/;"	d
base	obj/user/primespipe.asm	/^			base = 10;$/;"	d
base	obj/user/primespipe.asm	/^			base = 16;$/;"	d
base	obj/user/primespipe.asm	/^			base = 8;$/;"	d
base	obj/user/primespipe.asm	/^		base = 10;$/;"	d
base	obj/user/sendpage.asm	/^			base = 10;$/;"	d
base	obj/user/sendpage.asm	/^			base = 16;$/;"	d
base	obj/user/sendpage.asm	/^			base = 8;$/;"	d
base	obj/user/sendpage.asm	/^		base = 10;$/;"	d
base	obj/user/sh.asm	/^			base = 10;$/;"	d
base	obj/user/sh.asm	/^			base = 16;$/;"	d
base	obj/user/sh.asm	/^			base = 8;$/;"	d
base	obj/user/sh.asm	/^		base = 10;$/;"	d
base	obj/user/softint.asm	/^			base = 10;$/;"	d
base	obj/user/softint.asm	/^			base = 16;$/;"	d
base	obj/user/softint.asm	/^			base = 8;$/;"	d
base	obj/user/softint.asm	/^		base = 10;$/;"	d
base	obj/user/spawnhello.asm	/^			base = 10;$/;"	d
base	obj/user/spawnhello.asm	/^			base = 16;$/;"	d
base	obj/user/spawnhello.asm	/^			base = 8;$/;"	d
base	obj/user/spawnhello.asm	/^		base = 10;$/;"	d
base	obj/user/spin.asm	/^			base = 10;$/;"	d
base	obj/user/spin.asm	/^			base = 16;$/;"	d
base	obj/user/spin.asm	/^			base = 8;$/;"	d
base	obj/user/spin.asm	/^		base = 10;$/;"	d
base	obj/user/stresssched.asm	/^			base = 10;$/;"	d
base	obj/user/stresssched.asm	/^			base = 16;$/;"	d
base	obj/user/stresssched.asm	/^			base = 8;$/;"	d
base	obj/user/stresssched.asm	/^		base = 10;$/;"	d
base	obj/user/testbss.asm	/^			base = 10;$/;"	d
base	obj/user/testbss.asm	/^			base = 16;$/;"	d
base	obj/user/testbss.asm	/^			base = 8;$/;"	d
base	obj/user/testbss.asm	/^		base = 10;$/;"	d
base	obj/user/testfdsharing.asm	/^			base = 10;$/;"	d
base	obj/user/testfdsharing.asm	/^			base = 16;$/;"	d
base	obj/user/testfdsharing.asm	/^			base = 8;$/;"	d
base	obj/user/testfdsharing.asm	/^		base = 10;$/;"	d
base	obj/user/testfile.asm	/^			base = 10;$/;"	d
base	obj/user/testfile.asm	/^			base = 16;$/;"	d
base	obj/user/testfile.asm	/^			base = 8;$/;"	d
base	obj/user/testfile.asm	/^		base = 10;$/;"	d
base	obj/user/testkbd.asm	/^			base = 10;$/;"	d
base	obj/user/testkbd.asm	/^			base = 16;$/;"	d
base	obj/user/testkbd.asm	/^			base = 8;$/;"	d
base	obj/user/testkbd.asm	/^		base = 10;$/;"	d
base	obj/user/testpipe.asm	/^			base = 10;$/;"	d
base	obj/user/testpipe.asm	/^			base = 16;$/;"	d
base	obj/user/testpipe.asm	/^			base = 8;$/;"	d
base	obj/user/testpipe.asm	/^		base = 10;$/;"	d
base	obj/user/testpiperace.asm	/^			base = 10;$/;"	d
base	obj/user/testpiperace.asm	/^			base = 16;$/;"	d
base	obj/user/testpiperace.asm	/^			base = 8;$/;"	d
base	obj/user/testpiperace.asm	/^		base = 10;$/;"	d
base	obj/user/testpiperace2.asm	/^			base = 10;$/;"	d
base	obj/user/testpiperace2.asm	/^			base = 16;$/;"	d
base	obj/user/testpiperace2.asm	/^			base = 8;$/;"	d
base	obj/user/testpiperace2.asm	/^		base = 10;$/;"	d
base	obj/user/testpteshare.asm	/^			base = 10;$/;"	d
base	obj/user/testpteshare.asm	/^			base = 16;$/;"	d
base	obj/user/testpteshare.asm	/^			base = 8;$/;"	d
base	obj/user/testpteshare.asm	/^		base = 10;$/;"	d
base	obj/user/testshell.asm	/^			base = 10;$/;"	d
base	obj/user/testshell.asm	/^			base = 16;$/;"	d
base	obj/user/testshell.asm	/^			base = 8;$/;"	d
base	obj/user/testshell.asm	/^		base = 10;$/;"	d
base	obj/user/yield.asm	/^			base = 10;$/;"	d
base	obj/user/yield.asm	/^			base = 16;$/;"	d
base	obj/user/yield.asm	/^			base = 8;$/;"	d
base	obj/user/yield.asm	/^		base = 10;$/;"	d
bc_init	fs/bc.c	/^bc_init(void)$/;"	f
bc_pgfault	fs/bc.c	/^bc_pgfault(struct UTrapframe *utf)$/;"	f	file:
bda	obj/kern/kernel.asm	/^	bda = (uint8_t *) KADDR(0x40 << 4);$/;"	d
before	user/faultregs.c	/^static struct regs before, during, after;$/;"	v	typeref:struct:regs	file:
bigarray	user/testbss.c	/^uint32_t bigarray[ARRAYSIZE];$/;"	v
binaryname	lib/libmain.c	/^const char *binaryname = "<unknown>";$/;"	v
binaryname	obj/fs/fs.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/fs/fs.asm	/^	binaryname = "fs";$/;"	d
binaryname	obj/user/badsegment.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/breakpoint.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/buggyhello.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/buggyhello2.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/cat.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/cat.asm	/^	binaryname = "cat";$/;"	d
binaryname	obj/user/divzero.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/dumbfork.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/echo.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/evilhello.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/fairness.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultalloc.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultallocbad.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultbadhandler.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultdie.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultevilhandler.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultnostack.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultread.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultreadkernel.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultregs.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultwrite.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultwritekernel.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/forktree.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/hello.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/icode.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/icode.asm	/^	binaryname = "icode";$/;"	d
binaryname	obj/user/idle.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/idle.asm	/^	binaryname = "idle";$/;"	d
binaryname	obj/user/init.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/ls.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/lsfd.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/num.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/num.asm	/^	binaryname = "num";$/;"	d
binaryname	obj/user/pingpong.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/pingpongs.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/primes.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/primespipe.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/primespipe.asm	/^	binaryname = "primespipe";$/;"	d
binaryname	obj/user/sendpage.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/sh.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/softint.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/spawnhello.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/spin.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/stresssched.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/testbss.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/testfdsharing.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/testfile.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/testkbd.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/testpipe.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/testpipe.asm	/^	binaryname = "pipereadeof";$/;"	d
binaryname	obj/user/testpipe.asm	/^	binaryname = "pipewriteeof";$/;"	d
binaryname	obj/user/testpiperace.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/testpiperace2.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/testpteshare.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/testshell.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/yield.asm	/^		binaryname = argv[0];$/;"	d
bitmap	fs/fs.h	/^uint32_t *bitmap;		\/\/ bitmap blocks mapped in memory$/;"	v
bitmap	fs/fsformat.c	/^uint32_t *bitmap;$/;"	v
bitmap	obj/fs/fs.asm	/^	bitmap = diskaddr(2);$/;"	d
bits	obj/fs/fs.asm	/^	bits = (uint32_t*) PGSIZE;$/;"	d
block_is_free	fs/fs.c	/^block_is_free(uint32_t blockno)$/;"	f
blockno	obj/fs/fs.asm	/^	blockno = ((uint32_t)addr - DISKMAP) \/ BLKSIZE;$/;"	d
blockof	fs/fsformat.c	/^blockof(void *pos)$/;"	f
bol	obj/user/num.asm	/^			bol = 0;$/;"	d
bol	obj/user/num.asm	/^			bol = 1;$/;"	d
bol	user/num.c	/^int bol = 1;$/;"	v
bool	fs/fsformat.c	/^typedef int bool;$/;"	t	file:
bool	fs/fsformat.c	21;"	d	file:
bool	fs/fsformat.c	7;"	d	file:
bool	inc/types.h	/^typedef _Bool bool;$/;"	t
bool	obj/fs/fs.asm	/^bool$/;"	l
boot	inc/partition.h	/^	uint8_t boot;$/;"	m	struct:Partitiondesc
boot_alloc	kern/pmap.c	/^boot_alloc(uint32_t n)$/;"	f	file:
boot_aps	kern/init.c	/^boot_aps(void)$/;"	f	file:
boot_map_region	kern/pmap.c	/^boot_map_region(pde_t *pgdir, uintptr_t va, size_t size, physaddr_t pa, int perm)$/;"	f	file:
bootcpu	kern/mpconfig.c	/^struct CpuInfo *bootcpu;$/;"	v	typeref:struct:CpuInfo
bootcpu	obj/kern/kernel.asm	/^				bootcpu = &cpus[ncpu];$/;"	d
bootcpu	obj/kern/kernel.asm	/^	bootcpu = &cpus[0];$/;"	d
bootmain	boot/main.c	/^bootmain(void)$/;"	f
bootstack	kern/entry.S	/^bootstack:$/;"	l
bootstacktop	kern/entry.S	/^bootstacktop:$/;"	l
breakpoint	gradelib.py	/^    def breakpoint(self, addr):$/;"	m	class:GDBClient
breakpoint	inc/x86.h	/^breakpoint(void)$/;"	f
bss	user/init.c	/^char bss[6000];$/;"	v
bstate	barrier.c	/^} bstate;$/;"	v	typeref:struct:barrier
buf	kern/console.c	/^	uint8_t buf[CONSBUFSIZE];$/;"	m	struct:__anon3	file:
buf	lib/fprintf.c	/^	char buf[256];$/;"	m	struct:printbuf	file:
buf	lib/printf.c	/^	char buf[256];$/;"	m	struct:printbuf	file:
buf	lib/printfmt.c	/^	char *buf;$/;"	m	struct:sprintbuf	file:
buf	lib/readline.c	/^static char buf[BUFLEN];$/;"	v	file:
buf	obj/fs/fs.asm	/^	buf = vbuf;$/;"	d
buf	obj/kern/kernel.asm	/^		buf = readline("K> ");$/;"	d
buf	obj/user/badsegment.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/breakpoint.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/buggyhello.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/buggyhello2.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/cat.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/divzero.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/dumbfork.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/echo.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/evilhello.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/fairness.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/faultalloc.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/faultallocbad.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/faultbadhandler.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/faultdie.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/faultevilhandler.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/faultnostack.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/faultread.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/faultreadkernel.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/faultregs.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/faultwrite.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/faultwritekernel.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/forktree.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/hello.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/icode.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/idle.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/init.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/ls.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/lsfd.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/num.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/pingpong.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/pingpongs.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/primes.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/primespipe.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/sendpage.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/sh.asm	/^		buf = readline(interactive ? "$ " : NULL);$/;"	d
buf	obj/user/sh.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/softint.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/spawnhello.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/spin.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/stresssched.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/testbss.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/testfdsharing.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/testfile.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/testkbd.asm	/^		buf = readline("Type a line: ");$/;"	d
buf	obj/user/testkbd.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/testpipe.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/testpiperace.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/testpiperace2.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/testpteshare.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/testshell.asm	/^	buf = vbuf;$/;"	d
buf	obj/user/yield.asm	/^	buf = vbuf;$/;"	d
buf	user/cat.c	/^char buf[8192];$/;"	v
buf	user/testfdsharing.c	/^char buf[512], buf2[512];$/;"	v
buf2	user/testfdsharing.c	/^char buf[512], buf2[512];$/;"	v
c	obj/fs/fs.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/kern/kernel.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/kern/kernel.asm	/^		c = cons.buf[cons.rpos++];$/;"	d
c	obj/kern/kernel.asm	/^		c = getchar();$/;"	d
c	obj/kern/kernel.asm	/^	c = charcode[shift & (CTL | SHIFT)][data];$/;"	d
c	obj/kern/kernel.asm	/^	c = page2kva(pp);$/;"	d
c	obj/user/badsegment.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/breakpoint.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/buggyhello.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/buggyhello2.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/cat.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/divzero.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/dumbfork.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/echo.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/evilhello.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/fairness.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultalloc.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultallocbad.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultbadhandler.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultdie.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultevilhandler.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultnostack.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultread.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultreadkernel.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultregs.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultwrite.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultwritekernel.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/forktree.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/hello.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/icode.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/idle.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/init.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/ls.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/lsfd.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/num.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/pingpong.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/pingpongs.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/primes.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/primespipe.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/sendpage.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/sh.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/sh.asm	/^		c = getchar();$/;"	d
c	obj/user/sh.asm	/^	c = nc;$/;"	d
c	obj/user/softint.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/spawnhello.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/spin.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/stresssched.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/testbss.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/testfdsharing.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/testfile.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/testkbd.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/testkbd.asm	/^		c = getchar();$/;"	d
c	obj/user/testpipe.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/testpiperace.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/testpiperace2.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/testpteshare.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/testshell.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/yield.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
call_on_line	gradelib.py	/^def call_on_line(regexp, callback):$/;"	f
cat	user/cat.c	/^cat(int f, char *s)$/;"	f
cga_init	kern/console.c	/^cga_init(void)$/;"	f	file:
cga_putc	kern/console.c	/^cga_putc(int c)$/;"	f	file:
ch	obj/fs/fs.asm	/^				ch = *fmt;$/;"	d
ch	obj/kern/kernel.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/badsegment.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/breakpoint.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/buggyhello.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/buggyhello2.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/cat.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/divzero.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/dumbfork.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/echo.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/evilhello.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/fairness.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultalloc.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultallocbad.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultbadhandler.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultdie.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultevilhandler.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultnostack.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultread.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultreadkernel.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultregs.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultwrite.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultwritekernel.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/forktree.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/hello.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/icode.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/idle.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/init.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/ls.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/lsfd.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/num.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/pingpong.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/pingpongs.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/primes.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/primespipe.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/sendpage.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/sh.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/softint.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/spawnhello.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/spin.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/stresssched.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/testbss.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/testfdsharing.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/testfile.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/testkbd.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/testpipe.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/testpiperace.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/testpiperace2.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/testpteshare.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/testshell.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/yield.asm	/^				ch = *fmt;$/;"	d
changeperms	kern/monitor.h	/^MON_CMD_DECL(changeperms);$/;"	v
char	obj/fs/fs.asm	/^char *$/;"	l
char	obj/kern/kernel.asm	/^char *$/;"	l
char	obj/user/badsegment.asm	/^char *$/;"	l
char	obj/user/breakpoint.asm	/^char *$/;"	l
char	obj/user/buggyhello.asm	/^char *$/;"	l
char	obj/user/buggyhello2.asm	/^char *$/;"	l
char	obj/user/cat.asm	/^char *$/;"	l
char	obj/user/cat.asm	/^char buf[8192];$/;"	l
char	obj/user/divzero.asm	/^char *$/;"	l
char	obj/user/dumbfork.asm	/^char *$/;"	l
char	obj/user/echo.asm	/^char *$/;"	l
char	obj/user/evilhello.asm	/^char *$/;"	l
char	obj/user/fairness.asm	/^char *$/;"	l
char	obj/user/faultalloc.asm	/^char *$/;"	l
char	obj/user/faultallocbad.asm	/^char *$/;"	l
char	obj/user/faultbadhandler.asm	/^char *$/;"	l
char	obj/user/faultdie.asm	/^char *$/;"	l
char	obj/user/faultevilhandler.asm	/^char *$/;"	l
char	obj/user/faultnostack.asm	/^char *$/;"	l
char	obj/user/faultread.asm	/^char *$/;"	l
char	obj/user/faultreadkernel.asm	/^char *$/;"	l
char	obj/user/faultregs.asm	/^char *$/;"	l
char	obj/user/faultwrite.asm	/^char *$/;"	l
char	obj/user/faultwritekernel.asm	/^char *$/;"	l
char	obj/user/forktree.asm	/^char *$/;"	l
char	obj/user/hello.asm	/^char *$/;"	l
char	obj/user/icode.asm	/^char *$/;"	l
char	obj/user/idle.asm	/^char *$/;"	l
char	obj/user/init.asm	/^char *$/;"	l
char	obj/user/init.asm	/^char bss[6000];$/;"	l
char	obj/user/ls.asm	/^char *$/;"	l
char	obj/user/lsfd.asm	/^char *$/;"	l
char	obj/user/num.asm	/^char *$/;"	l
char	obj/user/pingpong.asm	/^char *$/;"	l
char	obj/user/pingpongs.asm	/^char *$/;"	l
char	obj/user/primes.asm	/^char *$/;"	l
char	obj/user/primespipe.asm	/^char *$/;"	l
char	obj/user/sendpage.asm	/^char *$/;"	l
char	obj/user/sh.asm	/^char *$/;"	l
char	obj/user/softint.asm	/^char *$/;"	l
char	obj/user/spawnhello.asm	/^char *$/;"	l
char	obj/user/spin.asm	/^char *$/;"	l
char	obj/user/stresssched.asm	/^char *$/;"	l
char	obj/user/testbss.asm	/^char *$/;"	l
char	obj/user/testfdsharing.asm	/^char *$/;"	l
char	obj/user/testfdsharing.asm	/^char buf[512], buf2[512];$/;"	l
char	obj/user/testfile.asm	/^char *$/;"	l
char	obj/user/testkbd.asm	/^char *$/;"	l
char	obj/user/testpipe.asm	/^char *$/;"	l
char	obj/user/testpipe.asm	/^char *msg = "Now is the time for all good men to come to the aid of their party.";$/;"	l
char	obj/user/testpiperace.asm	/^char *$/;"	l
char	obj/user/testpiperace2.asm	/^char *$/;"	l
char	obj/user/testpteshare.asm	/^char *$/;"	l
char	obj/user/testshell.asm	/^char *$/;"	l
char	obj/user/yield.asm	/^char *$/;"	l
charcode	kern/console.c	/^static uint8_t *charcode[4] = {$/;"	v	file:
check_bc	fs/bc.c	/^check_bc(void)$/;"	f	file:
check_bitmap	fs/fs.c	/^check_bitmap(void)$/;"	f
check_call	gradelib.py	/^from subprocess import check_call, Popen$/;"	i
check_kern_pgdir	kern/pmap.c	/^check_kern_pgdir(void)$/;"	f	file:
check_page	kern/pmap.c	/^check_page(void)$/;"	f	file:
check_page_alloc	kern/pmap.c	/^check_page_alloc(void)$/;"	f	file:
check_page_free_list	kern/pmap.c	/^check_page_free_list(bool only_low_memory)$/;"	f	file:
check_page_installed_pgdir	kern/pmap.c	/^check_page_installed_pgdir(void)$/;"	f	file:
check_regs	user/faultregs.c	/^check_regs(struct regs* a, const char *an, struct regs* b, const char *bn,$/;"	f	file:
check_super	fs/fs.c	/^check_super(void)$/;"	f
check_va2pa	kern/pmap.c	/^check_va2pa(pde_t *pgdir, uintptr_t va)$/;"	f	file:
checksum	kern/mpconfig.c	/^	uint8_t checksum;               \/\/ all bytes must add up to 0$/;"	m	struct:mp	file:
checksum	kern/mpconfig.c	/^	uint8_t checksum;               \/\/ all bytes must add up to 0$/;"	m	struct:mpconf	file:
child	obj/user/icode.asm	/^	child = r;$/;"	d
child	obj/user/init.asm	/^	child = r;$/;"	d
child	obj/user/sh.asm	/^	child = r;$/;"	d
child	obj/user/spawnhello.asm	/^	child = r;$/;"	d
child	obj/user/testpteshare.asm	/^	child = r;$/;"	d
child	obj/user/testshell.asm	/^	child = r;$/;"	d
child_tf	obj/user/icode.asm	/^	child_tf = envs[ENVX(child)].env_tf;$/;"	d
child_tf	obj/user/init.asm	/^	child_tf = envs[ENVX(child)].env_tf;$/;"	d
child_tf	obj/user/sh.asm	/^	child_tf = envs[ENVX(child)].env_tf;$/;"	d
child_tf	obj/user/spawnhello.asm	/^	child_tf = envs[ENVX(child)].env_tf;$/;"	d
child_tf	obj/user/testpteshare.asm	/^	child_tf = envs[ENVX(child)].env_tf;$/;"	d
child_tf	obj/user/testshell.asm	/^	child_tf = envs[ENVX(child)].env_tf;$/;"	d
childofspawn	user/testptelibrary.c	/^childofspawn(void)$/;"	f
childofspawn	user/testpteshare.c	/^childofspawn(void)$/;"	f
chs_begin	inc/partition.h	/^	uint8_t chs_begin[3];$/;"	m	struct:Partitiondesc
chs_end	inc/partition.h	/^	uint8_t chs_end[3];$/;"	m	struct:Partitiondesc
close	gradelib.py	/^    def close(self):$/;"	m	class:GDBClient
close	lib/fd.c	/^close(int fdnum)$/;"	f
close_all	lib/fd.c	/^close_all(void)$/;"	f
cmd	homework/hw2-shell/sh.c	/^  struct cmd *cmd;   \/\/ the command to be run (e.g., an execcmd)$/;"	m	struct:redircmd	typeref:struct:redircmd::cmd	file:
cmd	homework/hw2-shell/sh.c	/^struct cmd {$/;"	s	file:
cnt	lib/printf.c	/^	int cnt;	\/\/ total bytes printed so far$/;"	m	struct:printbuf	file:
cnt	lib/printfmt.c	/^	int cnt;$/;"	m	struct:sprintbuf	file:
cnt	obj/fs/fs.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/kern/kernel.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/badsegment.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/breakpoint.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/buggyhello.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/buggyhello2.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/cat.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/cat.asm	/^	cnt = vfprintf(1, fmt, ap);$/;"	d
cnt	obj/user/cat.asm	/^	cnt = vfprintf(fd, fmt, ap);$/;"	d
cnt	obj/user/divzero.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/dumbfork.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/echo.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/evilhello.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/fairness.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultalloc.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultallocbad.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultbadhandler.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultdie.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultevilhandler.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultnostack.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultread.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultreadkernel.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultregs.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultwrite.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultwritekernel.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/forktree.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/hello.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/icode.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/idle.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/init.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/ls.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/ls.asm	/^	cnt = vfprintf(1, fmt, ap);$/;"	d
cnt	obj/user/ls.asm	/^	cnt = vfprintf(fd, fmt, ap);$/;"	d
cnt	obj/user/lsfd.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/lsfd.asm	/^	cnt = vfprintf(1, fmt, ap);$/;"	d
cnt	obj/user/lsfd.asm	/^	cnt = vfprintf(fd, fmt, ap);$/;"	d
cnt	obj/user/num.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/num.asm	/^	cnt = vfprintf(1, fmt, ap);$/;"	d
cnt	obj/user/num.asm	/^	cnt = vfprintf(fd, fmt, ap);$/;"	d
cnt	obj/user/pingpong.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/pingpongs.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/primes.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/primespipe.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/sendpage.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/sh.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/sh.asm	/^	cnt = vfprintf(1, fmt, ap);$/;"	d
cnt	obj/user/sh.asm	/^	cnt = vfprintf(fd, fmt, ap);$/;"	d
cnt	obj/user/softint.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/spawnhello.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/spin.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/stresssched.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/testbss.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/testfdsharing.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/testfile.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/testkbd.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/testkbd.asm	/^	cnt = vfprintf(1, fmt, ap);$/;"	d
cnt	obj/user/testkbd.asm	/^	cnt = vfprintf(fd, fmt, ap);$/;"	d
cnt	obj/user/testpipe.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/testpiperace.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/testpiperace2.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/testpteshare.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/testshell.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/yield.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
code	obj/kern/kernel.asm	/^	code = KADDR(MPENTRY_PADDR);$/;"	d
color	gradelib.py	/^def color(name, text):$/;"	f
commands	kern/monitor.c	/^static struct Command commands[] = {$/;"	v	typeref:struct:Command	file:
conf	obj/kern/kernel.asm	/^	conf = (struct mpconf *) KADDR(mp->physaddr);$/;"	d
cons	kern/console.c	/^} cons;$/;"	v	typeref:struct:__anon3	file:
cons_getc	kern/console.c	/^cons_getc(void)$/;"	f
cons_init	kern/console.c	/^cons_init(void)$/;"	f
cons_intr	kern/console.c	/^cons_intr(int (*proc)(void))$/;"	f	file:
cons_putc	kern/console.c	/^cons_putc(int c)$/;"	f	file:
const	obj/fs/fs.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/fs/fs.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/kern/kernel.asm	/^		const struct UserStabData *usd = (const struct UserStabData *) USTABDATA;$/;"	t
const	obj/kern/kernel.asm	/^	const struct Stab *stabs, *stab_end;$/;"	t
const	obj/user/badsegment.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/badsegment.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/breakpoint.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/breakpoint.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/buggyhello.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/buggyhello.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/buggyhello2.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/buggyhello2.asm	/^const char *hello = "hello, world\\n";$/;"	l
const	obj/user/buggyhello2.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/cat.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/cat.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/divzero.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/divzero.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/dumbfork.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/dumbfork.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/echo.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/echo.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/evilhello.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/evilhello.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/fairness.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/fairness.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultalloc.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultalloc.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultallocbad.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultallocbad.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultbadhandler.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultbadhandler.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultdie.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultdie.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultevilhandler.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultevilhandler.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultnostack.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultnostack.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultread.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultread.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultreadkernel.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultreadkernel.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultregs.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultregs.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultwrite.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultwrite.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultwritekernel.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultwritekernel.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/forktree.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/forktree.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/hello.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/hello.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/icode.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/icode.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/idle.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/idle.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/init.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/init.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/ls.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/ls.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/lsfd.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/lsfd.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/num.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/num.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/pingpong.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/pingpong.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/pingpongs.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/pingpongs.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/primes.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/primes.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/primespipe.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/primespipe.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/sendpage.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/sendpage.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/sh.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/sh.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/softint.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/softint.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/spawnhello.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/spawnhello.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/spin.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/spin.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/stresssched.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/stresssched.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/testbss.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/testbss.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/testfdsharing.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/testfdsharing.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/testfile.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/testfile.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/testkbd.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/testkbd.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/testpipe.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/testpipe.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/testpiperace.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/testpiperace.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/testpiperace2.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/testpiperace2.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/testpteshare.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/testpteshare.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/testshell.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/testshell.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/yield.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/yield.asm	/^const volatile struct Env *thisenv;$/;"	l
cont	gradelib.py	/^    def cont(self):$/;"	m	class:GDBClient
copy_shared_pages	lib/spawn.c	/^copy_shared_pages(envid_t child)$/;"	f	file:
count	obj/fs/fs.asm	/^	count = MIN(count, f->f_size - offset);$/;"	d
count	obj/kern/kernel.asm	/^			count = 0;$/;"	d
counter	user/stresssched.c	/^volatile int counter;$/;"	v
cp	obj/kern/kernel.asm	/^		cp = (uint16_t*) (KERNBASE + MONO_BUF);$/;"	d
cp	obj/kern/kernel.asm	/^	cp = (uint16_t*) (KERNBASE + CGA_BUF);$/;"	d
cprintf	kern/printf.c	/^cprintf(const char *fmt, ...)$/;"	f
cprintf	lib/printf.c	/^cprintf(const char *fmt, ...)$/;"	f
cpu	kern/spinlock.h	/^	struct CpuInfo *cpu;   \/\/ The CPU holding the lock.$/;"	m	struct:spinlock	typeref:struct:spinlock::CpuInfo
cpu_env	kern/cpu.h	/^	struct Env *cpu_env;            \/\/ The currently-running environment.$/;"	m	struct:CpuInfo	typeref:struct:CpuInfo::Env
cpu_id	kern/cpu.h	/^	uint8_t cpu_id;                 \/\/ Local APIC ID; index into cpus[] below$/;"	m	struct:CpuInfo
cpu_status	kern/cpu.h	/^	volatile unsigned cpu_status;   \/\/ The status of the CPU$/;"	m	struct:CpuInfo
cpu_ts	kern/cpu.h	/^	struct Taskstate cpu_ts;        \/\/ Used by x86 to find stack for interrupt$/;"	m	struct:CpuInfo	typeref:struct:CpuInfo::Taskstate
cpuid	inc/x86.h	/^cpuid(uint32_t info, uint32_t *eaxp, uint32_t *ebxp, uint32_t *ecxp, uint32_t *edxp)$/;"	f
cpunum	kern/lapic.c	/^cpunum(void)$/;"	f
cpus	kern/mpconfig.c	/^struct CpuInfo cpus[NCPU];$/;"	v	typeref:struct:CpuInfo
cputchar	kern/console.c	/^cputchar(int c)$/;"	f
cputchar	lib/console.c	/^cputchar(int ch)$/;"	f
cr0	obj/kern/kernel.asm	/^	cr0 = rcr0();$/;"	d
crt_buf	kern/console.c	/^static uint16_t *crt_buf;$/;"	v	file:
crt_buf	obj/kern/kernel.asm	/^	crt_buf = (uint16_t*) cp;$/;"	d
crt_pos	kern/console.c	/^static uint16_t crt_pos;$/;"	v	file:
crt_pos	obj/kern/kernel.asm	/^	crt_pos = pos;$/;"	d
ctlmap	kern/console.c	/^static uint8_t ctlmap[256] =$/;"	v	file:
curarg	inc/args.h	/^	const char *curarg;$/;"	m	struct:Argstate
curenv	kern/env.h	10;"	d
curenv	obj/kern/kernel.asm	/^			curenv = NULL;$/;"	d
curenv	obj/kern/kernel.asm	/^		curenv = NULL;$/;"	d
curenv	obj/kern/kernel.asm	/^	curenv = NULL;$/;"	d
curenv	obj/kern/kernel.asm	/^	curenv = e;$/;"	d
d	obj/fs/fs.asm	/^	d = dst;$/;"	d
d	obj/kern/kernel.asm	/^	d = dst;$/;"	d
d	obj/user/badsegment.asm	/^	d = dst;$/;"	d
d	obj/user/breakpoint.asm	/^	d = dst;$/;"	d
d	obj/user/buggyhello.asm	/^	d = dst;$/;"	d
d	obj/user/buggyhello2.asm	/^	d = dst;$/;"	d
d	obj/user/cat.asm	/^	d = dst;$/;"	d
d	obj/user/divzero.asm	/^	d = dst;$/;"	d
d	obj/user/dumbfork.asm	/^	d = dst;$/;"	d
d	obj/user/echo.asm	/^	d = dst;$/;"	d
d	obj/user/evilhello.asm	/^	d = dst;$/;"	d
d	obj/user/fairness.asm	/^	d = dst;$/;"	d
d	obj/user/faultalloc.asm	/^	d = dst;$/;"	d
d	obj/user/faultallocbad.asm	/^	d = dst;$/;"	d
d	obj/user/faultbadhandler.asm	/^	d = dst;$/;"	d
d	obj/user/faultdie.asm	/^	d = dst;$/;"	d
d	obj/user/faultevilhandler.asm	/^	d = dst;$/;"	d
d	obj/user/faultnostack.asm	/^	d = dst;$/;"	d
d	obj/user/faultread.asm	/^	d = dst;$/;"	d
d	obj/user/faultreadkernel.asm	/^	d = dst;$/;"	d
d	obj/user/faultregs.asm	/^	d = dst;$/;"	d
d	obj/user/faultwrite.asm	/^	d = dst;$/;"	d
d	obj/user/faultwritekernel.asm	/^	d = dst;$/;"	d
d	obj/user/forktree.asm	/^	d = dst;$/;"	d
d	obj/user/hello.asm	/^	d = dst;$/;"	d
d	obj/user/icode.asm	/^	d = dst;$/;"	d
d	obj/user/idle.asm	/^	d = dst;$/;"	d
d	obj/user/init.asm	/^	d = dst;$/;"	d
d	obj/user/ls.asm	/^	d = dst;$/;"	d
d	obj/user/lsfd.asm	/^	d = dst;$/;"	d
d	obj/user/num.asm	/^	d = dst;$/;"	d
d	obj/user/pingpong.asm	/^	d = dst;$/;"	d
d	obj/user/pingpongs.asm	/^	d = dst;$/;"	d
d	obj/user/primes.asm	/^	d = dst;$/;"	d
d	obj/user/primespipe.asm	/^	d = dst;$/;"	d
d	obj/user/sendpage.asm	/^	d = dst;$/;"	d
d	obj/user/sh.asm	/^	d = dst;$/;"	d
d	obj/user/softint.asm	/^	d = dst;$/;"	d
d	obj/user/spawnhello.asm	/^	d = dst;$/;"	d
d	obj/user/spin.asm	/^	d = dst;$/;"	d
d	obj/user/stresssched.asm	/^	d = dst;$/;"	d
d	obj/user/testbss.asm	/^	d = dst;$/;"	d
d	obj/user/testfdsharing.asm	/^	d = dst;$/;"	d
d	obj/user/testfile.asm	/^	d = dst;$/;"	d
d	obj/user/testkbd.asm	/^	d = dst;$/;"	d
d	obj/user/testpipe.asm	/^	d = dst;$/;"	d
d	obj/user/testpiperace.asm	/^	d = dst;$/;"	d
d	obj/user/testpiperace2.asm	/^	d = dst;$/;"	d
d	obj/user/testpteshare.asm	/^	d = dst;$/;"	d
d	obj/user/testshell.asm	/^	d = dst;$/;"	d
d	obj/user/yield.asm	/^	d = dst;$/;"	d
data	obj/kern/kernel.asm	/^		data = (shift & E0ESC ? data : data & 0x7F);$/;"	d
data	obj/kern/kernel.asm	/^	data = inb(KBDATAP);$/;"	d
data	user/init.c	/^} data = {$/;"	v	typeref:struct:__anon10
dead	obj/kern/kernel.asm	/^dead:$/;"	l
debug	fs/serv.c	12;"	d	file:
debug	lib/fd.c	3;"	d	file:
debug	lib/file.c	5;"	d	file:
debug	lib/pipe.c	3;"	d	file:
debug	user/sh.c	/^int debug = 0;$/;"	v
debuginfo_eip	kern/kdebug.c	/^debuginfo_eip(uintptr_t addr, struct Eipdebuginfo *info)$/;"	f
default	obj/fs/fs.asm	/^		default:$/;"	l
default	obj/kern/kernel.asm	/^		default:$/;"	l
default	obj/kern/kernel.asm	/^	default:$/;"	l
default	obj/user/badsegment.asm	/^		default:$/;"	l
default	obj/user/breakpoint.asm	/^		default:$/;"	l
default	obj/user/buggyhello.asm	/^		default:$/;"	l
default	obj/user/buggyhello2.asm	/^		default:$/;"	l
default	obj/user/cat.asm	/^		default:$/;"	l
default	obj/user/divzero.asm	/^		default:$/;"	l
default	obj/user/dumbfork.asm	/^		default:$/;"	l
default	obj/user/echo.asm	/^		default:$/;"	l
default	obj/user/evilhello.asm	/^		default:$/;"	l
default	obj/user/fairness.asm	/^		default:$/;"	l
default	obj/user/faultalloc.asm	/^		default:$/;"	l
default	obj/user/faultallocbad.asm	/^		default:$/;"	l
default	obj/user/faultbadhandler.asm	/^		default:$/;"	l
default	obj/user/faultdie.asm	/^		default:$/;"	l
default	obj/user/faultevilhandler.asm	/^		default:$/;"	l
default	obj/user/faultnostack.asm	/^		default:$/;"	l
default	obj/user/faultread.asm	/^		default:$/;"	l
default	obj/user/faultreadkernel.asm	/^		default:$/;"	l
default	obj/user/faultregs.asm	/^		default:$/;"	l
default	obj/user/faultwrite.asm	/^		default:$/;"	l
default	obj/user/faultwritekernel.asm	/^		default:$/;"	l
default	obj/user/forktree.asm	/^		default:$/;"	l
default	obj/user/hello.asm	/^		default:$/;"	l
default	obj/user/icode.asm	/^		default:$/;"	l
default	obj/user/idle.asm	/^		default:$/;"	l
default	obj/user/init.asm	/^		default:$/;"	l
default	obj/user/ls.asm	/^		default:$/;"	l
default	obj/user/lsfd.asm	/^		default:$/;"	l
default	obj/user/num.asm	/^		default:$/;"	l
default	obj/user/pingpong.asm	/^		default:$/;"	l
default	obj/user/pingpongs.asm	/^		default:$/;"	l
default	obj/user/primes.asm	/^		default:$/;"	l
default	obj/user/primespipe.asm	/^		default:$/;"	l
default	obj/user/sendpage.asm	/^		default:$/;"	l
default	obj/user/sh.asm	/^		default:$/;"	l
default	obj/user/softint.asm	/^		default:$/;"	l
default	obj/user/spawnhello.asm	/^		default:$/;"	l
default	obj/user/spin.asm	/^		default:$/;"	l
default	obj/user/stresssched.asm	/^		default:$/;"	l
default	obj/user/testbss.asm	/^		default:$/;"	l
default	obj/user/testfdsharing.asm	/^		default:$/;"	l
default	obj/user/testfile.asm	/^		default:$/;"	l
default	obj/user/testkbd.asm	/^		default:$/;"	l
default	obj/user/testpipe.asm	/^		default:$/;"	l
default	obj/user/testpiperace.asm	/^		default:$/;"	l
default	obj/user/testpiperace2.asm	/^		default:$/;"	l
default	obj/user/testpteshare.asm	/^		default:$/;"	l
default	obj/user/testshell.asm	/^		default:$/;"	l
default	obj/user/yield.asm	/^		default:$/;"	l
delay	kern/console.c	/^delay(void)$/;"	f	file:
desc	kern/monitor.c	/^	const char *desc;$/;"	m	struct:Command	file:
dev_close	inc/fd.h	/^	int (*dev_close)(struct Fd *fd);$/;"	m	struct:Dev
dev_id	inc/fd.h	/^	int dev_id;$/;"	m	struct:Dev
dev_lookup	lib/fd.c	/^dev_lookup(int dev_id, struct Dev **dev)$/;"	f
dev_name	inc/fd.h	/^	const char *dev_name;$/;"	m	struct:Dev
dev_read	inc/fd.h	/^	ssize_t (*dev_read)(struct Fd *fd, void *buf, size_t len);$/;"	m	struct:Dev
dev_stat	inc/fd.h	/^	int (*dev_stat)(struct Fd *fd, struct Stat *stat);$/;"	m	struct:Dev
dev_trunc	inc/fd.h	/^	int (*dev_trunc)(struct Fd *fd, off_t length);$/;"	m	struct:Dev
dev_write	inc/fd.h	/^	ssize_t (*dev_write)(struct Fd *fd, const void *buf, size_t len);$/;"	m	struct:Dev
devcons	lib/console.c	/^struct Dev devcons =$/;"	v	typeref:struct:Dev
devcons_close	lib/console.c	/^devcons_close(struct Fd *fd)$/;"	f	file:
devcons_read	lib/console.c	/^devcons_read(struct Fd *fd, void *vbuf, size_t n)$/;"	f	file:
devcons_stat	lib/console.c	/^devcons_stat(struct Fd *fd, struct Stat *stat)$/;"	f	file:
devcons_write	lib/console.c	/^devcons_write(struct Fd *fd, const void *vbuf, size_t n)$/;"	f	file:
devfile	lib/file.c	/^struct Dev devfile =$/;"	v	typeref:struct:Dev
devfile_flush	lib/file.c	/^devfile_flush(struct Fd *fd)$/;"	f	file:
devfile_read	lib/file.c	/^devfile_read(struct Fd *fd, void *buf, size_t n)$/;"	f	file:
devfile_stat	lib/file.c	/^devfile_stat(struct Fd *fd, struct Stat *st)$/;"	f	file:
devfile_trunc	lib/file.c	/^devfile_trunc(struct Fd *fd, off_t newsize)$/;"	f	file:
devfile_write	lib/file.c	/^devfile_write(struct Fd *fd, const void *buf, size_t n)$/;"	f	file:
devpipe	lib/pipe.c	/^struct Dev devpipe =$/;"	v	typeref:struct:Dev
devpipe_close	lib/pipe.c	/^devpipe_close(struct Fd *fd)$/;"	f	file:
devpipe_read	lib/pipe.c	/^devpipe_read(struct Fd *fd, void *vbuf, size_t n)$/;"	f	file:
devpipe_stat	lib/pipe.c	/^devpipe_stat(struct Fd *fd, struct Stat *stat)$/;"	f	file:
devpipe_write	lib/pipe.c	/^devpipe_write(struct Fd *fd, const void *vbuf, size_t n)$/;"	f	file:
devtab	lib/fd.c	/^static struct Dev *devtab[] =$/;"	v	typeref:struct:Dev	file:
didinit	kern/picirq.c	/^static bool didinit;$/;"	v	file:
didinit	obj/kern/kernel.asm	/^	didinit = 1;$/;"	d
dig	obj/fs/fs.asm	/^			dig = *s - '0';$/;"	d
dig	obj/fs/fs.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/fs/fs.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/kern/kernel.asm	/^			dig = *s - '0';$/;"	d
dig	obj/kern/kernel.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/kern/kernel.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/badsegment.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/badsegment.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/badsegment.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/breakpoint.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/breakpoint.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/breakpoint.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/buggyhello.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/buggyhello.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/buggyhello.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/buggyhello2.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/buggyhello2.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/buggyhello2.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/cat.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/cat.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/cat.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/divzero.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/divzero.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/divzero.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/dumbfork.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/dumbfork.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/dumbfork.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/echo.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/echo.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/echo.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/evilhello.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/evilhello.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/evilhello.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/fairness.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/fairness.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/fairness.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultalloc.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultalloc.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultalloc.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultallocbad.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultallocbad.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultallocbad.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultbadhandler.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultbadhandler.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultbadhandler.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultdie.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultdie.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultdie.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultevilhandler.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultevilhandler.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultevilhandler.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultnostack.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultnostack.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultnostack.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultread.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultread.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultread.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultreadkernel.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultreadkernel.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultreadkernel.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultregs.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultregs.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultregs.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultwrite.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultwrite.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultwrite.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultwritekernel.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultwritekernel.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultwritekernel.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/forktree.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/forktree.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/forktree.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/hello.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/hello.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/hello.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/icode.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/icode.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/icode.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/idle.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/idle.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/idle.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/init.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/init.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/init.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/ls.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/ls.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/ls.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/lsfd.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/lsfd.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/lsfd.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/num.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/num.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/num.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/pingpong.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/pingpong.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/pingpong.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/pingpongs.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/pingpongs.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/pingpongs.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/primes.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/primes.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/primes.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/primespipe.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/primespipe.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/primespipe.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/sendpage.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/sendpage.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/sendpage.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/sh.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/sh.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/sh.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/softint.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/softint.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/softint.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/spawnhello.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/spawnhello.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/spawnhello.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/spin.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/spin.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/spin.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/stresssched.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/stresssched.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/stresssched.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testbss.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testbss.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testbss.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testfdsharing.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testfdsharing.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testfdsharing.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testfile.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testfile.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testfile.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testkbd.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testkbd.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testkbd.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testpipe.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testpipe.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testpipe.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testpiperace.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testpiperace.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testpiperace.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testpiperace2.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testpiperace2.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testpiperace2.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testpteshare.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testpteshare.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testpteshare.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testshell.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testshell.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testshell.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/yield.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/yield.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/yield.asm	/^			dig = *s - 'a' + 10;$/;"	d
dir	obj/fs/fs.asm	/^		dir = f;$/;"	d
dir	obj/fs/fs.asm	/^	dir = 0;$/;"	d
dir_alloc_file	fs/fs.c	/^dir_alloc_file(struct File *dir, struct File **file)$/;"	f	file:
dir_lookup	fs/fs.c	/^dir_lookup(struct File *dir, const char *name, struct File **file)$/;"	f	file:
diradd	fs/fsformat.c	/^diradd(struct Dir *d, uint32_t type, const char *name)$/;"	f
diskaddr	fs/bc.c	/^diskaddr(uint32_t blockno)$/;"	f
diskmap	fs/fsformat.c	/^char *diskmap, *diskpos;$/;"	v
diskno	fs/ide.c	/^static int diskno = 1;$/;"	v	file:
diskno	obj/fs/fs.asm	/^	diskno = d;$/;"	d
diskpos	fs/fsformat.c	/^char *diskmap, *diskpos;$/;"	v
do_test	grade-lab5	/^    def do_test():$/;"	f	function:matchtest
done	ph.c	/^volatile int done;$/;"	v
dst_in	obj/fs/fs.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/kern/kernel.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/badsegment.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/breakpoint.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/buggyhello.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/buggyhello2.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/cat.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/divzero.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/dumbfork.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/echo.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/evilhello.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/fairness.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultalloc.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultallocbad.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultbadhandler.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultdie.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultevilhandler.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultnostack.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultread.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultreadkernel.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultregs.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultwrite.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultwritekernel.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/forktree.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/hello.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/icode.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/idle.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/init.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/ls.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/lsfd.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/num.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/pingpong.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/pingpongs.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/primes.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/primespipe.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/sendpage.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/sh.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/softint.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/spawnhello.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/spin.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/stresssched.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/testbss.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/testfdsharing.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/testfile.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/testkbd.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/testpipe.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/testpiperace.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/testpiperace2.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/testpteshare.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/testshell.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/yield.asm	/^	dst_in = dst;$/;"	d
dumbfork	user/dumbfork.c	/^dumbfork(void)$/;"	f
dump_contents_p	kern/monitor.c	/^dump_contents_p(physaddr_t pa1, physaddr_t pa2) $/;"	f	file:
dump_contents_v	kern/monitor.c	/^dump_contents_v(void* va1, void* va2) $/;"	f	file:
dumpcontents	kern/monitor.h	/^MON_CMD_DECL(dumpcontents);$/;"	v
dup	lib/fd.c	/^dup(int oldfdnum, int newfdnum)$/;"	f
duppage	lib/fork.c	/^duppage(envid_t envid, unsigned pn)$/;"	f	file:
duppage	user/dumbfork.c	/^duppage(envid_t dstenv, void *addr)$/;"	f
during	user/faultregs.c	/^static struct regs before, during, after;$/;"	v	typeref:struct:	file:
e	obj/kern/kernel.asm	/^	e = &envs[ENVX(envid)];$/;"	d
e	obj/user/init.asm	/^	e = &envs[ENVX(envid)];$/;"	d
e	obj/user/sh.asm	/^	e = &envs[ENVX(envid)];$/;"	d
e	obj/user/testfdsharing.asm	/^	e = &envs[ENVX(envid)];$/;"	d
e	obj/user/testpipe.asm	/^	e = &envs[ENVX(envid)];$/;"	d
e	obj/user/testpteshare.asm	/^	e = &envs[ENVX(envid)];$/;"	d
e	obj/user/testshell.asm	/^	e = &envs[ENVX(envid)];$/;"	d
e_ehsize	inc/elf.h	/^	uint16_t e_ehsize;$/;"	m	struct:Elf
e_elf	inc/elf.h	/^	uint8_t e_elf[12];$/;"	m	struct:Elf
e_entry	inc/elf.h	/^	uint32_t e_entry;$/;"	m	struct:Elf
e_flags	inc/elf.h	/^	uint32_t e_flags;$/;"	m	struct:Elf
e_machine	inc/elf.h	/^	uint16_t e_machine;$/;"	m	struct:Elf
e_magic	inc/elf.h	/^	uint32_t e_magic;	\/\/ must equal ELF_MAGIC$/;"	m	struct:Elf
e_phentsize	inc/elf.h	/^	uint16_t e_phentsize;$/;"	m	struct:Elf
e_phnum	inc/elf.h	/^	uint16_t e_phnum;$/;"	m	struct:Elf
e_phoff	inc/elf.h	/^	uint32_t e_phoff;$/;"	m	struct:Elf
e_shentsize	inc/elf.h	/^	uint16_t e_shentsize;$/;"	m	struct:Elf
e_shnum	inc/elf.h	/^	uint16_t e_shnum;$/;"	m	struct:Elf
e_shoff	inc/elf.h	/^	uint32_t e_shoff;$/;"	m	struct:Elf
e_shstrndx	inc/elf.h	/^	uint16_t e_shstrndx;$/;"	m	struct:Elf
e_type	inc/elf.h	/^	uint16_t e_type;$/;"	m	struct:Elf
e_version	inc/elf.h	/^	uint32_t e_version;$/;"	m	struct:Elf
ebp	obj/kern/kernel.asm	/^		ebp = (uint32_t *)ebp[0]; \/\/ saved %ebp$/;"	d
ebp	obj/kern/kernel.asm	/^	ebp = (uint32_t *)read_ebp();$/;"	d
ebuf	lib/printfmt.c	/^	char *ebuf;$/;"	m	struct:sprintbuf	file:
echocmds	obj/user/sh.asm	/^			echocmds = 1;$/;"	d
echocmds	obj/user/sh.asm	/^	echocmds = 0;$/;"	d
echoing	obj/kern/kernel.asm	/^	echoing = iscons(0);$/;"	d
echoing	obj/user/sh.asm	/^	echoing = iscons(0);$/;"	d
echoing	obj/user/testkbd.asm	/^	echoing = iscons(0);$/;"	d
eflags	user/faultregs.c	/^	uint32_t eflags;$/;"	m	struct:regs	file:
eip	user/faultregs.c	/^	uintptr_t eip;$/;"	m	struct:regs	file:
eip_file	kern/kdebug.h	/^	const char *eip_file;		\/\/ Source code filename for EIP$/;"	m	struct:Eipdebuginfo
eip_fn_addr	kern/kdebug.h	/^	uintptr_t eip_fn_addr;		\/\/ Address of start of function$/;"	m	struct:Eipdebuginfo
eip_fn_name	kern/kdebug.h	/^	const char *eip_fn_name;	\/\/ Name of function containing EIP$/;"	m	struct:Eipdebuginfo
eip_fn_namelen	kern/kdebug.h	/^	int eip_fn_namelen;		\/\/ Length of function name$/;"	m	struct:Eipdebuginfo
eip_fn_narg	kern/kdebug.h	/^	int eip_fn_narg;		\/\/ Number of function arguments$/;"	m	struct:Eipdebuginfo
eip_line	kern/kdebug.h	/^	int eip_line;			\/\/ Source code linenumber for EIP$/;"	m	struct:Eipdebuginfo
elf	obj/user/icode.asm	/^	elf = (struct Elf*) elf_buf;$/;"	d
elf	obj/user/init.asm	/^	elf = (struct Elf*) elf_buf;$/;"	d
elf	obj/user/sh.asm	/^	elf = (struct Elf*) elf_buf;$/;"	d
elf	obj/user/spawnhello.asm	/^	elf = (struct Elf*) elf_buf;$/;"	d
elf	obj/user/testpteshare.asm	/^	elf = (struct Elf*) elf_buf;$/;"	d
elf	obj/user/testshell.asm	/^	elf = (struct Elf*) elf_buf;$/;"	d
elf_hdr	obj/kern/kernel.asm	/^	elf_hdr = (struct Elf *) binary;$/;"	d
end_addr	obj/user/forktree.asm	/^	end_addr = (uint8_t *) (UXSTACKTOP - PGSIZE);$/;"	d
end_addr	obj/user/pingpong.asm	/^	end_addr = (uint8_t *) (UXSTACKTOP - PGSIZE);$/;"	d
end_addr	obj/user/pingpongs.asm	/^	end_addr = (uint8_t *) (UXSTACKTOP - PGSIZE);$/;"	d
end_addr	obj/user/primes.asm	/^	end_addr = (uint8_t *) (UXSTACKTOP - PGSIZE);$/;"	d
end_addr	obj/user/primespipe.asm	/^	end_addr = (uint8_t *) (UXSTACKTOP - PGSIZE);$/;"	d
end_addr	obj/user/sendpage.asm	/^	end_addr = (uint8_t *) (UXSTACKTOP - PGSIZE);$/;"	d
end_addr	obj/user/sh.asm	/^	end_addr = (uint8_t *) (UXSTACKTOP - PGSIZE);$/;"	d
end_addr	obj/user/spin.asm	/^	end_addr = (uint8_t *) (UXSTACKTOP - PGSIZE);$/;"	d
end_addr	obj/user/stresssched.asm	/^	end_addr = (uint8_t *) (UXSTACKTOP - PGSIZE);$/;"	d
end_addr	obj/user/testfdsharing.asm	/^	end_addr = (uint8_t *) (UXSTACKTOP - PGSIZE);$/;"	d
end_addr	obj/user/testpipe.asm	/^	end_addr = (uint8_t *) (UXSTACKTOP - PGSIZE);$/;"	d
end_addr	obj/user/testpiperace.asm	/^	end_addr = (uint8_t *) (UXSTACKTOP - PGSIZE);$/;"	d
end_addr	obj/user/testpiperace2.asm	/^	end_addr = (uint8_t *) (UXSTACKTOP - PGSIZE);$/;"	d
end_addr	obj/user/testpteshare.asm	/^	end_addr = (uint8_t *) (UXSTACKTOP - PGSIZE);$/;"	d
end_addr	obj/user/testshell.asm	/^	end_addr = (uint8_t *) (UXSTACKTOP - PGSIZE);$/;"	d
end_pa	obj/boot/boot.asm	/^	end_pa = pa + count;$/;"	d
end_part	gradelib.py	/^def end_part(name):$/;"	f
endofargs	obj/user/ls.asm	/^    endofargs:$/;"	l
endofargs	obj/user/lsfd.asm	/^    endofargs:$/;"	l
endofargs	obj/user/sh.asm	/^    endofargs:$/;"	l
entries	kern/mpconfig.c	/^	uint8_t entries[0];             \/\/ table entries$/;"	m	struct:mpconf	file:
entry	kern/entry.S	/^entry:$/;"	l
entry	kern/mpconfig.c	/^	uint16_t entry;                 \/\/ entry count$/;"	m	struct:mpconf	file:
entry	obj/kern/kernel.asm	/^entry:$/;"	l
entry	ph.c	/^struct entry {$/;"	s	file:
entry_pgdir	kern/entrypgdir.c	/^pde_t entry_pgdir[NPDENTRIES] = {$/;"	v
entry_pgtable	kern/entrypgdir.c	/^pte_t entry_pgtable[NPTENTRIES] = {$/;"	v
entry_pgtable	kern/entrypgdir.c	/^pte_t entry_pgtable[NPTENTRIES];$/;"	v
ents	fs/fsformat.c	/^	struct File *ents;$/;"	m	struct:Dir	typeref:struct:Dir::File	file:
env_alloc	kern/env.c	/^env_alloc(struct Env **newenv_store, envid_t parent_id)$/;"	f
env_cpunum	inc/env.h	/^	int env_cpunum;			\/\/ The CPU that the env is running on$/;"	m	struct:Env
env_create	kern/env.c	/^env_create(uint8_t *binary, enum EnvType type)$/;"	f
env_destroy	kern/env.c	/^env_destroy(struct Env *e)$/;"	f
env_free	kern/env.c	/^env_free(struct Env *e)$/;"	f
env_free_list	kern/env.c	/^static struct Env *env_free_list;	\/\/ Free environment list$/;"	v	typeref:struct:Env	file:
env_free_list	obj/kern/kernel.asm	/^		env_free_list = &envs[i];$/;"	d
env_free_list	obj/kern/kernel.asm	/^	env_free_list = e->env_link;$/;"	d
env_free_list	obj/kern/kernel.asm	/^	env_free_list = e;$/;"	d
env_id	inc/env.h	/^	envid_t env_id;			\/\/ Unique environment identifier$/;"	m	struct:Env
env_init	kern/env.c	/^env_init(void)$/;"	f
env_init_percpu	kern/env.c	/^env_init_percpu(void)$/;"	f
env_ipc_dstva	inc/env.h	/^	void *env_ipc_dstva;		\/\/ VA at which to map received page$/;"	m	struct:Env
env_ipc_from	inc/env.h	/^	envid_t env_ipc_from;		\/\/ envid of the sender$/;"	m	struct:Env
env_ipc_perm	inc/env.h	/^	int env_ipc_perm;		\/\/ Perm of page mapping received$/;"	m	struct:Env
env_ipc_recving	inc/env.h	/^	bool env_ipc_recving;		\/\/ Env is blocked receiving$/;"	m	struct:Env
env_ipc_value	inc/env.h	/^	uint32_t env_ipc_value;		\/\/ Data value sent to us$/;"	m	struct:Env
env_link	inc/env.h	/^	struct Env *env_link;		\/\/ Next free Env$/;"	m	struct:Env	typeref:struct:Env::Env
env_parent_id	inc/env.h	/^	envid_t env_parent_id;		\/\/ env_id of this env's parent$/;"	m	struct:Env
env_pgdir	inc/env.h	/^	pde_t *env_pgdir;		\/\/ Kernel virtual address of page dir$/;"	m	struct:Env
env_pgfault_upcall	inc/env.h	/^	void *env_pgfault_upcall;	\/\/ Page fault upcall entry point$/;"	m	struct:Env
env_pop_tf	kern/env.c	/^env_pop_tf(struct Trapframe *tf)$/;"	f
env_run	kern/env.c	/^env_run(struct Env *e)$/;"	f
env_runs	inc/env.h	/^	uint32_t env_runs;		\/\/ Number of times environment has run$/;"	m	struct:Env
env_setup_vm	kern/env.c	/^env_setup_vm(struct Env *e)$/;"	f	file:
env_status	inc/env.h	/^	unsigned env_status;		\/\/ Status of the environment$/;"	m	struct:Env
env_tf	inc/env.h	/^	struct Trapframe env_tf;	\/\/ Saved registers$/;"	m	struct:Env	typeref:struct:Env::Trapframe
env_type	inc/env.h	/^	enum EnvType env_type;		\/\/ Indicates special system environments$/;"	m	struct:Env	typeref:enum:Env::EnvType
envid	obj/user/dumbfork.asm	/^	envid = sys_exofork();$/;"	d
envid	obj/user/forktree.asm	/^	envid = sys_exofork();$/;"	d
envid	obj/user/pingpong.asm	/^	envid = sys_exofork();$/;"	d
envid	obj/user/pingpongs.asm	/^	envid = sys_exofork();$/;"	d
envid	obj/user/primes.asm	/^	envid = sys_exofork();$/;"	d
envid	obj/user/primespipe.asm	/^	envid = sys_exofork();$/;"	d
envid	obj/user/sendpage.asm	/^	envid = sys_exofork();$/;"	d
envid	obj/user/sh.asm	/^	envid = sys_exofork();$/;"	d
envid	obj/user/spin.asm	/^	envid = sys_exofork();$/;"	d
envid	obj/user/stresssched.asm	/^	envid = sys_exofork();$/;"	d
envid	obj/user/testfdsharing.asm	/^	envid = sys_exofork();$/;"	d
envid	obj/user/testpipe.asm	/^	envid = sys_exofork();$/;"	d
envid	obj/user/testpiperace.asm	/^	envid = sys_exofork();$/;"	d
envid	obj/user/testpiperace2.asm	/^	envid = sys_exofork();$/;"	d
envid	obj/user/testpteshare.asm	/^	envid = sys_exofork();$/;"	d
envid	obj/user/testshell.asm	/^	envid = sys_exofork();$/;"	d
envid2env	kern/env.c	/^envid2env(envid_t envid, struct Env **env_store, bool checkperm)$/;"	f
envid_t	inc/env.h	/^typedef int32_t envid_t;$/;"	t
envid_t	obj/fs/fs.asm	/^envid_t$/;"	l
envid_t	obj/user/badsegment.asm	/^envid_t$/;"	l
envid_t	obj/user/breakpoint.asm	/^envid_t$/;"	l
envid_t	obj/user/buggyhello.asm	/^envid_t$/;"	l
envid_t	obj/user/buggyhello2.asm	/^envid_t$/;"	l
envid_t	obj/user/cat.asm	/^envid_t$/;"	l
envid_t	obj/user/divzero.asm	/^envid_t$/;"	l
envid_t	obj/user/dumbfork.asm	/^envid_t dumbfork(void);$/;"	l
envid_t	obj/user/dumbfork.asm	/^envid_t$/;"	l
envid_t	obj/user/echo.asm	/^envid_t$/;"	l
envid_t	obj/user/evilhello.asm	/^envid_t$/;"	l
envid_t	obj/user/fairness.asm	/^envid_t$/;"	l
envid_t	obj/user/faultalloc.asm	/^envid_t$/;"	l
envid_t	obj/user/faultallocbad.asm	/^envid_t$/;"	l
envid_t	obj/user/faultbadhandler.asm	/^envid_t$/;"	l
envid_t	obj/user/faultdie.asm	/^envid_t$/;"	l
envid_t	obj/user/faultevilhandler.asm	/^envid_t$/;"	l
envid_t	obj/user/faultnostack.asm	/^envid_t$/;"	l
envid_t	obj/user/faultread.asm	/^envid_t$/;"	l
envid_t	obj/user/faultreadkernel.asm	/^envid_t$/;"	l
envid_t	obj/user/faultregs.asm	/^envid_t$/;"	l
envid_t	obj/user/faultwrite.asm	/^envid_t$/;"	l
envid_t	obj/user/faultwritekernel.asm	/^envid_t$/;"	l
envid_t	obj/user/forktree.asm	/^envid_t$/;"	l
envid_t	obj/user/hello.asm	/^envid_t$/;"	l
envid_t	obj/user/icode.asm	/^envid_t$/;"	l
envid_t	obj/user/idle.asm	/^envid_t$/;"	l
envid_t	obj/user/init.asm	/^envid_t$/;"	l
envid_t	obj/user/ls.asm	/^envid_t$/;"	l
envid_t	obj/user/lsfd.asm	/^envid_t$/;"	l
envid_t	obj/user/num.asm	/^envid_t$/;"	l
envid_t	obj/user/pingpong.asm	/^envid_t$/;"	l
envid_t	obj/user/pingpongs.asm	/^envid_t$/;"	l
envid_t	obj/user/primes.asm	/^envid_t$/;"	l
envid_t	obj/user/primespipe.asm	/^envid_t$/;"	l
envid_t	obj/user/sendpage.asm	/^envid_t$/;"	l
envid_t	obj/user/sh.asm	/^envid_t$/;"	l
envid_t	obj/user/softint.asm	/^envid_t$/;"	l
envid_t	obj/user/spawnhello.asm	/^envid_t$/;"	l
envid_t	obj/user/spin.asm	/^envid_t$/;"	l
envid_t	obj/user/stresssched.asm	/^envid_t$/;"	l
envid_t	obj/user/testbss.asm	/^envid_t$/;"	l
envid_t	obj/user/testfdsharing.asm	/^envid_t$/;"	l
envid_t	obj/user/testfile.asm	/^envid_t$/;"	l
envid_t	obj/user/testkbd.asm	/^envid_t$/;"	l
envid_t	obj/user/testpipe.asm	/^envid_t$/;"	l
envid_t	obj/user/testpiperace.asm	/^envid_t$/;"	l
envid_t	obj/user/testpiperace2.asm	/^envid_t$/;"	l
envid_t	obj/user/testpteshare.asm	/^envid_t$/;"	l
envid_t	obj/user/testshell.asm	/^envid_t$/;"	l
envid_t	obj/user/yield.asm	/^envid_t$/;"	l
envs	kern/env.c	/^struct Env *envs = NULL;		\/\/ All environments$/;"	v	typeref:struct:Env
envs	obj/kern/kernel.asm	/^	envs = (struct Env*) boot_alloc(n);$/;"	d
eph	obj/boot/boot.asm	/^	eph = ph + ELFHDR->e_phnum;$/;"	d
eph	obj/kern/kernel.asm	/^	eph = ph + elf_hdr->e_phnum;$/;"	d
err	obj/fs/fs.asm	/^				err = -err;$/;"	d
err	obj/fs/fs.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/fs/fs.asm	/^    err:$/;"	l
err	obj/fs/fs.asm	/^err:$/;"	l
err	obj/kern/kernel.asm	/^				err = -err;$/;"	d
err	obj/kern/kernel.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/badsegment.asm	/^				err = -err;$/;"	d
err	obj/user/badsegment.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/badsegment.asm	/^    err:$/;"	l
err	obj/user/badsegment.asm	/^err:$/;"	l
err	obj/user/breakpoint.asm	/^				err = -err;$/;"	d
err	obj/user/breakpoint.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/breakpoint.asm	/^    err:$/;"	l
err	obj/user/breakpoint.asm	/^err:$/;"	l
err	obj/user/buggyhello.asm	/^				err = -err;$/;"	d
err	obj/user/buggyhello.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/buggyhello.asm	/^    err:$/;"	l
err	obj/user/buggyhello.asm	/^err:$/;"	l
err	obj/user/buggyhello2.asm	/^				err = -err;$/;"	d
err	obj/user/buggyhello2.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/buggyhello2.asm	/^    err:$/;"	l
err	obj/user/buggyhello2.asm	/^err:$/;"	l
err	obj/user/cat.asm	/^				err = -err;$/;"	d
err	obj/user/cat.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/cat.asm	/^    err:$/;"	l
err	obj/user/cat.asm	/^err:$/;"	l
err	obj/user/divzero.asm	/^				err = -err;$/;"	d
err	obj/user/divzero.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/divzero.asm	/^    err:$/;"	l
err	obj/user/divzero.asm	/^err:$/;"	l
err	obj/user/dumbfork.asm	/^				err = -err;$/;"	d
err	obj/user/dumbfork.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/dumbfork.asm	/^    err:$/;"	l
err	obj/user/dumbfork.asm	/^err:$/;"	l
err	obj/user/echo.asm	/^				err = -err;$/;"	d
err	obj/user/echo.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/echo.asm	/^    err:$/;"	l
err	obj/user/echo.asm	/^err:$/;"	l
err	obj/user/evilhello.asm	/^				err = -err;$/;"	d
err	obj/user/evilhello.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/evilhello.asm	/^    err:$/;"	l
err	obj/user/evilhello.asm	/^err:$/;"	l
err	obj/user/fairness.asm	/^				err = -err;$/;"	d
err	obj/user/fairness.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/fairness.asm	/^    err:$/;"	l
err	obj/user/fairness.asm	/^err:$/;"	l
err	obj/user/faultalloc.asm	/^				err = -err;$/;"	d
err	obj/user/faultalloc.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultalloc.asm	/^    err:$/;"	l
err	obj/user/faultalloc.asm	/^err:$/;"	l
err	obj/user/faultallocbad.asm	/^				err = -err;$/;"	d
err	obj/user/faultallocbad.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultallocbad.asm	/^    err:$/;"	l
err	obj/user/faultallocbad.asm	/^err:$/;"	l
err	obj/user/faultbadhandler.asm	/^				err = -err;$/;"	d
err	obj/user/faultbadhandler.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultbadhandler.asm	/^    err:$/;"	l
err	obj/user/faultbadhandler.asm	/^err:$/;"	l
err	obj/user/faultdie.asm	/^				err = -err;$/;"	d
err	obj/user/faultdie.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultdie.asm	/^    err:$/;"	l
err	obj/user/faultdie.asm	/^err:$/;"	l
err	obj/user/faultevilhandler.asm	/^				err = -err;$/;"	d
err	obj/user/faultevilhandler.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultevilhandler.asm	/^    err:$/;"	l
err	obj/user/faultevilhandler.asm	/^err:$/;"	l
err	obj/user/faultnostack.asm	/^				err = -err;$/;"	d
err	obj/user/faultnostack.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultnostack.asm	/^    err:$/;"	l
err	obj/user/faultnostack.asm	/^err:$/;"	l
err	obj/user/faultread.asm	/^				err = -err;$/;"	d
err	obj/user/faultread.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultread.asm	/^    err:$/;"	l
err	obj/user/faultread.asm	/^err:$/;"	l
err	obj/user/faultreadkernel.asm	/^				err = -err;$/;"	d
err	obj/user/faultreadkernel.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultreadkernel.asm	/^    err:$/;"	l
err	obj/user/faultreadkernel.asm	/^err:$/;"	l
err	obj/user/faultregs.asm	/^				err = -err;$/;"	d
err	obj/user/faultregs.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultregs.asm	/^    err:$/;"	l
err	obj/user/faultregs.asm	/^err:$/;"	l
err	obj/user/faultwrite.asm	/^				err = -err;$/;"	d
err	obj/user/faultwrite.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultwrite.asm	/^    err:$/;"	l
err	obj/user/faultwrite.asm	/^err:$/;"	l
err	obj/user/faultwritekernel.asm	/^				err = -err;$/;"	d
err	obj/user/faultwritekernel.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultwritekernel.asm	/^    err:$/;"	l
err	obj/user/faultwritekernel.asm	/^err:$/;"	l
err	obj/user/forktree.asm	/^				err = -err;$/;"	d
err	obj/user/forktree.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/forktree.asm	/^    err:$/;"	l
err	obj/user/forktree.asm	/^err:$/;"	l
err	obj/user/hello.asm	/^				err = -err;$/;"	d
err	obj/user/hello.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/hello.asm	/^    err:$/;"	l
err	obj/user/hello.asm	/^err:$/;"	l
err	obj/user/icode.asm	/^				err = -err;$/;"	d
err	obj/user/icode.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/icode.asm	/^    err:$/;"	l
err	obj/user/icode.asm	/^err:$/;"	l
err	obj/user/idle.asm	/^				err = -err;$/;"	d
err	obj/user/idle.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/idle.asm	/^    err:$/;"	l
err	obj/user/idle.asm	/^err:$/;"	l
err	obj/user/init.asm	/^				err = -err;$/;"	d
err	obj/user/init.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/init.asm	/^    err:$/;"	l
err	obj/user/init.asm	/^err:$/;"	l
err	obj/user/ls.asm	/^				err = -err;$/;"	d
err	obj/user/ls.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/ls.asm	/^    err:$/;"	l
err	obj/user/ls.asm	/^err:$/;"	l
err	obj/user/lsfd.asm	/^				err = -err;$/;"	d
err	obj/user/lsfd.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/lsfd.asm	/^    err:$/;"	l
err	obj/user/lsfd.asm	/^err:$/;"	l
err	obj/user/num.asm	/^				err = -err;$/;"	d
err	obj/user/num.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/num.asm	/^    err:$/;"	l
err	obj/user/num.asm	/^err:$/;"	l
err	obj/user/pingpong.asm	/^				err = -err;$/;"	d
err	obj/user/pingpong.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/pingpong.asm	/^    err:$/;"	l
err	obj/user/pingpong.asm	/^err:$/;"	l
err	obj/user/pingpongs.asm	/^				err = -err;$/;"	d
err	obj/user/pingpongs.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/pingpongs.asm	/^    err:$/;"	l
err	obj/user/pingpongs.asm	/^err:$/;"	l
err	obj/user/primes.asm	/^				err = -err;$/;"	d
err	obj/user/primes.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/primes.asm	/^    err:$/;"	l
err	obj/user/primes.asm	/^err:$/;"	l
err	obj/user/primespipe.asm	/^				err = -err;$/;"	d
err	obj/user/primespipe.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/primespipe.asm	/^    err:$/;"	l
err	obj/user/primespipe.asm	/^err:$/;"	l
err	obj/user/sendpage.asm	/^				err = -err;$/;"	d
err	obj/user/sendpage.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/sendpage.asm	/^    err:$/;"	l
err	obj/user/sendpage.asm	/^err:$/;"	l
err	obj/user/sh.asm	/^				err = -err;$/;"	d
err	obj/user/sh.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/sh.asm	/^    err:$/;"	l
err	obj/user/sh.asm	/^err:$/;"	l
err	obj/user/softint.asm	/^				err = -err;$/;"	d
err	obj/user/softint.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/softint.asm	/^    err:$/;"	l
err	obj/user/softint.asm	/^err:$/;"	l
err	obj/user/spawnhello.asm	/^				err = -err;$/;"	d
err	obj/user/spawnhello.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/spawnhello.asm	/^    err:$/;"	l
err	obj/user/spawnhello.asm	/^err:$/;"	l
err	obj/user/spin.asm	/^				err = -err;$/;"	d
err	obj/user/spin.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/spin.asm	/^    err:$/;"	l
err	obj/user/spin.asm	/^err:$/;"	l
err	obj/user/stresssched.asm	/^				err = -err;$/;"	d
err	obj/user/stresssched.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/stresssched.asm	/^    err:$/;"	l
err	obj/user/stresssched.asm	/^err:$/;"	l
err	obj/user/testbss.asm	/^				err = -err;$/;"	d
err	obj/user/testbss.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testbss.asm	/^    err:$/;"	l
err	obj/user/testbss.asm	/^err:$/;"	l
err	obj/user/testfdsharing.asm	/^				err = -err;$/;"	d
err	obj/user/testfdsharing.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testfdsharing.asm	/^    err:$/;"	l
err	obj/user/testfdsharing.asm	/^err:$/;"	l
err	obj/user/testfile.asm	/^				err = -err;$/;"	d
err	obj/user/testfile.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testfile.asm	/^    err:$/;"	l
err	obj/user/testfile.asm	/^err:$/;"	l
err	obj/user/testkbd.asm	/^				err = -err;$/;"	d
err	obj/user/testkbd.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testkbd.asm	/^    err:$/;"	l
err	obj/user/testkbd.asm	/^err:$/;"	l
err	obj/user/testpipe.asm	/^				err = -err;$/;"	d
err	obj/user/testpipe.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testpipe.asm	/^    err:$/;"	l
err	obj/user/testpipe.asm	/^err:$/;"	l
err	obj/user/testpiperace.asm	/^				err = -err;$/;"	d
err	obj/user/testpiperace.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testpiperace.asm	/^    err:$/;"	l
err	obj/user/testpiperace.asm	/^err:$/;"	l
err	obj/user/testpiperace2.asm	/^				err = -err;$/;"	d
err	obj/user/testpiperace2.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testpiperace2.asm	/^    err:$/;"	l
err	obj/user/testpiperace2.asm	/^err:$/;"	l
err	obj/user/testpteshare.asm	/^				err = -err;$/;"	d
err	obj/user/testpteshare.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testpteshare.asm	/^    err:$/;"	l
err	obj/user/testpteshare.asm	/^err:$/;"	l
err	obj/user/testshell.asm	/^				err = -err;$/;"	d
err	obj/user/testshell.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testshell.asm	/^    err:$/;"	l
err	obj/user/testshell.asm	/^err:$/;"	l
err	obj/user/yield.asm	/^				err = -err;$/;"	d
err	obj/user/yield.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/yield.asm	/^    err:$/;"	l
err	obj/user/yield.asm	/^err:$/;"	l
err1	obj/fs/fs.asm	/^    err1:$/;"	l
err1	obj/user/badsegment.asm	/^    err1:$/;"	l
err1	obj/user/breakpoint.asm	/^    err1:$/;"	l
err1	obj/user/buggyhello.asm	/^    err1:$/;"	l
err1	obj/user/buggyhello2.asm	/^    err1:$/;"	l
err1	obj/user/cat.asm	/^    err1:$/;"	l
err1	obj/user/divzero.asm	/^    err1:$/;"	l
err1	obj/user/dumbfork.asm	/^    err1:$/;"	l
err1	obj/user/echo.asm	/^    err1:$/;"	l
err1	obj/user/evilhello.asm	/^    err1:$/;"	l
err1	obj/user/fairness.asm	/^    err1:$/;"	l
err1	obj/user/faultalloc.asm	/^    err1:$/;"	l
err1	obj/user/faultallocbad.asm	/^    err1:$/;"	l
err1	obj/user/faultbadhandler.asm	/^    err1:$/;"	l
err1	obj/user/faultdie.asm	/^    err1:$/;"	l
err1	obj/user/faultevilhandler.asm	/^    err1:$/;"	l
err1	obj/user/faultnostack.asm	/^    err1:$/;"	l
err1	obj/user/faultread.asm	/^    err1:$/;"	l
err1	obj/user/faultreadkernel.asm	/^    err1:$/;"	l
err1	obj/user/faultregs.asm	/^    err1:$/;"	l
err1	obj/user/faultwrite.asm	/^    err1:$/;"	l
err1	obj/user/faultwritekernel.asm	/^    err1:$/;"	l
err1	obj/user/forktree.asm	/^    err1:$/;"	l
err1	obj/user/hello.asm	/^    err1:$/;"	l
err1	obj/user/icode.asm	/^    err1:$/;"	l
err1	obj/user/idle.asm	/^    err1:$/;"	l
err1	obj/user/init.asm	/^    err1:$/;"	l
err1	obj/user/ls.asm	/^    err1:$/;"	l
err1	obj/user/lsfd.asm	/^    err1:$/;"	l
err1	obj/user/num.asm	/^    err1:$/;"	l
err1	obj/user/pingpong.asm	/^    err1:$/;"	l
err1	obj/user/pingpongs.asm	/^    err1:$/;"	l
err1	obj/user/primes.asm	/^    err1:$/;"	l
err1	obj/user/primespipe.asm	/^    err1:$/;"	l
err1	obj/user/sendpage.asm	/^    err1:$/;"	l
err1	obj/user/sh.asm	/^    err1:$/;"	l
err1	obj/user/softint.asm	/^    err1:$/;"	l
err1	obj/user/spawnhello.asm	/^    err1:$/;"	l
err1	obj/user/spin.asm	/^    err1:$/;"	l
err1	obj/user/stresssched.asm	/^    err1:$/;"	l
err1	obj/user/testbss.asm	/^    err1:$/;"	l
err1	obj/user/testfdsharing.asm	/^    err1:$/;"	l
err1	obj/user/testfile.asm	/^    err1:$/;"	l
err1	obj/user/testkbd.asm	/^    err1:$/;"	l
err1	obj/user/testpipe.asm	/^    err1:$/;"	l
err1	obj/user/testpiperace.asm	/^    err1:$/;"	l
err1	obj/user/testpiperace2.asm	/^    err1:$/;"	l
err1	obj/user/testpteshare.asm	/^    err1:$/;"	l
err1	obj/user/testshell.asm	/^    err1:$/;"	l
err1	obj/user/yield.asm	/^    err1:$/;"	l
err2	obj/fs/fs.asm	/^    err2:$/;"	l
err2	obj/user/badsegment.asm	/^    err2:$/;"	l
err2	obj/user/breakpoint.asm	/^    err2:$/;"	l
err2	obj/user/buggyhello.asm	/^    err2:$/;"	l
err2	obj/user/buggyhello2.asm	/^    err2:$/;"	l
err2	obj/user/cat.asm	/^    err2:$/;"	l
err2	obj/user/divzero.asm	/^    err2:$/;"	l
err2	obj/user/dumbfork.asm	/^    err2:$/;"	l
err2	obj/user/echo.asm	/^    err2:$/;"	l
err2	obj/user/evilhello.asm	/^    err2:$/;"	l
err2	obj/user/fairness.asm	/^    err2:$/;"	l
err2	obj/user/faultalloc.asm	/^    err2:$/;"	l
err2	obj/user/faultallocbad.asm	/^    err2:$/;"	l
err2	obj/user/faultbadhandler.asm	/^    err2:$/;"	l
err2	obj/user/faultdie.asm	/^    err2:$/;"	l
err2	obj/user/faultevilhandler.asm	/^    err2:$/;"	l
err2	obj/user/faultnostack.asm	/^    err2:$/;"	l
err2	obj/user/faultread.asm	/^    err2:$/;"	l
err2	obj/user/faultreadkernel.asm	/^    err2:$/;"	l
err2	obj/user/faultregs.asm	/^    err2:$/;"	l
err2	obj/user/faultwrite.asm	/^    err2:$/;"	l
err2	obj/user/faultwritekernel.asm	/^    err2:$/;"	l
err2	obj/user/forktree.asm	/^    err2:$/;"	l
err2	obj/user/hello.asm	/^    err2:$/;"	l
err2	obj/user/icode.asm	/^    err2:$/;"	l
err2	obj/user/idle.asm	/^    err2:$/;"	l
err2	obj/user/init.asm	/^    err2:$/;"	l
err2	obj/user/ls.asm	/^    err2:$/;"	l
err2	obj/user/lsfd.asm	/^    err2:$/;"	l
err2	obj/user/num.asm	/^    err2:$/;"	l
err2	obj/user/pingpong.asm	/^    err2:$/;"	l
err2	obj/user/pingpongs.asm	/^    err2:$/;"	l
err2	obj/user/primes.asm	/^    err2:$/;"	l
err2	obj/user/primespipe.asm	/^    err2:$/;"	l
err2	obj/user/sendpage.asm	/^    err2:$/;"	l
err2	obj/user/sh.asm	/^    err2:$/;"	l
err2	obj/user/softint.asm	/^    err2:$/;"	l
err2	obj/user/spawnhello.asm	/^    err2:$/;"	l
err2	obj/user/spin.asm	/^    err2:$/;"	l
err2	obj/user/stresssched.asm	/^    err2:$/;"	l
err2	obj/user/testbss.asm	/^    err2:$/;"	l
err2	obj/user/testfdsharing.asm	/^    err2:$/;"	l
err2	obj/user/testfile.asm	/^    err2:$/;"	l
err2	obj/user/testkbd.asm	/^    err2:$/;"	l
err2	obj/user/testpipe.asm	/^    err2:$/;"	l
err2	obj/user/testpiperace.asm	/^    err2:$/;"	l
err2	obj/user/testpiperace2.asm	/^    err2:$/;"	l
err2	obj/user/testpteshare.asm	/^    err2:$/;"	l
err2	obj/user/testshell.asm	/^    err2:$/;"	l
err2	obj/user/yield.asm	/^    err2:$/;"	l
err3	obj/fs/fs.asm	/^    err3:$/;"	l
err3	obj/user/badsegment.asm	/^    err3:$/;"	l
err3	obj/user/breakpoint.asm	/^    err3:$/;"	l
err3	obj/user/buggyhello.asm	/^    err3:$/;"	l
err3	obj/user/buggyhello2.asm	/^    err3:$/;"	l
err3	obj/user/cat.asm	/^    err3:$/;"	l
err3	obj/user/divzero.asm	/^    err3:$/;"	l
err3	obj/user/dumbfork.asm	/^    err3:$/;"	l
err3	obj/user/echo.asm	/^    err3:$/;"	l
err3	obj/user/evilhello.asm	/^    err3:$/;"	l
err3	obj/user/fairness.asm	/^    err3:$/;"	l
err3	obj/user/faultalloc.asm	/^    err3:$/;"	l
err3	obj/user/faultallocbad.asm	/^    err3:$/;"	l
err3	obj/user/faultbadhandler.asm	/^    err3:$/;"	l
err3	obj/user/faultdie.asm	/^    err3:$/;"	l
err3	obj/user/faultevilhandler.asm	/^    err3:$/;"	l
err3	obj/user/faultnostack.asm	/^    err3:$/;"	l
err3	obj/user/faultread.asm	/^    err3:$/;"	l
err3	obj/user/faultreadkernel.asm	/^    err3:$/;"	l
err3	obj/user/faultregs.asm	/^    err3:$/;"	l
err3	obj/user/faultwrite.asm	/^    err3:$/;"	l
err3	obj/user/faultwritekernel.asm	/^    err3:$/;"	l
err3	obj/user/forktree.asm	/^    err3:$/;"	l
err3	obj/user/hello.asm	/^    err3:$/;"	l
err3	obj/user/icode.asm	/^    err3:$/;"	l
err3	obj/user/idle.asm	/^    err3:$/;"	l
err3	obj/user/init.asm	/^    err3:$/;"	l
err3	obj/user/ls.asm	/^    err3:$/;"	l
err3	obj/user/lsfd.asm	/^    err3:$/;"	l
err3	obj/user/num.asm	/^    err3:$/;"	l
err3	obj/user/pingpong.asm	/^    err3:$/;"	l
err3	obj/user/pingpongs.asm	/^    err3:$/;"	l
err3	obj/user/primes.asm	/^    err3:$/;"	l
err3	obj/user/primespipe.asm	/^    err3:$/;"	l
err3	obj/user/sendpage.asm	/^    err3:$/;"	l
err3	obj/user/sh.asm	/^    err3:$/;"	l
err3	obj/user/softint.asm	/^    err3:$/;"	l
err3	obj/user/spawnhello.asm	/^    err3:$/;"	l
err3	obj/user/spin.asm	/^    err3:$/;"	l
err3	obj/user/stresssched.asm	/^    err3:$/;"	l
err3	obj/user/testbss.asm	/^    err3:$/;"	l
err3	obj/user/testfdsharing.asm	/^    err3:$/;"	l
err3	obj/user/testfile.asm	/^    err3:$/;"	l
err3	obj/user/testkbd.asm	/^    err3:$/;"	l
err3	obj/user/testpipe.asm	/^    err3:$/;"	l
err3	obj/user/testpiperace.asm	/^    err3:$/;"	l
err3	obj/user/testpiperace2.asm	/^    err3:$/;"	l
err3	obj/user/testpteshare.asm	/^    err3:$/;"	l
err3	obj/user/testshell.asm	/^    err3:$/;"	l
err3	obj/user/yield.asm	/^    err3:$/;"	l
errno	gradelib.py	/^import sys, os, re, time, socket, select, subprocess, errno, shutil$/;"	i
error	lib/fprintf.c	/^	int error;	\/\/ first error that occurred$/;"	m	struct:printbuf	file:
error	obj/user/icode.asm	/^error:$/;"	l
error	obj/user/init.asm	/^error:$/;"	l
error	obj/user/sh.asm	/^error:$/;"	l
error	obj/user/spawnhello.asm	/^error:$/;"	l
error	obj/user/testpteshare.asm	/^error:$/;"	l
error	obj/user/testshell.asm	/^error:$/;"	l
error_string	lib/printfmt.c	/^static const char * const error_string[MAXERROR] =$/;"	v	file:
esp	user/faultregs.c	/^	uintptr_t esp;$/;"	m	struct:regs	file:
execcmd	homework/hw2-shell/sh.c	/^execcmd(void)$/;"	f
execcmd	homework/hw2-shell/sh.c	/^struct execcmd {$/;"	s	file:
exit	kern/monitor.h	/^MON_CMD_DECL(exit);$/;"	v
exit	lib/exit.c	/^exit(void)$/;"	f
extern	obj/kern/kernel.asm	/^	extern struct Segdesc gdt[];$/;"	t
extern	obj/kern/kernel.asm	/^extern struct spinlock kernel_lock;$/;"	t
f	fs/fsformat.c	/^	struct File *f;$/;"	m	struct:Dir	typeref:struct:Dir::File	file:
f	obj/fs/fs.asm	/^	f = &super->s_root;$/;"	d
f	obj/user/cat.asm	/^			f = open(argv[i], O_RDONLY);$/;"	d
f	obj/user/num.asm	/^			f = open(argv[i], O_RDONLY);$/;"	d
f0100000	obj/kern/kernel.asm	/^f0100000 <_start+0xeffffff4>:$/;"	l
f0100000	obj/kern/kernel.asm	/^f0100000:	02 b0 ad 1b 00 00    	add    0x1bad(%eax),%dh$/;"	l
f0100006	obj/kern/kernel.asm	/^f0100006:	00 00                	add    %al,(%eax)$/;"	l
f0100008	obj/kern/kernel.asm	/^f0100008:	fe 4f 52             	decb   0x52(%edi)$/;"	l
f010000b	obj/kern/kernel.asm	/^f010000b:	e4                   	.byte 0xe4$/;"	l
f010000c	obj/kern/kernel.asm	/^f010000c <entry>:$/;"	l
f010000c	obj/kern/kernel.asm	/^f010000c:	66 c7 05 72 04 00 00 	movw   $0x1234,0x472$/;"	l
f0100013	obj/kern/kernel.asm	/^f0100013:	34 12 $/;"	l
f0100015	obj/kern/kernel.asm	/^f0100015:	b8 00 10 12 00       	mov    $0x121000,%eax$/;"	l
f010001a	obj/kern/kernel.asm	/^f010001a:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f010001d	obj/kern/kernel.asm	/^f010001d:	0f 20 c0             	mov    %cr0,%eax$/;"	l
f0100020	obj/kern/kernel.asm	/^f0100020:	0d 01 00 01 80       	or     $0x80010001,%eax$/;"	l
f0100025	obj/kern/kernel.asm	/^f0100025:	0f 22 c0             	mov    %eax,%cr0$/;"	l
f0100028	obj/kern/kernel.asm	/^f0100028:	b8 2f 00 10 f0       	mov    $0xf010002f,%eax$/;"	l
f010002d	obj/kern/kernel.asm	/^f010002d:	ff e0                	jmp    *%eax$/;"	l
f010002f	obj/kern/kernel.asm	/^f010002f <relocated>:$/;"	l
f010002f	obj/kern/kernel.asm	/^f010002f:	bd 00 00 00 00       	mov    $0x0,%ebp$/;"	l
f0100034	obj/kern/kernel.asm	/^f0100034:	bc 00 10 12 f0       	mov    $0xf0121000,%esp$/;"	l
f0100039	obj/kern/kernel.asm	/^f0100039:	e8 6a 00 00 00       	call   f01000a8 <i386_init>$/;"	l
f010003e	obj/kern/kernel.asm	/^f010003e <spin>:$/;"	l
f010003e	obj/kern/kernel.asm	/^f010003e:	eb fe                	jmp    f010003e <spin>$/;"	l
f0100040	obj/kern/kernel.asm	/^f0100040 <_panic>:$/;"	l
f0100040	obj/kern/kernel.asm	/^f0100040:	55                   	push   %ebp$/;"	l
f0100041	obj/kern/kernel.asm	/^f0100041:	89 e5                	mov    %esp,%ebp$/;"	l
f0100043	obj/kern/kernel.asm	/^f0100043:	56                   	push   %esi$/;"	l
f0100044	obj/kern/kernel.asm	/^f0100044:	53                   	push   %ebx$/;"	l
f0100045	obj/kern/kernel.asm	/^f0100045:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0100048	obj/kern/kernel.asm	/^f0100048:	8b 75 10             	mov    0x10(%ebp),%esi$/;"	l
f010004b	obj/kern/kernel.asm	/^f010004b:	83 3d 80 de 20 f0 00 	cmpl   $0x0,0xf020de80$/;"	l
f0100052	obj/kern/kernel.asm	/^f0100052:	75 46                	jne    f010009a <_panic+0x5a>$/;"	l
f0100054	obj/kern/kernel.asm	/^f0100054:	89 35 80 de 20 f0    	mov    %esi,0xf020de80$/;"	l
f010005a	obj/kern/kernel.asm	/^f010005a:	fa                   	cli    $/;"	l
f010005b	obj/kern/kernel.asm	/^f010005b:	fc                   	cld    $/;"	l
f010005c	obj/kern/kernel.asm	/^f010005c:	8d 5d 14             	lea    0x14(%ebp),%ebx$/;"	l
f010005f	obj/kern/kernel.asm	/^f010005f:	e8 88 6f 00 00       	call   f0106fec <cpunum>$/;"	l
f0100064	obj/kern/kernel.asm	/^f0100064:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0100067	obj/kern/kernel.asm	/^f0100067:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f010006b	obj/kern/kernel.asm	/^f010006b:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f010006e	obj/kern/kernel.asm	/^f010006e:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f0100072	obj/kern/kernel.asm	/^f0100072:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100076	obj/kern/kernel.asm	/^f0100076:	c7 04 24 c0 76 10 f0 	movl   $0xf01076c0,(%esp)$/;"	l
f010007d	obj/kern/kernel.asm	/^f010007d:	e8 1c 43 00 00       	call   f010439e <cprintf>$/;"	l
f0100082	obj/kern/kernel.asm	/^f0100082:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0100086	obj/kern/kernel.asm	/^f0100086:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0100089	obj/kern/kernel.asm	/^f0100089:	e8 dd 42 00 00       	call   f010436b <vcprintf>$/;"	l
f010008e	obj/kern/kernel.asm	/^f010008e:	c7 04 24 88 8a 10 f0 	movl   $0xf0108a88,(%esp)$/;"	l
f0100095	obj/kern/kernel.asm	/^f0100095:	e8 04 43 00 00       	call   f010439e <cprintf>$/;"	l
f010009a	obj/kern/kernel.asm	/^f010009a:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f01000a1	obj/kern/kernel.asm	/^f01000a1:	e8 65 0d 00 00       	call   f0100e0b <monitor>$/;"	l
f01000a6	obj/kern/kernel.asm	/^f01000a6:	eb f2                	jmp    f010009a <_panic+0x5a>$/;"	l
f01000a8	obj/kern/kernel.asm	/^f01000a8 <i386_init>:$/;"	l
f01000a8	obj/kern/kernel.asm	/^f01000a8:	55                   	push   %ebp$/;"	l
f01000a9	obj/kern/kernel.asm	/^f01000a9:	89 e5                	mov    %esp,%ebp$/;"	l
f01000ab	obj/kern/kernel.asm	/^f01000ab:	53                   	push   %ebx$/;"	l
f01000ac	obj/kern/kernel.asm	/^f01000ac:	83 ec 14             	sub    $0x14,%esp$/;"	l
f01000af	obj/kern/kernel.asm	/^f01000af:	b8 08 f0 24 f0       	mov    $0xf024f008,%eax$/;"	l
f01000b4	obj/kern/kernel.asm	/^f01000b4:	2d 89 c4 20 f0       	sub    $0xf020c489,%eax$/;"	l
f01000b9	obj/kern/kernel.asm	/^f01000b9:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f01000bd	obj/kern/kernel.asm	/^f01000bd:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f01000c4	obj/kern/kernel.asm	/^f01000c4:	00 $/;"	l
f01000c5	obj/kern/kernel.asm	/^f01000c5:	c7 04 24 89 c4 20 f0 	movl   $0xf020c489,(%esp)$/;"	l
f01000cc	obj/kern/kernel.asm	/^f01000cc:	e8 c6 68 00 00       	call   f0106997 <memset>$/;"	l
f01000d1	obj/kern/kernel.asm	/^f01000d1:	e8 b9 05 00 00       	call   f010068f <cons_init>$/;"	l
f01000d6	obj/kern/kernel.asm	/^f01000d6:	c7 44 24 04 ac 1a 00 	movl   $0x1aac,0x4(%esp)$/;"	l
f01000dd	obj/kern/kernel.asm	/^f01000dd:	00 $/;"	l
f01000de	obj/kern/kernel.asm	/^f01000de:	c7 04 24 2c 77 10 f0 	movl   $0xf010772c,(%esp)$/;"	l
f01000e5	obj/kern/kernel.asm	/^f01000e5:	e8 b4 42 00 00       	call   f010439e <cprintf>$/;"	l
f01000ea	obj/kern/kernel.asm	/^f01000ea:	e8 fd 17 00 00       	call   f01018ec <mem_init>$/;"	l
f01000ef	obj/kern/kernel.asm	/^f01000ef:	e8 bd 3a 00 00       	call   f0103bb1 <env_init>$/;"	l
f01000f4	obj/kern/kernel.asm	/^f01000f4:	e8 7f 43 00 00       	call   f0104478 <trap_init>$/;"	l
f01000f9	obj/kern/kernel.asm	/^f01000f9:	e8 dc 6b 00 00       	call   f0106cda <mp_init>$/;"	l
f01000fe	obj/kern/kernel.asm	/^f01000fe:	66 90                	xchg   %ax,%ax$/;"	l
f0100100	obj/kern/kernel.asm	/^f0100100:	e8 02 6f 00 00       	call   f0107007 <lapic_init>$/;"	l
f0100105	obj/kern/kernel.asm	/^f0100105:	e8 c1 41 00 00       	call   f01042cb <pic_init>$/;"	l
f010010a	obj/kern/kernel.asm	/^f010010a:	c7 04 24 c0 37 12 f0 	movl   $0xf01237c0,(%esp)$/;"	l
f0100111	obj/kern/kernel.asm	/^f0100111:	e8 55 71 00 00       	call   f010726b <spin_lock>$/;"	l
f0100116	obj/kern/kernel.asm	/^f0100116:	83 3d 88 de 20 f0 07 	cmpl   $0x7,0xf020de88$/;"	l
f010011d	obj/kern/kernel.asm	/^f010011d:	77 24                	ja     f0100143 <i386_init+0x9b>$/;"	l
f010011f	obj/kern/kernel.asm	/^f010011f:	c7 44 24 0c 00 70 00 	movl   $0x7000,0xc(%esp)$/;"	l
f0100126	obj/kern/kernel.asm	/^f0100126:	00 $/;"	l
f0100127	obj/kern/kernel.asm	/^f0100127:	c7 44 24 08 e4 76 10 	movl   $0xf01076e4,0x8(%esp)$/;"	l
f010012e	obj/kern/kernel.asm	/^f010012e:	f0 $/;"	l
f010012f	obj/kern/kernel.asm	/^f010012f:	c7 44 24 04 59 00 00 	movl   $0x59,0x4(%esp)$/;"	l
f0100136	obj/kern/kernel.asm	/^f0100136:	00 $/;"	l
f0100137	obj/kern/kernel.asm	/^f0100137:	c7 04 24 47 77 10 f0 	movl   $0xf0107747,(%esp)$/;"	l
f010013e	obj/kern/kernel.asm	/^f010013e:	e8 fd fe ff ff       	call   f0100040 <_panic>$/;"	l
f0100143	obj/kern/kernel.asm	/^f0100143:	b8 12 6c 10 f0       	mov    $0xf0106c12,%eax$/;"	l
f0100148	obj/kern/kernel.asm	/^f0100148:	2d 98 6b 10 f0       	sub    $0xf0106b98,%eax$/;"	l
f010014d	obj/kern/kernel.asm	/^f010014d:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0100151	obj/kern/kernel.asm	/^f0100151:	c7 44 24 04 98 6b 10 	movl   $0xf0106b98,0x4(%esp)$/;"	l
f0100158	obj/kern/kernel.asm	/^f0100158:	f0 $/;"	l
f0100159	obj/kern/kernel.asm	/^f0100159:	c7 04 24 00 70 00 f0 	movl   $0xf0007000,(%esp)$/;"	l
f0100160	obj/kern/kernel.asm	/^f0100160:	e8 7f 68 00 00       	call   f01069e4 <memmove>$/;"	l
f0100165	obj/kern/kernel.asm	/^f0100165:	bb 20 e0 20 f0       	mov    $0xf020e020,%ebx$/;"	l
f010016a	obj/kern/kernel.asm	/^f010016a:	eb 4d                	jmp    f01001b9 <i386_init+0x111>$/;"	l
f010016c	obj/kern/kernel.asm	/^f010016c:	e8 7b 6e 00 00       	call   f0106fec <cpunum>$/;"	l
f0100171	obj/kern/kernel.asm	/^f0100171:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0100174	obj/kern/kernel.asm	/^f0100174:	05 20 e0 20 f0       	add    $0xf020e020,%eax$/;"	l
f0100179	obj/kern/kernel.asm	/^f0100179:	39 c3                	cmp    %eax,%ebx$/;"	l
f010017b	obj/kern/kernel.asm	/^f010017b:	74 39                	je     f01001b6 <i386_init+0x10e>$/;"	l
f010017d	obj/kern/kernel.asm	/^f010017d:	89 d8                	mov    %ebx,%eax$/;"	l
f010017f	obj/kern/kernel.asm	/^f010017f:	2d 20 e0 20 f0       	sub    $0xf020e020,%eax$/;"	l
f0100184	obj/kern/kernel.asm	/^f0100184:	c1 f8 02             	sar    $0x2,%eax$/;"	l
f0100187	obj/kern/kernel.asm	/^f0100187:	69 c0 35 c2 72 4f    	imul   $0x4f72c235,%eax,%eax$/;"	l
f010018d	obj/kern/kernel.asm	/^f010018d:	c1 e0 0f             	shl    $0xf,%eax$/;"	l
f0100190	obj/kern/kernel.asm	/^f0100190:	8d 80 00 70 21 f0    	lea    -0xfde9000(%eax),%eax$/;"	l
f0100196	obj/kern/kernel.asm	/^f0100196:	a3 84 de 20 f0       	mov    %eax,0xf020de84$/;"	l
f010019b	obj/kern/kernel.asm	/^f010019b:	c7 44 24 04 00 70 00 	movl   $0x7000,0x4(%esp)$/;"	l
f01001a2	obj/kern/kernel.asm	/^f01001a2:	00 $/;"	l
f01001a3	obj/kern/kernel.asm	/^f01001a3:	0f b6 03             	movzbl (%ebx),%eax$/;"	l
f01001a6	obj/kern/kernel.asm	/^f01001a6:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01001a9	obj/kern/kernel.asm	/^f01001a9:	e8 a9 6f 00 00       	call   f0107157 <lapic_startap>$/;"	l
f01001ae	obj/kern/kernel.asm	/^f01001ae:	8b 43 04             	mov    0x4(%ebx),%eax$/;"	l
f01001b1	obj/kern/kernel.asm	/^f01001b1:	83 f8 01             	cmp    $0x1,%eax$/;"	l
f01001b4	obj/kern/kernel.asm	/^f01001b4:	75 f8                	jne    f01001ae <i386_init+0x106>$/;"	l
f01001b6	obj/kern/kernel.asm	/^f01001b6:	83 c3 74             	add    $0x74,%ebx$/;"	l
f01001b9	obj/kern/kernel.asm	/^f01001b9:	6b 05 c4 e3 20 f0 74 	imul   $0x74,0xf020e3c4,%eax$/;"	l
f01001c0	obj/kern/kernel.asm	/^f01001c0:	05 20 e0 20 f0       	add    $0xf020e020,%eax$/;"	l
f01001c5	obj/kern/kernel.asm	/^f01001c5:	39 c3                	cmp    %eax,%ebx$/;"	l
f01001c7	obj/kern/kernel.asm	/^f01001c7:	72 a3                	jb     f010016c <i386_init+0xc4>$/;"	l
f01001c9	obj/kern/kernel.asm	/^f01001c9:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
f01001d0	obj/kern/kernel.asm	/^f01001d0:	00 $/;"	l
f01001d1	obj/kern/kernel.asm	/^f01001d1:	c7 04 24 2e b2 1c f0 	movl   $0xf01cb22e,(%esp)$/;"	l
f01001d8	obj/kern/kernel.asm	/^f01001d8:	e8 9c 3b 00 00       	call   f0103d79 <env_create>$/;"	l
f01001dd	obj/kern/kernel.asm	/^f01001dd:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f01001e4	obj/kern/kernel.asm	/^f01001e4:	00 $/;"	l
f01001e5	obj/kern/kernel.asm	/^f01001e5:	c7 04 24 b8 c5 1f f0 	movl   $0xf01fc5b8,(%esp)$/;"	l
f01001ec	obj/kern/kernel.asm	/^f01001ec:	e8 88 3b 00 00       	call   f0103d79 <env_create>$/;"	l
f01001f1	obj/kern/kernel.asm	/^f01001f1:	e8 3d 04 00 00       	call   f0100633 <kbd_intr>$/;"	l
f01001f6	obj/kern/kernel.asm	/^f01001f6:	e8 47 55 00 00       	call   f0105742 <sched_yield>$/;"	l
f01001fb	obj/kern/kernel.asm	/^f01001fb <mp_main>:$/;"	l
f01001fb	obj/kern/kernel.asm	/^f01001fb:	55                   	push   %ebp$/;"	l
f01001fc	obj/kern/kernel.asm	/^f01001fc:	89 e5                	mov    %esp,%ebp$/;"	l
f01001fe	obj/kern/kernel.asm	/^f01001fe:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0100201	obj/kern/kernel.asm	/^f0100201:	a1 8c de 20 f0       	mov    0xf020de8c,%eax$/;"	l
f0100206	obj/kern/kernel.asm	/^f0100206:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f010020b	obj/kern/kernel.asm	/^f010020b:	77 20                	ja     f010022d <mp_main+0x32>$/;"	l
f010020d	obj/kern/kernel.asm	/^f010020d:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0100211	obj/kern/kernel.asm	/^f0100211:	c7 44 24 08 08 77 10 	movl   $0xf0107708,0x8(%esp)$/;"	l
f0100218	obj/kern/kernel.asm	/^f0100218:	f0 $/;"	l
f0100219	obj/kern/kernel.asm	/^f0100219:	c7 44 24 04 70 00 00 	movl   $0x70,0x4(%esp)$/;"	l
f0100220	obj/kern/kernel.asm	/^f0100220:	00 $/;"	l
f0100221	obj/kern/kernel.asm	/^f0100221:	c7 04 24 47 77 10 f0 	movl   $0xf0107747,(%esp)$/;"	l
f0100228	obj/kern/kernel.asm	/^f0100228:	e8 13 fe ff ff       	call   f0100040 <_panic>$/;"	l
f010022d	obj/kern/kernel.asm	/^f010022d:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0100232	obj/kern/kernel.asm	/^f0100232:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f0100235	obj/kern/kernel.asm	/^f0100235:	e8 b2 6d 00 00       	call   f0106fec <cpunum>$/;"	l
f010023a	obj/kern/kernel.asm	/^f010023a:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010023e	obj/kern/kernel.asm	/^f010023e:	c7 04 24 53 77 10 f0 	movl   $0xf0107753,(%esp)$/;"	l
f0100245	obj/kern/kernel.asm	/^f0100245:	e8 54 41 00 00       	call   f010439e <cprintf>$/;"	l
f010024a	obj/kern/kernel.asm	/^f010024a:	e8 b8 6d 00 00       	call   f0107007 <lapic_init>$/;"	l
f010024f	obj/kern/kernel.asm	/^f010024f:	e8 33 39 00 00       	call   f0103b87 <env_init_percpu>$/;"	l
f0100254	obj/kern/kernel.asm	/^f0100254:	e8 67 41 00 00       	call   f01043c0 <trap_init_percpu>$/;"	l
f0100259	obj/kern/kernel.asm	/^f0100259:	e8 8e 6d 00 00       	call   f0106fec <cpunum>$/;"	l
f010025e	obj/kern/kernel.asm	/^f010025e:	6b d0 74             	imul   $0x74,%eax,%edx$/;"	l
f0100261	obj/kern/kernel.asm	/^f0100261:	81 c2 20 e0 20 f0    	add    $0xf020e020,%edx$/;"	l
f0100267	obj/kern/kernel.asm	/^f0100267:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f010026c	obj/kern/kernel.asm	/^f010026c:	f0 87 42 04          	lock xchg %eax,0x4(%edx)$/;"	l
f0100270	obj/kern/kernel.asm	/^f0100270:	c7 04 24 c0 37 12 f0 	movl   $0xf01237c0,(%esp)$/;"	l
f0100277	obj/kern/kernel.asm	/^f0100277:	e8 ef 6f 00 00       	call   f010726b <spin_lock>$/;"	l
f010027c	obj/kern/kernel.asm	/^f010027c:	e8 c1 54 00 00       	call   f0105742 <sched_yield>$/;"	l
f0100281	obj/kern/kernel.asm	/^f0100281 <_warn>:$/;"	l
f0100281	obj/kern/kernel.asm	/^f0100281:	55                   	push   %ebp$/;"	l
f0100282	obj/kern/kernel.asm	/^f0100282:	89 e5                	mov    %esp,%ebp$/;"	l
f0100284	obj/kern/kernel.asm	/^f0100284:	53                   	push   %ebx$/;"	l
f0100285	obj/kern/kernel.asm	/^f0100285:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0100288	obj/kern/kernel.asm	/^f0100288:	8d 5d 14             	lea    0x14(%ebp),%ebx$/;"	l
f010028b	obj/kern/kernel.asm	/^f010028b:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f010028e	obj/kern/kernel.asm	/^f010028e:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0100292	obj/kern/kernel.asm	/^f0100292:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0100295	obj/kern/kernel.asm	/^f0100295:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100299	obj/kern/kernel.asm	/^f0100299:	c7 04 24 69 77 10 f0 	movl   $0xf0107769,(%esp)$/;"	l
f01002a0	obj/kern/kernel.asm	/^f01002a0:	e8 f9 40 00 00       	call   f010439e <cprintf>$/;"	l
f01002a5	obj/kern/kernel.asm	/^f01002a5:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f01002a9	obj/kern/kernel.asm	/^f01002a9:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f01002ac	obj/kern/kernel.asm	/^f01002ac:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01002af	obj/kern/kernel.asm	/^f01002af:	e8 b7 40 00 00       	call   f010436b <vcprintf>$/;"	l
f01002b4	obj/kern/kernel.asm	/^f01002b4:	c7 04 24 88 8a 10 f0 	movl   $0xf0108a88,(%esp)$/;"	l
f01002bb	obj/kern/kernel.asm	/^f01002bb:	e8 de 40 00 00       	call   f010439e <cprintf>$/;"	l
f01002c0	obj/kern/kernel.asm	/^f01002c0:	83 c4 14             	add    $0x14,%esp$/;"	l
f01002c3	obj/kern/kernel.asm	/^f01002c3:	5b                   	pop    %ebx$/;"	l
f01002c4	obj/kern/kernel.asm	/^f01002c4:	5d                   	pop    %ebp$/;"	l
f01002c5	obj/kern/kernel.asm	/^f01002c5:	c3                   	ret    $/;"	l
f01002c6	obj/kern/kernel.asm	/^f01002c6:	66 90                	xchg   %ax,%ax$/;"	l
f01002c8	obj/kern/kernel.asm	/^f01002c8:	66 90                	xchg   %ax,%ax$/;"	l
f01002ca	obj/kern/kernel.asm	/^f01002ca:	66 90                	xchg   %ax,%ax$/;"	l
f01002cc	obj/kern/kernel.asm	/^f01002cc:	66 90                	xchg   %ax,%ax$/;"	l
f01002ce	obj/kern/kernel.asm	/^f01002ce:	66 90                	xchg   %ax,%ax$/;"	l
f01002d0	obj/kern/kernel.asm	/^f01002d0 <serial_proc_data>:$/;"	l
f01002d0	obj/kern/kernel.asm	/^f01002d0:	55                   	push   %ebp$/;"	l
f01002d1	obj/kern/kernel.asm	/^f01002d1:	89 e5                	mov    %esp,%ebp$/;"	l
f01002d3	obj/kern/kernel.asm	/^f01002d3:	ba fd 03 00 00       	mov    $0x3fd,%edx$/;"	l
f01002d8	obj/kern/kernel.asm	/^f01002d8:	ec                   	in     (%dx),%al$/;"	l
f01002d9	obj/kern/kernel.asm	/^f01002d9:	a8 01                	test   $0x1,%al$/;"	l
f01002db	obj/kern/kernel.asm	/^f01002db:	74 08                	je     f01002e5 <serial_proc_data+0x15>$/;"	l
f01002dd	obj/kern/kernel.asm	/^f01002dd:	b2 f8                	mov    $0xf8,%dl$/;"	l
f01002df	obj/kern/kernel.asm	/^f01002df:	ec                   	in     (%dx),%al$/;"	l
f01002e0	obj/kern/kernel.asm	/^f01002e0:	0f b6 c0             	movzbl %al,%eax$/;"	l
f01002e3	obj/kern/kernel.asm	/^f01002e3:	eb 05                	jmp    f01002ea <serial_proc_data+0x1a>$/;"	l
f01002e5	obj/kern/kernel.asm	/^f01002e5:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f01002ea	obj/kern/kernel.asm	/^f01002ea:	5d                   	pop    %ebp$/;"	l
f01002eb	obj/kern/kernel.asm	/^f01002eb:	c3                   	ret    $/;"	l
f01002ec	obj/kern/kernel.asm	/^f01002ec <cons_intr>:$/;"	l
f01002ec	obj/kern/kernel.asm	/^f01002ec:	55                   	push   %ebp$/;"	l
f01002ed	obj/kern/kernel.asm	/^f01002ed:	89 e5                	mov    %esp,%ebp$/;"	l
f01002ef	obj/kern/kernel.asm	/^f01002ef:	53                   	push   %ebx$/;"	l
f01002f0	obj/kern/kernel.asm	/^f01002f0:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01002f3	obj/kern/kernel.asm	/^f01002f3:	89 c3                	mov    %eax,%ebx$/;"	l
f01002f5	obj/kern/kernel.asm	/^f01002f5:	eb 2a                	jmp    f0100321 <cons_intr+0x35>$/;"	l
f01002f7	obj/kern/kernel.asm	/^f01002f7:	85 d2                	test   %edx,%edx$/;"	l
f01002f9	obj/kern/kernel.asm	/^f01002f9:	74 26                	je     f0100321 <cons_intr+0x35>$/;"	l
f01002fb	obj/kern/kernel.asm	/^f01002fb:	a1 24 d2 20 f0       	mov    0xf020d224,%eax$/;"	l
f0100300	obj/kern/kernel.asm	/^f0100300:	8d 48 01             	lea    0x1(%eax),%ecx$/;"	l
f0100303	obj/kern/kernel.asm	/^f0100303:	89 0d 24 d2 20 f0    	mov    %ecx,0xf020d224$/;"	l
f0100309	obj/kern/kernel.asm	/^f0100309:	88 90 20 d0 20 f0    	mov    %dl,-0xfdf2fe0(%eax)$/;"	l
f010030f	obj/kern/kernel.asm	/^f010030f:	81 f9 00 02 00 00    	cmp    $0x200,%ecx$/;"	l
f0100315	obj/kern/kernel.asm	/^f0100315:	75 0a                	jne    f0100321 <cons_intr+0x35>$/;"	l
f0100317	obj/kern/kernel.asm	/^f0100317:	c7 05 24 d2 20 f0 00 	movl   $0x0,0xf020d224$/;"	l
f010031e	obj/kern/kernel.asm	/^f010031e:	00 00 00 $/;"	l
f0100321	obj/kern/kernel.asm	/^f0100321:	ff d3                	call   *%ebx$/;"	l
f0100323	obj/kern/kernel.asm	/^f0100323:	89 c2                	mov    %eax,%edx$/;"	l
f0100325	obj/kern/kernel.asm	/^f0100325:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f0100328	obj/kern/kernel.asm	/^f0100328:	75 cd                	jne    f01002f7 <cons_intr+0xb>$/;"	l
f010032a	obj/kern/kernel.asm	/^f010032a:	83 c4 04             	add    $0x4,%esp$/;"	l
f010032d	obj/kern/kernel.asm	/^f010032d:	5b                   	pop    %ebx$/;"	l
f010032e	obj/kern/kernel.asm	/^f010032e:	5d                   	pop    %ebp$/;"	l
f010032f	obj/kern/kernel.asm	/^f010032f:	c3                   	ret    $/;"	l
f0100330	obj/kern/kernel.asm	/^f0100330 <kbd_proc_data>:$/;"	l
f0100330	obj/kern/kernel.asm	/^f0100330:	ba 64 00 00 00       	mov    $0x64,%edx$/;"	l
f0100335	obj/kern/kernel.asm	/^f0100335:	ec                   	in     (%dx),%al$/;"	l
f0100336	obj/kern/kernel.asm	/^f0100336:	a8 01                	test   $0x1,%al$/;"	l
f0100338	obj/kern/kernel.asm	/^f0100338:	0f 84 ef 00 00 00    	je     f010042d <kbd_proc_data+0xfd>$/;"	l
f010033e	obj/kern/kernel.asm	/^f010033e:	b2 60                	mov    $0x60,%dl$/;"	l
f0100340	obj/kern/kernel.asm	/^f0100340:	ec                   	in     (%dx),%al$/;"	l
f0100341	obj/kern/kernel.asm	/^f0100341:	89 c2                	mov    %eax,%edx$/;"	l
f0100343	obj/kern/kernel.asm	/^f0100343:	3c e0                	cmp    $0xe0,%al$/;"	l
f0100345	obj/kern/kernel.asm	/^f0100345:	75 0d                	jne    f0100354 <kbd_proc_data+0x24>$/;"	l
f0100347	obj/kern/kernel.asm	/^f0100347:	83 0d 00 d0 20 f0 40 	orl    $0x40,0xf020d000$/;"	l
f010034e	obj/kern/kernel.asm	/^f010034e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100353	obj/kern/kernel.asm	/^f0100353:	c3                   	ret    $/;"	l
f0100354	obj/kern/kernel.asm	/^f0100354:	55                   	push   %ebp$/;"	l
f0100355	obj/kern/kernel.asm	/^f0100355:	89 e5                	mov    %esp,%ebp$/;"	l
f0100357	obj/kern/kernel.asm	/^f0100357:	53                   	push   %ebx$/;"	l
f0100358	obj/kern/kernel.asm	/^f0100358:	83 ec 14             	sub    $0x14,%esp$/;"	l
f010035b	obj/kern/kernel.asm	/^f010035b:	84 c0                	test   %al,%al$/;"	l
f010035d	obj/kern/kernel.asm	/^f010035d:	79 37                	jns    f0100396 <kbd_proc_data+0x66>$/;"	l
f010035f	obj/kern/kernel.asm	/^f010035f:	8b 0d 00 d0 20 f0    	mov    0xf020d000,%ecx$/;"	l
f0100365	obj/kern/kernel.asm	/^f0100365:	89 cb                	mov    %ecx,%ebx$/;"	l
f0100367	obj/kern/kernel.asm	/^f0100367:	83 e3 40             	and    $0x40,%ebx$/;"	l
f010036a	obj/kern/kernel.asm	/^f010036a:	83 e0 7f             	and    $0x7f,%eax$/;"	l
f010036d	obj/kern/kernel.asm	/^f010036d:	85 db                	test   %ebx,%ebx$/;"	l
f010036f	obj/kern/kernel.asm	/^f010036f:	0f 44 d0             	cmove  %eax,%edx$/;"	l
f0100372	obj/kern/kernel.asm	/^f0100372:	0f b6 d2             	movzbl %dl,%edx$/;"	l
f0100375	obj/kern/kernel.asm	/^f0100375:	0f b6 82 e0 78 10 f0 	movzbl -0xfef8720(%edx),%eax$/;"	l
f010037c	obj/kern/kernel.asm	/^f010037c:	83 c8 40             	or     $0x40,%eax$/;"	l
f010037f	obj/kern/kernel.asm	/^f010037f:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0100382	obj/kern/kernel.asm	/^f0100382:	f7 d0                	not    %eax$/;"	l
f0100384	obj/kern/kernel.asm	/^f0100384:	21 c1                	and    %eax,%ecx$/;"	l
f0100386	obj/kern/kernel.asm	/^f0100386:	89 0d 00 d0 20 f0    	mov    %ecx,0xf020d000$/;"	l
f010038c	obj/kern/kernel.asm	/^f010038c:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100391	obj/kern/kernel.asm	/^f0100391:	e9 9d 00 00 00       	jmp    f0100433 <kbd_proc_data+0x103>$/;"	l
f0100396	obj/kern/kernel.asm	/^f0100396:	8b 0d 00 d0 20 f0    	mov    0xf020d000,%ecx$/;"	l
f010039c	obj/kern/kernel.asm	/^f010039c:	f6 c1 40             	test   $0x40,%cl$/;"	l
f010039f	obj/kern/kernel.asm	/^f010039f:	74 0e                	je     f01003af <kbd_proc_data+0x7f>$/;"	l
f01003a1	obj/kern/kernel.asm	/^f01003a1:	83 c8 80             	or     $0xffffff80,%eax$/;"	l
f01003a4	obj/kern/kernel.asm	/^f01003a4:	89 c2                	mov    %eax,%edx$/;"	l
f01003a6	obj/kern/kernel.asm	/^f01003a6:	83 e1 bf             	and    $0xffffffbf,%ecx$/;"	l
f01003a9	obj/kern/kernel.asm	/^f01003a9:	89 0d 00 d0 20 f0    	mov    %ecx,0xf020d000$/;"	l
f01003af	obj/kern/kernel.asm	/^f01003af:	0f b6 d2             	movzbl %dl,%edx$/;"	l
f01003b2	obj/kern/kernel.asm	/^f01003b2:	0f b6 82 e0 78 10 f0 	movzbl -0xfef8720(%edx),%eax$/;"	l
f01003b9	obj/kern/kernel.asm	/^f01003b9:	0b 05 00 d0 20 f0    	or     0xf020d000,%eax$/;"	l
f01003bf	obj/kern/kernel.asm	/^f01003bf:	0f b6 8a e0 77 10 f0 	movzbl -0xfef8820(%edx),%ecx$/;"	l
f01003c6	obj/kern/kernel.asm	/^f01003c6:	31 c8                	xor    %ecx,%eax$/;"	l
f01003c8	obj/kern/kernel.asm	/^f01003c8:	a3 00 d0 20 f0       	mov    %eax,0xf020d000$/;"	l
f01003cd	obj/kern/kernel.asm	/^f01003cd:	89 c1                	mov    %eax,%ecx$/;"	l
f01003cf	obj/kern/kernel.asm	/^f01003cf:	83 e1 03             	and    $0x3,%ecx$/;"	l
f01003d2	obj/kern/kernel.asm	/^f01003d2:	8b 0c 8d c0 77 10 f0 	mov    -0xfef8840(,%ecx,4),%ecx$/;"	l
f01003d9	obj/kern/kernel.asm	/^f01003d9:	0f b6 14 11          	movzbl (%ecx,%edx,1),%edx$/;"	l
f01003dd	obj/kern/kernel.asm	/^f01003dd:	0f b6 da             	movzbl %dl,%ebx$/;"	l
f01003e0	obj/kern/kernel.asm	/^f01003e0:	a8 08                	test   $0x8,%al$/;"	l
f01003e2	obj/kern/kernel.asm	/^f01003e2:	74 1b                	je     f01003ff <kbd_proc_data+0xcf>$/;"	l
f01003e4	obj/kern/kernel.asm	/^f01003e4:	89 da                	mov    %ebx,%edx$/;"	l
f01003e6	obj/kern/kernel.asm	/^f01003e6:	8d 4b 9f             	lea    -0x61(%ebx),%ecx$/;"	l
f01003e9	obj/kern/kernel.asm	/^f01003e9:	83 f9 19             	cmp    $0x19,%ecx$/;"	l
f01003ec	obj/kern/kernel.asm	/^f01003ec:	77 05                	ja     f01003f3 <kbd_proc_data+0xc3>$/;"	l
f01003ee	obj/kern/kernel.asm	/^f01003ee:	83 eb 20             	sub    $0x20,%ebx$/;"	l
f01003f1	obj/kern/kernel.asm	/^f01003f1:	eb 0c                	jmp    f01003ff <kbd_proc_data+0xcf>$/;"	l
f01003f3	obj/kern/kernel.asm	/^f01003f3:	83 ea 41             	sub    $0x41,%edx$/;"	l
f01003f6	obj/kern/kernel.asm	/^f01003f6:	8d 4b 20             	lea    0x20(%ebx),%ecx$/;"	l
f01003f9	obj/kern/kernel.asm	/^f01003f9:	83 fa 19             	cmp    $0x19,%edx$/;"	l
f01003fc	obj/kern/kernel.asm	/^f01003fc:	0f 46 d9             	cmovbe %ecx,%ebx$/;"	l
f01003ff	obj/kern/kernel.asm	/^f01003ff:	f7 d0                	not    %eax$/;"	l
f0100401	obj/kern/kernel.asm	/^f0100401:	89 c2                	mov    %eax,%edx$/;"	l
f0100403	obj/kern/kernel.asm	/^f0100403:	89 d8                	mov    %ebx,%eax$/;"	l
f0100405	obj/kern/kernel.asm	/^f0100405:	f6 c2 06             	test   $0x6,%dl$/;"	l
f0100408	obj/kern/kernel.asm	/^f0100408:	75 29                	jne    f0100433 <kbd_proc_data+0x103>$/;"	l
f010040a	obj/kern/kernel.asm	/^f010040a:	81 fb e9 00 00 00    	cmp    $0xe9,%ebx$/;"	l
f0100410	obj/kern/kernel.asm	/^f0100410:	75 21                	jne    f0100433 <kbd_proc_data+0x103>$/;"	l
f0100412	obj/kern/kernel.asm	/^f0100412:	c7 04 24 83 77 10 f0 	movl   $0xf0107783,(%esp)$/;"	l
f0100419	obj/kern/kernel.asm	/^f0100419:	e8 80 3f 00 00       	call   f010439e <cprintf>$/;"	l
f010041e	obj/kern/kernel.asm	/^f010041e:	ba 92 00 00 00       	mov    $0x92,%edx$/;"	l
f0100423	obj/kern/kernel.asm	/^f0100423:	b8 03 00 00 00       	mov    $0x3,%eax$/;"	l
f0100428	obj/kern/kernel.asm	/^f0100428:	ee                   	out    %al,(%dx)$/;"	l
f0100429	obj/kern/kernel.asm	/^f0100429:	89 d8                	mov    %ebx,%eax$/;"	l
f010042b	obj/kern/kernel.asm	/^f010042b:	eb 06                	jmp    f0100433 <kbd_proc_data+0x103>$/;"	l
f010042d	obj/kern/kernel.asm	/^f010042d:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0100432	obj/kern/kernel.asm	/^f0100432:	c3                   	ret    $/;"	l
f0100433	obj/kern/kernel.asm	/^f0100433:	83 c4 14             	add    $0x14,%esp$/;"	l
f0100436	obj/kern/kernel.asm	/^f0100436:	5b                   	pop    %ebx$/;"	l
f0100437	obj/kern/kernel.asm	/^f0100437:	5d                   	pop    %ebp$/;"	l
f0100438	obj/kern/kernel.asm	/^f0100438:	c3                   	ret    $/;"	l
f0100439	obj/kern/kernel.asm	/^f0100439 <cons_putc>:$/;"	l
f0100439	obj/kern/kernel.asm	/^f0100439:	55                   	push   %ebp$/;"	l
f010043a	obj/kern/kernel.asm	/^f010043a:	89 e5                	mov    %esp,%ebp$/;"	l
f010043c	obj/kern/kernel.asm	/^f010043c:	57                   	push   %edi$/;"	l
f010043d	obj/kern/kernel.asm	/^f010043d:	56                   	push   %esi$/;"	l
f010043e	obj/kern/kernel.asm	/^f010043e:	53                   	push   %ebx$/;"	l
f010043f	obj/kern/kernel.asm	/^f010043f:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0100442	obj/kern/kernel.asm	/^f0100442:	89 c7                	mov    %eax,%edi$/;"	l
f0100444	obj/kern/kernel.asm	/^f0100444:	bb 01 32 00 00       	mov    $0x3201,%ebx$/;"	l
f0100449	obj/kern/kernel.asm	/^f0100449:	be fd 03 00 00       	mov    $0x3fd,%esi$/;"	l
f010044e	obj/kern/kernel.asm	/^f010044e:	b9 84 00 00 00       	mov    $0x84,%ecx$/;"	l
f0100453	obj/kern/kernel.asm	/^f0100453:	eb 06                	jmp    f010045b <cons_putc+0x22>$/;"	l
f0100455	obj/kern/kernel.asm	/^f0100455:	89 ca                	mov    %ecx,%edx$/;"	l
f0100457	obj/kern/kernel.asm	/^f0100457:	ec                   	in     (%dx),%al$/;"	l
f0100458	obj/kern/kernel.asm	/^f0100458:	ec                   	in     (%dx),%al$/;"	l
f0100459	obj/kern/kernel.asm	/^f0100459:	ec                   	in     (%dx),%al$/;"	l
f010045a	obj/kern/kernel.asm	/^f010045a:	ec                   	in     (%dx),%al$/;"	l
f010045b	obj/kern/kernel.asm	/^f010045b:	89 f2                	mov    %esi,%edx$/;"	l
f010045d	obj/kern/kernel.asm	/^f010045d:	ec                   	in     (%dx),%al$/;"	l
f010045e	obj/kern/kernel.asm	/^f010045e:	a8 20                	test   $0x20,%al$/;"	l
f0100460	obj/kern/kernel.asm	/^f0100460:	75 05                	jne    f0100467 <cons_putc+0x2e>$/;"	l
f0100462	obj/kern/kernel.asm	/^f0100462:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f0100465	obj/kern/kernel.asm	/^f0100465:	75 ee                	jne    f0100455 <cons_putc+0x1c>$/;"	l
f0100467	obj/kern/kernel.asm	/^f0100467:	89 f8                	mov    %edi,%eax$/;"	l
f0100469	obj/kern/kernel.asm	/^f0100469:	0f b6 c0             	movzbl %al,%eax$/;"	l
f010046c	obj/kern/kernel.asm	/^f010046c:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f010046f	obj/kern/kernel.asm	/^f010046f:	ba f8 03 00 00       	mov    $0x3f8,%edx$/;"	l
f0100474	obj/kern/kernel.asm	/^f0100474:	ee                   	out    %al,(%dx)$/;"	l
f0100475	obj/kern/kernel.asm	/^f0100475:	bb 01 32 00 00       	mov    $0x3201,%ebx$/;"	l
f010047a	obj/kern/kernel.asm	/^f010047a:	be 79 03 00 00       	mov    $0x379,%esi$/;"	l
f010047f	obj/kern/kernel.asm	/^f010047f:	b9 84 00 00 00       	mov    $0x84,%ecx$/;"	l
f0100484	obj/kern/kernel.asm	/^f0100484:	eb 06                	jmp    f010048c <cons_putc+0x53>$/;"	l
f0100486	obj/kern/kernel.asm	/^f0100486:	89 ca                	mov    %ecx,%edx$/;"	l
f0100488	obj/kern/kernel.asm	/^f0100488:	ec                   	in     (%dx),%al$/;"	l
f0100489	obj/kern/kernel.asm	/^f0100489:	ec                   	in     (%dx),%al$/;"	l
f010048a	obj/kern/kernel.asm	/^f010048a:	ec                   	in     (%dx),%al$/;"	l
f010048b	obj/kern/kernel.asm	/^f010048b:	ec                   	in     (%dx),%al$/;"	l
f010048c	obj/kern/kernel.asm	/^f010048c:	89 f2                	mov    %esi,%edx$/;"	l
f010048e	obj/kern/kernel.asm	/^f010048e:	ec                   	in     (%dx),%al$/;"	l
f010048f	obj/kern/kernel.asm	/^f010048f:	84 c0                	test   %al,%al$/;"	l
f0100491	obj/kern/kernel.asm	/^f0100491:	78 05                	js     f0100498 <cons_putc+0x5f>$/;"	l
f0100493	obj/kern/kernel.asm	/^f0100493:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f0100496	obj/kern/kernel.asm	/^f0100496:	75 ee                	jne    f0100486 <cons_putc+0x4d>$/;"	l
f0100498	obj/kern/kernel.asm	/^f0100498:	ba 78 03 00 00       	mov    $0x378,%edx$/;"	l
f010049d	obj/kern/kernel.asm	/^f010049d:	0f b6 45 e4          	movzbl -0x1c(%ebp),%eax$/;"	l
f01004a1	obj/kern/kernel.asm	/^f01004a1:	ee                   	out    %al,(%dx)$/;"	l
f01004a2	obj/kern/kernel.asm	/^f01004a2:	b2 7a                	mov    $0x7a,%dl$/;"	l
f01004a4	obj/kern/kernel.asm	/^f01004a4:	b8 0d 00 00 00       	mov    $0xd,%eax$/;"	l
f01004a9	obj/kern/kernel.asm	/^f01004a9:	ee                   	out    %al,(%dx)$/;"	l
f01004aa	obj/kern/kernel.asm	/^f01004aa:	b8 08 00 00 00       	mov    $0x8,%eax$/;"	l
f01004af	obj/kern/kernel.asm	/^f01004af:	ee                   	out    %al,(%dx)$/;"	l
f01004b0	obj/kern/kernel.asm	/^f01004b0:	89 fa                	mov    %edi,%edx$/;"	l
f01004b2	obj/kern/kernel.asm	/^f01004b2:	81 e2 00 ff ff ff    	and    $0xffffff00,%edx$/;"	l
f01004b8	obj/kern/kernel.asm	/^f01004b8:	89 f8                	mov    %edi,%eax$/;"	l
f01004ba	obj/kern/kernel.asm	/^f01004ba:	80 cc 07             	or     $0x7,%ah$/;"	l
f01004bd	obj/kern/kernel.asm	/^f01004bd:	85 d2                	test   %edx,%edx$/;"	l
f01004bf	obj/kern/kernel.asm	/^f01004bf:	0f 44 f8             	cmove  %eax,%edi$/;"	l
f01004c2	obj/kern/kernel.asm	/^f01004c2:	89 f8                	mov    %edi,%eax$/;"	l
f01004c4	obj/kern/kernel.asm	/^f01004c4:	0f b6 c0             	movzbl %al,%eax$/;"	l
f01004c7	obj/kern/kernel.asm	/^f01004c7:	83 f8 09             	cmp    $0x9,%eax$/;"	l
f01004ca	obj/kern/kernel.asm	/^f01004ca:	74 76                	je     f0100542 <cons_putc+0x109>$/;"	l
f01004cc	obj/kern/kernel.asm	/^f01004cc:	83 f8 09             	cmp    $0x9,%eax$/;"	l
f01004cf	obj/kern/kernel.asm	/^f01004cf:	7f 0a                	jg     f01004db <cons_putc+0xa2>$/;"	l
f01004d1	obj/kern/kernel.asm	/^f01004d1:	83 f8 08             	cmp    $0x8,%eax$/;"	l
f01004d4	obj/kern/kernel.asm	/^f01004d4:	74 16                	je     f01004ec <cons_putc+0xb3>$/;"	l
f01004d6	obj/kern/kernel.asm	/^f01004d6:	e9 9b 00 00 00       	jmp    f0100576 <cons_putc+0x13d>$/;"	l
f01004db	obj/kern/kernel.asm	/^f01004db:	83 f8 0a             	cmp    $0xa,%eax$/;"	l
f01004de	obj/kern/kernel.asm	/^f01004de:	66 90                	xchg   %ax,%ax$/;"	l
f01004e0	obj/kern/kernel.asm	/^f01004e0:	74 3a                	je     f010051c <cons_putc+0xe3>$/;"	l
f01004e2	obj/kern/kernel.asm	/^f01004e2:	83 f8 0d             	cmp    $0xd,%eax$/;"	l
f01004e5	obj/kern/kernel.asm	/^f01004e5:	74 3d                	je     f0100524 <cons_putc+0xeb>$/;"	l
f01004e7	obj/kern/kernel.asm	/^f01004e7:	e9 8a 00 00 00       	jmp    f0100576 <cons_putc+0x13d>$/;"	l
f01004ec	obj/kern/kernel.asm	/^f01004ec:	0f b7 05 28 d2 20 f0 	movzwl 0xf020d228,%eax$/;"	l
f01004f3	obj/kern/kernel.asm	/^f01004f3:	66 85 c0             	test   %ax,%ax$/;"	l
f01004f6	obj/kern/kernel.asm	/^f01004f6:	0f 84 e5 00 00 00    	je     f01005e1 <cons_putc+0x1a8>$/;"	l
f01004fc	obj/kern/kernel.asm	/^f01004fc:	83 e8 01             	sub    $0x1,%eax$/;"	l
f01004ff	obj/kern/kernel.asm	/^f01004ff:	66 a3 28 d2 20 f0    	mov    %ax,0xf020d228$/;"	l
f0100505	obj/kern/kernel.asm	/^f0100505:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f0100508	obj/kern/kernel.asm	/^f0100508:	66 81 e7 00 ff       	and    $0xff00,%di$/;"	l
f010050d	obj/kern/kernel.asm	/^f010050d:	83 cf 20             	or     $0x20,%edi$/;"	l
f0100510	obj/kern/kernel.asm	/^f0100510:	8b 15 2c d2 20 f0    	mov    0xf020d22c,%edx$/;"	l
f0100516	obj/kern/kernel.asm	/^f0100516:	66 89 3c 42          	mov    %di,(%edx,%eax,2)$/;"	l
f010051a	obj/kern/kernel.asm	/^f010051a:	eb 78                	jmp    f0100594 <cons_putc+0x15b>$/;"	l
f010051c	obj/kern/kernel.asm	/^f010051c:	66 83 05 28 d2 20 f0 	addw   $0x50,0xf020d228$/;"	l
f0100523	obj/kern/kernel.asm	/^f0100523:	50 $/;"	l
f0100524	obj/kern/kernel.asm	/^f0100524:	0f b7 05 28 d2 20 f0 	movzwl 0xf020d228,%eax$/;"	l
f010052b	obj/kern/kernel.asm	/^f010052b:	69 c0 cd cc 00 00    	imul   $0xcccd,%eax,%eax$/;"	l
f0100531	obj/kern/kernel.asm	/^f0100531:	c1 e8 16             	shr    $0x16,%eax$/;"	l
f0100534	obj/kern/kernel.asm	/^f0100534:	8d 04 80             	lea    (%eax,%eax,4),%eax$/;"	l
f0100537	obj/kern/kernel.asm	/^f0100537:	c1 e0 04             	shl    $0x4,%eax$/;"	l
f010053a	obj/kern/kernel.asm	/^f010053a:	66 a3 28 d2 20 f0    	mov    %ax,0xf020d228$/;"	l
f0100540	obj/kern/kernel.asm	/^f0100540:	eb 52                	jmp    f0100594 <cons_putc+0x15b>$/;"	l
f0100542	obj/kern/kernel.asm	/^f0100542:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f0100547	obj/kern/kernel.asm	/^f0100547:	e8 ed fe ff ff       	call   f0100439 <cons_putc>$/;"	l
f010054c	obj/kern/kernel.asm	/^f010054c:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f0100551	obj/kern/kernel.asm	/^f0100551:	e8 e3 fe ff ff       	call   f0100439 <cons_putc>$/;"	l
f0100556	obj/kern/kernel.asm	/^f0100556:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f010055b	obj/kern/kernel.asm	/^f010055b:	e8 d9 fe ff ff       	call   f0100439 <cons_putc>$/;"	l
f0100560	obj/kern/kernel.asm	/^f0100560:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f0100565	obj/kern/kernel.asm	/^f0100565:	e8 cf fe ff ff       	call   f0100439 <cons_putc>$/;"	l
f010056a	obj/kern/kernel.asm	/^f010056a:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f010056f	obj/kern/kernel.asm	/^f010056f:	e8 c5 fe ff ff       	call   f0100439 <cons_putc>$/;"	l
f0100574	obj/kern/kernel.asm	/^f0100574:	eb 1e                	jmp    f0100594 <cons_putc+0x15b>$/;"	l
f0100576	obj/kern/kernel.asm	/^f0100576:	0f b7 05 28 d2 20 f0 	movzwl 0xf020d228,%eax$/;"	l
f010057d	obj/kern/kernel.asm	/^f010057d:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
f0100580	obj/kern/kernel.asm	/^f0100580:	66 89 15 28 d2 20 f0 	mov    %dx,0xf020d228$/;"	l
f0100587	obj/kern/kernel.asm	/^f0100587:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f010058a	obj/kern/kernel.asm	/^f010058a:	8b 15 2c d2 20 f0    	mov    0xf020d22c,%edx$/;"	l
f0100590	obj/kern/kernel.asm	/^f0100590:	66 89 3c 42          	mov    %di,(%edx,%eax,2)$/;"	l
f0100594	obj/kern/kernel.asm	/^f0100594:	66 81 3d 28 d2 20 f0 	cmpw   $0x7cf,0xf020d228$/;"	l
f010059b	obj/kern/kernel.asm	/^f010059b:	cf 07 $/;"	l
f010059d	obj/kern/kernel.asm	/^f010059d:	76 42                	jbe    f01005e1 <cons_putc+0x1a8>$/;"	l
f010059f	obj/kern/kernel.asm	/^f010059f:	a1 2c d2 20 f0       	mov    0xf020d22c,%eax$/;"	l
f01005a4	obj/kern/kernel.asm	/^f01005a4:	c7 44 24 08 00 0f 00 	movl   $0xf00,0x8(%esp)$/;"	l
f01005ab	obj/kern/kernel.asm	/^f01005ab:	00 $/;"	l
f01005ac	obj/kern/kernel.asm	/^f01005ac:	8d 90 a0 00 00 00    	lea    0xa0(%eax),%edx$/;"	l
f01005b2	obj/kern/kernel.asm	/^f01005b2:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f01005b6	obj/kern/kernel.asm	/^f01005b6:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01005b9	obj/kern/kernel.asm	/^f01005b9:	e8 26 64 00 00       	call   f01069e4 <memmove>$/;"	l
f01005be	obj/kern/kernel.asm	/^f01005be:	8b 15 2c d2 20 f0    	mov    0xf020d22c,%edx$/;"	l
f01005c4	obj/kern/kernel.asm	/^f01005c4:	b8 80 07 00 00       	mov    $0x780,%eax$/;"	l
f01005c9	obj/kern/kernel.asm	/^f01005c9:	66 c7 04 42 20 07    	movw   $0x720,(%edx,%eax,2)$/;"	l
f01005cf	obj/kern/kernel.asm	/^f01005cf:	83 c0 01             	add    $0x1,%eax$/;"	l
f01005d2	obj/kern/kernel.asm	/^f01005d2:	3d d0 07 00 00       	cmp    $0x7d0,%eax$/;"	l
f01005d7	obj/kern/kernel.asm	/^f01005d7:	75 f0                	jne    f01005c9 <cons_putc+0x190>$/;"	l
f01005d9	obj/kern/kernel.asm	/^f01005d9:	66 83 2d 28 d2 20 f0 	subw   $0x50,0xf020d228$/;"	l
f01005e0	obj/kern/kernel.asm	/^f01005e0:	50 $/;"	l
f01005e1	obj/kern/kernel.asm	/^f01005e1:	8b 0d 30 d2 20 f0    	mov    0xf020d230,%ecx$/;"	l
f01005e7	obj/kern/kernel.asm	/^f01005e7:	b8 0e 00 00 00       	mov    $0xe,%eax$/;"	l
f01005ec	obj/kern/kernel.asm	/^f01005ec:	89 ca                	mov    %ecx,%edx$/;"	l
f01005ee	obj/kern/kernel.asm	/^f01005ee:	ee                   	out    %al,(%dx)$/;"	l
f01005ef	obj/kern/kernel.asm	/^f01005ef:	0f b7 1d 28 d2 20 f0 	movzwl 0xf020d228,%ebx$/;"	l
f01005f6	obj/kern/kernel.asm	/^f01005f6:	8d 71 01             	lea    0x1(%ecx),%esi$/;"	l
f01005f9	obj/kern/kernel.asm	/^f01005f9:	89 d8                	mov    %ebx,%eax$/;"	l
f01005fb	obj/kern/kernel.asm	/^f01005fb:	66 c1 e8 08          	shr    $0x8,%ax$/;"	l
f01005ff	obj/kern/kernel.asm	/^f01005ff:	89 f2                	mov    %esi,%edx$/;"	l
f0100601	obj/kern/kernel.asm	/^f0100601:	ee                   	out    %al,(%dx)$/;"	l
f0100602	obj/kern/kernel.asm	/^f0100602:	b8 0f 00 00 00       	mov    $0xf,%eax$/;"	l
f0100607	obj/kern/kernel.asm	/^f0100607:	89 ca                	mov    %ecx,%edx$/;"	l
f0100609	obj/kern/kernel.asm	/^f0100609:	ee                   	out    %al,(%dx)$/;"	l
f010060a	obj/kern/kernel.asm	/^f010060a:	89 d8                	mov    %ebx,%eax$/;"	l
f010060c	obj/kern/kernel.asm	/^f010060c:	89 f2                	mov    %esi,%edx$/;"	l
f010060e	obj/kern/kernel.asm	/^f010060e:	ee                   	out    %al,(%dx)$/;"	l
f010060f	obj/kern/kernel.asm	/^f010060f:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0100612	obj/kern/kernel.asm	/^f0100612:	5b                   	pop    %ebx$/;"	l
f0100613	obj/kern/kernel.asm	/^f0100613:	5e                   	pop    %esi$/;"	l
f0100614	obj/kern/kernel.asm	/^f0100614:	5f                   	pop    %edi$/;"	l
f0100615	obj/kern/kernel.asm	/^f0100615:	5d                   	pop    %ebp$/;"	l
f0100616	obj/kern/kernel.asm	/^f0100616:	c3                   	ret    $/;"	l
f0100617	obj/kern/kernel.asm	/^f0100617 <serial_intr>:$/;"	l
f0100617	obj/kern/kernel.asm	/^f0100617:	80 3d 34 d2 20 f0 00 	cmpb   $0x0,0xf020d234$/;"	l
f010061e	obj/kern/kernel.asm	/^f010061e:	74 11                	je     f0100631 <serial_intr+0x1a>$/;"	l
f0100620	obj/kern/kernel.asm	/^f0100620:	55                   	push   %ebp$/;"	l
f0100621	obj/kern/kernel.asm	/^f0100621:	89 e5                	mov    %esp,%ebp$/;"	l
f0100623	obj/kern/kernel.asm	/^f0100623:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100626	obj/kern/kernel.asm	/^f0100626:	b8 d0 02 10 f0       	mov    $0xf01002d0,%eax$/;"	l
f010062b	obj/kern/kernel.asm	/^f010062b:	e8 bc fc ff ff       	call   f01002ec <cons_intr>$/;"	l
f0100630	obj/kern/kernel.asm	/^f0100630:	c9                   	leave  $/;"	l
f0100631	obj/kern/kernel.asm	/^f0100631:	f3 c3                	repz ret $/;"	l
f0100633	obj/kern/kernel.asm	/^f0100633 <kbd_intr>:$/;"	l
f0100633	obj/kern/kernel.asm	/^f0100633:	55                   	push   %ebp$/;"	l
f0100634	obj/kern/kernel.asm	/^f0100634:	89 e5                	mov    %esp,%ebp$/;"	l
f0100636	obj/kern/kernel.asm	/^f0100636:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100639	obj/kern/kernel.asm	/^f0100639:	b8 30 03 10 f0       	mov    $0xf0100330,%eax$/;"	l
f010063e	obj/kern/kernel.asm	/^f010063e:	e8 a9 fc ff ff       	call   f01002ec <cons_intr>$/;"	l
f0100643	obj/kern/kernel.asm	/^f0100643:	c9                   	leave  $/;"	l
f0100644	obj/kern/kernel.asm	/^f0100644:	c3                   	ret    $/;"	l
f0100645	obj/kern/kernel.asm	/^f0100645 <cons_getc>:$/;"	l
f0100645	obj/kern/kernel.asm	/^f0100645:	55                   	push   %ebp$/;"	l
f0100646	obj/kern/kernel.asm	/^f0100646:	89 e5                	mov    %esp,%ebp$/;"	l
f0100648	obj/kern/kernel.asm	/^f0100648:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010064b	obj/kern/kernel.asm	/^f010064b:	e8 c7 ff ff ff       	call   f0100617 <serial_intr>$/;"	l
f0100650	obj/kern/kernel.asm	/^f0100650:	e8 de ff ff ff       	call   f0100633 <kbd_intr>$/;"	l
f0100655	obj/kern/kernel.asm	/^f0100655:	a1 20 d2 20 f0       	mov    0xf020d220,%eax$/;"	l
f010065a	obj/kern/kernel.asm	/^f010065a:	3b 05 24 d2 20 f0    	cmp    0xf020d224,%eax$/;"	l
f0100660	obj/kern/kernel.asm	/^f0100660:	74 26                	je     f0100688 <cons_getc+0x43>$/;"	l
f0100662	obj/kern/kernel.asm	/^f0100662:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
f0100665	obj/kern/kernel.asm	/^f0100665:	89 15 20 d2 20 f0    	mov    %edx,0xf020d220$/;"	l
f010066b	obj/kern/kernel.asm	/^f010066b:	0f b6 88 20 d0 20 f0 	movzbl -0xfdf2fe0(%eax),%ecx$/;"	l
f0100672	obj/kern/kernel.asm	/^f0100672:	89 c8                	mov    %ecx,%eax$/;"	l
f0100674	obj/kern/kernel.asm	/^f0100674:	81 fa 00 02 00 00    	cmp    $0x200,%edx$/;"	l
f010067a	obj/kern/kernel.asm	/^f010067a:	75 11                	jne    f010068d <cons_getc+0x48>$/;"	l
f010067c	obj/kern/kernel.asm	/^f010067c:	c7 05 20 d2 20 f0 00 	movl   $0x0,0xf020d220$/;"	l
f0100683	obj/kern/kernel.asm	/^f0100683:	00 00 00 $/;"	l
f0100686	obj/kern/kernel.asm	/^f0100686:	eb 05                	jmp    f010068d <cons_getc+0x48>$/;"	l
f0100688	obj/kern/kernel.asm	/^f0100688:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010068d	obj/kern/kernel.asm	/^f010068d:	c9                   	leave  $/;"	l
f010068e	obj/kern/kernel.asm	/^f010068e:	c3                   	ret    $/;"	l
f010068f	obj/kern/kernel.asm	/^f010068f <cons_init>:$/;"	l
f010068f	obj/kern/kernel.asm	/^f010068f:	55                   	push   %ebp$/;"	l
f0100690	obj/kern/kernel.asm	/^f0100690:	89 e5                	mov    %esp,%ebp$/;"	l
f0100692	obj/kern/kernel.asm	/^f0100692:	57                   	push   %edi$/;"	l
f0100693	obj/kern/kernel.asm	/^f0100693:	56                   	push   %esi$/;"	l
f0100694	obj/kern/kernel.asm	/^f0100694:	53                   	push   %ebx$/;"	l
f0100695	obj/kern/kernel.asm	/^f0100695:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0100698	obj/kern/kernel.asm	/^f0100698:	0f b7 15 00 80 0b f0 	movzwl 0xf00b8000,%edx$/;"	l
f010069f	obj/kern/kernel.asm	/^f010069f:	66 c7 05 00 80 0b f0 	movw   $0xa55a,0xf00b8000$/;"	l
f01006a6	obj/kern/kernel.asm	/^f01006a6:	5a a5 $/;"	l
f01006a8	obj/kern/kernel.asm	/^f01006a8:	0f b7 05 00 80 0b f0 	movzwl 0xf00b8000,%eax$/;"	l
f01006af	obj/kern/kernel.asm	/^f01006af:	66 3d 5a a5          	cmp    $0xa55a,%ax$/;"	l
f01006b3	obj/kern/kernel.asm	/^f01006b3:	74 11                	je     f01006c6 <cons_init+0x37>$/;"	l
f01006b5	obj/kern/kernel.asm	/^f01006b5:	c7 05 30 d2 20 f0 b4 	movl   $0x3b4,0xf020d230$/;"	l
f01006bc	obj/kern/kernel.asm	/^f01006bc:	03 00 00 $/;"	l
f01006bf	obj/kern/kernel.asm	/^f01006bf:	bf 00 00 0b f0       	mov    $0xf00b0000,%edi$/;"	l
f01006c4	obj/kern/kernel.asm	/^f01006c4:	eb 16                	jmp    f01006dc <cons_init+0x4d>$/;"	l
f01006c6	obj/kern/kernel.asm	/^f01006c6:	66 89 15 00 80 0b f0 	mov    %dx,0xf00b8000$/;"	l
f01006cd	obj/kern/kernel.asm	/^f01006cd:	c7 05 30 d2 20 f0 d4 	movl   $0x3d4,0xf020d230$/;"	l
f01006d4	obj/kern/kernel.asm	/^f01006d4:	03 00 00 $/;"	l
f01006d7	obj/kern/kernel.asm	/^f01006d7:	bf 00 80 0b f0       	mov    $0xf00b8000,%edi$/;"	l
f01006dc	obj/kern/kernel.asm	/^f01006dc:	8b 0d 30 d2 20 f0    	mov    0xf020d230,%ecx$/;"	l
f01006e2	obj/kern/kernel.asm	/^f01006e2:	b8 0e 00 00 00       	mov    $0xe,%eax$/;"	l
f01006e7	obj/kern/kernel.asm	/^f01006e7:	89 ca                	mov    %ecx,%edx$/;"	l
f01006e9	obj/kern/kernel.asm	/^f01006e9:	ee                   	out    %al,(%dx)$/;"	l
f01006ea	obj/kern/kernel.asm	/^f01006ea:	8d 59 01             	lea    0x1(%ecx),%ebx$/;"	l
f01006ed	obj/kern/kernel.asm	/^f01006ed:	89 da                	mov    %ebx,%edx$/;"	l
f01006ef	obj/kern/kernel.asm	/^f01006ef:	ec                   	in     (%dx),%al$/;"	l
f01006f0	obj/kern/kernel.asm	/^f01006f0:	0f b6 f0             	movzbl %al,%esi$/;"	l
f01006f3	obj/kern/kernel.asm	/^f01006f3:	c1 e6 08             	shl    $0x8,%esi$/;"	l
f01006f6	obj/kern/kernel.asm	/^f01006f6:	b8 0f 00 00 00       	mov    $0xf,%eax$/;"	l
f01006fb	obj/kern/kernel.asm	/^f01006fb:	89 ca                	mov    %ecx,%edx$/;"	l
f01006fd	obj/kern/kernel.asm	/^f01006fd:	ee                   	out    %al,(%dx)$/;"	l
f01006fe	obj/kern/kernel.asm	/^f01006fe:	89 da                	mov    %ebx,%edx$/;"	l
f0100700	obj/kern/kernel.asm	/^f0100700:	ec                   	in     (%dx),%al$/;"	l
f0100701	obj/kern/kernel.asm	/^f0100701:	89 3d 2c d2 20 f0    	mov    %edi,0xf020d22c$/;"	l
f0100707	obj/kern/kernel.asm	/^f0100707:	0f b6 d8             	movzbl %al,%ebx$/;"	l
f010070a	obj/kern/kernel.asm	/^f010070a:	09 de                	or     %ebx,%esi$/;"	l
f010070c	obj/kern/kernel.asm	/^f010070c:	66 89 35 28 d2 20 f0 	mov    %si,0xf020d228$/;"	l
f0100713	obj/kern/kernel.asm	/^f0100713:	e8 1b ff ff ff       	call   f0100633 <kbd_intr>$/;"	l
f0100718	obj/kern/kernel.asm	/^f0100718:	0f b7 05 a8 33 12 f0 	movzwl 0xf01233a8,%eax$/;"	l
f010071f	obj/kern/kernel.asm	/^f010071f:	25 fd ff 00 00       	and    $0xfffd,%eax$/;"	l
f0100724	obj/kern/kernel.asm	/^f0100724:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100727	obj/kern/kernel.asm	/^f0100727:	e8 30 3b 00 00       	call   f010425c <irq_setmask_8259A>$/;"	l
f010072c	obj/kern/kernel.asm	/^f010072c:	be fa 03 00 00       	mov    $0x3fa,%esi$/;"	l
f0100731	obj/kern/kernel.asm	/^f0100731:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100736	obj/kern/kernel.asm	/^f0100736:	89 f2                	mov    %esi,%edx$/;"	l
f0100738	obj/kern/kernel.asm	/^f0100738:	ee                   	out    %al,(%dx)$/;"	l
f0100739	obj/kern/kernel.asm	/^f0100739:	b2 fb                	mov    $0xfb,%dl$/;"	l
f010073b	obj/kern/kernel.asm	/^f010073b:	b8 80 ff ff ff       	mov    $0xffffff80,%eax$/;"	l
f0100740	obj/kern/kernel.asm	/^f0100740:	ee                   	out    %al,(%dx)$/;"	l
f0100741	obj/kern/kernel.asm	/^f0100741:	bb f8 03 00 00       	mov    $0x3f8,%ebx$/;"	l
f0100746	obj/kern/kernel.asm	/^f0100746:	b8 0c 00 00 00       	mov    $0xc,%eax$/;"	l
f010074b	obj/kern/kernel.asm	/^f010074b:	89 da                	mov    %ebx,%edx$/;"	l
f010074d	obj/kern/kernel.asm	/^f010074d:	ee                   	out    %al,(%dx)$/;"	l
f010074e	obj/kern/kernel.asm	/^f010074e:	b2 f9                	mov    $0xf9,%dl$/;"	l
f0100750	obj/kern/kernel.asm	/^f0100750:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100755	obj/kern/kernel.asm	/^f0100755:	ee                   	out    %al,(%dx)$/;"	l
f0100756	obj/kern/kernel.asm	/^f0100756:	b2 fb                	mov    $0xfb,%dl$/;"	l
f0100758	obj/kern/kernel.asm	/^f0100758:	b8 03 00 00 00       	mov    $0x3,%eax$/;"	l
f010075d	obj/kern/kernel.asm	/^f010075d:	ee                   	out    %al,(%dx)$/;"	l
f010075e	obj/kern/kernel.asm	/^f010075e:	b2 fc                	mov    $0xfc,%dl$/;"	l
f0100760	obj/kern/kernel.asm	/^f0100760:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100765	obj/kern/kernel.asm	/^f0100765:	ee                   	out    %al,(%dx)$/;"	l
f0100766	obj/kern/kernel.asm	/^f0100766:	b2 f9                	mov    $0xf9,%dl$/;"	l
f0100768	obj/kern/kernel.asm	/^f0100768:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f010076d	obj/kern/kernel.asm	/^f010076d:	ee                   	out    %al,(%dx)$/;"	l
f010076e	obj/kern/kernel.asm	/^f010076e:	b2 fd                	mov    $0xfd,%dl$/;"	l
f0100770	obj/kern/kernel.asm	/^f0100770:	ec                   	in     (%dx),%al$/;"	l
f0100771	obj/kern/kernel.asm	/^f0100771:	3c ff                	cmp    $0xff,%al$/;"	l
f0100773	obj/kern/kernel.asm	/^f0100773:	0f 95 c1             	setne  %cl$/;"	l
f0100776	obj/kern/kernel.asm	/^f0100776:	88 0d 34 d2 20 f0    	mov    %cl,0xf020d234$/;"	l
f010077c	obj/kern/kernel.asm	/^f010077c:	89 f2                	mov    %esi,%edx$/;"	l
f010077e	obj/kern/kernel.asm	/^f010077e:	ec                   	in     (%dx),%al$/;"	l
f010077f	obj/kern/kernel.asm	/^f010077f:	89 da                	mov    %ebx,%edx$/;"	l
f0100781	obj/kern/kernel.asm	/^f0100781:	ec                   	in     (%dx),%al$/;"	l
f0100782	obj/kern/kernel.asm	/^f0100782:	84 c9                	test   %cl,%cl$/;"	l
f0100784	obj/kern/kernel.asm	/^f0100784:	74 1d                	je     f01007a3 <cons_init+0x114>$/;"	l
f0100786	obj/kern/kernel.asm	/^f0100786:	0f b7 05 a8 33 12 f0 	movzwl 0xf01233a8,%eax$/;"	l
f010078d	obj/kern/kernel.asm	/^f010078d:	25 ef ff 00 00       	and    $0xffef,%eax$/;"	l
f0100792	obj/kern/kernel.asm	/^f0100792:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100795	obj/kern/kernel.asm	/^f0100795:	e8 c2 3a 00 00       	call   f010425c <irq_setmask_8259A>$/;"	l
f010079a	obj/kern/kernel.asm	/^f010079a:	80 3d 34 d2 20 f0 00 	cmpb   $0x0,0xf020d234$/;"	l
f01007a1	obj/kern/kernel.asm	/^f01007a1:	75 0c                	jne    f01007af <cons_init+0x120>$/;"	l
f01007a3	obj/kern/kernel.asm	/^f01007a3:	c7 04 24 8f 77 10 f0 	movl   $0xf010778f,(%esp)$/;"	l
f01007aa	obj/kern/kernel.asm	/^f01007aa:	e8 ef 3b 00 00       	call   f010439e <cprintf>$/;"	l
f01007af	obj/kern/kernel.asm	/^f01007af:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f01007b2	obj/kern/kernel.asm	/^f01007b2:	5b                   	pop    %ebx$/;"	l
f01007b3	obj/kern/kernel.asm	/^f01007b3:	5e                   	pop    %esi$/;"	l
f01007b4	obj/kern/kernel.asm	/^f01007b4:	5f                   	pop    %edi$/;"	l
f01007b5	obj/kern/kernel.asm	/^f01007b5:	5d                   	pop    %ebp$/;"	l
f01007b6	obj/kern/kernel.asm	/^f01007b6:	c3                   	ret    $/;"	l
f01007b7	obj/kern/kernel.asm	/^f01007b7 <cputchar>:$/;"	l
f01007b7	obj/kern/kernel.asm	/^f01007b7:	55                   	push   %ebp$/;"	l
f01007b8	obj/kern/kernel.asm	/^f01007b8:	89 e5                	mov    %esp,%ebp$/;"	l
f01007ba	obj/kern/kernel.asm	/^f01007ba:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01007bd	obj/kern/kernel.asm	/^f01007bd:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01007c0	obj/kern/kernel.asm	/^f01007c0:	e8 74 fc ff ff       	call   f0100439 <cons_putc>$/;"	l
f01007c5	obj/kern/kernel.asm	/^f01007c5:	c9                   	leave  $/;"	l
f01007c6	obj/kern/kernel.asm	/^f01007c6:	c3                   	ret    $/;"	l
f01007c7	obj/kern/kernel.asm	/^f01007c7 <getchar>:$/;"	l
f01007c7	obj/kern/kernel.asm	/^f01007c7:	55                   	push   %ebp$/;"	l
f01007c8	obj/kern/kernel.asm	/^f01007c8:	89 e5                	mov    %esp,%ebp$/;"	l
f01007ca	obj/kern/kernel.asm	/^f01007ca:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01007cd	obj/kern/kernel.asm	/^f01007cd:	e8 73 fe ff ff       	call   f0100645 <cons_getc>$/;"	l
f01007d2	obj/kern/kernel.asm	/^f01007d2:	85 c0                	test   %eax,%eax$/;"	l
f01007d4	obj/kern/kernel.asm	/^f01007d4:	74 f7                	je     f01007cd <getchar+0x6>$/;"	l
f01007d6	obj/kern/kernel.asm	/^f01007d6:	c9                   	leave  $/;"	l
f01007d7	obj/kern/kernel.asm	/^f01007d7:	c3                   	ret    $/;"	l
f01007d8	obj/kern/kernel.asm	/^f01007d8 <iscons>:$/;"	l
f01007d8	obj/kern/kernel.asm	/^f01007d8:	55                   	push   %ebp$/;"	l
f01007d9	obj/kern/kernel.asm	/^f01007d9:	89 e5                	mov    %esp,%ebp$/;"	l
f01007db	obj/kern/kernel.asm	/^f01007db:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f01007e0	obj/kern/kernel.asm	/^f01007e0:	5d                   	pop    %ebp$/;"	l
f01007e1	obj/kern/kernel.asm	/^f01007e1:	c3                   	ret    $/;"	l
f01007e2	obj/kern/kernel.asm	/^f01007e2:	66 90                	xchg   %ax,%ax$/;"	l
f01007e4	obj/kern/kernel.asm	/^f01007e4:	66 90                	xchg   %ax,%ax$/;"	l
f01007e6	obj/kern/kernel.asm	/^f01007e6:	66 90                	xchg   %ax,%ax$/;"	l
f01007e8	obj/kern/kernel.asm	/^f01007e8:	66 90                	xchg   %ax,%ax$/;"	l
f01007ea	obj/kern/kernel.asm	/^f01007ea:	66 90                	xchg   %ax,%ax$/;"	l
f01007ec	obj/kern/kernel.asm	/^f01007ec:	66 90                	xchg   %ax,%ax$/;"	l
f01007ee	obj/kern/kernel.asm	/^f01007ee:	66 90                	xchg   %ax,%ax$/;"	l
f01007f0	obj/kern/kernel.asm	/^f01007f0 <mon_exit>:$/;"	l
f01007f0	obj/kern/kernel.asm	/^f01007f0:	55                   	push   %ebp$/;"	l
f01007f1	obj/kern/kernel.asm	/^f01007f1:	89 e5                	mov    %esp,%ebp$/;"	l
f01007f3	obj/kern/kernel.asm	/^f01007f3:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f01007f8	obj/kern/kernel.asm	/^f01007f8:	5d                   	pop    %ebp$/;"	l
f01007f9	obj/kern/kernel.asm	/^f01007f9:	c3                   	ret    $/;"	l
f01007fa	obj/kern/kernel.asm	/^f01007fa <mon_help>:$/;"	l
f01007fa	obj/kern/kernel.asm	/^f01007fa:	55                   	push   %ebp$/;"	l
f01007fb	obj/kern/kernel.asm	/^f01007fb:	89 e5                	mov    %esp,%ebp$/;"	l
f01007fd	obj/kern/kernel.asm	/^f01007fd:	56                   	push   %esi$/;"	l
f01007fe	obj/kern/kernel.asm	/^f01007fe:	53                   	push   %ebx$/;"	l
f01007ff	obj/kern/kernel.asm	/^f01007ff:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0100802	obj/kern/kernel.asm	/^f0100802:	bb 04 7e 10 f0       	mov    $0xf0107e04,%ebx$/;"	l
f0100807	obj/kern/kernel.asm	/^f0100807:	be 58 7e 10 f0       	mov    $0xf0107e58,%esi$/;"	l
f010080c	obj/kern/kernel.asm	/^f010080c:	8b 03                	mov    (%ebx),%eax$/;"	l
f010080e	obj/kern/kernel.asm	/^f010080e:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0100812	obj/kern/kernel.asm	/^f0100812:	8b 43 fc             	mov    -0x4(%ebx),%eax$/;"	l
f0100815	obj/kern/kernel.asm	/^f0100815:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100819	obj/kern/kernel.asm	/^f0100819:	c7 04 24 e0 79 10 f0 	movl   $0xf01079e0,(%esp)$/;"	l
f0100820	obj/kern/kernel.asm	/^f0100820:	e8 79 3b 00 00       	call   f010439e <cprintf>$/;"	l
f0100825	obj/kern/kernel.asm	/^f0100825:	83 c3 0c             	add    $0xc,%ebx$/;"	l
f0100828	obj/kern/kernel.asm	/^f0100828:	39 f3                	cmp    %esi,%ebx$/;"	l
f010082a	obj/kern/kernel.asm	/^f010082a:	75 e0                	jne    f010080c <mon_help+0x12>$/;"	l
f010082c	obj/kern/kernel.asm	/^f010082c:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100831	obj/kern/kernel.asm	/^f0100831:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100834	obj/kern/kernel.asm	/^f0100834:	5b                   	pop    %ebx$/;"	l
f0100835	obj/kern/kernel.asm	/^f0100835:	5e                   	pop    %esi$/;"	l
f0100836	obj/kern/kernel.asm	/^f0100836:	5d                   	pop    %ebp$/;"	l
f0100837	obj/kern/kernel.asm	/^f0100837:	c3                   	ret    $/;"	l
f0100838	obj/kern/kernel.asm	/^f0100838 <mon_kerninfo>:$/;"	l
f0100838	obj/kern/kernel.asm	/^f0100838:	55                   	push   %ebp$/;"	l
f0100839	obj/kern/kernel.asm	/^f0100839:	89 e5                	mov    %esp,%ebp$/;"	l
f010083b	obj/kern/kernel.asm	/^f010083b:	83 ec 18             	sub    $0x18,%esp$/;"	l
f010083e	obj/kern/kernel.asm	/^f010083e:	c7 04 24 e9 79 10 f0 	movl   $0xf01079e9,(%esp)$/;"	l
f0100845	obj/kern/kernel.asm	/^f0100845:	e8 54 3b 00 00       	call   f010439e <cprintf>$/;"	l
f010084a	obj/kern/kernel.asm	/^f010084a:	c7 44 24 04 0c 00 10 	movl   $0x10000c,0x4(%esp)$/;"	l
f0100851	obj/kern/kernel.asm	/^f0100851:	00 $/;"	l
f0100852	obj/kern/kernel.asm	/^f0100852:	c7 04 24 40 7b 10 f0 	movl   $0xf0107b40,(%esp)$/;"	l
f0100859	obj/kern/kernel.asm	/^f0100859:	e8 40 3b 00 00       	call   f010439e <cprintf>$/;"	l
f010085e	obj/kern/kernel.asm	/^f010085e:	c7 44 24 08 0c 00 10 	movl   $0x10000c,0x8(%esp)$/;"	l
f0100865	obj/kern/kernel.asm	/^f0100865:	00 $/;"	l
f0100866	obj/kern/kernel.asm	/^f0100866:	c7 44 24 04 0c 00 10 	movl   $0xf010000c,0x4(%esp)$/;"	l
f010086d	obj/kern/kernel.asm	/^f010086d:	f0 $/;"	l
f010086e	obj/kern/kernel.asm	/^f010086e:	c7 04 24 68 7b 10 f0 	movl   $0xf0107b68,(%esp)$/;"	l
f0100875	obj/kern/kernel.asm	/^f0100875:	e8 24 3b 00 00       	call   f010439e <cprintf>$/;"	l
f010087a	obj/kern/kernel.asm	/^f010087a:	c7 44 24 08 b7 76 10 	movl   $0x1076b7,0x8(%esp)$/;"	l
f0100881	obj/kern/kernel.asm	/^f0100881:	00 $/;"	l
f0100882	obj/kern/kernel.asm	/^f0100882:	c7 44 24 04 b7 76 10 	movl   $0xf01076b7,0x4(%esp)$/;"	l
f0100889	obj/kern/kernel.asm	/^f0100889:	f0 $/;"	l
f010088a	obj/kern/kernel.asm	/^f010088a:	c7 04 24 8c 7b 10 f0 	movl   $0xf0107b8c,(%esp)$/;"	l
f0100891	obj/kern/kernel.asm	/^f0100891:	e8 08 3b 00 00       	call   f010439e <cprintf>$/;"	l
f0100896	obj/kern/kernel.asm	/^f0100896:	c7 44 24 08 89 c4 20 	movl   $0x20c489,0x8(%esp)$/;"	l
f010089d	obj/kern/kernel.asm	/^f010089d:	00 $/;"	l
f010089e	obj/kern/kernel.asm	/^f010089e:	c7 44 24 04 89 c4 20 	movl   $0xf020c489,0x4(%esp)$/;"	l
f01008a5	obj/kern/kernel.asm	/^f01008a5:	f0 $/;"	l
f01008a6	obj/kern/kernel.asm	/^f01008a6:	c7 04 24 b0 7b 10 f0 	movl   $0xf0107bb0,(%esp)$/;"	l
f01008ad	obj/kern/kernel.asm	/^f01008ad:	e8 ec 3a 00 00       	call   f010439e <cprintf>$/;"	l
f01008b2	obj/kern/kernel.asm	/^f01008b2:	c7 44 24 08 08 f0 24 	movl   $0x24f008,0x8(%esp)$/;"	l
f01008b9	obj/kern/kernel.asm	/^f01008b9:	00 $/;"	l
f01008ba	obj/kern/kernel.asm	/^f01008ba:	c7 44 24 04 08 f0 24 	movl   $0xf024f008,0x4(%esp)$/;"	l
f01008c1	obj/kern/kernel.asm	/^f01008c1:	f0 $/;"	l
f01008c2	obj/kern/kernel.asm	/^f01008c2:	c7 04 24 d4 7b 10 f0 	movl   $0xf0107bd4,(%esp)$/;"	l
f01008c9	obj/kern/kernel.asm	/^f01008c9:	e8 d0 3a 00 00       	call   f010439e <cprintf>$/;"	l
f01008ce	obj/kern/kernel.asm	/^f01008ce:	b8 07 f4 24 f0       	mov    $0xf024f407,%eax$/;"	l
f01008d3	obj/kern/kernel.asm	/^f01008d3:	2d 0c 00 10 f0       	sub    $0xf010000c,%eax$/;"	l
f01008d8	obj/kern/kernel.asm	/^f01008d8:	25 00 fc ff ff       	and    $0xfffffc00,%eax$/;"	l
f01008dd	obj/kern/kernel.asm	/^f01008dd:	8d 90 ff 03 00 00    	lea    0x3ff(%eax),%edx$/;"	l
f01008e3	obj/kern/kernel.asm	/^f01008e3:	85 c0                	test   %eax,%eax$/;"	l
f01008e5	obj/kern/kernel.asm	/^f01008e5:	0f 48 c2             	cmovs  %edx,%eax$/;"	l
f01008e8	obj/kern/kernel.asm	/^f01008e8:	c1 f8 0a             	sar    $0xa,%eax$/;"	l
f01008eb	obj/kern/kernel.asm	/^f01008eb:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01008ef	obj/kern/kernel.asm	/^f01008ef:	c7 04 24 f8 7b 10 f0 	movl   $0xf0107bf8,(%esp)$/;"	l
f01008f6	obj/kern/kernel.asm	/^f01008f6:	e8 a3 3a 00 00       	call   f010439e <cprintf>$/;"	l
f01008fb	obj/kern/kernel.asm	/^f01008fb:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100900	obj/kern/kernel.asm	/^f0100900:	c9                   	leave  $/;"	l
f0100901	obj/kern/kernel.asm	/^f0100901:	c3                   	ret    $/;"	l
f0100902	obj/kern/kernel.asm	/^f0100902 <dump_contents_v>:$/;"	l
f0100902	obj/kern/kernel.asm	/^f0100902:	55                   	push   %ebp$/;"	l
f0100903	obj/kern/kernel.asm	/^f0100903:	89 e5                	mov    %esp,%ebp$/;"	l
f0100905	obj/kern/kernel.asm	/^f0100905:	57                   	push   %edi$/;"	l
f0100906	obj/kern/kernel.asm	/^f0100906:	56                   	push   %esi$/;"	l
f0100907	obj/kern/kernel.asm	/^f0100907:	53                   	push   %ebx$/;"	l
f0100908	obj/kern/kernel.asm	/^f0100908:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f010090b	obj/kern/kernel.asm	/^f010090b:	89 c3                	mov    %eax,%ebx$/;"	l
f010090d	obj/kern/kernel.asm	/^f010090d:	89 d7                	mov    %edx,%edi$/;"	l
f010090f	obj/kern/kernel.asm	/^f010090f:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f0100914	obj/kern/kernel.asm	/^f0100914:	eb 5b                	jmp    f0100971 <dump_contents_v+0x6f>$/;"	l
f0100916	obj/kern/kernel.asm	/^f0100916:	85 f6                	test   %esi,%esi$/;"	l
f0100918	obj/kern/kernel.asm	/^f0100918:	75 29                	jne    f0100943 <dump_contents_v+0x41>$/;"	l
f010091a	obj/kern/kernel.asm	/^f010091a:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f010091e	obj/kern/kernel.asm	/^f010091e:	c7 04 24 02 7a 10 f0 	movl   $0xf0107a02,(%esp)$/;"	l
f0100925	obj/kern/kernel.asm	/^f0100925:	e8 74 3a 00 00       	call   f010439e <cprintf>$/;"	l
f010092a	obj/kern/kernel.asm	/^f010092a:	0f b6 03             	movzbl (%ebx),%eax$/;"	l
f010092d	obj/kern/kernel.asm	/^f010092d:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100931	obj/kern/kernel.asm	/^f0100931:	c7 04 24 08 7a 10 f0 	movl   $0xf0107a08,(%esp)$/;"	l
f0100938	obj/kern/kernel.asm	/^f0100938:	e8 61 3a 00 00       	call   f010439e <cprintf>$/;"	l
f010093d	obj/kern/kernel.asm	/^f010093d:	66 be 01 00          	mov    $0x1,%si$/;"	l
f0100941	obj/kern/kernel.asm	/^f0100941:	eb 2b                	jmp    f010096e <dump_contents_v+0x6c>$/;"	l
f0100943	obj/kern/kernel.asm	/^f0100943:	0f b6 03             	movzbl (%ebx),%eax$/;"	l
f0100946	obj/kern/kernel.asm	/^f0100946:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010094a	obj/kern/kernel.asm	/^f010094a:	c7 04 24 08 7a 10 f0 	movl   $0xf0107a08,(%esp)$/;"	l
f0100951	obj/kern/kernel.asm	/^f0100951:	e8 48 3a 00 00       	call   f010439e <cprintf>$/;"	l
f0100956	obj/kern/kernel.asm	/^f0100956:	83 c6 01             	add    $0x1,%esi$/;"	l
f0100959	obj/kern/kernel.asm	/^f0100959:	83 fe 10             	cmp    $0x10,%esi$/;"	l
f010095c	obj/kern/kernel.asm	/^f010095c:	75 10                	jne    f010096e <dump_contents_v+0x6c>$/;"	l
f010095e	obj/kern/kernel.asm	/^f010095e:	c7 04 24 88 8a 10 f0 	movl   $0xf0108a88,(%esp)$/;"	l
f0100965	obj/kern/kernel.asm	/^f0100965:	e8 34 3a 00 00       	call   f010439e <cprintf>$/;"	l
f010096a	obj/kern/kernel.asm	/^f010096a:	66 be 00 00          	mov    $0x0,%si$/;"	l
f010096e	obj/kern/kernel.asm	/^f010096e:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0100971	obj/kern/kernel.asm	/^f0100971:	39 fb                	cmp    %edi,%ebx$/;"	l
f0100973	obj/kern/kernel.asm	/^f0100973:	72 a1                	jb     f0100916 <dump_contents_v+0x14>$/;"	l
f0100975	obj/kern/kernel.asm	/^f0100975:	85 f6                	test   %esi,%esi$/;"	l
f0100977	obj/kern/kernel.asm	/^f0100977:	74 0c                	je     f0100985 <dump_contents_v+0x83>$/;"	l
f0100979	obj/kern/kernel.asm	/^f0100979:	c7 04 24 88 8a 10 f0 	movl   $0xf0108a88,(%esp)$/;"	l
f0100980	obj/kern/kernel.asm	/^f0100980:	e8 19 3a 00 00       	call   f010439e <cprintf>$/;"	l
f0100985	obj/kern/kernel.asm	/^f0100985:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0100988	obj/kern/kernel.asm	/^f0100988:	5b                   	pop    %ebx$/;"	l
f0100989	obj/kern/kernel.asm	/^f0100989:	5e                   	pop    %esi$/;"	l
f010098a	obj/kern/kernel.asm	/^f010098a:	5f                   	pop    %edi$/;"	l
f010098b	obj/kern/kernel.asm	/^f010098b:	5d                   	pop    %ebp$/;"	l
f010098c	obj/kern/kernel.asm	/^f010098c:	c3                   	ret    $/;"	l
f010098d	obj/kern/kernel.asm	/^f010098d <mon_backtrace>:$/;"	l
f010098d	obj/kern/kernel.asm	/^f010098d:	55                   	push   %ebp$/;"	l
f010098e	obj/kern/kernel.asm	/^f010098e:	89 e5                	mov    %esp,%ebp$/;"	l
f0100990	obj/kern/kernel.asm	/^f0100990:	57                   	push   %edi$/;"	l
f0100991	obj/kern/kernel.asm	/^f0100991:	56                   	push   %esi$/;"	l
f0100992	obj/kern/kernel.asm	/^f0100992:	53                   	push   %ebx$/;"	l
f0100993	obj/kern/kernel.asm	/^f0100993:	83 ec 4c             	sub    $0x4c,%esp$/;"	l
f0100996	obj/kern/kernel.asm	/^f0100996:	89 ee                	mov    %ebp,%esi$/;"	l
f0100998	obj/kern/kernel.asm	/^f0100998:	c7 04 24 0e 7a 10 f0 	movl   $0xf0107a0e,(%esp)$/;"	l
f010099f	obj/kern/kernel.asm	/^f010099f:	e8 fa 39 00 00       	call   f010439e <cprintf>$/;"	l
f01009a4	obj/kern/kernel.asm	/^f01009a4:	e9 8a 00 00 00       	jmp    f0100a33 <mon_backtrace+0xa6>$/;"	l
f01009a9	obj/kern/kernel.asm	/^f01009a9:	8b 46 04             	mov    0x4(%esi),%eax$/;"	l
f01009ac	obj/kern/kernel.asm	/^f01009ac:	89 45 c4             	mov    %eax,-0x3c(%ebp)$/;"	l
f01009af	obj/kern/kernel.asm	/^f01009af:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f01009b3	obj/kern/kernel.asm	/^f01009b3:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f01009b7	obj/kern/kernel.asm	/^f01009b7:	c7 04 24 20 7a 10 f0 	movl   $0xf0107a20,(%esp)$/;"	l
f01009be	obj/kern/kernel.asm	/^f01009be:	e8 db 39 00 00       	call   f010439e <cprintf>$/;"	l
f01009c3	obj/kern/kernel.asm	/^f01009c3:	8d 5e 08             	lea    0x8(%esi),%ebx$/;"	l
f01009c6	obj/kern/kernel.asm	/^f01009c6:	8d 7e 1c             	lea    0x1c(%esi),%edi$/;"	l
f01009c9	obj/kern/kernel.asm	/^f01009c9:	8b 03                	mov    (%ebx),%eax$/;"	l
f01009cb	obj/kern/kernel.asm	/^f01009cb:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01009cf	obj/kern/kernel.asm	/^f01009cf:	c7 04 24 3b 7a 10 f0 	movl   $0xf0107a3b,(%esp)$/;"	l
f01009d6	obj/kern/kernel.asm	/^f01009d6:	e8 c3 39 00 00       	call   f010439e <cprintf>$/;"	l
f01009db	obj/kern/kernel.asm	/^f01009db:	83 c3 04             	add    $0x4,%ebx$/;"	l
f01009de	obj/kern/kernel.asm	/^f01009de:	39 fb                	cmp    %edi,%ebx$/;"	l
f01009e0	obj/kern/kernel.asm	/^f01009e0:	75 e7                	jne    f01009c9 <mon_backtrace+0x3c>$/;"	l
f01009e2	obj/kern/kernel.asm	/^f01009e2:	c7 04 24 88 8a 10 f0 	movl   $0xf0108a88,(%esp)$/;"	l
f01009e9	obj/kern/kernel.asm	/^f01009e9:	e8 b0 39 00 00       	call   f010439e <cprintf>$/;"	l
f01009ee	obj/kern/kernel.asm	/^f01009ee:	8d 45 d0             	lea    -0x30(%ebp),%eax$/;"	l
f01009f1	obj/kern/kernel.asm	/^f01009f1:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01009f5	obj/kern/kernel.asm	/^f01009f5:	8b 7d c4             	mov    -0x3c(%ebp),%edi$/;"	l
f01009f8	obj/kern/kernel.asm	/^f01009f8:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f01009fb	obj/kern/kernel.asm	/^f01009fb:	e8 52 54 00 00       	call   f0105e52 <debuginfo_eip>$/;"	l
f0100a00	obj/kern/kernel.asm	/^f0100a00:	89 f8                	mov    %edi,%eax$/;"	l
f0100a02	obj/kern/kernel.asm	/^f0100a02:	2b 45 e0             	sub    -0x20(%ebp),%eax$/;"	l
f0100a05	obj/kern/kernel.asm	/^f0100a05:	89 44 24 14          	mov    %eax,0x14(%esp)$/;"	l
f0100a09	obj/kern/kernel.asm	/^f0100a09:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
f0100a0c	obj/kern/kernel.asm	/^f0100a0c:	89 44 24 10          	mov    %eax,0x10(%esp)$/;"	l
f0100a10	obj/kern/kernel.asm	/^f0100a10:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f0100a13	obj/kern/kernel.asm	/^f0100a13:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0100a17	obj/kern/kernel.asm	/^f0100a17:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0100a1a	obj/kern/kernel.asm	/^f0100a1a:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0100a1e	obj/kern/kernel.asm	/^f0100a1e:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
f0100a21	obj/kern/kernel.asm	/^f0100a21:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100a25	obj/kern/kernel.asm	/^f0100a25:	c7 04 24 41 7a 10 f0 	movl   $0xf0107a41,(%esp)$/;"	l
f0100a2c	obj/kern/kernel.asm	/^f0100a2c:	e8 6d 39 00 00       	call   f010439e <cprintf>$/;"	l
f0100a31	obj/kern/kernel.asm	/^f0100a31:	8b 36                	mov    (%esi),%esi$/;"	l
f0100a33	obj/kern/kernel.asm	/^f0100a33:	85 f6                	test   %esi,%esi$/;"	l
f0100a35	obj/kern/kernel.asm	/^f0100a35:	0f 85 6e ff ff ff    	jne    f01009a9 <mon_backtrace+0x1c>$/;"	l
f0100a3b	obj/kern/kernel.asm	/^f0100a3b:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100a40	obj/kern/kernel.asm	/^f0100a40:	83 c4 4c             	add    $0x4c,%esp$/;"	l
f0100a43	obj/kern/kernel.asm	/^f0100a43:	5b                   	pop    %ebx$/;"	l
f0100a44	obj/kern/kernel.asm	/^f0100a44:	5e                   	pop    %esi$/;"	l
f0100a45	obj/kern/kernel.asm	/^f0100a45:	5f                   	pop    %edi$/;"	l
f0100a46	obj/kern/kernel.asm	/^f0100a46:	5d                   	pop    %ebp$/;"	l
f0100a47	obj/kern/kernel.asm	/^f0100a47:	c3                   	ret    $/;"	l
f0100a48	obj/kern/kernel.asm	/^f0100a48 <str2addr>:$/;"	l
f0100a48	obj/kern/kernel.asm	/^f0100a48:	55                   	push   %ebp$/;"	l
f0100a49	obj/kern/kernel.asm	/^f0100a49:	89 e5                	mov    %esp,%ebp$/;"	l
f0100a4b	obj/kern/kernel.asm	/^f0100a4b:	56                   	push   %esi$/;"	l
f0100a4c	obj/kern/kernel.asm	/^f0100a4c:	53                   	push   %ebx$/;"	l
f0100a4d	obj/kern/kernel.asm	/^f0100a4d:	83 ec 20             	sub    $0x20,%esp$/;"	l
f0100a50	obj/kern/kernel.asm	/^f0100a50:	89 c3                	mov    %eax,%ebx$/;"	l
f0100a52	obj/kern/kernel.asm	/^f0100a52:	89 d6                	mov    %edx,%esi$/;"	l
f0100a54	obj/kern/kernel.asm	/^f0100a54:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
f0100a57	obj/kern/kernel.asm	/^f0100a57:	c7 44 24 08 10 00 00 	movl   $0x10,0x8(%esp)$/;"	l
f0100a5e	obj/kern/kernel.asm	/^f0100a5e:	00 $/;"	l
f0100a5f	obj/kern/kernel.asm	/^f0100a5f:	8d 45 f4             	lea    -0xc(%ebp),%eax$/;"	l
f0100a62	obj/kern/kernel.asm	/^f0100a62:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100a66	obj/kern/kernel.asm	/^f0100a66:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0100a69	obj/kern/kernel.asm	/^f0100a69:	e8 55 60 00 00       	call   f0106ac3 <strtol>$/;"	l
f0100a6e	obj/kern/kernel.asm	/^f0100a6e:	89 06                	mov    %eax,(%esi)$/;"	l
f0100a70	obj/kern/kernel.asm	/^f0100a70:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0100a73	obj/kern/kernel.asm	/^f0100a73:	e8 98 5d 00 00       	call   f0106810 <strlen>$/;"	l
f0100a78	obj/kern/kernel.asm	/^f0100a78:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
f0100a7b	obj/kern/kernel.asm	/^f0100a7b:	29 da                	sub    %ebx,%edx$/;"	l
f0100a7d	obj/kern/kernel.asm	/^f0100a7d:	39 d0                	cmp    %edx,%eax$/;"	l
f0100a7f	obj/kern/kernel.asm	/^f0100a7f:	0f 94 c0             	sete   %al$/;"	l
f0100a82	obj/kern/kernel.asm	/^f0100a82:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0100a85	obj/kern/kernel.asm	/^f0100a85:	83 c4 20             	add    $0x20,%esp$/;"	l
f0100a88	obj/kern/kernel.asm	/^f0100a88:	5b                   	pop    %ebx$/;"	l
f0100a89	obj/kern/kernel.asm	/^f0100a89:	5e                   	pop    %esi$/;"	l
f0100a8a	obj/kern/kernel.asm	/^f0100a8a:	5d                   	pop    %ebp$/;"	l
f0100a8b	obj/kern/kernel.asm	/^f0100a8b:	c3                   	ret    $/;"	l
f0100a8c	obj/kern/kernel.asm	/^f0100a8c <show_mapping>:$/;"	l
f0100a8c	obj/kern/kernel.asm	/^f0100a8c:	55                   	push   %ebp$/;"	l
f0100a8d	obj/kern/kernel.asm	/^f0100a8d:	89 e5                	mov    %esp,%ebp$/;"	l
f0100a8f	obj/kern/kernel.asm	/^f0100a8f:	53                   	push   %ebx$/;"	l
f0100a90	obj/kern/kernel.asm	/^f0100a90:	83 ec 24             	sub    $0x24,%esp$/;"	l
f0100a93	obj/kern/kernel.asm	/^f0100a93:	89 c3                	mov    %eax,%ebx$/;"	l
f0100a95	obj/kern/kernel.asm	/^f0100a95:	8d 45 f4             	lea    -0xc(%ebp),%eax$/;"	l
f0100a98	obj/kern/kernel.asm	/^f0100a98:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0100a9c	obj/kern/kernel.asm	/^f0100a9c:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0100aa0	obj/kern/kernel.asm	/^f0100aa0:	a1 8c de 20 f0       	mov    0xf020de8c,%eax$/;"	l
f0100aa5	obj/kern/kernel.asm	/^f0100aa5:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100aa8	obj/kern/kernel.asm	/^f0100aa8:	e8 5f 0c 00 00       	call   f010170c <page_lookup>$/;"	l
f0100aad	obj/kern/kernel.asm	/^f0100aad:	85 c0                	test   %eax,%eax$/;"	l
f0100aaf	obj/kern/kernel.asm	/^f0100aaf:	0f 84 ba 00 00 00    	je     f0100b6f <show_mapping+0xe3>$/;"	l
f0100ab5	obj/kern/kernel.asm	/^f0100ab5:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0100ab8	obj/kern/kernel.asm	/^f0100ab8:	8b 00                	mov    (%eax),%eax$/;"	l
f0100aba	obj/kern/kernel.asm	/^f0100aba:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0100abf	obj/kern/kernel.asm	/^f0100abf:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0100ac3	obj/kern/kernel.asm	/^f0100ac3:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0100ac7	obj/kern/kernel.asm	/^f0100ac7:	c7 04 24 24 7c 10 f0 	movl   $0xf0107c24,(%esp)$/;"	l
f0100ace	obj/kern/kernel.asm	/^f0100ace:	e8 cb 38 00 00       	call   f010439e <cprintf>$/;"	l
f0100ad3	obj/kern/kernel.asm	/^f0100ad3:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0100ad6	obj/kern/kernel.asm	/^f0100ad6:	f6 00 02             	testb  $0x2,(%eax)$/;"	l
f0100ad9	obj/kern/kernel.asm	/^f0100ad9:	74 0c                	je     f0100ae7 <show_mapping+0x5b>$/;"	l
f0100adb	obj/kern/kernel.asm	/^f0100adb:	c7 04 24 5a 7a 10 f0 	movl   $0xf0107a5a,(%esp)$/;"	l
f0100ae2	obj/kern/kernel.asm	/^f0100ae2:	e8 b7 38 00 00       	call   f010439e <cprintf>$/;"	l
f0100ae7	obj/kern/kernel.asm	/^f0100ae7:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0100aea	obj/kern/kernel.asm	/^f0100aea:	f6 00 04             	testb  $0x4,(%eax)$/;"	l
f0100aed	obj/kern/kernel.asm	/^f0100aed:	74 0c                	je     f0100afb <show_mapping+0x6f>$/;"	l
f0100aef	obj/kern/kernel.asm	/^f0100aef:	c7 04 24 5d 7a 10 f0 	movl   $0xf0107a5d,(%esp)$/;"	l
f0100af6	obj/kern/kernel.asm	/^f0100af6:	e8 a3 38 00 00       	call   f010439e <cprintf>$/;"	l
f0100afb	obj/kern/kernel.asm	/^f0100afb:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0100afe	obj/kern/kernel.asm	/^f0100afe:	f6 00 08             	testb  $0x8,(%eax)$/;"	l
f0100b01	obj/kern/kernel.asm	/^f0100b01:	74 0c                	je     f0100b0f <show_mapping+0x83>$/;"	l
f0100b03	obj/kern/kernel.asm	/^f0100b03:	c7 04 24 60 7a 10 f0 	movl   $0xf0107a60,(%esp)$/;"	l
f0100b0a	obj/kern/kernel.asm	/^f0100b0a:	e8 8f 38 00 00       	call   f010439e <cprintf>$/;"	l
f0100b0f	obj/kern/kernel.asm	/^f0100b0f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0100b12	obj/kern/kernel.asm	/^f0100b12:	f6 00 10             	testb  $0x10,(%eax)$/;"	l
f0100b15	obj/kern/kernel.asm	/^f0100b15:	74 0c                	je     f0100b23 <show_mapping+0x97>$/;"	l
f0100b17	obj/kern/kernel.asm	/^f0100b17:	c7 04 24 64 7a 10 f0 	movl   $0xf0107a64,(%esp)$/;"	l
f0100b1e	obj/kern/kernel.asm	/^f0100b1e:	e8 7b 38 00 00       	call   f010439e <cprintf>$/;"	l
f0100b23	obj/kern/kernel.asm	/^f0100b23:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0100b26	obj/kern/kernel.asm	/^f0100b26:	f6 00 20             	testb  $0x20,(%eax)$/;"	l
f0100b29	obj/kern/kernel.asm	/^f0100b29:	74 0c                	je     f0100b37 <show_mapping+0xab>$/;"	l
f0100b2b	obj/kern/kernel.asm	/^f0100b2b:	c7 04 24 68 7a 10 f0 	movl   $0xf0107a68,(%esp)$/;"	l
f0100b32	obj/kern/kernel.asm	/^f0100b32:	e8 67 38 00 00       	call   f010439e <cprintf>$/;"	l
f0100b37	obj/kern/kernel.asm	/^f0100b37:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0100b3a	obj/kern/kernel.asm	/^f0100b3a:	f6 00 40             	testb  $0x40,(%eax)$/;"	l
f0100b3d	obj/kern/kernel.asm	/^f0100b3d:	74 0c                	je     f0100b4b <show_mapping+0xbf>$/;"	l
f0100b3f	obj/kern/kernel.asm	/^f0100b3f:	c7 04 24 65 7a 10 f0 	movl   $0xf0107a65,(%esp)$/;"	l
f0100b46	obj/kern/kernel.asm	/^f0100b46:	e8 53 38 00 00       	call   f010439e <cprintf>$/;"	l
f0100b4b	obj/kern/kernel.asm	/^f0100b4b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0100b4e	obj/kern/kernel.asm	/^f0100b4e:	8b 00                	mov    (%eax),%eax$/;"	l
f0100b50	obj/kern/kernel.asm	/^f0100b50:	f6 c4 01             	test   $0x1,%ah$/;"	l
f0100b53	obj/kern/kernel.asm	/^f0100b53:	74 0c                	je     f0100b61 <show_mapping+0xd5>$/;"	l
f0100b55	obj/kern/kernel.asm	/^f0100b55:	c7 04 24 6b 7a 10 f0 	movl   $0xf0107a6b,(%esp)$/;"	l
f0100b5c	obj/kern/kernel.asm	/^f0100b5c:	e8 3d 38 00 00       	call   f010439e <cprintf>$/;"	l
f0100b61	obj/kern/kernel.asm	/^f0100b61:	c7 04 24 88 8a 10 f0 	movl   $0xf0108a88,(%esp)$/;"	l
f0100b68	obj/kern/kernel.asm	/^f0100b68:	e8 31 38 00 00       	call   f010439e <cprintf>$/;"	l
f0100b6d	obj/kern/kernel.asm	/^f0100b6d:	eb 10                	jmp    f0100b7f <show_mapping+0xf3>$/;"	l
f0100b6f	obj/kern/kernel.asm	/^f0100b6f:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0100b73	obj/kern/kernel.asm	/^f0100b73:	c7 04 24 4c 7c 10 f0 	movl   $0xf0107c4c,(%esp)$/;"	l
f0100b7a	obj/kern/kernel.asm	/^f0100b7a:	e8 1f 38 00 00       	call   f010439e <cprintf>$/;"	l
f0100b7f	obj/kern/kernel.asm	/^f0100b7f:	83 c4 24             	add    $0x24,%esp$/;"	l
f0100b82	obj/kern/kernel.asm	/^f0100b82:	5b                   	pop    %ebx$/;"	l
f0100b83	obj/kern/kernel.asm	/^f0100b83:	5d                   	pop    %ebp$/;"	l
f0100b84	obj/kern/kernel.asm	/^f0100b84:	c3                   	ret    $/;"	l
f0100b85	obj/kern/kernel.asm	/^f0100b85 <mon_showmappings>:$/;"	l
f0100b85	obj/kern/kernel.asm	/^f0100b85:	55                   	push   %ebp$/;"	l
f0100b86	obj/kern/kernel.asm	/^f0100b86:	89 e5                	mov    %esp,%ebp$/;"	l
f0100b88	obj/kern/kernel.asm	/^f0100b88:	53                   	push   %ebx$/;"	l
f0100b89	obj/kern/kernel.asm	/^f0100b89:	83 ec 24             	sub    $0x24,%esp$/;"	l
f0100b8c	obj/kern/kernel.asm	/^f0100b8c:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0100b8f	obj/kern/kernel.asm	/^f0100b8f:	8d 43 fe             	lea    -0x2(%ebx),%eax$/;"	l
f0100b92	obj/kern/kernel.asm	/^f0100b92:	83 f8 01             	cmp    $0x1,%eax$/;"	l
f0100b95	obj/kern/kernel.asm	/^f0100b95:	76 0e                	jbe    f0100ba5 <mon_showmappings+0x20>$/;"	l
f0100b97	obj/kern/kernel.asm	/^f0100b97:	c7 04 24 70 7c 10 f0 	movl   $0xf0107c70,(%esp)$/;"	l
f0100b9e	obj/kern/kernel.asm	/^f0100b9e:	e8 fb 37 00 00       	call   f010439e <cprintf>$/;"	l
f0100ba3	obj/kern/kernel.asm	/^f0100ba3:	eb 67                	jmp    f0100c0c <mon_showmappings+0x87>$/;"	l
f0100ba5	obj/kern/kernel.asm	/^f0100ba5:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0100ba8	obj/kern/kernel.asm	/^f0100ba8:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
f0100bab	obj/kern/kernel.asm	/^f0100bab:	8d 55 f4             	lea    -0xc(%ebp),%edx$/;"	l
f0100bae	obj/kern/kernel.asm	/^f0100bae:	e8 95 fe ff ff       	call   f0100a48 <str2addr>$/;"	l
f0100bb3	obj/kern/kernel.asm	/^f0100bb3:	85 c0                	test   %eax,%eax$/;"	l
f0100bb5	obj/kern/kernel.asm	/^f0100bb5:	75 0e                	jne    f0100bc5 <mon_showmappings+0x40>$/;"	l
f0100bb7	obj/kern/kernel.asm	/^f0100bb7:	c7 04 24 70 7c 10 f0 	movl   $0xf0107c70,(%esp)$/;"	l
f0100bbe	obj/kern/kernel.asm	/^f0100bbe:	e8 db 37 00 00       	call   f010439e <cprintf>$/;"	l
f0100bc3	obj/kern/kernel.asm	/^f0100bc3:	eb 47                	jmp    f0100c0c <mon_showmappings+0x87>$/;"	l
f0100bc5	obj/kern/kernel.asm	/^f0100bc5:	83 fb 02             	cmp    $0x2,%ebx$/;"	l
f0100bc8	obj/kern/kernel.asm	/^f0100bc8:	75 0d                	jne    f0100bd7 <mon_showmappings+0x52>$/;"	l
f0100bca	obj/kern/kernel.asm	/^f0100bca:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0100bcd	obj/kern/kernel.asm	/^f0100bcd:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
f0100bd0	obj/kern/kernel.asm	/^f0100bd0:	e8 b7 fe ff ff       	call   f0100a8c <show_mapping>$/;"	l
f0100bd5	obj/kern/kernel.asm	/^f0100bd5:	eb 35                	jmp    f0100c0c <mon_showmappings+0x87>$/;"	l
f0100bd7	obj/kern/kernel.asm	/^f0100bd7:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0100bda	obj/kern/kernel.asm	/^f0100bda:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
f0100bdd	obj/kern/kernel.asm	/^f0100bdd:	8d 55 f0             	lea    -0x10(%ebp),%edx$/;"	l
f0100be0	obj/kern/kernel.asm	/^f0100be0:	e8 63 fe ff ff       	call   f0100a48 <str2addr>$/;"	l
f0100be5	obj/kern/kernel.asm	/^f0100be5:	8b 5d f4             	mov    -0xc(%ebp),%ebx$/;"	l
f0100be8	obj/kern/kernel.asm	/^f0100be8:	85 c0                	test   %eax,%eax$/;"	l
f0100bea	obj/kern/kernel.asm	/^f0100bea:	75 1b                	jne    f0100c07 <mon_showmappings+0x82>$/;"	l
f0100bec	obj/kern/kernel.asm	/^f0100bec:	c7 04 24 70 7c 10 f0 	movl   $0xf0107c70,(%esp)$/;"	l
f0100bf3	obj/kern/kernel.asm	/^f0100bf3:	e8 a6 37 00 00       	call   f010439e <cprintf>$/;"	l
f0100bf8	obj/kern/kernel.asm	/^f0100bf8:	eb 12                	jmp    f0100c0c <mon_showmappings+0x87>$/;"	l
f0100bfa	obj/kern/kernel.asm	/^f0100bfa:	89 d8                	mov    %ebx,%eax$/;"	l
f0100bfc	obj/kern/kernel.asm	/^f0100bfc:	e8 8b fe ff ff       	call   f0100a8c <show_mapping>$/;"	l
f0100c01	obj/kern/kernel.asm	/^f0100c01:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f0100c07	obj/kern/kernel.asm	/^f0100c07:	3b 5d f0             	cmp    -0x10(%ebp),%ebx$/;"	l
f0100c0a	obj/kern/kernel.asm	/^f0100c0a:	72 ee                	jb     f0100bfa <mon_showmappings+0x75>$/;"	l
f0100c0c	obj/kern/kernel.asm	/^f0100c0c:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100c11	obj/kern/kernel.asm	/^f0100c11:	83 c4 24             	add    $0x24,%esp$/;"	l
f0100c14	obj/kern/kernel.asm	/^f0100c14:	5b                   	pop    %ebx$/;"	l
f0100c15	obj/kern/kernel.asm	/^f0100c15:	5d                   	pop    %ebp$/;"	l
f0100c16	obj/kern/kernel.asm	/^f0100c16:	c3                   	ret    $/;"	l
f0100c17	obj/kern/kernel.asm	/^f0100c17 <mon_changeperms>:$/;"	l
f0100c17	obj/kern/kernel.asm	/^f0100c17:	55                   	push   %ebp$/;"	l
f0100c18	obj/kern/kernel.asm	/^f0100c18:	89 e5                	mov    %esp,%ebp$/;"	l
f0100c1a	obj/kern/kernel.asm	/^f0100c1a:	57                   	push   %edi$/;"	l
f0100c1b	obj/kern/kernel.asm	/^f0100c1b:	56                   	push   %esi$/;"	l
f0100c1c	obj/kern/kernel.asm	/^f0100c1c:	53                   	push   %ebx$/;"	l
f0100c1d	obj/kern/kernel.asm	/^f0100c1d:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f0100c20	obj/kern/kernel.asm	/^f0100c20:	83 7d 08 02          	cmpl   $0x2,0x8(%ebp)$/;"	l
f0100c24	obj/kern/kernel.asm	/^f0100c24:	7f 11                	jg     f0100c37 <mon_changeperms+0x20>$/;"	l
f0100c26	obj/kern/kernel.asm	/^f0100c26:	c7 04 24 98 7c 10 f0 	movl   $0xf0107c98,(%esp)$/;"	l
f0100c2d	obj/kern/kernel.asm	/^f0100c2d:	e8 6c 37 00 00       	call   f010439e <cprintf>$/;"	l
f0100c32	obj/kern/kernel.asm	/^f0100c32:	e9 c0 00 00 00       	jmp    f0100cf7 <mon_changeperms+0xe0>$/;"	l
f0100c37	obj/kern/kernel.asm	/^f0100c37:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0100c3a	obj/kern/kernel.asm	/^f0100c3a:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
f0100c3d	obj/kern/kernel.asm	/^f0100c3d:	8d 55 e4             	lea    -0x1c(%ebp),%edx$/;"	l
f0100c40	obj/kern/kernel.asm	/^f0100c40:	e8 03 fe ff ff       	call   f0100a48 <str2addr>$/;"	l
f0100c45	obj/kern/kernel.asm	/^f0100c45:	85 c0                	test   %eax,%eax$/;"	l
f0100c47	obj/kern/kernel.asm	/^f0100c47:	75 11                	jne    f0100c5a <mon_changeperms+0x43>$/;"	l
f0100c49	obj/kern/kernel.asm	/^f0100c49:	c7 04 24 98 7c 10 f0 	movl   $0xf0107c98,(%esp)$/;"	l
f0100c50	obj/kern/kernel.asm	/^f0100c50:	e8 49 37 00 00       	call   f010439e <cprintf>$/;"	l
f0100c55	obj/kern/kernel.asm	/^f0100c55:	e9 9d 00 00 00       	jmp    f0100cf7 <mon_changeperms+0xe0>$/;"	l
f0100c5a	obj/kern/kernel.asm	/^f0100c5a:	8d 45 e0             	lea    -0x20(%ebp),%eax$/;"	l
f0100c5d	obj/kern/kernel.asm	/^f0100c5d:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0100c61	obj/kern/kernel.asm	/^f0100c61:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0100c64	obj/kern/kernel.asm	/^f0100c64:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100c68	obj/kern/kernel.asm	/^f0100c68:	a1 8c de 20 f0       	mov    0xf020de8c,%eax$/;"	l
f0100c6d	obj/kern/kernel.asm	/^f0100c6d:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100c70	obj/kern/kernel.asm	/^f0100c70:	e8 97 0a 00 00       	call   f010170c <page_lookup>$/;"	l
f0100c75	obj/kern/kernel.asm	/^f0100c75:	bb 02 00 00 00       	mov    $0x2,%ebx$/;"	l
f0100c7a	obj/kern/kernel.asm	/^f0100c7a:	bf 01 00 00 00       	mov    $0x1,%edi$/;"	l
f0100c7f	obj/kern/kernel.asm	/^f0100c7f:	85 c0                	test   %eax,%eax$/;"	l
f0100c81	obj/kern/kernel.asm	/^f0100c81:	75 15                	jne    f0100c98 <mon_changeperms+0x81>$/;"	l
f0100c83	obj/kern/kernel.asm	/^f0100c83:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0100c86	obj/kern/kernel.asm	/^f0100c86:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100c8a	obj/kern/kernel.asm	/^f0100c8a:	c7 04 24 4c 7c 10 f0 	movl   $0xf0107c4c,(%esp)$/;"	l
f0100c91	obj/kern/kernel.asm	/^f0100c91:	e8 08 37 00 00       	call   f010439e <cprintf>$/;"	l
f0100c96	obj/kern/kernel.asm	/^f0100c96:	eb 5f                	jmp    f0100cf7 <mon_changeperms+0xe0>$/;"	l
f0100c98	obj/kern/kernel.asm	/^f0100c98:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0100c9b	obj/kern/kernel.asm	/^f0100c9b:	8b 34 98             	mov    (%eax,%ebx,4),%esi$/;"	l
f0100c9e	obj/kern/kernel.asm	/^f0100c9e:	c7 44 24 04 aa 8a 10 	movl   $0xf0108aaa,0x4(%esp)$/;"	l
f0100ca5	obj/kern/kernel.asm	/^f0100ca5:	f0 $/;"	l
f0100ca6	obj/kern/kernel.asm	/^f0100ca6:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0100ca9	obj/kern/kernel.asm	/^f0100ca9:	e8 4e 5c 00 00       	call   f01068fc <strcmp>$/;"	l
f0100cae	obj/kern/kernel.asm	/^f0100cae:	ba 02 00 00 00       	mov    $0x2,%edx$/;"	l
f0100cb3	obj/kern/kernel.asm	/^f0100cb3:	85 c0                	test   %eax,%eax$/;"	l
f0100cb5	obj/kern/kernel.asm	/^f0100cb5:	74 27                	je     f0100cde <mon_changeperms+0xc7>$/;"	l
f0100cb7	obj/kern/kernel.asm	/^f0100cb7:	c7 44 24 04 da 89 10 	movl   $0xf01089da,0x4(%esp)$/;"	l
f0100cbe	obj/kern/kernel.asm	/^f0100cbe:	f0 $/;"	l
f0100cbf	obj/kern/kernel.asm	/^f0100cbf:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0100cc2	obj/kern/kernel.asm	/^f0100cc2:	e8 35 5c 00 00       	call   f01068fc <strcmp>$/;"	l
f0100cc7	obj/kern/kernel.asm	/^f0100cc7:	85 c0                	test   %eax,%eax$/;"	l
f0100cc9	obj/kern/kernel.asm	/^f0100cc9:	74 0e                	je     f0100cd9 <mon_changeperms+0xc2>$/;"	l
f0100ccb	obj/kern/kernel.asm	/^f0100ccb:	c7 04 24 98 7c 10 f0 	movl   $0xf0107c98,(%esp)$/;"	l
f0100cd2	obj/kern/kernel.asm	/^f0100cd2:	e8 c7 36 00 00       	call   f010439e <cprintf>$/;"	l
f0100cd7	obj/kern/kernel.asm	/^f0100cd7:	eb 1e                	jmp    f0100cf7 <mon_changeperms+0xe0>$/;"	l
f0100cd9	obj/kern/kernel.asm	/^f0100cd9:	ba 04 00 00 00       	mov    $0x4,%edx$/;"	l
f0100cde	obj/kern/kernel.asm	/^f0100cde:	09 d7                	or     %edx,%edi$/;"	l
f0100ce0	obj/kern/kernel.asm	/^f0100ce0:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0100ce3	obj/kern/kernel.asm	/^f0100ce3:	3b 5d 08             	cmp    0x8(%ebp),%ebx$/;"	l
f0100ce6	obj/kern/kernel.asm	/^f0100ce6:	75 b0                	jne    f0100c98 <mon_changeperms+0x81>$/;"	l
f0100ce8	obj/kern/kernel.asm	/^f0100ce8:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0100ceb	obj/kern/kernel.asm	/^f0100ceb:	8b 10                	mov    (%eax),%edx$/;"	l
f0100ced	obj/kern/kernel.asm	/^f0100ced:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx$/;"	l
f0100cf3	obj/kern/kernel.asm	/^f0100cf3:	09 d7                	or     %edx,%edi$/;"	l
f0100cf5	obj/kern/kernel.asm	/^f0100cf5:	89 38                	mov    %edi,(%eax)$/;"	l
f0100cf7	obj/kern/kernel.asm	/^f0100cf7:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100cfc	obj/kern/kernel.asm	/^f0100cfc:	83 c4 2c             	add    $0x2c,%esp$/;"	l
f0100cff	obj/kern/kernel.asm	/^f0100cff:	5b                   	pop    %ebx$/;"	l
f0100d00	obj/kern/kernel.asm	/^f0100d00:	5e                   	pop    %esi$/;"	l
f0100d01	obj/kern/kernel.asm	/^f0100d01:	5f                   	pop    %edi$/;"	l
f0100d02	obj/kern/kernel.asm	/^f0100d02:	5d                   	pop    %ebp$/;"	l
f0100d03	obj/kern/kernel.asm	/^f0100d03:	c3                   	ret    $/;"	l
f0100d04	obj/kern/kernel.asm	/^f0100d04 <mon_dumpcontents>:$/;"	l
f0100d04	obj/kern/kernel.asm	/^f0100d04:	55                   	push   %ebp$/;"	l
f0100d05	obj/kern/kernel.asm	/^f0100d05:	89 e5                	mov    %esp,%ebp$/;"	l
f0100d07	obj/kern/kernel.asm	/^f0100d07:	53                   	push   %ebx$/;"	l
f0100d08	obj/kern/kernel.asm	/^f0100d08:	83 ec 24             	sub    $0x24,%esp$/;"	l
f0100d0b	obj/kern/kernel.asm	/^f0100d0b:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f0100d0e	obj/kern/kernel.asm	/^f0100d0e:	83 7d 08 04          	cmpl   $0x4,0x8(%ebp)$/;"	l
f0100d12	obj/kern/kernel.asm	/^f0100d12:	74 11                	je     f0100d25 <mon_dumpcontents+0x21>$/;"	l
f0100d14	obj/kern/kernel.asm	/^f0100d14:	c7 04 24 bc 7c 10 f0 	movl   $0xf0107cbc,(%esp)$/;"	l
f0100d1b	obj/kern/kernel.asm	/^f0100d1b:	e8 7e 36 00 00       	call   f010439e <cprintf>$/;"	l
f0100d20	obj/kern/kernel.asm	/^f0100d20:	e9 db 00 00 00       	jmp    f0100e00 <mon_dumpcontents+0xfc>$/;"	l
f0100d25	obj/kern/kernel.asm	/^f0100d25:	8b 43 08             	mov    0x8(%ebx),%eax$/;"	l
f0100d28	obj/kern/kernel.asm	/^f0100d28:	8d 55 f4             	lea    -0xc(%ebp),%edx$/;"	l
f0100d2b	obj/kern/kernel.asm	/^f0100d2b:	e8 18 fd ff ff       	call   f0100a48 <str2addr>$/;"	l
f0100d30	obj/kern/kernel.asm	/^f0100d30:	85 c0                	test   %eax,%eax$/;"	l
f0100d32	obj/kern/kernel.asm	/^f0100d32:	74 0f                	je     f0100d43 <mon_dumpcontents+0x3f>$/;"	l
f0100d34	obj/kern/kernel.asm	/^f0100d34:	8b 43 0c             	mov    0xc(%ebx),%eax$/;"	l
f0100d37	obj/kern/kernel.asm	/^f0100d37:	8d 55 f0             	lea    -0x10(%ebp),%edx$/;"	l
f0100d3a	obj/kern/kernel.asm	/^f0100d3a:	e8 09 fd ff ff       	call   f0100a48 <str2addr>$/;"	l
f0100d3f	obj/kern/kernel.asm	/^f0100d3f:	85 c0                	test   %eax,%eax$/;"	l
f0100d41	obj/kern/kernel.asm	/^f0100d41:	75 11                	jne    f0100d54 <mon_dumpcontents+0x50>$/;"	l
f0100d43	obj/kern/kernel.asm	/^f0100d43:	c7 04 24 bc 7c 10 f0 	movl   $0xf0107cbc,(%esp)$/;"	l
f0100d4a	obj/kern/kernel.asm	/^f0100d4a:	e8 4f 36 00 00       	call   f010439e <cprintf>$/;"	l
f0100d4f	obj/kern/kernel.asm	/^f0100d4f:	e9 ac 00 00 00       	jmp    f0100e00 <mon_dumpcontents+0xfc>$/;"	l
f0100d54	obj/kern/kernel.asm	/^f0100d54:	8b 43 04             	mov    0x4(%ebx),%eax$/;"	l
f0100d57	obj/kern/kernel.asm	/^f0100d57:	0f b6 10             	movzbl (%eax),%edx$/;"	l
f0100d5a	obj/kern/kernel.asm	/^f0100d5a:	80 fa 76             	cmp    $0x76,%dl$/;"	l
f0100d5d	obj/kern/kernel.asm	/^f0100d5d:	75 1a                	jne    f0100d79 <mon_dumpcontents+0x75>$/;"	l
f0100d5f	obj/kern/kernel.asm	/^f0100d5f:	80 78 01 00          	cmpb   $0x0,0x1(%eax)$/;"	l
f0100d63	obj/kern/kernel.asm	/^f0100d63:	0f 85 8b 00 00 00    	jne    f0100df4 <mon_dumpcontents+0xf0>$/;"	l
f0100d69	obj/kern/kernel.asm	/^f0100d69:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
f0100d6c	obj/kern/kernel.asm	/^f0100d6c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0100d6f	obj/kern/kernel.asm	/^f0100d6f:	e8 8e fb ff ff       	call   f0100902 <dump_contents_v>$/;"	l
f0100d74	obj/kern/kernel.asm	/^f0100d74:	e9 87 00 00 00       	jmp    f0100e00 <mon_dumpcontents+0xfc>$/;"	l
f0100d79	obj/kern/kernel.asm	/^f0100d79:	80 fa 70             	cmp    $0x70,%dl$/;"	l
f0100d7c	obj/kern/kernel.asm	/^f0100d7c:	75 76                	jne    f0100df4 <mon_dumpcontents+0xf0>$/;"	l
f0100d7e	obj/kern/kernel.asm	/^f0100d7e:	80 78 01 00          	cmpb   $0x0,0x1(%eax)$/;"	l
f0100d82	obj/kern/kernel.asm	/^f0100d82:	75 70                	jne    f0100df4 <mon_dumpcontents+0xf0>$/;"	l
f0100d84	obj/kern/kernel.asm	/^f0100d84:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
f0100d87	obj/kern/kernel.asm	/^f0100d87:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0100d8a	obj/kern/kernel.asm	/^f0100d8a:	8b 0d 88 de 20 f0    	mov    0xf020de88,%ecx$/;"	l
f0100d90	obj/kern/kernel.asm	/^f0100d90:	89 d3                	mov    %edx,%ebx$/;"	l
f0100d92	obj/kern/kernel.asm	/^f0100d92:	c1 eb 0c             	shr    $0xc,%ebx$/;"	l
f0100d95	obj/kern/kernel.asm	/^f0100d95:	39 cb                	cmp    %ecx,%ebx$/;"	l
f0100d97	obj/kern/kernel.asm	/^f0100d97:	72 20                	jb     f0100db9 <mon_dumpcontents+0xb5>$/;"	l
f0100d99	obj/kern/kernel.asm	/^f0100d99:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f0100d9d	obj/kern/kernel.asm	/^f0100d9d:	c7 44 24 08 e4 76 10 	movl   $0xf01076e4,0x8(%esp)$/;"	l
f0100da4	obj/kern/kernel.asm	/^f0100da4:	f0 $/;"	l
f0100da5	obj/kern/kernel.asm	/^f0100da5:	c7 44 24 04 e0 00 00 	movl   $0xe0,0x4(%esp)$/;"	l
f0100dac	obj/kern/kernel.asm	/^f0100dac:	00 $/;"	l
f0100dad	obj/kern/kernel.asm	/^f0100dad:	c7 04 24 6e 7a 10 f0 	movl   $0xf0107a6e,(%esp)$/;"	l
f0100db4	obj/kern/kernel.asm	/^f0100db4:	e8 87 f2 ff ff       	call   f0100040 <_panic>$/;"	l
f0100db9	obj/kern/kernel.asm	/^f0100db9:	81 ea 00 00 00 10    	sub    $0x10000000,%edx$/;"	l
f0100dbf	obj/kern/kernel.asm	/^f0100dbf:	89 c3                	mov    %eax,%ebx$/;"	l
f0100dc1	obj/kern/kernel.asm	/^f0100dc1:	c1 eb 0c             	shr    $0xc,%ebx$/;"	l
f0100dc4	obj/kern/kernel.asm	/^f0100dc4:	39 d9                	cmp    %ebx,%ecx$/;"	l
f0100dc6	obj/kern/kernel.asm	/^f0100dc6:	77 20                	ja     f0100de8 <mon_dumpcontents+0xe4>$/;"	l
f0100dc8	obj/kern/kernel.asm	/^f0100dc8:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0100dcc	obj/kern/kernel.asm	/^f0100dcc:	c7 44 24 08 e4 76 10 	movl   $0xf01076e4,0x8(%esp)$/;"	l
f0100dd3	obj/kern/kernel.asm	/^f0100dd3:	f0 $/;"	l
f0100dd4	obj/kern/kernel.asm	/^f0100dd4:	c7 44 24 04 e0 00 00 	movl   $0xe0,0x4(%esp)$/;"	l
f0100ddb	obj/kern/kernel.asm	/^f0100ddb:	00 $/;"	l
f0100ddc	obj/kern/kernel.asm	/^f0100ddc:	c7 04 24 6e 7a 10 f0 	movl   $0xf0107a6e,(%esp)$/;"	l
f0100de3	obj/kern/kernel.asm	/^f0100de3:	e8 58 f2 ff ff       	call   f0100040 <_panic>$/;"	l
f0100de8	obj/kern/kernel.asm	/^f0100de8:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0100ded	obj/kern/kernel.asm	/^f0100ded:	e8 10 fb ff ff       	call   f0100902 <dump_contents_v>$/;"	l
f0100df2	obj/kern/kernel.asm	/^f0100df2:	eb 0c                	jmp    f0100e00 <mon_dumpcontents+0xfc>$/;"	l
f0100df4	obj/kern/kernel.asm	/^f0100df4:	c7 04 24 bc 7c 10 f0 	movl   $0xf0107cbc,(%esp)$/;"	l
f0100dfb	obj/kern/kernel.asm	/^f0100dfb:	e8 9e 35 00 00       	call   f010439e <cprintf>$/;"	l
f0100e00	obj/kern/kernel.asm	/^f0100e00:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100e05	obj/kern/kernel.asm	/^f0100e05:	83 c4 24             	add    $0x24,%esp$/;"	l
f0100e08	obj/kern/kernel.asm	/^f0100e08:	5b                   	pop    %ebx$/;"	l
f0100e09	obj/kern/kernel.asm	/^f0100e09:	5d                   	pop    %ebp$/;"	l
f0100e0a	obj/kern/kernel.asm	/^f0100e0a:	c3                   	ret    $/;"	l
f0100e0b	obj/kern/kernel.asm	/^f0100e0b <monitor>:$/;"	l
f0100e0b	obj/kern/kernel.asm	/^f0100e0b:	55                   	push   %ebp$/;"	l
f0100e0c	obj/kern/kernel.asm	/^f0100e0c:	89 e5                	mov    %esp,%ebp$/;"	l
f0100e0e	obj/kern/kernel.asm	/^f0100e0e:	57                   	push   %edi$/;"	l
f0100e0f	obj/kern/kernel.asm	/^f0100e0f:	56                   	push   %esi$/;"	l
f0100e10	obj/kern/kernel.asm	/^f0100e10:	53                   	push   %ebx$/;"	l
f0100e11	obj/kern/kernel.asm	/^f0100e11:	83 ec 5c             	sub    $0x5c,%esp$/;"	l
f0100e14	obj/kern/kernel.asm	/^f0100e14:	c7 04 24 08 7d 10 f0 	movl   $0xf0107d08,(%esp)$/;"	l
f0100e1b	obj/kern/kernel.asm	/^f0100e1b:	e8 7e 35 00 00       	call   f010439e <cprintf>$/;"	l
f0100e20	obj/kern/kernel.asm	/^f0100e20:	c7 04 24 2c 7d 10 f0 	movl   $0xf0107d2c,(%esp)$/;"	l
f0100e27	obj/kern/kernel.asm	/^f0100e27:	e8 72 35 00 00       	call   f010439e <cprintf>$/;"	l
f0100e2c	obj/kern/kernel.asm	/^f0100e2c:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
f0100e30	obj/kern/kernel.asm	/^f0100e30:	74 0b                	je     f0100e3d <monitor+0x32>$/;"	l
f0100e32	obj/kern/kernel.asm	/^f0100e32:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0100e35	obj/kern/kernel.asm	/^f0100e35:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100e38	obj/kern/kernel.asm	/^f0100e38:	e8 88 37 00 00       	call   f01045c5 <print_trapframe>$/;"	l
f0100e3d	obj/kern/kernel.asm	/^f0100e3d:	c7 04 24 7d 7a 10 f0 	movl   $0xf0107a7d,(%esp)$/;"	l
f0100e44	obj/kern/kernel.asm	/^f0100e44:	e8 e7 58 00 00       	call   f0106730 <readline>$/;"	l
f0100e49	obj/kern/kernel.asm	/^f0100e49:	89 c3                	mov    %eax,%ebx$/;"	l
f0100e4b	obj/kern/kernel.asm	/^f0100e4b:	85 c0                	test   %eax,%eax$/;"	l
f0100e4d	obj/kern/kernel.asm	/^f0100e4d:	74 ee                	je     f0100e3d <monitor+0x32>$/;"	l
f0100e4f	obj/kern/kernel.asm	/^f0100e4f:	c7 45 a8 00 00 00 00 	movl   $0x0,-0x58(%ebp)$/;"	l
f0100e56	obj/kern/kernel.asm	/^f0100e56:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f0100e5b	obj/kern/kernel.asm	/^f0100e5b:	eb 0a                	jmp    f0100e67 <monitor+0x5c>$/;"	l
f0100e5d	obj/kern/kernel.asm	/^f0100e5d:	c6 03 00             	movb   $0x0,(%ebx)$/;"	l
f0100e60	obj/kern/kernel.asm	/^f0100e60:	89 f7                	mov    %esi,%edi$/;"	l
f0100e62	obj/kern/kernel.asm	/^f0100e62:	8d 5b 01             	lea    0x1(%ebx),%ebx$/;"	l
f0100e65	obj/kern/kernel.asm	/^f0100e65:	89 fe                	mov    %edi,%esi$/;"	l
f0100e67	obj/kern/kernel.asm	/^f0100e67:	0f b6 03             	movzbl (%ebx),%eax$/;"	l
f0100e6a	obj/kern/kernel.asm	/^f0100e6a:	84 c0                	test   %al,%al$/;"	l
f0100e6c	obj/kern/kernel.asm	/^f0100e6c:	74 66                	je     f0100ed4 <monitor+0xc9>$/;"	l
f0100e6e	obj/kern/kernel.asm	/^f0100e6e:	0f be c0             	movsbl %al,%eax$/;"	l
f0100e71	obj/kern/kernel.asm	/^f0100e71:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100e75	obj/kern/kernel.asm	/^f0100e75:	c7 04 24 81 7a 10 f0 	movl   $0xf0107a81,(%esp)$/;"	l
f0100e7c	obj/kern/kernel.asm	/^f0100e7c:	e8 d9 5a 00 00       	call   f010695a <strchr>$/;"	l
f0100e81	obj/kern/kernel.asm	/^f0100e81:	85 c0                	test   %eax,%eax$/;"	l
f0100e83	obj/kern/kernel.asm	/^f0100e83:	75 d8                	jne    f0100e5d <monitor+0x52>$/;"	l
f0100e85	obj/kern/kernel.asm	/^f0100e85:	80 3b 00             	cmpb   $0x0,(%ebx)$/;"	l
f0100e88	obj/kern/kernel.asm	/^f0100e88:	74 4a                	je     f0100ed4 <monitor+0xc9>$/;"	l
f0100e8a	obj/kern/kernel.asm	/^f0100e8a:	83 fe 0f             	cmp    $0xf,%esi$/;"	l
f0100e8d	obj/kern/kernel.asm	/^f0100e8d:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
f0100e90	obj/kern/kernel.asm	/^f0100e90:	75 16                	jne    f0100ea8 <monitor+0x9d>$/;"	l
f0100e92	obj/kern/kernel.asm	/^f0100e92:	c7 44 24 04 10 00 00 	movl   $0x10,0x4(%esp)$/;"	l
f0100e99	obj/kern/kernel.asm	/^f0100e99:	00 $/;"	l
f0100e9a	obj/kern/kernel.asm	/^f0100e9a:	c7 04 24 86 7a 10 f0 	movl   $0xf0107a86,(%esp)$/;"	l
f0100ea1	obj/kern/kernel.asm	/^f0100ea1:	e8 f8 34 00 00       	call   f010439e <cprintf>$/;"	l
f0100ea6	obj/kern/kernel.asm	/^f0100ea6:	eb 95                	jmp    f0100e3d <monitor+0x32>$/;"	l
f0100ea8	obj/kern/kernel.asm	/^f0100ea8:	8d 7e 01             	lea    0x1(%esi),%edi$/;"	l
f0100eab	obj/kern/kernel.asm	/^f0100eab:	89 5c b5 a8          	mov    %ebx,-0x58(%ebp,%esi,4)$/;"	l
f0100eaf	obj/kern/kernel.asm	/^f0100eaf:	eb 03                	jmp    f0100eb4 <monitor+0xa9>$/;"	l
f0100eb1	obj/kern/kernel.asm	/^f0100eb1:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0100eb4	obj/kern/kernel.asm	/^f0100eb4:	0f b6 03             	movzbl (%ebx),%eax$/;"	l
f0100eb7	obj/kern/kernel.asm	/^f0100eb7:	84 c0                	test   %al,%al$/;"	l
f0100eb9	obj/kern/kernel.asm	/^f0100eb9:	74 aa                	je     f0100e65 <monitor+0x5a>$/;"	l
f0100ebb	obj/kern/kernel.asm	/^f0100ebb:	0f be c0             	movsbl %al,%eax$/;"	l
f0100ebe	obj/kern/kernel.asm	/^f0100ebe:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100ec2	obj/kern/kernel.asm	/^f0100ec2:	c7 04 24 81 7a 10 f0 	movl   $0xf0107a81,(%esp)$/;"	l
f0100ec9	obj/kern/kernel.asm	/^f0100ec9:	e8 8c 5a 00 00       	call   f010695a <strchr>$/;"	l
f0100ece	obj/kern/kernel.asm	/^f0100ece:	85 c0                	test   %eax,%eax$/;"	l
f0100ed0	obj/kern/kernel.asm	/^f0100ed0:	74 df                	je     f0100eb1 <monitor+0xa6>$/;"	l
f0100ed2	obj/kern/kernel.asm	/^f0100ed2:	eb 91                	jmp    f0100e65 <monitor+0x5a>$/;"	l
f0100ed4	obj/kern/kernel.asm	/^f0100ed4:	c7 44 b5 a8 00 00 00 	movl   $0x0,-0x58(%ebp,%esi,4)$/;"	l
f0100edb	obj/kern/kernel.asm	/^f0100edb:	00 $/;"	l
f0100edc	obj/kern/kernel.asm	/^f0100edc:	85 f6                	test   %esi,%esi$/;"	l
f0100ede	obj/kern/kernel.asm	/^f0100ede:	0f 84 59 ff ff ff    	je     f0100e3d <monitor+0x32>$/;"	l
f0100ee4	obj/kern/kernel.asm	/^f0100ee4:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0100ee9	obj/kern/kernel.asm	/^f0100ee9:	8d 04 5b             	lea    (%ebx,%ebx,2),%eax$/;"	l
f0100eec	obj/kern/kernel.asm	/^f0100eec:	8b 04 85 00 7e 10 f0 	mov    -0xfef8200(,%eax,4),%eax$/;"	l
f0100ef3	obj/kern/kernel.asm	/^f0100ef3:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100ef7	obj/kern/kernel.asm	/^f0100ef7:	8b 45 a8             	mov    -0x58(%ebp),%eax$/;"	l
f0100efa	obj/kern/kernel.asm	/^f0100efa:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0100efd	obj/kern/kernel.asm	/^f0100efd:	e8 fa 59 00 00       	call   f01068fc <strcmp>$/;"	l
f0100f02	obj/kern/kernel.asm	/^f0100f02:	85 c0                	test   %eax,%eax$/;"	l
f0100f04	obj/kern/kernel.asm	/^f0100f04:	75 24                	jne    f0100f2a <monitor+0x11f>$/;"	l
f0100f06	obj/kern/kernel.asm	/^f0100f06:	8d 04 5b             	lea    (%ebx,%ebx,2),%eax$/;"	l
f0100f09	obj/kern/kernel.asm	/^f0100f09:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0100f0c	obj/kern/kernel.asm	/^f0100f0c:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f0100f10	obj/kern/kernel.asm	/^f0100f10:	8d 4d a8             	lea    -0x58(%ebp),%ecx$/;"	l
f0100f13	obj/kern/kernel.asm	/^f0100f13:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
f0100f17	obj/kern/kernel.asm	/^f0100f17:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0100f1a	obj/kern/kernel.asm	/^f0100f1a:	ff 14 85 08 7e 10 f0 	call   *-0xfef81f8(,%eax,4)$/;"	l
f0100f21	obj/kern/kernel.asm	/^f0100f21:	85 c0                	test   %eax,%eax$/;"	l
f0100f23	obj/kern/kernel.asm	/^f0100f23:	78 25                	js     f0100f4a <monitor+0x13f>$/;"	l
f0100f25	obj/kern/kernel.asm	/^f0100f25:	e9 13 ff ff ff       	jmp    f0100e3d <monitor+0x32>$/;"	l
f0100f2a	obj/kern/kernel.asm	/^f0100f2a:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0100f2d	obj/kern/kernel.asm	/^f0100f2d:	83 fb 07             	cmp    $0x7,%ebx$/;"	l
f0100f30	obj/kern/kernel.asm	/^f0100f30:	75 b7                	jne    f0100ee9 <monitor+0xde>$/;"	l
f0100f32	obj/kern/kernel.asm	/^f0100f32:	8b 45 a8             	mov    -0x58(%ebp),%eax$/;"	l
f0100f35	obj/kern/kernel.asm	/^f0100f35:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0100f39	obj/kern/kernel.asm	/^f0100f39:	c7 04 24 a3 7a 10 f0 	movl   $0xf0107aa3,(%esp)$/;"	l
f0100f40	obj/kern/kernel.asm	/^f0100f40:	e8 59 34 00 00       	call   f010439e <cprintf>$/;"	l
f0100f45	obj/kern/kernel.asm	/^f0100f45:	e9 f3 fe ff ff       	jmp    f0100e3d <monitor+0x32>$/;"	l
f0100f4a	obj/kern/kernel.asm	/^f0100f4a:	83 c4 5c             	add    $0x5c,%esp$/;"	l
f0100f4d	obj/kern/kernel.asm	/^f0100f4d:	5b                   	pop    %ebx$/;"	l
f0100f4e	obj/kern/kernel.asm	/^f0100f4e:	5e                   	pop    %esi$/;"	l
f0100f4f	obj/kern/kernel.asm	/^f0100f4f:	5f                   	pop    %edi$/;"	l
f0100f50	obj/kern/kernel.asm	/^f0100f50:	5d                   	pop    %ebp$/;"	l
f0100f51	obj/kern/kernel.asm	/^f0100f51:	c3                   	ret    $/;"	l
f0100f52	obj/kern/kernel.asm	/^f0100f52:	66 90                	xchg   %ax,%ax$/;"	l
f0100f54	obj/kern/kernel.asm	/^f0100f54:	66 90                	xchg   %ax,%ax$/;"	l
f0100f56	obj/kern/kernel.asm	/^f0100f56:	66 90                	xchg   %ax,%ax$/;"	l
f0100f58	obj/kern/kernel.asm	/^f0100f58:	66 90                	xchg   %ax,%ax$/;"	l
f0100f5a	obj/kern/kernel.asm	/^f0100f5a:	66 90                	xchg   %ax,%ax$/;"	l
f0100f5c	obj/kern/kernel.asm	/^f0100f5c:	66 90                	xchg   %ax,%ax$/;"	l
f0100f5e	obj/kern/kernel.asm	/^f0100f5e:	66 90                	xchg   %ax,%ax$/;"	l
f0100f60	obj/kern/kernel.asm	/^f0100f60 <page2kva>:$/;"	l
f0100f60	obj/kern/kernel.asm	/^f0100f60:	2b 05 90 de 20 f0    	sub    0xf020de90,%eax$/;"	l
f0100f66	obj/kern/kernel.asm	/^f0100f66:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0100f69	obj/kern/kernel.asm	/^f0100f69:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0100f6c	obj/kern/kernel.asm	/^f0100f6c:	89 c2                	mov    %eax,%edx$/;"	l
f0100f6e	obj/kern/kernel.asm	/^f0100f6e:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0100f71	obj/kern/kernel.asm	/^f0100f71:	3b 15 88 de 20 f0    	cmp    0xf020de88,%edx$/;"	l
f0100f77	obj/kern/kernel.asm	/^f0100f77:	72 26                	jb     f0100f9f <page2kva+0x3f>$/;"	l
f0100f79	obj/kern/kernel.asm	/^f0100f79:	55                   	push   %ebp$/;"	l
f0100f7a	obj/kern/kernel.asm	/^f0100f7a:	89 e5                	mov    %esp,%ebp$/;"	l
f0100f7c	obj/kern/kernel.asm	/^f0100f7c:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0100f7f	obj/kern/kernel.asm	/^f0100f7f:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0100f83	obj/kern/kernel.asm	/^f0100f83:	c7 44 24 08 e4 76 10 	movl   $0xf01076e4,0x8(%esp)$/;"	l
f0100f8a	obj/kern/kernel.asm	/^f0100f8a:	f0 $/;"	l
f0100f8b	obj/kern/kernel.asm	/^f0100f8b:	c7 44 24 04 58 00 00 	movl   $0x58,0x4(%esp)$/;"	l
f0100f92	obj/kern/kernel.asm	/^f0100f92:	00 $/;"	l
f0100f93	obj/kern/kernel.asm	/^f0100f93:	c7 04 24 79 87 10 f0 	movl   $0xf0108779,(%esp)$/;"	l
f0100f9a	obj/kern/kernel.asm	/^f0100f9a:	e8 a1 f0 ff ff       	call   f0100040 <_panic>$/;"	l
f0100f9f	obj/kern/kernel.asm	/^f0100f9f:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0100fa4	obj/kern/kernel.asm	/^f0100fa4:	c3                   	ret    $/;"	l
f0100fa5	obj/kern/kernel.asm	/^f0100fa5 <check_va2pa>:$/;"	l
f0100fa5	obj/kern/kernel.asm	/^f0100fa5:	89 d1                	mov    %edx,%ecx$/;"	l
f0100fa7	obj/kern/kernel.asm	/^f0100fa7:	c1 e9 16             	shr    $0x16,%ecx$/;"	l
f0100faa	obj/kern/kernel.asm	/^f0100faa:	8b 04 88             	mov    (%eax,%ecx,4),%eax$/;"	l
f0100fad	obj/kern/kernel.asm	/^f0100fad:	a8 01                	test   $0x1,%al$/;"	l
f0100faf	obj/kern/kernel.asm	/^f0100faf:	74 5d                	je     f010100e <check_va2pa+0x69>$/;"	l
f0100fb1	obj/kern/kernel.asm	/^f0100fb1:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0100fb6	obj/kern/kernel.asm	/^f0100fb6:	89 c1                	mov    %eax,%ecx$/;"	l
f0100fb8	obj/kern/kernel.asm	/^f0100fb8:	c1 e9 0c             	shr    $0xc,%ecx$/;"	l
f0100fbb	obj/kern/kernel.asm	/^f0100fbb:	3b 0d 88 de 20 f0    	cmp    0xf020de88,%ecx$/;"	l
f0100fc1	obj/kern/kernel.asm	/^f0100fc1:	72 26                	jb     f0100fe9 <check_va2pa+0x44>$/;"	l
f0100fc3	obj/kern/kernel.asm	/^f0100fc3:	55                   	push   %ebp$/;"	l
f0100fc4	obj/kern/kernel.asm	/^f0100fc4:	89 e5                	mov    %esp,%ebp$/;"	l
f0100fc6	obj/kern/kernel.asm	/^f0100fc6:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0100fc9	obj/kern/kernel.asm	/^f0100fc9:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0100fcd	obj/kern/kernel.asm	/^f0100fcd:	c7 44 24 08 e4 76 10 	movl   $0xf01076e4,0x8(%esp)$/;"	l
f0100fd4	obj/kern/kernel.asm	/^f0100fd4:	f0 $/;"	l
f0100fd5	obj/kern/kernel.asm	/^f0100fd5:	c7 44 24 04 64 03 00 	movl   $0x364,0x4(%esp)$/;"	l
f0100fdc	obj/kern/kernel.asm	/^f0100fdc:	00 $/;"	l
f0100fdd	obj/kern/kernel.asm	/^f0100fdd:	c7 04 24 87 87 10 f0 	movl   $0xf0108787,(%esp)$/;"	l
f0100fe4	obj/kern/kernel.asm	/^f0100fe4:	e8 57 f0 ff ff       	call   f0100040 <_panic>$/;"	l
f0100fe9	obj/kern/kernel.asm	/^f0100fe9:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0100fec	obj/kern/kernel.asm	/^f0100fec:	81 e2 ff 03 00 00    	and    $0x3ff,%edx$/;"	l
f0100ff2	obj/kern/kernel.asm	/^f0100ff2:	8b 84 90 00 00 00 f0 	mov    -0x10000000(%eax,%edx,4),%eax$/;"	l
f0100ff9	obj/kern/kernel.asm	/^f0100ff9:	89 c2                	mov    %eax,%edx$/;"	l
f0100ffb	obj/kern/kernel.asm	/^f0100ffb:	83 e2 01             	and    $0x1,%edx$/;"	l
f0100ffe	obj/kern/kernel.asm	/^f0100ffe:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0101003	obj/kern/kernel.asm	/^f0101003:	85 d2                	test   %edx,%edx$/;"	l
f0101005	obj/kern/kernel.asm	/^f0101005:	ba ff ff ff ff       	mov    $0xffffffff,%edx$/;"	l
f010100a	obj/kern/kernel.asm	/^f010100a:	0f 44 c2             	cmove  %edx,%eax$/;"	l
f010100d	obj/kern/kernel.asm	/^f010100d:	c3                   	ret    $/;"	l
f010100e	obj/kern/kernel.asm	/^f010100e:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0101013	obj/kern/kernel.asm	/^f0101013:	c3                   	ret    $/;"	l
f0101014	obj/kern/kernel.asm	/^f0101014 <boot_alloc>:$/;"	l
f0101014	obj/kern/kernel.asm	/^f0101014:	55                   	push   %ebp$/;"	l
f0101015	obj/kern/kernel.asm	/^f0101015:	89 e5                	mov    %esp,%ebp$/;"	l
f0101017	obj/kern/kernel.asm	/^f0101017:	53                   	push   %ebx$/;"	l
f0101018	obj/kern/kernel.asm	/^f0101018:	83 ec 14             	sub    $0x14,%esp$/;"	l
f010101b	obj/kern/kernel.asm	/^f010101b:	83 3d 38 d2 20 f0 00 	cmpl   $0x0,0xf020d238$/;"	l
f0101022	obj/kern/kernel.asm	/^f0101022:	75 11                	jne    f0101035 <boot_alloc+0x21>$/;"	l
f0101024	obj/kern/kernel.asm	/^f0101024:	ba 07 00 25 f0       	mov    $0xf0250007,%edx$/;"	l
f0101029	obj/kern/kernel.asm	/^f0101029:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx$/;"	l
f010102f	obj/kern/kernel.asm	/^f010102f:	89 15 38 d2 20 f0    	mov    %edx,0xf020d238$/;"	l
f0101035	obj/kern/kernel.asm	/^f0101035:	8b 15 38 d2 20 f0    	mov    0xf020d238,%edx$/;"	l
f010103b	obj/kern/kernel.asm	/^f010103b:	81 fa ff ff ff ef    	cmp    $0xefffffff,%edx$/;"	l
f0101041	obj/kern/kernel.asm	/^f0101041:	77 20                	ja     f0101063 <boot_alloc+0x4f>$/;"	l
f0101043	obj/kern/kernel.asm	/^f0101043:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f0101047	obj/kern/kernel.asm	/^f0101047:	c7 44 24 08 08 77 10 	movl   $0xf0107708,0x8(%esp)$/;"	l
f010104e	obj/kern/kernel.asm	/^f010104e:	f0 $/;"	l
f010104f	obj/kern/kernel.asm	/^f010104f:	c7 44 24 04 66 00 00 	movl   $0x66,0x4(%esp)$/;"	l
f0101056	obj/kern/kernel.asm	/^f0101056:	00 $/;"	l
f0101057	obj/kern/kernel.asm	/^f0101057:	c7 04 24 87 87 10 f0 	movl   $0xf0108787,(%esp)$/;"	l
f010105e	obj/kern/kernel.asm	/^f010105e:	e8 dd ef ff ff       	call   f0100040 <_panic>$/;"	l
f0101063	obj/kern/kernel.asm	/^f0101063:	8d 8a 00 00 00 10    	lea    0x10000000(%edx),%ecx$/;"	l
f0101069	obj/kern/kernel.asm	/^f0101069:	89 cb                	mov    %ecx,%ebx$/;"	l
f010106b	obj/kern/kernel.asm	/^f010106b:	c1 eb 0c             	shr    $0xc,%ebx$/;"	l
f010106e	obj/kern/kernel.asm	/^f010106e:	3b 1d 88 de 20 f0    	cmp    0xf020de88,%ebx$/;"	l
f0101074	obj/kern/kernel.asm	/^f0101074:	72 20                	jb     f0101096 <boot_alloc+0x82>$/;"	l
f0101076	obj/kern/kernel.asm	/^f0101076:	89 4c 24 0c          	mov    %ecx,0xc(%esp)$/;"	l
f010107a	obj/kern/kernel.asm	/^f010107a:	c7 44 24 08 e4 76 10 	movl   $0xf01076e4,0x8(%esp)$/;"	l
f0101081	obj/kern/kernel.asm	/^f0101081:	f0 $/;"	l
f0101082	obj/kern/kernel.asm	/^f0101082:	c7 44 24 04 66 00 00 	movl   $0x66,0x4(%esp)$/;"	l
f0101089	obj/kern/kernel.asm	/^f0101089:	00 $/;"	l
f010108a	obj/kern/kernel.asm	/^f010108a:	c7 04 24 87 87 10 f0 	movl   $0xf0108787,(%esp)$/;"	l
f0101091	obj/kern/kernel.asm	/^f0101091:	e8 aa ef ff ff       	call   f0100040 <_panic>$/;"	l
f0101096	obj/kern/kernel.asm	/^f0101096:	05 ff 0f 00 00       	add    $0xfff,%eax$/;"	l
f010109b	obj/kern/kernel.asm	/^f010109b:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f01010a0	obj/kern/kernel.asm	/^f01010a0:	01 d0                	add    %edx,%eax$/;"	l
f01010a2	obj/kern/kernel.asm	/^f01010a2:	a3 38 d2 20 f0       	mov    %eax,0xf020d238$/;"	l
f01010a7	obj/kern/kernel.asm	/^f01010a7:	89 d0                	mov    %edx,%eax$/;"	l
f01010a9	obj/kern/kernel.asm	/^f01010a9:	83 c4 14             	add    $0x14,%esp$/;"	l
f01010ac	obj/kern/kernel.asm	/^f01010ac:	5b                   	pop    %ebx$/;"	l
f01010ad	obj/kern/kernel.asm	/^f01010ad:	5d                   	pop    %ebp$/;"	l
f01010ae	obj/kern/kernel.asm	/^f01010ae:	c3                   	ret    $/;"	l
f01010af	obj/kern/kernel.asm	/^f01010af <check_page_free_list>:$/;"	l
f01010af	obj/kern/kernel.asm	/^f01010af:	55                   	push   %ebp$/;"	l
f01010b0	obj/kern/kernel.asm	/^f01010b0:	89 e5                	mov    %esp,%ebp$/;"	l
f01010b2	obj/kern/kernel.asm	/^f01010b2:	57                   	push   %edi$/;"	l
f01010b3	obj/kern/kernel.asm	/^f01010b3:	56                   	push   %esi$/;"	l
f01010b4	obj/kern/kernel.asm	/^f01010b4:	53                   	push   %ebx$/;"	l
f01010b5	obj/kern/kernel.asm	/^f01010b5:	83 ec 4c             	sub    $0x4c,%esp$/;"	l
f01010b8	obj/kern/kernel.asm	/^f01010b8:	84 c0                	test   %al,%al$/;"	l
f01010ba	obj/kern/kernel.asm	/^f01010ba:	0f 85 31 03 00 00    	jne    f01013f1 <check_page_free_list+0x342>$/;"	l
f01010c0	obj/kern/kernel.asm	/^f01010c0:	e9 3e 03 00 00       	jmp    f0101403 <check_page_free_list+0x354>$/;"	l
f01010c5	obj/kern/kernel.asm	/^f01010c5:	c7 44 24 08 54 7e 10 	movl   $0xf0107e54,0x8(%esp)$/;"	l
f01010cc	obj/kern/kernel.asm	/^f01010cc:	f0 $/;"	l
f01010cd	obj/kern/kernel.asm	/^f01010cd:	c7 44 24 04 99 02 00 	movl   $0x299,0x4(%esp)$/;"	l
f01010d4	obj/kern/kernel.asm	/^f01010d4:	00 $/;"	l
f01010d5	obj/kern/kernel.asm	/^f01010d5:	c7 04 24 87 87 10 f0 	movl   $0xf0108787,(%esp)$/;"	l
f01010dc	obj/kern/kernel.asm	/^f01010dc:	e8 5f ef ff ff       	call   f0100040 <_panic>$/;"	l
f01010e1	obj/kern/kernel.asm	/^f01010e1:	8d 55 d8             	lea    -0x28(%ebp),%edx$/;"	l
f01010e4	obj/kern/kernel.asm	/^f01010e4:	89 55 e0             	mov    %edx,-0x20(%ebp)$/;"	l
f01010e7	obj/kern/kernel.asm	/^f01010e7:	8d 55 dc             	lea    -0x24(%ebp),%edx$/;"	l
f01010ea	obj/kern/kernel.asm	/^f01010ea:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
f01010ed	obj/kern/kernel.asm	/^f01010ed:	89 c2                	mov    %eax,%edx$/;"	l
f01010ef	obj/kern/kernel.asm	/^f01010ef:	2b 15 90 de 20 f0    	sub    0xf020de90,%edx$/;"	l
f01010f5	obj/kern/kernel.asm	/^f01010f5:	f7 c2 00 e0 7f 00    	test   $0x7fe000,%edx$/;"	l
f01010fb	obj/kern/kernel.asm	/^f01010fb:	0f 95 c2             	setne  %dl$/;"	l
f01010fe	obj/kern/kernel.asm	/^f01010fe:	0f b6 d2             	movzbl %dl,%edx$/;"	l
f0101101	obj/kern/kernel.asm	/^f0101101:	8b 4c 95 e0          	mov    -0x20(%ebp,%edx,4),%ecx$/;"	l
f0101105	obj/kern/kernel.asm	/^f0101105:	89 01                	mov    %eax,(%ecx)$/;"	l
f0101107	obj/kern/kernel.asm	/^f0101107:	89 44 95 e0          	mov    %eax,-0x20(%ebp,%edx,4)$/;"	l
f010110b	obj/kern/kernel.asm	/^f010110b:	8b 00                	mov    (%eax),%eax$/;"	l
f010110d	obj/kern/kernel.asm	/^f010110d:	85 c0                	test   %eax,%eax$/;"	l
f010110f	obj/kern/kernel.asm	/^f010110f:	75 dc                	jne    f01010ed <check_page_free_list+0x3e>$/;"	l
f0101111	obj/kern/kernel.asm	/^f0101111:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0101114	obj/kern/kernel.asm	/^f0101114:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f010111a	obj/kern/kernel.asm	/^f010111a:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f010111d	obj/kern/kernel.asm	/^f010111d:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f0101120	obj/kern/kernel.asm	/^f0101120:	89 10                	mov    %edx,(%eax)$/;"	l
f0101122	obj/kern/kernel.asm	/^f0101122:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
f0101125	obj/kern/kernel.asm	/^f0101125:	a3 40 d2 20 f0       	mov    %eax,0xf020d240$/;"	l
f010112a	obj/kern/kernel.asm	/^f010112a:	be 01 00 00 00       	mov    $0x1,%esi$/;"	l
f010112f	obj/kern/kernel.asm	/^f010112f:	8b 1d 40 d2 20 f0    	mov    0xf020d240,%ebx$/;"	l
f0101135	obj/kern/kernel.asm	/^f0101135:	eb 63                	jmp    f010119a <check_page_free_list+0xeb>$/;"	l
f0101137	obj/kern/kernel.asm	/^f0101137:	89 d8                	mov    %ebx,%eax$/;"	l
f0101139	obj/kern/kernel.asm	/^f0101139:	2b 05 90 de 20 f0    	sub    0xf020de90,%eax$/;"	l
f010113f	obj/kern/kernel.asm	/^f010113f:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0101142	obj/kern/kernel.asm	/^f0101142:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101145	obj/kern/kernel.asm	/^f0101145:	89 c2                	mov    %eax,%edx$/;"	l
f0101147	obj/kern/kernel.asm	/^f0101147:	c1 ea 16             	shr    $0x16,%edx$/;"	l
f010114a	obj/kern/kernel.asm	/^f010114a:	39 f2                	cmp    %esi,%edx$/;"	l
f010114c	obj/kern/kernel.asm	/^f010114c:	73 4a                	jae    f0101198 <check_page_free_list+0xe9>$/;"	l
f010114e	obj/kern/kernel.asm	/^f010114e:	89 c2                	mov    %eax,%edx$/;"	l
f0101150	obj/kern/kernel.asm	/^f0101150:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0101153	obj/kern/kernel.asm	/^f0101153:	3b 15 88 de 20 f0    	cmp    0xf020de88,%edx$/;"	l
f0101159	obj/kern/kernel.asm	/^f0101159:	72 20                	jb     f010117b <check_page_free_list+0xcc>$/;"	l
f010115b	obj/kern/kernel.asm	/^f010115b:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f010115f	obj/kern/kernel.asm	/^f010115f:	c7 44 24 08 e4 76 10 	movl   $0xf01076e4,0x8(%esp)$/;"	l
f0101166	obj/kern/kernel.asm	/^f0101166:	f0 $/;"	l
f0101167	obj/kern/kernel.asm	/^f0101167:	c7 44 24 04 58 00 00 	movl   $0x58,0x4(%esp)$/;"	l
f010116e	obj/kern/kernel.asm	/^f010116e:	00 $/;"	l
f010116f	obj/kern/kernel.asm	/^f010116f:	c7 04 24 79 87 10 f0 	movl   $0xf0108779,(%esp)$/;"	l
f0101176	obj/kern/kernel.asm	/^f0101176:	e8 c5 ee ff ff       	call   f0100040 <_panic>$/;"	l
f010117b	obj/kern/kernel.asm	/^f010117b:	c7 44 24 08 80 00 00 	movl   $0x80,0x8(%esp)$/;"	l
f0101182	obj/kern/kernel.asm	/^f0101182:	00 $/;"	l
f0101183	obj/kern/kernel.asm	/^f0101183:	c7 44 24 04 97 00 00 	movl   $0x97,0x4(%esp)$/;"	l
f010118a	obj/kern/kernel.asm	/^f010118a:	00 $/;"	l
f010118b	obj/kern/kernel.asm	/^f010118b:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0101190	obj/kern/kernel.asm	/^f0101190:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101193	obj/kern/kernel.asm	/^f0101193:	e8 ff 57 00 00       	call   f0106997 <memset>$/;"	l
f0101198	obj/kern/kernel.asm	/^f0101198:	8b 1b                	mov    (%ebx),%ebx$/;"	l
f010119a	obj/kern/kernel.asm	/^f010119a:	85 db                	test   %ebx,%ebx$/;"	l
f010119c	obj/kern/kernel.asm	/^f010119c:	75 99                	jne    f0101137 <check_page_free_list+0x88>$/;"	l
f010119e	obj/kern/kernel.asm	/^f010119e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01011a3	obj/kern/kernel.asm	/^f01011a3:	e8 6c fe ff ff       	call   f0101014 <boot_alloc>$/;"	l
f01011a8	obj/kern/kernel.asm	/^f01011a8:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
f01011ab	obj/kern/kernel.asm	/^f01011ab:	8b 15 40 d2 20 f0    	mov    0xf020d240,%edx$/;"	l
f01011b1	obj/kern/kernel.asm	/^f01011b1:	8b 0d 90 de 20 f0    	mov    0xf020de90,%ecx$/;"	l
f01011b7	obj/kern/kernel.asm	/^f01011b7:	a1 88 de 20 f0       	mov    0xf020de88,%eax$/;"	l
f01011bc	obj/kern/kernel.asm	/^f01011bc:	89 45 c4             	mov    %eax,-0x3c(%ebp)$/;"	l
f01011bf	obj/kern/kernel.asm	/^f01011bf:	8d 04 c1             	lea    (%ecx,%eax,8),%eax$/;"	l
f01011c2	obj/kern/kernel.asm	/^f01011c2:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f01011c5	obj/kern/kernel.asm	/^f01011c5:	89 4d cc             	mov    %ecx,-0x34(%ebp)$/;"	l
f01011c8	obj/kern/kernel.asm	/^f01011c8:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f01011cd	obj/kern/kernel.asm	/^f01011cd:	89 4d d4             	mov    %ecx,-0x2c(%ebp)$/;"	l
f01011d0	obj/kern/kernel.asm	/^f01011d0:	e9 c4 01 00 00       	jmp    f0101399 <check_page_free_list+0x2ea>$/;"	l
f01011d5	obj/kern/kernel.asm	/^f01011d5:	3b 55 d4             	cmp    -0x2c(%ebp),%edx$/;"	l
f01011d8	obj/kern/kernel.asm	/^f01011d8:	73 24                	jae    f01011fe <check_page_free_list+0x14f>$/;"	l
f01011da	obj/kern/kernel.asm	/^f01011da:	c7 44 24 0c 93 87 10 	movl   $0xf0108793,0xc(%esp)$/;"	l
f01011e1	obj/kern/kernel.asm	/^f01011e1:	f0 $/;"	l
f01011e2	obj/kern/kernel.asm	/^f01011e2:	c7 44 24 08 9f 87 10 	movl   $0xf010879f,0x8(%esp)$/;"	l
f01011e9	obj/kern/kernel.asm	/^f01011e9:	f0 $/;"	l
f01011ea	obj/kern/kernel.asm	/^f01011ea:	c7 44 24 04 b3 02 00 	movl   $0x2b3,0x4(%esp)$/;"	l
f01011f1	obj/kern/kernel.asm	/^f01011f1:	00 $/;"	l
f01011f2	obj/kern/kernel.asm	/^f01011f2:	c7 04 24 87 87 10 f0 	movl   $0xf0108787,(%esp)$/;"	l
f01011f9	obj/kern/kernel.asm	/^f01011f9:	e8 42 ee ff ff       	call   f0100040 <_panic>$/;"	l
f01011fe	obj/kern/kernel.asm	/^f01011fe:	3b 55 d0             	cmp    -0x30(%ebp),%edx$/;"	l
f0101201	obj/kern/kernel.asm	/^f0101201:	72 24                	jb     f0101227 <check_page_free_list+0x178>$/;"	l
f0101203	obj/kern/kernel.asm	/^f0101203:	c7 44 24 0c b4 87 10 	movl   $0xf01087b4,0xc(%esp)$/;"	l
f010120a	obj/kern/kernel.asm	/^f010120a:	f0 $/;"	l
f010120b	obj/kern/kernel.asm	/^f010120b:	c7 44 24 08 9f 87 10 	movl   $0xf010879f,0x8(%esp)$/;"	l
f0101212	obj/kern/kernel.asm	/^f0101212:	f0 $/;"	l
f0101213	obj/kern/kernel.asm	/^f0101213:	c7 44 24 04 b4 02 00 	movl   $0x2b4,0x4(%esp)$/;"	l
f010121a	obj/kern/kernel.asm	/^f010121a:	00 $/;"	l
f010121b	obj/kern/kernel.asm	/^f010121b:	c7 04 24 87 87 10 f0 	movl   $0xf0108787,(%esp)$/;"	l
f0101222	obj/kern/kernel.asm	/^f0101222:	e8 19 ee ff ff       	call   f0100040 <_panic>$/;"	l
f0101227	obj/kern/kernel.asm	/^f0101227:	89 d0                	mov    %edx,%eax$/;"	l
f0101229	obj/kern/kernel.asm	/^f0101229:	2b 45 cc             	sub    -0x34(%ebp),%eax$/;"	l
f010122c	obj/kern/kernel.asm	/^f010122c:	a8 07                	test   $0x7,%al$/;"	l
f010122e	obj/kern/kernel.asm	/^f010122e:	74 24                	je     f0101254 <check_page_free_list+0x1a5>$/;"	l
f0101230	obj/kern/kernel.asm	/^f0101230:	c7 44 24 0c 78 7e 10 	movl   $0xf0107e78,0xc(%esp)$/;"	l
f0101237	obj/kern/kernel.asm	/^f0101237:	f0 $/;"	l
f0101238	obj/kern/kernel.asm	/^f0101238:	c7 44 24 08 9f 87 10 	movl   $0xf010879f,0x8(%esp)$/;"	l
f010123f	obj/kern/kernel.asm	/^f010123f:	f0 $/;"	l
f0101240	obj/kern/kernel.asm	/^f0101240:	c7 44 24 04 b5 02 00 	movl   $0x2b5,0x4(%esp)$/;"	l
f0101247	obj/kern/kernel.asm	/^f0101247:	00 $/;"	l
f0101248	obj/kern/kernel.asm	/^f0101248:	c7 04 24 87 87 10 f0 	movl   $0xf0108787,(%esp)$/;"	l
f010124f	obj/kern/kernel.asm	/^f010124f:	e8 ec ed ff ff       	call   f0100040 <_panic>$/;"	l
f0101254	obj/kern/kernel.asm	/^f0101254:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0101257	obj/kern/kernel.asm	/^f0101257:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f010125a	obj/kern/kernel.asm	/^f010125a:	85 c0                	test   %eax,%eax$/;"	l
f010125c	obj/kern/kernel.asm	/^f010125c:	75 24                	jne    f0101282 <check_page_free_list+0x1d3>$/;"	l
f010125e	obj/kern/kernel.asm	/^f010125e:	c7 44 24 0c c8 87 10 	movl   $0xf01087c8,0xc(%esp)$/;"	l
f0101265	obj/kern/kernel.asm	/^f0101265:	f0 $/;"	l
f0101266	obj/kern/kernel.asm	/^f0101266:	c7 44 24 08 9f 87 10 	movl   $0xf010879f,0x8(%esp)$/;"	l
f010126d	obj/kern/kernel.asm	/^f010126d:	f0 $/;"	l
f010126e	obj/kern/kernel.asm	/^f010126e:	c7 44 24 04 b8 02 00 	movl   $0x2b8,0x4(%esp)$/;"	l
f0101275	obj/kern/kernel.asm	/^f0101275:	00 $/;"	l
f0101276	obj/kern/kernel.asm	/^f0101276:	c7 04 24 87 87 10 f0 	movl   $0xf0108787,(%esp)$/;"	l
f010127d	obj/kern/kernel.asm	/^f010127d:	e8 be ed ff ff       	call   f0100040 <_panic>$/;"	l
f0101282	obj/kern/kernel.asm	/^f0101282:	3d 00 00 0a 00       	cmp    $0xa0000,%eax$/;"	l
f0101287	obj/kern/kernel.asm	/^f0101287:	75 24                	jne    f01012ad <check_page_free_list+0x1fe>$/;"	l
f0101289	obj/kern/kernel.asm	/^f0101289:	c7 44 24 0c d9 87 10 	movl   $0xf01087d9,0xc(%esp)$/;"	l
f0101290	obj/kern/kernel.asm	/^f0101290:	f0 $/;"	l
f0101291	obj/kern/kernel.asm	/^f0101291:	c7 44 24 08 9f 87 10 	movl   $0xf010879f,0x8(%esp)$/;"	l
f0101298	obj/kern/kernel.asm	/^f0101298:	f0 $/;"	l
f0101299	obj/kern/kernel.asm	/^f0101299:	c7 44 24 04 b9 02 00 	movl   $0x2b9,0x4(%esp)$/;"	l
f01012a0	obj/kern/kernel.asm	/^f01012a0:	00 $/;"	l
f01012a1	obj/kern/kernel.asm	/^f01012a1:	c7 04 24 87 87 10 f0 	movl   $0xf0108787,(%esp)$/;"	l
f01012a8	obj/kern/kernel.asm	/^f01012a8:	e8 93 ed ff ff       	call   f0100040 <_panic>$/;"	l
f01012ad	obj/kern/kernel.asm	/^f01012ad:	3d 00 f0 0f 00       	cmp    $0xff000,%eax$/;"	l
f01012b2	obj/kern/kernel.asm	/^f01012b2:	75 24                	jne    f01012d8 <check_page_free_list+0x229>$/;"	l
f01012b4	obj/kern/kernel.asm	/^f01012b4:	c7 44 24 0c ac 7e 10 	movl   $0xf0107eac,0xc(%esp)$/;"	l
f01012bb	obj/kern/kernel.asm	/^f01012bb:	f0 $/;"	l
f01012bc	obj/kern/kernel.asm	/^f01012bc:	c7 44 24 08 9f 87 10 	movl   $0xf010879f,0x8(%esp)$/;"	l
f01012c3	obj/kern/kernel.asm	/^f01012c3:	f0 $/;"	l
f01012c4	obj/kern/kernel.asm	/^f01012c4:	c7 44 24 04 ba 02 00 	movl   $0x2ba,0x4(%esp)$/;"	l
f01012cb	obj/kern/kernel.asm	/^f01012cb:	00 $/;"	l
f01012cc	obj/kern/kernel.asm	/^f01012cc:	c7 04 24 87 87 10 f0 	movl   $0xf0108787,(%esp)$/;"	l
f01012d3	obj/kern/kernel.asm	/^f01012d3:	e8 68 ed ff ff       	call   f0100040 <_panic>$/;"	l
f01012d8	obj/kern/kernel.asm	/^f01012d8:	3d 00 00 10 00       	cmp    $0x100000,%eax$/;"	l
f01012dd	obj/kern/kernel.asm	/^f01012dd:	75 24                	jne    f0101303 <check_page_free_list+0x254>$/;"	l
f01012df	obj/kern/kernel.asm	/^f01012df:	c7 44 24 0c f2 87 10 	movl   $0xf01087f2,0xc(%esp)$/;"	l
f01012e6	obj/kern/kernel.asm	/^f01012e6:	f0 $/;"	l
f01012e7	obj/kern/kernel.asm	/^f01012e7:	c7 44 24 08 9f 87 10 	movl   $0xf010879f,0x8(%esp)$/;"	l
f01012ee	obj/kern/kernel.asm	/^f01012ee:	f0 $/;"	l
f01012ef	obj/kern/kernel.asm	/^f01012ef:	c7 44 24 04 bb 02 00 	movl   $0x2bb,0x4(%esp)$/;"	l
f01012f6	obj/kern/kernel.asm	/^f01012f6:	00 $/;"	l
f01012f7	obj/kern/kernel.asm	/^f01012f7:	c7 04 24 87 87 10 f0 	movl   $0xf0108787,(%esp)$/;"	l
f01012fe	obj/kern/kernel.asm	/^f01012fe:	e8 3d ed ff ff       	call   f0100040 <_panic>$/;"	l
f0101303	obj/kern/kernel.asm	/^f0101303:	3d ff ff 0f 00       	cmp    $0xfffff,%eax$/;"	l
f0101308	obj/kern/kernel.asm	/^f0101308:	0f 86 1c 01 00 00    	jbe    f010142a <check_page_free_list+0x37b>$/;"	l
f010130e	obj/kern/kernel.asm	/^f010130e:	89 c1                	mov    %eax,%ecx$/;"	l
f0101310	obj/kern/kernel.asm	/^f0101310:	c1 e9 0c             	shr    $0xc,%ecx$/;"	l
f0101313	obj/kern/kernel.asm	/^f0101313:	39 4d c4             	cmp    %ecx,-0x3c(%ebp)$/;"	l
f0101316	obj/kern/kernel.asm	/^f0101316:	77 20                	ja     f0101338 <check_page_free_list+0x289>$/;"	l
f0101318	obj/kern/kernel.asm	/^f0101318:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f010131c	obj/kern/kernel.asm	/^f010131c:	c7 44 24 08 e4 76 10 	movl   $0xf01076e4,0x8(%esp)$/;"	l
f0101323	obj/kern/kernel.asm	/^f0101323:	f0 $/;"	l
f0101324	obj/kern/kernel.asm	/^f0101324:	c7 44 24 04 58 00 00 	movl   $0x58,0x4(%esp)$/;"	l
f010132b	obj/kern/kernel.asm	/^f010132b:	00 $/;"	l
f010132c	obj/kern/kernel.asm	/^f010132c:	c7 04 24 79 87 10 f0 	movl   $0xf0108779,(%esp)$/;"	l
f0101333	obj/kern/kernel.asm	/^f0101333:	e8 08 ed ff ff       	call   f0100040 <_panic>$/;"	l
f0101338	obj/kern/kernel.asm	/^f0101338:	8d 88 00 00 00 f0    	lea    -0x10000000(%eax),%ecx$/;"	l
f010133e	obj/kern/kernel.asm	/^f010133e:	39 4d c8             	cmp    %ecx,-0x38(%ebp)$/;"	l
f0101341	obj/kern/kernel.asm	/^f0101341:	0f 86 d3 00 00 00    	jbe    f010141a <check_page_free_list+0x36b>$/;"	l
f0101347	obj/kern/kernel.asm	/^f0101347:	c7 44 24 0c d0 7e 10 	movl   $0xf0107ed0,0xc(%esp)$/;"	l
f010134e	obj/kern/kernel.asm	/^f010134e:	f0 $/;"	l
f010134f	obj/kern/kernel.asm	/^f010134f:	c7 44 24 08 9f 87 10 	movl   $0xf010879f,0x8(%esp)$/;"	l
f0101356	obj/kern/kernel.asm	/^f0101356:	f0 $/;"	l
f0101357	obj/kern/kernel.asm	/^f0101357:	c7 44 24 04 bc 02 00 	movl   $0x2bc,0x4(%esp)$/;"	l
f010135e	obj/kern/kernel.asm	/^f010135e:	00 $/;"	l
f010135f	obj/kern/kernel.asm	/^f010135f:	c7 04 24 87 87 10 f0 	movl   $0xf0108787,(%esp)$/;"	l
f0101366	obj/kern/kernel.asm	/^f0101366:	e8 d5 ec ff ff       	call   f0100040 <_panic>$/;"	l
f010136b	obj/kern/kernel.asm	/^f010136b:	c7 44 24 0c 0c 88 10 	movl   $0xf010880c,0xc(%esp)$/;"	l
f0101372	obj/kern/kernel.asm	/^f0101372:	f0 $/;"	l
f0101373	obj/kern/kernel.asm	/^f0101373:	c7 44 24 08 9f 87 10 	movl   $0xf010879f,0x8(%esp)$/;"	l
f010137a	obj/kern/kernel.asm	/^f010137a:	f0 $/;"	l
f010137b	obj/kern/kernel.asm	/^f010137b:	c7 44 24 04 be 02 00 	movl   $0x2be,0x4(%esp)$/;"	l
f0101382	obj/kern/kernel.asm	/^f0101382:	00 $/;"	l
f0101383	obj/kern/kernel.asm	/^f0101383:	c7 04 24 87 87 10 f0 	movl   $0xf0108787,(%esp)$/;"	l
f010138a	obj/kern/kernel.asm	/^f010138a:	e8 b1 ec ff ff       	call   f0100040 <_panic>$/;"	l
f010138f	obj/kern/kernel.asm	/^f010138f:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0101392	obj/kern/kernel.asm	/^f0101392:	eb 03                	jmp    f0101397 <check_page_free_list+0x2e8>$/;"	l
f0101394	obj/kern/kernel.asm	/^f0101394:	83 c7 01             	add    $0x1,%edi$/;"	l
f0101397	obj/kern/kernel.asm	/^f0101397:	8b 12                	mov    (%edx),%edx$/;"	l
f0101399	obj/kern/kernel.asm	/^f0101399:	85 d2                	test   %edx,%edx$/;"	l
f010139b	obj/kern/kernel.asm	/^f010139b:	0f 85 34 fe ff ff    	jne    f01011d5 <check_page_free_list+0x126>$/;"	l
f01013a1	obj/kern/kernel.asm	/^f01013a1:	85 db                	test   %ebx,%ebx$/;"	l
f01013a3	obj/kern/kernel.asm	/^f01013a3:	7f 24                	jg     f01013c9 <check_page_free_list+0x31a>$/;"	l
f01013a5	obj/kern/kernel.asm	/^f01013a5:	c7 44 24 0c 29 88 10 	movl   $0xf0108829,0xc(%esp)$/;"	l
f01013ac	obj/kern/kernel.asm	/^f01013ac:	f0 $/;"	l
f01013ad	obj/kern/kernel.asm	/^f01013ad:	c7 44 24 08 9f 87 10 	movl   $0xf010879f,0x8(%esp)$/;"	l
f01013b4	obj/kern/kernel.asm	/^f01013b4:	f0 $/;"	l
f01013b5	obj/kern/kernel.asm	/^f01013b5:	c7 44 24 04 c6 02 00 	movl   $0x2c6,0x4(%esp)$/;"	l
f01013bc	obj/kern/kernel.asm	/^f01013bc:	00 $/;"	l
f01013bd	obj/kern/kernel.asm	/^f01013bd:	c7 04 24 87 87 10 f0 	movl   $0xf0108787,(%esp)$/;"	l
f01013c4	obj/kern/kernel.asm	/^f01013c4:	e8 77 ec ff ff       	call   f0100040 <_panic>$/;"	l
f01013c9	obj/kern/kernel.asm	/^f01013c9:	85 ff                	test   %edi,%edi$/;"	l
f01013cb	obj/kern/kernel.asm	/^f01013cb:	7f 6d                	jg     f010143a <check_page_free_list+0x38b>$/;"	l
f01013cd	obj/kern/kernel.asm	/^f01013cd:	c7 44 24 0c 3b 88 10 	movl   $0xf010883b,0xc(%esp)$/;"	l
f01013d4	obj/kern/kernel.asm	/^f01013d4:	f0 $/;"	l
f01013d5	obj/kern/kernel.asm	/^f01013d5:	c7 44 24 08 9f 87 10 	movl   $0xf010879f,0x8(%esp)$/;"	l
f01013dc	obj/kern/kernel.asm	/^f01013dc:	f0 $/;"	l
f01013dd	obj/kern/kernel.asm	/^f01013dd:	c7 44 24 04 c7 02 00 	movl   $0x2c7,0x4(%esp)$/;"	l
f01013e4	obj/kern/kernel.asm	/^f01013e4:	00 $/;"	l
f01013e5	obj/kern/kernel.asm	/^f01013e5:	c7 04 24 87 87 10 f0 	movl   $0xf0108787,(%esp)$/;"	l
f01013ec	obj/kern/kernel.asm	/^f01013ec:	e8 4f ec ff ff       	call   f0100040 <_panic>$/;"	l
f01013f1	obj/kern/kernel.asm	/^f01013f1:	a1 40 d2 20 f0       	mov    0xf020d240,%eax$/;"	l
f01013f6	obj/kern/kernel.asm	/^f01013f6:	85 c0                	test   %eax,%eax$/;"	l
f01013f8	obj/kern/kernel.asm	/^f01013f8:	0f 85 e3 fc ff ff    	jne    f01010e1 <check_page_free_list+0x32>$/;"	l
f01013fe	obj/kern/kernel.asm	/^f01013fe:	e9 c2 fc ff ff       	jmp    f01010c5 <check_page_free_list+0x16>$/;"	l
f0101403	obj/kern/kernel.asm	/^f0101403:	83 3d 40 d2 20 f0 00 	cmpl   $0x0,0xf020d240$/;"	l
f010140a	obj/kern/kernel.asm	/^f010140a:	0f 84 b5 fc ff ff    	je     f01010c5 <check_page_free_list+0x16>$/;"	l
f0101410	obj/kern/kernel.asm	/^f0101410:	be 00 04 00 00       	mov    $0x400,%esi$/;"	l
f0101415	obj/kern/kernel.asm	/^f0101415:	e9 15 fd ff ff       	jmp    f010112f <check_page_free_list+0x80>$/;"	l
f010141a	obj/kern/kernel.asm	/^f010141a:	3d 00 70 00 00       	cmp    $0x7000,%eax$/;"	l
f010141f	obj/kern/kernel.asm	/^f010141f:	0f 85 6f ff ff ff    	jne    f0101394 <check_page_free_list+0x2e5>$/;"	l
f0101425	obj/kern/kernel.asm	/^f0101425:	e9 41 ff ff ff       	jmp    f010136b <check_page_free_list+0x2bc>$/;"	l
f010142a	obj/kern/kernel.asm	/^f010142a:	3d 00 70 00 00       	cmp    $0x7000,%eax$/;"	l
f010142f	obj/kern/kernel.asm	/^f010142f:	0f 85 5a ff ff ff    	jne    f010138f <check_page_free_list+0x2e0>$/;"	l
f0101435	obj/kern/kernel.asm	/^f0101435:	e9 31 ff ff ff       	jmp    f010136b <check_page_free_list+0x2bc>$/;"	l
f010143a	obj/kern/kernel.asm	/^f010143a:	83 c4 4c             	add    $0x4c,%esp$/;"	l
f010143d	obj/kern/kernel.asm	/^f010143d:	5b                   	pop    %ebx$/;"	l
f010143e	obj/kern/kernel.asm	/^f010143e:	5e                   	pop    %esi$/;"	l
f010143f	obj/kern/kernel.asm	/^f010143f:	5f                   	pop    %edi$/;"	l
f0101440	obj/kern/kernel.asm	/^f0101440:	5d                   	pop    %ebp$/;"	l
f0101441	obj/kern/kernel.asm	/^f0101441:	c3                   	ret    $/;"	l
f0101442	obj/kern/kernel.asm	/^f0101442 <page_init>:$/;"	l
f0101442	obj/kern/kernel.asm	/^f0101442:	55                   	push   %ebp$/;"	l
f0101443	obj/kern/kernel.asm	/^f0101443:	89 e5                	mov    %esp,%ebp$/;"	l
f0101445	obj/kern/kernel.asm	/^f0101445:	57                   	push   %edi$/;"	l
f0101446	obj/kern/kernel.asm	/^f0101446:	56                   	push   %esi$/;"	l
f0101447	obj/kern/kernel.asm	/^f0101447:	53                   	push   %ebx$/;"	l
f0101448	obj/kern/kernel.asm	/^f0101448:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f010144b	obj/kern/kernel.asm	/^f010144b:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0101450	obj/kern/kernel.asm	/^f0101450:	e8 bf fb ff ff       	call   f0101014 <boot_alloc>$/;"	l
f0101455	obj/kern/kernel.asm	/^f0101455:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f010145a	obj/kern/kernel.asm	/^f010145a:	77 20                	ja     f010147c <page_init+0x3a>$/;"	l
f010145c	obj/kern/kernel.asm	/^f010145c:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0101460	obj/kern/kernel.asm	/^f0101460:	c7 44 24 08 08 77 10 	movl   $0xf0107708,0x8(%esp)$/;"	l
f0101467	obj/kern/kernel.asm	/^f0101467:	f0 $/;"	l
f0101468	obj/kern/kernel.asm	/^f0101468:	c7 44 24 04 36 01 00 	movl   $0x136,0x4(%esp)$/;"	l
f010146f	obj/kern/kernel.asm	/^f010146f:	00 $/;"	l
f0101470	obj/kern/kernel.asm	/^f0101470:	c7 04 24 87 87 10 f0 	movl   $0xf0108787,(%esp)$/;"	l
f0101477	obj/kern/kernel.asm	/^f0101477:	e8 c4 eb ff ff       	call   f0100040 <_panic>$/;"	l
f010147c	obj/kern/kernel.asm	/^f010147c:	8d b8 00 00 00 10    	lea    0x10000000(%eax),%edi$/;"	l
f0101482	obj/kern/kernel.asm	/^f0101482:	c1 ef 0c             	shr    $0xc,%edi$/;"	l
f0101485	obj/kern/kernel.asm	/^f0101485:	8b 35 44 d2 20 f0    	mov    0xf020d244,%esi$/;"	l
f010148b	obj/kern/kernel.asm	/^f010148b:	8b 1d 40 d2 20 f0    	mov    0xf020d240,%ebx$/;"	l
f0101491	obj/kern/kernel.asm	/^f0101491:	ba 01 00 00 00       	mov    $0x1,%edx$/;"	l
f0101496	obj/kern/kernel.asm	/^f0101496:	eb 2f                	jmp    f01014c7 <page_init+0x85>$/;"	l
f0101498	obj/kern/kernel.asm	/^f0101498:	39 f2                	cmp    %esi,%edx$/;"	l
f010149a	obj/kern/kernel.asm	/^f010149a:	72 04                	jb     f01014a0 <page_init+0x5e>$/;"	l
f010149c	obj/kern/kernel.asm	/^f010149c:	39 fa                	cmp    %edi,%edx$/;"	l
f010149e	obj/kern/kernel.asm	/^f010149e:	72 24                	jb     f01014c4 <page_init+0x82>$/;"	l
f01014a0	obj/kern/kernel.asm	/^f01014a0:	83 fa 07             	cmp    $0x7,%edx$/;"	l
f01014a3	obj/kern/kernel.asm	/^f01014a3:	74 1f                	je     f01014c4 <page_init+0x82>$/;"	l
f01014a5	obj/kern/kernel.asm	/^f01014a5:	8d 0c d5 00 00 00 00 	lea    0x0(,%edx,8),%ecx$/;"	l
f01014ac	obj/kern/kernel.asm	/^f01014ac:	89 c8                	mov    %ecx,%eax$/;"	l
f01014ae	obj/kern/kernel.asm	/^f01014ae:	03 05 90 de 20 f0    	add    0xf020de90,%eax$/;"	l
f01014b4	obj/kern/kernel.asm	/^f01014b4:	66 c7 40 04 00 00    	movw   $0x0,0x4(%eax)$/;"	l
f01014ba	obj/kern/kernel.asm	/^f01014ba:	89 18                	mov    %ebx,(%eax)$/;"	l
f01014bc	obj/kern/kernel.asm	/^f01014bc:	89 cb                	mov    %ecx,%ebx$/;"	l
f01014be	obj/kern/kernel.asm	/^f01014be:	03 1d 90 de 20 f0    	add    0xf020de90,%ebx$/;"	l
f01014c4	obj/kern/kernel.asm	/^f01014c4:	83 c2 01             	add    $0x1,%edx$/;"	l
f01014c7	obj/kern/kernel.asm	/^f01014c7:	3b 15 88 de 20 f0    	cmp    0xf020de88,%edx$/;"	l
f01014cd	obj/kern/kernel.asm	/^f01014cd:	72 c9                	jb     f0101498 <page_init+0x56>$/;"	l
f01014cf	obj/kern/kernel.asm	/^f01014cf:	89 1d 40 d2 20 f0    	mov    %ebx,0xf020d240$/;"	l
f01014d5	obj/kern/kernel.asm	/^f01014d5:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f01014d8	obj/kern/kernel.asm	/^f01014d8:	5b                   	pop    %ebx$/;"	l
f01014d9	obj/kern/kernel.asm	/^f01014d9:	5e                   	pop    %esi$/;"	l
f01014da	obj/kern/kernel.asm	/^f01014da:	5f                   	pop    %edi$/;"	l
f01014db	obj/kern/kernel.asm	/^f01014db:	5d                   	pop    %ebp$/;"	l
f01014dc	obj/kern/kernel.asm	/^f01014dc:	c3                   	ret    $/;"	l
f01014dd	obj/kern/kernel.asm	/^f01014dd <page_alloc>:$/;"	l
f01014dd	obj/kern/kernel.asm	/^f01014dd:	55                   	push   %ebp$/;"	l
f01014de	obj/kern/kernel.asm	/^f01014de:	89 e5                	mov    %esp,%ebp$/;"	l
f01014e0	obj/kern/kernel.asm	/^f01014e0:	53                   	push   %ebx$/;"	l
f01014e1	obj/kern/kernel.asm	/^f01014e1:	83 ec 14             	sub    $0x14,%esp$/;"	l
f01014e4	obj/kern/kernel.asm	/^f01014e4:	8b 1d 40 d2 20 f0    	mov    0xf020d240,%ebx$/;"	l
f01014ea	obj/kern/kernel.asm	/^f01014ea:	85 db                	test   %ebx,%ebx$/;"	l
f01014ec	obj/kern/kernel.asm	/^f01014ec:	74 6b                	je     f0101559 <page_alloc+0x7c>$/;"	l
f01014ee	obj/kern/kernel.asm	/^f01014ee:	8b 03                	mov    (%ebx),%eax$/;"	l
f01014f0	obj/kern/kernel.asm	/^f01014f0:	a3 40 d2 20 f0       	mov    %eax,0xf020d240$/;"	l
f01014f5	obj/kern/kernel.asm	/^f01014f5:	c7 03 00 00 00 00    	movl   $0x0,(%ebx)$/;"	l
f01014fb	obj/kern/kernel.asm	/^f01014fb:	f6 45 08 01          	testb  $0x1,0x8(%ebp)$/;"	l
f01014ff	obj/kern/kernel.asm	/^f01014ff:	74 58                	je     f0101559 <page_alloc+0x7c>$/;"	l
f0101501	obj/kern/kernel.asm	/^f0101501:	89 d8                	mov    %ebx,%eax$/;"	l
f0101503	obj/kern/kernel.asm	/^f0101503:	2b 05 90 de 20 f0    	sub    0xf020de90,%eax$/;"	l
f0101509	obj/kern/kernel.asm	/^f0101509:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f010150c	obj/kern/kernel.asm	/^f010150c:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f010150f	obj/kern/kernel.asm	/^f010150f:	89 c2                	mov    %eax,%edx$/;"	l
f0101511	obj/kern/kernel.asm	/^f0101511:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0101514	obj/kern/kernel.asm	/^f0101514:	3b 15 88 de 20 f0    	cmp    0xf020de88,%edx$/;"	l
f010151a	obj/kern/kernel.asm	/^f010151a:	72 20                	jb     f010153c <page_alloc+0x5f>$/;"	l
f010151c	obj/kern/kernel.asm	/^f010151c:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0101520	obj/kern/kernel.asm	/^f0101520:	c7 44 24 08 e4 76 10 	movl   $0xf01076e4,0x8(%esp)$/;"	l
f0101527	obj/kern/kernel.asm	/^f0101527:	f0 $/;"	l
f0101528	obj/kern/kernel.asm	/^f0101528:	c7 44 24 04 58 00 00 	movl   $0x58,0x4(%esp)$/;"	l
f010152f	obj/kern/kernel.asm	/^f010152f:	00 $/;"	l
f0101530	obj/kern/kernel.asm	/^f0101530:	c7 04 24 79 87 10 f0 	movl   $0xf0108779,(%esp)$/;"	l
f0101537	obj/kern/kernel.asm	/^f0101537:	e8 04 eb ff ff       	call   f0100040 <_panic>$/;"	l
f010153c	obj/kern/kernel.asm	/^f010153c:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f0101543	obj/kern/kernel.asm	/^f0101543:	00 $/;"	l
f0101544	obj/kern/kernel.asm	/^f0101544:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f010154b	obj/kern/kernel.asm	/^f010154b:	00 $/;"	l
f010154c	obj/kern/kernel.asm	/^f010154c:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0101551	obj/kern/kernel.asm	/^f0101551:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101554	obj/kern/kernel.asm	/^f0101554:	e8 3e 54 00 00       	call   f0106997 <memset>$/;"	l
f0101559	obj/kern/kernel.asm	/^f0101559:	89 d8                	mov    %ebx,%eax$/;"	l
f010155b	obj/kern/kernel.asm	/^f010155b:	83 c4 14             	add    $0x14,%esp$/;"	l
f010155e	obj/kern/kernel.asm	/^f010155e:	5b                   	pop    %ebx$/;"	l
f010155f	obj/kern/kernel.asm	/^f010155f:	5d                   	pop    %ebp$/;"	l
f0101560	obj/kern/kernel.asm	/^f0101560:	c3                   	ret    $/;"	l
f0101561	obj/kern/kernel.asm	/^f0101561 <page_free>:$/;"	l
f0101561	obj/kern/kernel.asm	/^f0101561:	55                   	push   %ebp$/;"	l
f0101562	obj/kern/kernel.asm	/^f0101562:	89 e5                	mov    %esp,%ebp$/;"	l
f0101564	obj/kern/kernel.asm	/^f0101564:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0101567	obj/kern/kernel.asm	/^f0101567:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010156a	obj/kern/kernel.asm	/^f010156a:	85 c0                	test   %eax,%eax$/;"	l
f010156c	obj/kern/kernel.asm	/^f010156c:	75 24                	jne    f0101592 <page_free+0x31>$/;"	l
f010156e	obj/kern/kernel.asm	/^f010156e:	c7 44 24 0c 4c 88 10 	movl   $0xf010884c,0xc(%esp)$/;"	l
f0101575	obj/kern/kernel.asm	/^f0101575:	f0 $/;"	l
f0101576	obj/kern/kernel.asm	/^f0101576:	c7 44 24 08 9f 87 10 	movl   $0xf010879f,0x8(%esp)$/;"	l
f010157d	obj/kern/kernel.asm	/^f010157d:	f0 $/;"	l
f010157e	obj/kern/kernel.asm	/^f010157e:	c7 44 24 04 63 01 00 	movl   $0x163,0x4(%esp)$/;"	l
f0101585	obj/kern/kernel.asm	/^f0101585:	00 $/;"	l
f0101586	obj/kern/kernel.asm	/^f0101586:	c7 04 24 87 87 10 f0 	movl   $0xf0108787,(%esp)$/;"	l
f010158d	obj/kern/kernel.asm	/^f010158d:	e8 ae ea ff ff       	call   f0100040 <_panic>$/;"	l
f0101592	obj/kern/kernel.asm	/^f0101592:	66 83 78 04 00       	cmpw   $0x0,0x4(%eax)$/;"	l
f0101597	obj/kern/kernel.asm	/^f0101597:	74 24                	je     f01015bd <page_free+0x5c>$/;"	l
f0101599	obj/kern/kernel.asm	/^f0101599:	c7 44 24 0c 57 88 10 	movl   $0xf0108857,0xc(%esp)$/;"	l
f01015a0	obj/kern/kernel.asm	/^f01015a0:	f0 $/;"	l
f01015a1	obj/kern/kernel.asm	/^f01015a1:	c7 44 24 08 9f 87 10 	movl   $0xf010879f,0x8(%esp)$/;"	l
f01015a8	obj/kern/kernel.asm	/^f01015a8:	f0 $/;"	l
f01015a9	obj/kern/kernel.asm	/^f01015a9:	c7 44 24 04 64 01 00 	movl   $0x164,0x4(%esp)$/;"	l
f01015b0	obj/kern/kernel.asm	/^f01015b0:	00 $/;"	l
f01015b1	obj/kern/kernel.asm	/^f01015b1:	c7 04 24 87 87 10 f0 	movl   $0xf0108787,(%esp)$/;"	l
f01015b8	obj/kern/kernel.asm	/^f01015b8:	e8 83 ea ff ff       	call   f0100040 <_panic>$/;"	l
f01015bd	obj/kern/kernel.asm	/^f01015bd:	83 38 00             	cmpl   $0x0,(%eax)$/;"	l
f01015c0	obj/kern/kernel.asm	/^f01015c0:	74 24                	je     f01015e6 <page_free+0x85>$/;"	l
f01015c2	obj/kern/kernel.asm	/^f01015c2:	c7 44 24 0c 67 88 10 	movl   $0xf0108867,0xc(%esp)$/;"	l
f01015c9	obj/kern/kernel.asm	/^f01015c9:	f0 $/;"	l
f01015ca	obj/kern/kernel.asm	/^f01015ca:	c7 44 24 08 9f 87 10 	movl   $0xf010879f,0x8(%esp)$/;"	l
f01015d1	obj/kern/kernel.asm	/^f01015d1:	f0 $/;"	l
f01015d2	obj/kern/kernel.asm	/^f01015d2:	c7 44 24 04 65 01 00 	movl   $0x165,0x4(%esp)$/;"	l
f01015d9	obj/kern/kernel.asm	/^f01015d9:	00 $/;"	l
f01015da	obj/kern/kernel.asm	/^f01015da:	c7 04 24 87 87 10 f0 	movl   $0xf0108787,(%esp)$/;"	l
f01015e1	obj/kern/kernel.asm	/^f01015e1:	e8 5a ea ff ff       	call   f0100040 <_panic>$/;"	l
f01015e6	obj/kern/kernel.asm	/^f01015e6:	8b 15 40 d2 20 f0    	mov    0xf020d240,%edx$/;"	l
f01015ec	obj/kern/kernel.asm	/^f01015ec:	89 10                	mov    %edx,(%eax)$/;"	l
f01015ee	obj/kern/kernel.asm	/^f01015ee:	a3 40 d2 20 f0       	mov    %eax,0xf020d240$/;"	l
f01015f3	obj/kern/kernel.asm	/^f01015f3:	c9                   	leave  $/;"	l
f01015f4	obj/kern/kernel.asm	/^f01015f4:	c3                   	ret    $/;"	l
f01015f5	obj/kern/kernel.asm	/^f01015f5 <page_decref>:$/;"	l
f01015f5	obj/kern/kernel.asm	/^f01015f5:	55                   	push   %ebp$/;"	l
f01015f6	obj/kern/kernel.asm	/^f01015f6:	89 e5                	mov    %esp,%ebp$/;"	l
f01015f8	obj/kern/kernel.asm	/^f01015f8:	83 ec 18             	sub    $0x18,%esp$/;"	l
f01015fb	obj/kern/kernel.asm	/^f01015fb:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01015fe	obj/kern/kernel.asm	/^f01015fe:	0f b7 48 04          	movzwl 0x4(%eax),%ecx$/;"	l
f0101602	obj/kern/kernel.asm	/^f0101602:	8d 51 ff             	lea    -0x1(%ecx),%edx$/;"	l
f0101605	obj/kern/kernel.asm	/^f0101605:	66 89 50 04          	mov    %dx,0x4(%eax)$/;"	l
f0101609	obj/kern/kernel.asm	/^f0101609:	66 85 d2             	test   %dx,%dx$/;"	l
f010160c	obj/kern/kernel.asm	/^f010160c:	75 08                	jne    f0101616 <page_decref+0x21>$/;"	l
f010160e	obj/kern/kernel.asm	/^f010160e:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101611	obj/kern/kernel.asm	/^f0101611:	e8 4b ff ff ff       	call   f0101561 <page_free>$/;"	l
f0101616	obj/kern/kernel.asm	/^f0101616:	c9                   	leave  $/;"	l
f0101617	obj/kern/kernel.asm	/^f0101617:	c3                   	ret    $/;"	l
f0101618	obj/kern/kernel.asm	/^f0101618 <pgdir_walk>:$/;"	l
f0101618	obj/kern/kernel.asm	/^f0101618:	55                   	push   %ebp$/;"	l
f0101619	obj/kern/kernel.asm	/^f0101619:	89 e5                	mov    %esp,%ebp$/;"	l
f010161b	obj/kern/kernel.asm	/^f010161b:	56                   	push   %esi$/;"	l
f010161c	obj/kern/kernel.asm	/^f010161c:	53                   	push   %ebx$/;"	l
f010161d	obj/kern/kernel.asm	/^f010161d:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0101620	obj/kern/kernel.asm	/^f0101620:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
f0101623	obj/kern/kernel.asm	/^f0101623:	89 de                	mov    %ebx,%esi$/;"	l
f0101625	obj/kern/kernel.asm	/^f0101625:	c1 ee 0c             	shr    $0xc,%esi$/;"	l
f0101628	obj/kern/kernel.asm	/^f0101628:	81 e6 ff 03 00 00    	and    $0x3ff,%esi$/;"	l
f010162e	obj/kern/kernel.asm	/^f010162e:	c1 eb 16             	shr    $0x16,%ebx$/;"	l
f0101631	obj/kern/kernel.asm	/^f0101631:	c1 e3 02             	shl    $0x2,%ebx$/;"	l
f0101634	obj/kern/kernel.asm	/^f0101634:	03 5d 08             	add    0x8(%ebp),%ebx$/;"	l
f0101637	obj/kern/kernel.asm	/^f0101637:	f6 03 01             	testb  $0x1,(%ebx)$/;"	l
f010163a	obj/kern/kernel.asm	/^f010163a:	75 2c                	jne    f0101668 <pgdir_walk+0x50>$/;"	l
f010163c	obj/kern/kernel.asm	/^f010163c:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
f0101640	obj/kern/kernel.asm	/^f0101640:	74 63                	je     f01016a5 <pgdir_walk+0x8d>$/;"	l
f0101642	obj/kern/kernel.asm	/^f0101642:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
f0101649	obj/kern/kernel.asm	/^f0101649:	e8 8f fe ff ff       	call   f01014dd <page_alloc>$/;"	l
f010164e	obj/kern/kernel.asm	/^f010164e:	85 c0                	test   %eax,%eax$/;"	l
f0101650	obj/kern/kernel.asm	/^f0101650:	74 5a                	je     f01016ac <pgdir_walk+0x94>$/;"	l
f0101652	obj/kern/kernel.asm	/^f0101652:	66 83 40 04 01       	addw   $0x1,0x4(%eax)$/;"	l
f0101657	obj/kern/kernel.asm	/^f0101657:	2b 05 90 de 20 f0    	sub    0xf020de90,%eax$/;"	l
f010165d	obj/kern/kernel.asm	/^f010165d:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0101660	obj/kern/kernel.asm	/^f0101660:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101663	obj/kern/kernel.asm	/^f0101663:	83 c8 07             	or     $0x7,%eax$/;"	l
f0101666	obj/kern/kernel.asm	/^f0101666:	89 03                	mov    %eax,(%ebx)$/;"	l
f0101668	obj/kern/kernel.asm	/^f0101668:	8b 03                	mov    (%ebx),%eax$/;"	l
f010166a	obj/kern/kernel.asm	/^f010166a:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f010166f	obj/kern/kernel.asm	/^f010166f:	89 c2                	mov    %eax,%edx$/;"	l
f0101671	obj/kern/kernel.asm	/^f0101671:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0101674	obj/kern/kernel.asm	/^f0101674:	3b 15 88 de 20 f0    	cmp    0xf020de88,%edx$/;"	l
f010167a	obj/kern/kernel.asm	/^f010167a:	72 20                	jb     f010169c <pgdir_walk+0x84>$/;"	l
f010167c	obj/kern/kernel.asm	/^f010167c:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0101680	obj/kern/kernel.asm	/^f0101680:	c7 44 24 08 e4 76 10 	movl   $0xf01076e4,0x8(%esp)$/;"	l
f0101687	obj/kern/kernel.asm	/^f0101687:	f0 $/;"	l
f0101688	obj/kern/kernel.asm	/^f0101688:	c7 44 24 04 9b 01 00 	movl   $0x19b,0x4(%esp)$/;"	l
f010168f	obj/kern/kernel.asm	/^f010168f:	00 $/;"	l
f0101690	obj/kern/kernel.asm	/^f0101690:	c7 04 24 87 87 10 f0 	movl   $0xf0108787,(%esp)$/;"	l
f0101697	obj/kern/kernel.asm	/^f0101697:	e8 a4 e9 ff ff       	call   f0100040 <_panic>$/;"	l
f010169c	obj/kern/kernel.asm	/^f010169c:	8d 84 b0 00 00 00 f0 	lea    -0x10000000(%eax,%esi,4),%eax$/;"	l
f01016a3	obj/kern/kernel.asm	/^f01016a3:	eb 0c                	jmp    f01016b1 <pgdir_walk+0x99>$/;"	l
f01016a5	obj/kern/kernel.asm	/^f01016a5:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01016aa	obj/kern/kernel.asm	/^f01016aa:	eb 05                	jmp    f01016b1 <pgdir_walk+0x99>$/;"	l
f01016ac	obj/kern/kernel.asm	/^f01016ac:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01016b1	obj/kern/kernel.asm	/^f01016b1:	83 c4 10             	add    $0x10,%esp$/;"	l
f01016b4	obj/kern/kernel.asm	/^f01016b4:	5b                   	pop    %ebx$/;"	l
f01016b5	obj/kern/kernel.asm	/^f01016b5:	5e                   	pop    %esi$/;"	l
f01016b6	obj/kern/kernel.asm	/^f01016b6:	5d                   	pop    %ebp$/;"	l
f01016b7	obj/kern/kernel.asm	/^f01016b7:	c3                   	ret    $/;"	l
f01016b8	obj/kern/kernel.asm	/^f01016b8 <boot_map_region>:$/;"	l
f01016b8	obj/kern/kernel.asm	/^f01016b8:	55                   	push   %ebp$/;"	l
f01016b9	obj/kern/kernel.asm	/^f01016b9:	89 e5                	mov    %esp,%ebp$/;"	l
f01016bb	obj/kern/kernel.asm	/^f01016bb:	57                   	push   %edi$/;"	l
f01016bc	obj/kern/kernel.asm	/^f01016bc:	56                   	push   %esi$/;"	l
f01016bd	obj/kern/kernel.asm	/^f01016bd:	53                   	push   %ebx$/;"	l
f01016be	obj/kern/kernel.asm	/^f01016be:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f01016c1	obj/kern/kernel.asm	/^f01016c1:	89 c7                	mov    %eax,%edi$/;"	l
f01016c3	obj/kern/kernel.asm	/^f01016c3:	89 d6                	mov    %edx,%esi$/;"	l
f01016c5	obj/kern/kernel.asm	/^f01016c5:	89 4d e4             	mov    %ecx,-0x1c(%ebp)$/;"	l
f01016c8	obj/kern/kernel.asm	/^f01016c8:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f01016cd	obj/kern/kernel.asm	/^f01016cd:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01016d0	obj/kern/kernel.asm	/^f01016d0:	83 c8 01             	or     $0x1,%eax$/;"	l
f01016d3	obj/kern/kernel.asm	/^f01016d3:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f01016d6	obj/kern/kernel.asm	/^f01016d6:	eb 27                	jmp    f01016ff <boot_map_region+0x47>$/;"	l
f01016d8	obj/kern/kernel.asm	/^f01016d8:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f01016df	obj/kern/kernel.asm	/^f01016df:	00 $/;"	l
f01016e0	obj/kern/kernel.asm	/^f01016e0:	8d 04 33             	lea    (%ebx,%esi,1),%eax$/;"	l
f01016e3	obj/kern/kernel.asm	/^f01016e3:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01016e7	obj/kern/kernel.asm	/^f01016e7:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f01016ea	obj/kern/kernel.asm	/^f01016ea:	e8 29 ff ff ff       	call   f0101618 <pgdir_walk>$/;"	l
f01016ef	obj/kern/kernel.asm	/^f01016ef:	89 da                	mov    %ebx,%edx$/;"	l
f01016f1	obj/kern/kernel.asm	/^f01016f1:	03 55 08             	add    0x8(%ebp),%edx$/;"	l
f01016f4	obj/kern/kernel.asm	/^f01016f4:	0b 55 e0             	or     -0x20(%ebp),%edx$/;"	l
f01016f7	obj/kern/kernel.asm	/^f01016f7:	89 10                	mov    %edx,(%eax)$/;"	l
f01016f9	obj/kern/kernel.asm	/^f01016f9:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f01016ff	obj/kern/kernel.asm	/^f01016ff:	3b 5d e4             	cmp    -0x1c(%ebp),%ebx$/;"	l
f0101702	obj/kern/kernel.asm	/^f0101702:	72 d4                	jb     f01016d8 <boot_map_region+0x20>$/;"	l
f0101704	obj/kern/kernel.asm	/^f0101704:	83 c4 2c             	add    $0x2c,%esp$/;"	l
f0101707	obj/kern/kernel.asm	/^f0101707:	5b                   	pop    %ebx$/;"	l
f0101708	obj/kern/kernel.asm	/^f0101708:	5e                   	pop    %esi$/;"	l
f0101709	obj/kern/kernel.asm	/^f0101709:	5f                   	pop    %edi$/;"	l
f010170a	obj/kern/kernel.asm	/^f010170a:	5d                   	pop    %ebp$/;"	l
f010170b	obj/kern/kernel.asm	/^f010170b:	c3                   	ret    $/;"	l
f010170c	obj/kern/kernel.asm	/^f010170c <page_lookup>:$/;"	l
f010170c	obj/kern/kernel.asm	/^f010170c:	55                   	push   %ebp$/;"	l
f010170d	obj/kern/kernel.asm	/^f010170d:	89 e5                	mov    %esp,%ebp$/;"	l
f010170f	obj/kern/kernel.asm	/^f010170f:	53                   	push   %ebx$/;"	l
f0101710	obj/kern/kernel.asm	/^f0101710:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0101713	obj/kern/kernel.asm	/^f0101713:	8b 5d 10             	mov    0x10(%ebp),%ebx$/;"	l
f0101716	obj/kern/kernel.asm	/^f0101716:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f010171d	obj/kern/kernel.asm	/^f010171d:	00 $/;"	l
f010171e	obj/kern/kernel.asm	/^f010171e:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0101721	obj/kern/kernel.asm	/^f0101721:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0101725	obj/kern/kernel.asm	/^f0101725:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0101728	obj/kern/kernel.asm	/^f0101728:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010172b	obj/kern/kernel.asm	/^f010172b:	e8 e8 fe ff ff       	call   f0101618 <pgdir_walk>$/;"	l
f0101730	obj/kern/kernel.asm	/^f0101730:	85 db                	test   %ebx,%ebx$/;"	l
f0101732	obj/kern/kernel.asm	/^f0101732:	74 02                	je     f0101736 <page_lookup+0x2a>$/;"	l
f0101734	obj/kern/kernel.asm	/^f0101734:	89 03                	mov    %eax,(%ebx)$/;"	l
f0101736	obj/kern/kernel.asm	/^f0101736:	85 c0                	test   %eax,%eax$/;"	l
f0101738	obj/kern/kernel.asm	/^f0101738:	74 38                	je     f0101772 <page_lookup+0x66>$/;"	l
f010173a	obj/kern/kernel.asm	/^f010173a:	8b 00                	mov    (%eax),%eax$/;"	l
f010173c	obj/kern/kernel.asm	/^f010173c:	a8 01                	test   $0x1,%al$/;"	l
f010173e	obj/kern/kernel.asm	/^f010173e:	74 39                	je     f0101779 <page_lookup+0x6d>$/;"	l
f0101740	obj/kern/kernel.asm	/^f0101740:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0101743	obj/kern/kernel.asm	/^f0101743:	3b 05 88 de 20 f0    	cmp    0xf020de88,%eax$/;"	l
f0101749	obj/kern/kernel.asm	/^f0101749:	72 1c                	jb     f0101767 <page_lookup+0x5b>$/;"	l
f010174b	obj/kern/kernel.asm	/^f010174b:	c7 44 24 08 18 7f 10 	movl   $0xf0107f18,0x8(%esp)$/;"	l
f0101752	obj/kern/kernel.asm	/^f0101752:	f0 $/;"	l
f0101753	obj/kern/kernel.asm	/^f0101753:	c7 44 24 04 51 00 00 	movl   $0x51,0x4(%esp)$/;"	l
f010175a	obj/kern/kernel.asm	/^f010175a:	00 $/;"	l
f010175b	obj/kern/kernel.asm	/^f010175b:	c7 04 24 79 87 10 f0 	movl   $0xf0108779,(%esp)$/;"	l
f0101762	obj/kern/kernel.asm	/^f0101762:	e8 d9 e8 ff ff       	call   f0100040 <_panic>$/;"	l
f0101767	obj/kern/kernel.asm	/^f0101767:	8b 15 90 de 20 f0    	mov    0xf020de90,%edx$/;"	l
f010176d	obj/kern/kernel.asm	/^f010176d:	8d 04 c2             	lea    (%edx,%eax,8),%eax$/;"	l
f0101770	obj/kern/kernel.asm	/^f0101770:	eb 0c                	jmp    f010177e <page_lookup+0x72>$/;"	l
f0101772	obj/kern/kernel.asm	/^f0101772:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0101777	obj/kern/kernel.asm	/^f0101777:	eb 05                	jmp    f010177e <page_lookup+0x72>$/;"	l
f0101779	obj/kern/kernel.asm	/^f0101779:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010177e	obj/kern/kernel.asm	/^f010177e:	83 c4 14             	add    $0x14,%esp$/;"	l
f0101781	obj/kern/kernel.asm	/^f0101781:	5b                   	pop    %ebx$/;"	l
f0101782	obj/kern/kernel.asm	/^f0101782:	5d                   	pop    %ebp$/;"	l
f0101783	obj/kern/kernel.asm	/^f0101783:	c3                   	ret    $/;"	l
f0101784	obj/kern/kernel.asm	/^f0101784 <tlb_invalidate>:$/;"	l
f0101784	obj/kern/kernel.asm	/^f0101784:	55                   	push   %ebp$/;"	l
f0101785	obj/kern/kernel.asm	/^f0101785:	89 e5                	mov    %esp,%ebp$/;"	l
f0101787	obj/kern/kernel.asm	/^f0101787:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010178a	obj/kern/kernel.asm	/^f010178a:	e8 5d 58 00 00       	call   f0106fec <cpunum>$/;"	l
f010178f	obj/kern/kernel.asm	/^f010178f:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0101792	obj/kern/kernel.asm	/^f0101792:	83 b8 28 e0 20 f0 00 	cmpl   $0x0,-0xfdf1fd8(%eax)$/;"	l
f0101799	obj/kern/kernel.asm	/^f0101799:	74 16                	je     f01017b1 <tlb_invalidate+0x2d>$/;"	l
f010179b	obj/kern/kernel.asm	/^f010179b:	e8 4c 58 00 00       	call   f0106fec <cpunum>$/;"	l
f01017a0	obj/kern/kernel.asm	/^f01017a0:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01017a3	obj/kern/kernel.asm	/^f01017a3:	8b 80 28 e0 20 f0    	mov    -0xfdf1fd8(%eax),%eax$/;"	l
f01017a9	obj/kern/kernel.asm	/^f01017a9:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f01017ac	obj/kern/kernel.asm	/^f01017ac:	39 50 60             	cmp    %edx,0x60(%eax)$/;"	l
f01017af	obj/kern/kernel.asm	/^f01017af:	75 06                	jne    f01017b7 <tlb_invalidate+0x33>$/;"	l
f01017b1	obj/kern/kernel.asm	/^f01017b1:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01017b4	obj/kern/kernel.asm	/^f01017b4:	0f 01 38             	invlpg (%eax)$/;"	l
f01017b7	obj/kern/kernel.asm	/^f01017b7:	c9                   	leave  $/;"	l
f01017b8	obj/kern/kernel.asm	/^f01017b8:	c3                   	ret    $/;"	l
f01017b9	obj/kern/kernel.asm	/^f01017b9 <page_remove>:$/;"	l
f01017b9	obj/kern/kernel.asm	/^f01017b9:	55                   	push   %ebp$/;"	l
f01017ba	obj/kern/kernel.asm	/^f01017ba:	89 e5                	mov    %esp,%ebp$/;"	l
f01017bc	obj/kern/kernel.asm	/^f01017bc:	57                   	push   %edi$/;"	l
f01017bd	obj/kern/kernel.asm	/^f01017bd:	56                   	push   %esi$/;"	l
f01017be	obj/kern/kernel.asm	/^f01017be:	53                   	push   %ebx$/;"	l
f01017bf	obj/kern/kernel.asm	/^f01017bf:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f01017c2	obj/kern/kernel.asm	/^f01017c2:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f01017c5	obj/kern/kernel.asm	/^f01017c5:	8b 7d 0c             	mov    0xc(%ebp),%edi$/;"	l
f01017c8	obj/kern/kernel.asm	/^f01017c8:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
f01017cf	obj/kern/kernel.asm	/^f01017cf:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f01017d2	obj/kern/kernel.asm	/^f01017d2:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f01017d6	obj/kern/kernel.asm	/^f01017d6:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f01017da	obj/kern/kernel.asm	/^f01017da:	89 34 24             	mov    %esi,(%esp)$/;"	l
f01017dd	obj/kern/kernel.asm	/^f01017dd:	e8 2a ff ff ff       	call   f010170c <page_lookup>$/;"	l
f01017e2	obj/kern/kernel.asm	/^f01017e2:	89 c3                	mov    %eax,%ebx$/;"	l
f01017e4	obj/kern/kernel.asm	/^f01017e4:	85 c0                	test   %eax,%eax$/;"	l
f01017e6	obj/kern/kernel.asm	/^f01017e6:	74 1d                	je     f0101805 <page_remove+0x4c>$/;"	l
f01017e8	obj/kern/kernel.asm	/^f01017e8:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f01017eb	obj/kern/kernel.asm	/^f01017eb:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f01017f1	obj/kern/kernel.asm	/^f01017f1:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f01017f5	obj/kern/kernel.asm	/^f01017f5:	89 34 24             	mov    %esi,(%esp)$/;"	l
f01017f8	obj/kern/kernel.asm	/^f01017f8:	e8 87 ff ff ff       	call   f0101784 <tlb_invalidate>$/;"	l
f01017fd	obj/kern/kernel.asm	/^f01017fd:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0101800	obj/kern/kernel.asm	/^f0101800:	e8 f0 fd ff ff       	call   f01015f5 <page_decref>$/;"	l
f0101805	obj/kern/kernel.asm	/^f0101805:	83 c4 2c             	add    $0x2c,%esp$/;"	l
f0101808	obj/kern/kernel.asm	/^f0101808:	5b                   	pop    %ebx$/;"	l
f0101809	obj/kern/kernel.asm	/^f0101809:	5e                   	pop    %esi$/;"	l
f010180a	obj/kern/kernel.asm	/^f010180a:	5f                   	pop    %edi$/;"	l
f010180b	obj/kern/kernel.asm	/^f010180b:	5d                   	pop    %ebp$/;"	l
f010180c	obj/kern/kernel.asm	/^f010180c:	c3                   	ret    $/;"	l
f010180d	obj/kern/kernel.asm	/^f010180d <page_insert>:$/;"	l
f010180d	obj/kern/kernel.asm	/^f010180d:	55                   	push   %ebp$/;"	l
f010180e	obj/kern/kernel.asm	/^f010180e:	89 e5                	mov    %esp,%ebp$/;"	l
f0101810	obj/kern/kernel.asm	/^f0101810:	57                   	push   %edi$/;"	l
f0101811	obj/kern/kernel.asm	/^f0101811:	56                   	push   %esi$/;"	l
f0101812	obj/kern/kernel.asm	/^f0101812:	53                   	push   %ebx$/;"	l
f0101813	obj/kern/kernel.asm	/^f0101813:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0101816	obj/kern/kernel.asm	/^f0101816:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f0101819	obj/kern/kernel.asm	/^f0101819:	8b 7d 10             	mov    0x10(%ebp),%edi$/;"	l
f010181c	obj/kern/kernel.asm	/^f010181c:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f0101823	obj/kern/kernel.asm	/^f0101823:	00 $/;"	l
f0101824	obj/kern/kernel.asm	/^f0101824:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0101828	obj/kern/kernel.asm	/^f0101828:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010182b	obj/kern/kernel.asm	/^f010182b:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010182e	obj/kern/kernel.asm	/^f010182e:	e8 e5 fd ff ff       	call   f0101618 <pgdir_walk>$/;"	l
f0101833	obj/kern/kernel.asm	/^f0101833:	89 c3                	mov    %eax,%ebx$/;"	l
f0101835	obj/kern/kernel.asm	/^f0101835:	85 c0                	test   %eax,%eax$/;"	l
f0101837	obj/kern/kernel.asm	/^f0101837:	74 36                	je     f010186f <page_insert+0x62>$/;"	l
f0101839	obj/kern/kernel.asm	/^f0101839:	66 83 46 04 01       	addw   $0x1,0x4(%esi)$/;"	l
f010183e	obj/kern/kernel.asm	/^f010183e:	f6 00 01             	testb  $0x1,(%eax)$/;"	l
f0101841	obj/kern/kernel.asm	/^f0101841:	74 0f                	je     f0101852 <page_insert+0x45>$/;"	l
f0101843	obj/kern/kernel.asm	/^f0101843:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0101847	obj/kern/kernel.asm	/^f0101847:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010184a	obj/kern/kernel.asm	/^f010184a:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010184d	obj/kern/kernel.asm	/^f010184d:	e8 67 ff ff ff       	call   f01017b9 <page_remove>$/;"	l
f0101852	obj/kern/kernel.asm	/^f0101852:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0101855	obj/kern/kernel.asm	/^f0101855:	83 c8 01             	or     $0x1,%eax$/;"	l
f0101858	obj/kern/kernel.asm	/^f0101858:	2b 35 90 de 20 f0    	sub    0xf020de90,%esi$/;"	l
f010185e	obj/kern/kernel.asm	/^f010185e:	c1 fe 03             	sar    $0x3,%esi$/;"	l
f0101861	obj/kern/kernel.asm	/^f0101861:	c1 e6 0c             	shl    $0xc,%esi$/;"	l
f0101864	obj/kern/kernel.asm	/^f0101864:	09 c6                	or     %eax,%esi$/;"	l
f0101866	obj/kern/kernel.asm	/^f0101866:	89 33                	mov    %esi,(%ebx)$/;"	l
f0101868	obj/kern/kernel.asm	/^f0101868:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010186d	obj/kern/kernel.asm	/^f010186d:	eb 05                	jmp    f0101874 <page_insert+0x67>$/;"	l
f010186f	obj/kern/kernel.asm	/^f010186f:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
f0101874	obj/kern/kernel.asm	/^f0101874:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0101877	obj/kern/kernel.asm	/^f0101877:	5b                   	pop    %ebx$/;"	l
f0101878	obj/kern/kernel.asm	/^f0101878:	5e                   	pop    %esi$/;"	l
f0101879	obj/kern/kernel.asm	/^f0101879:	5f                   	pop    %edi$/;"	l
f010187a	obj/kern/kernel.asm	/^f010187a:	5d                   	pop    %ebp$/;"	l
f010187b	obj/kern/kernel.asm	/^f010187b:	c3                   	ret    $/;"	l
f010187c	obj/kern/kernel.asm	/^f010187c <mmio_map_region>:$/;"	l
f010187c	obj/kern/kernel.asm	/^f010187c:	55                   	push   %ebp$/;"	l
f010187d	obj/kern/kernel.asm	/^f010187d:	89 e5                	mov    %esp,%ebp$/;"	l
f010187f	obj/kern/kernel.asm	/^f010187f:	53                   	push   %ebx$/;"	l
f0101880	obj/kern/kernel.asm	/^f0101880:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0101883	obj/kern/kernel.asm	/^f0101883:	8b 1d 00 33 12 f0    	mov    0xf0123300,%ebx$/;"	l
f0101889	obj/kern/kernel.asm	/^f0101889:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f010188c	obj/kern/kernel.asm	/^f010188c:	8d 88 ff 0f 00 00    	lea    0xfff(%eax),%ecx$/;"	l
f0101892	obj/kern/kernel.asm	/^f0101892:	81 e1 00 f0 ff ff    	and    $0xfffff000,%ecx$/;"	l
f0101898	obj/kern/kernel.asm	/^f0101898:	8d 04 19             	lea    (%ecx,%ebx,1),%eax$/;"	l
f010189b	obj/kern/kernel.asm	/^f010189b:	8d 90 00 00 80 10    	lea    0x10800000(%eax),%edx$/;"	l
f01018a1	obj/kern/kernel.asm	/^f01018a1:	81 fa 00 00 40 00    	cmp    $0x400000,%edx$/;"	l
f01018a7	obj/kern/kernel.asm	/^f01018a7:	76 1c                	jbe    f01018c5 <mmio_map_region+0x49>$/;"	l
f01018a9	obj/kern/kernel.asm	/^f01018a9:	c7 44 24 08 38 7f 10 	movl   $0xf0107f38,0x8(%esp)$/;"	l
f01018b0	obj/kern/kernel.asm	/^f01018b0:	f0 $/;"	l
f01018b1	obj/kern/kernel.asm	/^f01018b1:	c7 44 24 04 3d 02 00 	movl   $0x23d,0x4(%esp)$/;"	l
f01018b8	obj/kern/kernel.asm	/^f01018b8:	00 $/;"	l
f01018b9	obj/kern/kernel.asm	/^f01018b9:	c7 04 24 87 87 10 f0 	movl   $0xf0108787,(%esp)$/;"	l
f01018c0	obj/kern/kernel.asm	/^f01018c0:	e8 7b e7 ff ff       	call   f0100040 <_panic>$/;"	l
f01018c5	obj/kern/kernel.asm	/^f01018c5:	a3 00 33 12 f0       	mov    %eax,0xf0123300$/;"	l
f01018ca	obj/kern/kernel.asm	/^f01018ca:	c7 44 24 04 1a 00 00 	movl   $0x1a,0x4(%esp)$/;"	l
f01018d1	obj/kern/kernel.asm	/^f01018d1:	00 $/;"	l
f01018d2	obj/kern/kernel.asm	/^f01018d2:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01018d5	obj/kern/kernel.asm	/^f01018d5:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01018d8	obj/kern/kernel.asm	/^f01018d8:	89 da                	mov    %ebx,%edx$/;"	l
f01018da	obj/kern/kernel.asm	/^f01018da:	a1 8c de 20 f0       	mov    0xf020de8c,%eax$/;"	l
f01018df	obj/kern/kernel.asm	/^f01018df:	e8 d4 fd ff ff       	call   f01016b8 <boot_map_region>$/;"	l
f01018e4	obj/kern/kernel.asm	/^f01018e4:	89 d8                	mov    %ebx,%eax$/;"	l
f01018e6	obj/kern/kernel.asm	/^f01018e6:	83 c4 14             	add    $0x14,%esp$/;"	l
f01018e9	obj/kern/kernel.asm	/^f01018e9:	5b                   	pop    %ebx$/;"	l
f01018ea	obj/kern/kernel.asm	/^f01018ea:	5d                   	pop    %ebp$/;"	l
f01018eb	obj/kern/kernel.asm	/^f01018eb:	c3                   	ret    $/;"	l
f01018ec	obj/kern/kernel.asm	/^f01018ec <mem_init>:$/;"	l
f01018ec	obj/kern/kernel.asm	/^f01018ec:	55                   	push   %ebp$/;"	l
f01018ed	obj/kern/kernel.asm	/^f01018ed:	89 e5                	mov    %esp,%ebp$/;"	l
f01018ef	obj/kern/kernel.asm	/^f01018ef:	57                   	push   %edi$/;"	l
f01018f0	obj/kern/kernel.asm	/^f01018f0:	56                   	push   %esi$/;"	l
f01018f1	obj/kern/kernel.asm	/^f01018f1:	53                   	push   %ebx$/;"	l
f01018f2	obj/kern/kernel.asm	/^f01018f2:	83 ec 4c             	sub    $0x4c,%esp$/;"	l
f01018f5	obj/kern/kernel.asm	/^f01018f5:	c7 04 24 15 00 00 00 	movl   $0x15,(%esp)$/;"	l
f01018fc	obj/kern/kernel.asm	/^f01018fc:	e8 2f 29 00 00       	call   f0104230 <mc146818_read>$/;"	l
f0101901	obj/kern/kernel.asm	/^f0101901:	89 c3                	mov    %eax,%ebx$/;"	l
f0101903	obj/kern/kernel.asm	/^f0101903:	c7 04 24 16 00 00 00 	movl   $0x16,(%esp)$/;"	l
f010190a	obj/kern/kernel.asm	/^f010190a:	e8 21 29 00 00       	call   f0104230 <mc146818_read>$/;"	l
f010190f	obj/kern/kernel.asm	/^f010190f:	c1 e0 08             	shl    $0x8,%eax$/;"	l
f0101912	obj/kern/kernel.asm	/^f0101912:	09 c3                	or     %eax,%ebx$/;"	l
f0101914	obj/kern/kernel.asm	/^f0101914:	89 d8                	mov    %ebx,%eax$/;"	l
f0101916	obj/kern/kernel.asm	/^f0101916:	c1 e0 0a             	shl    $0xa,%eax$/;"	l
f0101919	obj/kern/kernel.asm	/^f0101919:	8d 90 ff 0f 00 00    	lea    0xfff(%eax),%edx$/;"	l
f010191f	obj/kern/kernel.asm	/^f010191f:	85 c0                	test   %eax,%eax$/;"	l
f0101921	obj/kern/kernel.asm	/^f0101921:	0f 48 c2             	cmovs  %edx,%eax$/;"	l
f0101924	obj/kern/kernel.asm	/^f0101924:	c1 f8 0c             	sar    $0xc,%eax$/;"	l
f0101927	obj/kern/kernel.asm	/^f0101927:	a3 44 d2 20 f0       	mov    %eax,0xf020d244$/;"	l
f010192c	obj/kern/kernel.asm	/^f010192c:	c7 04 24 17 00 00 00 	movl   $0x17,(%esp)$/;"	l
f0101933	obj/kern/kernel.asm	/^f0101933:	e8 f8 28 00 00       	call   f0104230 <mc146818_read>$/;"	l
f0101938	obj/kern/kernel.asm	/^f0101938:	89 c3                	mov    %eax,%ebx$/;"	l
f010193a	obj/kern/kernel.asm	/^f010193a:	c7 04 24 18 00 00 00 	movl   $0x18,(%esp)$/;"	l
f0101941	obj/kern/kernel.asm	/^f0101941:	e8 ea 28 00 00       	call   f0104230 <mc146818_read>$/;"	l
f0101946	obj/kern/kernel.asm	/^f0101946:	c1 e0 08             	shl    $0x8,%eax$/;"	l
f0101949	obj/kern/kernel.asm	/^f0101949:	09 c3                	or     %eax,%ebx$/;"	l
f010194b	obj/kern/kernel.asm	/^f010194b:	89 d8                	mov    %ebx,%eax$/;"	l
f010194d	obj/kern/kernel.asm	/^f010194d:	c1 e0 0a             	shl    $0xa,%eax$/;"	l
f0101950	obj/kern/kernel.asm	/^f0101950:	8d 90 ff 0f 00 00    	lea    0xfff(%eax),%edx$/;"	l
f0101956	obj/kern/kernel.asm	/^f0101956:	85 c0                	test   %eax,%eax$/;"	l
f0101958	obj/kern/kernel.asm	/^f0101958:	0f 48 c2             	cmovs  %edx,%eax$/;"	l
f010195b	obj/kern/kernel.asm	/^f010195b:	c1 f8 0c             	sar    $0xc,%eax$/;"	l
f010195e	obj/kern/kernel.asm	/^f010195e:	85 c0                	test   %eax,%eax$/;"	l
f0101960	obj/kern/kernel.asm	/^f0101960:	74 0e                	je     f0101970 <mem_init+0x84>$/;"	l
f0101962	obj/kern/kernel.asm	/^f0101962:	8d 90 00 01 00 00    	lea    0x100(%eax),%edx$/;"	l
f0101968	obj/kern/kernel.asm	/^f0101968:	89 15 88 de 20 f0    	mov    %edx,0xf020de88$/;"	l
f010196e	obj/kern/kernel.asm	/^f010196e:	eb 0c                	jmp    f010197c <mem_init+0x90>$/;"	l
f0101970	obj/kern/kernel.asm	/^f0101970:	8b 15 44 d2 20 f0    	mov    0xf020d244,%edx$/;"	l
f0101976	obj/kern/kernel.asm	/^f0101976:	89 15 88 de 20 f0    	mov    %edx,0xf020de88$/;"	l
f010197c	obj/kern/kernel.asm	/^f010197c:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f010197f	obj/kern/kernel.asm	/^f010197f:	c1 e8 0a             	shr    $0xa,%eax$/;"	l
f0101982	obj/kern/kernel.asm	/^f0101982:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0101986	obj/kern/kernel.asm	/^f0101986:	a1 44 d2 20 f0       	mov    0xf020d244,%eax$/;"	l
f010198b	obj/kern/kernel.asm	/^f010198b:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f010198e	obj/kern/kernel.asm	/^f010198e:	c1 e8 0a             	shr    $0xa,%eax$/;"	l
f0101991	obj/kern/kernel.asm	/^f0101991:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0101995	obj/kern/kernel.asm	/^f0101995:	a1 88 de 20 f0       	mov    0xf020de88,%eax$/;"	l
f010199a	obj/kern/kernel.asm	/^f010199a:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f010199d	obj/kern/kernel.asm	/^f010199d:	c1 e8 0a             	shr    $0xa,%eax$/;"	l
f01019a0	obj/kern/kernel.asm	/^f01019a0:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01019a4	obj/kern/kernel.asm	/^f01019a4:	c7 04 24 60 7f 10 f0 	movl   $0xf0107f60,(%esp)$/;"	l
f01019ab	obj/kern/kernel.asm	/^f01019ab:	e8 ee 29 00 00       	call   f010439e <cprintf>$/;"	l
f01019b0	obj/kern/kernel.asm	/^f01019b0:	b8 00 10 00 00       	mov    $0x1000,%eax$/;"	l
f01019b5	obj/kern/kernel.asm	/^f01019b5:	e8 5a f6 ff ff       	call   f0101014 <boot_alloc>$/;"	l
f01019ba	obj/kern/kernel.asm	/^f01019ba:	a3 8c de 20 f0       	mov    %eax,0xf020de8c$/;"	l
f01019bf	obj/kern/kernel.asm	/^f01019bf:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f01019c6	obj/kern/kernel.asm	/^f01019c6:	00 $/;"	l
f01019c7	obj/kern/kernel.asm	/^f01019c7:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f01019ce	obj/kern/kernel.asm	/^f01019ce:	00 $/;"	l
f01019cf	obj/kern/kernel.asm	/^f01019cf:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01019d2	obj/kern/kernel.asm	/^f01019d2:	e8 c0 4f 00 00       	call   f0106997 <memset>$/;"	l
f01019d7	obj/kern/kernel.asm	/^f01019d7:	a1 8c de 20 f0       	mov    0xf020de8c,%eax$/;"	l
f01019dc	obj/kern/kernel.asm	/^f01019dc:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f01019e1	obj/kern/kernel.asm	/^f01019e1:	77 20                	ja     f0101a03 <mem_init+0x117>$/;"	l
f01019e3	obj/kern/kernel.asm	/^f01019e3:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01019e7	obj/kern/kernel.asm	/^f01019e7:	c7 44 24 08 08 77 10 	movl   $0xf0107708,0x8(%esp)$/;"	l
f01019ee	obj/kern/kernel.asm	/^f01019ee:	f0 $/;"	l
f01019ef	obj/kern/kernel.asm	/^f01019ef:	c7 44 24 04 8d 00 00 	movl   $0x8d,0x4(%esp)$/;"	l
f01019f6	obj/kern/kernel.asm	/^f01019f6:	00 $/;"	l
f01019f7	obj/kern/kernel.asm	/^f01019f7:	c7 04 24 87 87 10 f0 	movl   $0xf0108787,(%esp)$/;"	l
f01019fe	obj/kern/kernel.asm	/^f01019fe:	e8 3d e6 ff ff       	call   f0100040 <_panic>$/;"	l
f0101a03	obj/kern/kernel.asm	/^f0101a03:	8d 90 00 00 00 10    	lea    0x10000000(%eax),%edx$/;"	l
f0101a09	obj/kern/kernel.asm	/^f0101a09:	83 ca 05             	or     $0x5,%edx$/;"	l
f0101a0c	obj/kern/kernel.asm	/^f0101a0c:	89 90 f4 0e 00 00    	mov    %edx,0xef4(%eax)$/;"	l
f0101a12	obj/kern/kernel.asm	/^f0101a12:	a1 88 de 20 f0       	mov    0xf020de88,%eax$/;"	l
f0101a17	obj/kern/kernel.asm	/^f0101a17:	8d 1c c5 00 00 00 00 	lea    0x0(,%eax,8),%ebx$/;"	l
f0101a1e	obj/kern/kernel.asm	/^f0101a1e:	89 d8                	mov    %ebx,%eax$/;"	l
f0101a20	obj/kern/kernel.asm	/^f0101a20:	e8 ef f5 ff ff       	call   f0101014 <boot_alloc>$/;"	l
f0101a25	obj/kern/kernel.asm	/^f0101a25:	a3 90 de 20 f0       	mov    %eax,0xf020de90$/;"	l
f0101a2a	obj/kern/kernel.asm	/^f0101a2a:	89 5c 24 08          	mov    %ebx,0x8(%esp)$/;"	l
f0101a2e	obj/kern/kernel.asm	/^f0101a2e:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0101a35	obj/kern/kernel.asm	/^f0101a35:	00 $/;"	l
f0101a36	obj/kern/kernel.asm	/^f0101a36:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101a39	obj/kern/kernel.asm	/^f0101a39:	e8 59 4f 00 00       	call   f0106997 <memset>$/;"	l
f0101a3e	obj/kern/kernel.asm	/^f0101a3e:	b8 00 f0 01 00       	mov    $0x1f000,%eax$/;"	l
f0101a43	obj/kern/kernel.asm	/^f0101a43:	e8 cc f5 ff ff       	call   f0101014 <boot_alloc>$/;"	l
f0101a48	obj/kern/kernel.asm	/^f0101a48:	a3 48 d2 20 f0       	mov    %eax,0xf020d248$/;"	l
f0101a4d	obj/kern/kernel.asm	/^f0101a4d:	c7 44 24 08 00 f0 01 	movl   $0x1f000,0x8(%esp)$/;"	l
f0101a54	obj/kern/kernel.asm	/^f0101a54:	00 $/;"	l
f0101a55	obj/kern/kernel.asm	/^f0101a55:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0101a5c	obj/kern/kernel.asm	/^f0101a5c:	00 $/;"	l
f0101a5d	obj/kern/kernel.asm	/^f0101a5d:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101a60	obj/kern/kernel.asm	/^f0101a60:	e8 32 4f 00 00       	call   f0106997 <memset>$/;"	l
f0101a65	obj/kern/kernel.asm	/^f0101a65:	e8 d8 f9 ff ff       	call   f0101442 <page_init>$/;"	l
f0101a6a	obj/kern/kernel.asm	/^f0101a6a:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0101a6f	obj/kern/kernel.asm	/^f0101a6f:	e8 3b f6 ff ff       	call   f01010af <check_page_free_list>$/;"	l
f0101a74	obj/kern/kernel.asm	/^f0101a74:	83 3d 90 de 20 f0 00 	cmpl   $0x0,0xf020de90$/;"	l
f0101a7b	obj/kern/kernel.asm	/^f0101a7b:	75 1c                	jne    f0101a99 <mem_init+0x1ad>$/;"	l
f0101a7d	obj/kern/kernel.asm	/^f0101a7d:	c7 44 24 08 7b 88 10 	movl   $0xf010887b,0x8(%esp)$/;"	l
f0101a84	obj/kern/kernel.asm	/^f0101a84:	f0 $/;"	l
f0101a85	obj/kern/kernel.asm	/^f0101a85:	c7 44 24 04 d8 02 00 	movl   $0x2d8,0x4(%esp)$/;"	l
f0101a8c	obj/kern/kernel.asm	/^f0101a8c:	00 $/;"	l
f0101a8d	obj/kern/kernel.asm	/^f0101a8d:	c7 04 24 87 87 10 f0 	movl   $0xf0108787,(%esp)$/;"	l
f0101a94	obj/kern/kernel.asm	/^f0101a94:	e8 a7 e5 ff ff       	call   f0100040 <_panic>$/;"	l
f0101a99	obj/kern/kernel.asm	/^f0101a99:	a1 40 d2 20 f0       	mov    0xf020d240,%eax$/;"	l
f0101a9e	obj/kern/kernel.asm	/^f0101a9e:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0101aa3	obj/kern/kernel.asm	/^f0101aa3:	eb 05                	jmp    f0101aaa <mem_init+0x1be>$/;"	l
f0101aa5	obj/kern/kernel.asm	/^f0101aa5:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0101aa8	obj/kern/kernel.asm	/^f0101aa8:	8b 00                	mov    (%eax),%eax$/;"	l
f0101aaa	obj/kern/kernel.asm	/^f0101aaa:	85 c0                	test   %eax,%eax$/;"	l
f0101aac	obj/kern/kernel.asm	/^f0101aac:	75 f7                	jne    f0101aa5 <mem_init+0x1b9>$/;"	l
f0101aae	obj/kern/kernel.asm	/^f0101aae:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0101ab5	obj/kern/kernel.asm	/^f0101ab5:	e8 23 fa ff ff       	call   f01014dd <page_alloc>$/;"	l
f0101aba	obj/kern/kernel.asm	/^f0101aba:	89 c7                	mov    %eax,%edi$/;"	l
f0101abc	obj/kern/kernel.asm	/^f0101abc:	85 c0                	test   %eax,%eax$/;"	l
f0101abe	obj/kern/kernel.asm	/^f0101abe:	75 24                	jne    f0101ae4 <mem_init+0x1f8>$/;"	l
f0101ac0	obj/kern/kernel.asm	/^f0101ac0:	c7 44 24 0c 96 88 10 	movl   $0xf0108896,0xc(%esp)$/;"	l
f0101ac7	obj/kern/kernel.asm	/^f0101ac7:	f0 $/;"	l
f0101ac8	obj/kern/kernel.asm	/^f0101ac8:	c7 44 24 08 9f 87 10 	movl   $0xf010879f,0x8(%esp)$/;"	l
f0101acf	obj/kern/kernel.asm	/^f0101acf:	f0 $/;"	l
f0101ad0	obj/kern/kernel.asm	/^f0101ad0:	c7 44 24 04 e0 02 00 	movl   $0x2e0,0x4(%esp)$/;"	l
f0101ad7	obj/kern/kernel.asm	/^f0101ad7:	00 $/;"	l
f0101ad8	obj/kern/kernel.asm	/^f0101ad8:	c7 04 24 87 87 10 f0 	movl   $0xf0108787,(%esp)$/;"	l
f0101adf	obj/kern/kernel.asm	/^f0101adf:	e8 5c e5 ff ff       	call   f0100040 <_panic>$/;"	l
f0101ae4	obj/kern/kernel.asm	/^f0101ae4:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0101aeb	obj/kern/kernel.asm	/^f0101aeb:	e8 ed f9 ff ff       	call   f01014dd <page_alloc>$/;"	l
f0101af0	obj/kern/kernel.asm	/^f0101af0:	89 c6                	mov    %eax,%esi$/;"	l
f0101af2	obj/kern/kernel.asm	/^f0101af2:	85 c0                	test   %eax,%eax$/;"	l
f0101af4	obj/kern/kernel.asm	/^f0101af4:	75 24                	jne    f0101b1a <mem_init+0x22e>$/;"	l
f0101af6	obj/kern/kernel.asm	/^f0101af6:	c7 44 24 0c ac 88 10 	movl   $0xf01088ac,0xc(%esp)$/;"	l
f0101afd	obj/kern/kernel.asm	/^f0101afd:	f0 $/;"	l
f0101afe	obj/kern/kernel.asm	/^f0101afe:	c7 44 24 08 9f 87 10 	movl   $0xf010879f,0x8(%esp)$/;"	l
f0101b05	obj/kern/kernel.asm	/^f0101b05:	f0 $/;"	l
f0101b06	obj/kern/kernel.asm	/^f0101b06:	c7 44 24 04 e1 02 00 	movl   $0x2e1,0x4(%esp)$/;"	l
f0101b0d	obj/kern/kernel.asm	/^f0101b0d:	00 $/;"	l
f0101b0e	obj/kern/kernel.asm	/^f0101b0e:	c7 04 24 87 87 10 f0 	movl   $0xf0108787,(%esp)$/;"	l
f0101b15	obj/kern/kernel.asm	/^f0101b15:	e8 26 e5 ff ff       	call   f0100040 <_panic>$/;"	l
f0101b1a	obj/kern/kernel.asm	/^f0101b1a:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0101b21	obj/kern/kernel.asm	/^f0101b21:	e8 b7 f9 ff ff       	call   f01014dd <page_alloc>$/;"	l
f0101b26	obj/kern/kernel.asm	/^f0101b26:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0101b29	obj/kern/kernel.asm	/^f0101b29:	85 c0                	test   %eax,%eax$/;"	l
f0101b2b	obj/kern/kernel.asm	/^f0101b2b:	75 24                	jne    f0101b51 <mem_init+0x265>$/;"	l
f0101b2d	obj/kern/kernel.asm	/^f0101b2d:	c7 44 24 0c c2 88 10 	movl   $0xf01088c2,0xc(%esp)$/;"	l
f0101b34	obj/kern/kernel.asm	/^f0101b34:	f0 $/;"	l
f0101b35	obj/kern/kernel.asm	/^f0101b35:	c7 44 24 08 9f 87 10 	movl   $0xf010879f,0x8(%esp)$/;"	l
f0101b3c	obj/kern/kernel.asm	/^f0101b3c:	f0 $/;"	l
f0101b3d	obj/kern/kernel.asm	/^f0101b3d:	c7 44 24 04 e2 02 00 	movl   $0x2e2,0x4(%esp)$/;"	l
f0101b44	obj/kern/kernel.asm	/^f0101b44:	00 $/;"	l
f0101b45	obj/kern/kernel.asm	/^f0101b45:	c7 04 24 87 87 10 f0 	movl   $0xf0108787,(%esp)$/;"	l
f0101b4c	obj/kern/kernel.asm	/^f0101b4c:	e8 ef e4 ff ff       	call   f0100040 <_panic>$/;"	l
f0101b51	obj/kern/kernel.asm	/^f0101b51:	39 f7                	cmp    %esi,%edi$/;"	l
f0101b53	obj/kern/kernel.asm	/^f0101b53:	75 24                	jne    f0101b79 <mem_init+0x28d>$/;"	l
f0101b55	obj/kern/kernel.asm	/^f0101b55:	c7 44 24 0c d8 88 10 	movl   $0xf01088d8,0xc(%esp)$/;"	l
f0101b5c	obj/kern/kernel.asm	/^f0101b5c:	f0 $/;"	l
f0101b5d	obj/kern/kernel.asm	/^f0101b5d:	c7 44 24 08 9f 87 10 	movl   $0xf010879f,0x8(%esp)$/;"	l
f0101b64	obj/kern/kernel.asm	/^f0101b64:	f0 $/;"	l
f0101b65	obj/kern/kernel.asm	/^f0101b65:	c7 44 24 04 e5 02 00 	movl   $0x2e5,0x4(%esp)$/;"	l
f0101b6c	obj/kern/kernel.asm	/^f0101b6c:	00 $/;"	l
f0101b6d	obj/kern/kernel.asm	/^f0101b6d:	c7 04 24 87 87 10 f0 	movl   $0xf0108787,(%esp)$/;"	l
f0101b74	obj/kern/kernel.asm	/^f0101b74:	e8 c7 e4 ff ff       	call   f0100040 <_panic>$/;"	l
f0101b79	obj/kern/kernel.asm	/^f0101b79:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0101b7c	obj/kern/kernel.asm	/^f0101b7c:	39 c6                	cmp    %eax,%esi$/;"	l
f0101b7e	obj/kern/kernel.asm	/^f0101b7e:	74 04                	je     f0101b84 <mem_init+0x298>$/;"	l
f0101b80	obj/kern/kernel.asm	/^f0101b80:	39 c7                	cmp    %eax,%edi$/;"	l
f0101b82	obj/kern/kernel.asm	/^f0101b82:	75 24                	jne    f0101ba8 <mem_init+0x2bc>$/;"	l
f0101b84	obj/kern/kernel.asm	/^f0101b84:	c7 44 24 0c 9c 7f 10 	movl   $0xf0107f9c,0xc(%esp)$/;"	l
f0101b8b	obj/kern/kernel.asm	/^f0101b8b:	f0 $/;"	l
f0101b8c	obj/kern/kernel.asm	/^f0101b8c:	c7 44 24 08 9f 87 10 	movl   $0xf010879f,0x8(%esp)$/;"	l
f0101b93	obj/kern/kernel.asm	/^f0101b93:	f0 $/;"	l
f0101b94	obj/kern/kernel.asm	/^f0101b94:	c7 44 24 04 e6 02 00 	movl   $0x2e6,0x4(%esp)$/;"	l
f0101b9b	obj/kern/kernel.asm	/^f0101b9b:	00 $/;"	l
f0101b9c	obj/kern/kernel.asm	/^f0101b9c:	c7 04 24 87 87 10 f0 	movl   $0xf0108787,(%esp)$/;"	l
f0101ba3	obj/kern/kernel.asm	/^f0101ba3:	e8 98 e4 ff ff       	call   f0100040 <_panic>$/;"	l
f0101ba8	obj/kern/kernel.asm	/^f0101ba8:	8b 15 90 de 20 f0    	mov    0xf020de90,%edx$/;"	l
f0101bae	obj/kern/kernel.asm	/^f0101bae:	a1 88 de 20 f0       	mov    0xf020de88,%eax$/;"	l
f0101bb3	obj/kern/kernel.asm	/^f0101bb3:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101bb6	obj/kern/kernel.asm	/^f0101bb6:	89 f9                	mov    %edi,%ecx$/;"	l
f0101bb8	obj/kern/kernel.asm	/^f0101bb8:	29 d1                	sub    %edx,%ecx$/;"	l
f0101bba	obj/kern/kernel.asm	/^f0101bba:	c1 f9 03             	sar    $0x3,%ecx$/;"	l
f0101bbd	obj/kern/kernel.asm	/^f0101bbd:	c1 e1 0c             	shl    $0xc,%ecx$/;"	l
f0101bc0	obj/kern/kernel.asm	/^f0101bc0:	39 c1                	cmp    %eax,%ecx$/;"	l
f0101bc2	obj/kern/kernel.asm	/^f0101bc2:	72 24                	jb     f0101be8 <mem_init+0x2fc>$/;"	l
f0101bc4	obj/kern/kernel.asm	/^f0101bc4:	c7 44 24 0c ea 88 10 	movl   $0xf01088ea,0xc(%esp)$/;"	l
f0101bcb	obj/kern/kernel.asm	/^f0101bcb:	f0 $/;"	l
f0101bcc	obj/kern/kernel.asm	/^f0101bcc:	c7 44 24 08 9f 87 10 	movl   $0xf010879f,0x8(%esp)$/;"	l
f0101bd3	obj/kern/kernel.asm	/^f0101bd3:	f0 $/;"	l
f0101bd4	obj/kern/kernel.asm	/^f0101bd4:	c7 44 24 04 e7 02 00 	movl   $0x2e7,0x4(%esp)$/;"	l
f0101bdb	obj/kern/kernel.asm	/^f0101bdb:	00 $/;"	l
f0101bdc	obj/kern/kernel.asm	/^f0101bdc:	c7 04 24 87 87 10 f0 	movl   $0xf0108787,(%esp)$/;"	l
f0101be3	obj/kern/kernel.asm	/^f0101be3:	e8 58 e4 ff ff       	call   f0100040 <_panic>$/;"	l
f0101be8	obj/kern/kernel.asm	/^f0101be8:	89 f1                	mov    %esi,%ecx$/;"	l
f0101bea	obj/kern/kernel.asm	/^f0101bea:	29 d1                	sub    %edx,%ecx$/;"	l
f0101bec	obj/kern/kernel.asm	/^f0101bec:	c1 f9 03             	sar    $0x3,%ecx$/;"	l
f0101bef	obj/kern/kernel.asm	/^f0101bef:	c1 e1 0c             	shl    $0xc,%ecx$/;"	l
f0101bf2	obj/kern/kernel.asm	/^f0101bf2:	39 c8                	cmp    %ecx,%eax$/;"	l
f0101bf4	obj/kern/kernel.asm	/^f0101bf4:	77 24                	ja     f0101c1a <mem_init+0x32e>$/;"	l
f0101bf6	obj/kern/kernel.asm	/^f0101bf6:	c7 44 24 0c 07 89 10 	movl   $0xf0108907,0xc(%esp)$/;"	l
f0101bfd	obj/kern/kernel.asm	/^f0101bfd:	f0 $/;"	l
f0101bfe	obj/kern/kernel.asm	/^f0101bfe:	c7 44 24 08 9f 87 10 	movl   $0xf010879f,0x8(%esp)$/;"	l
f0101c05	obj/kern/kernel.asm	/^f0101c05:	f0 $/;"	l
f0101c06	obj/kern/kernel.asm	/^f0101c06:	c7 44 24 04 e8 02 00 	movl   $0x2e8,0x4(%esp)$/;"	l
f0101c0d	obj/kern/kernel.asm	/^f0101c0d:	00 $/;"	l
f0101c0e	obj/kern/kernel.asm	/^f0101c0e:	c7 04 24 87 87 10 f0 	movl   $0xf0108787,(%esp)$/;"	l
f0101c15	obj/kern/kernel.asm	/^f0101c15:	e8 26 e4 ff ff       	call   f0100040 <_panic>$/;"	l
f0101c1a	obj/kern/kernel.asm	/^f0101c1a:	8b 4d d4             	mov    -0x2c(%ebp),%ecx$/;"	l
f0101c1d	obj/kern/kernel.asm	/^f0101c1d:	29 d1                	sub    %edx,%ecx$/;"	l
f0101c1f	obj/kern/kernel.asm	/^f0101c1f:	89 ca                	mov    %ecx,%edx$/;"	l
f0101c21	obj/kern/kernel.asm	/^f0101c21:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0101c24	obj/kern/kernel.asm	/^f0101c24:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0101c27	obj/kern/kernel.asm	/^f0101c27:	39 d0                	cmp    %edx,%eax$/;"	l
f0101c29	obj/kern/kernel.asm	/^f0101c29:	77 24                	ja     f0101c4f <mem_init+0x363>$/;"	l
f0101c2b	obj/kern/kernel.asm	/^f0101c2b:	c7 44 24 0c 24 89 10 	movl   $0xf0108924,0xc(%esp)$/;"	l
f0101c32	obj/kern/kernel.asm	/^f0101c32:	f0 $/;"	l
f0101c33	obj/kern/kernel.asm	/^f0101c33:	c7 44 24 08 9f 87 10 	movl   $0xf010879f,0x8(%esp)$/;"	l
f0101c3a	obj/kern/kernel.asm	/^f0101c3a:	f0 $/;"	l
f0101c3b	obj/kern/kernel.asm	/^f0101c3b:	c7 44 24 04 e9 02 00 	movl   $0x2e9,0x4(%esp)$/;"	l
f0101c42	obj/kern/kernel.asm	/^f0101c42:	00 $/;"	l
f0101c43	obj/kern/kernel.asm	/^f0101c43:	c7 04 24 87 87 10 f0 	movl   $0xf0108787,(%esp)$/;"	l
f0101c4a	obj/kern/kernel.asm	/^f0101c4a:	e8 f1 e3 ff ff       	call   f0100040 <_panic>$/;"	l
f0101c4f	obj/kern/kernel.asm	/^f0101c4f:	a1 40 d2 20 f0       	mov    0xf020d240,%eax$/;"	l
f0101c54	obj/kern/kernel.asm	/^f0101c54:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f0101c57	obj/kern/kernel.asm	/^f0101c57:	c7 05 40 d2 20 f0 00 	movl   $0x0,0xf020d240$/;"	l
f0101c5e	obj/kern/kernel.asm	/^f0101c5e:	00 00 00 $/;"	l
f0101c61	obj/kern/kernel.asm	/^f0101c61:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0101c68	obj/kern/kernel.asm	/^f0101c68:	e8 70 f8 ff ff       	call   f01014dd <page_alloc>$/;"	l
f0101c6d	obj/kern/kernel.asm	/^f0101c6d:	85 c0                	test   %eax,%eax$/;"	l
f0101c6f	obj/kern/kernel.asm	/^f0101c6f:	74 24                	je     f0101c95 <mem_init+0x3a9>$/;"	l
f0101c71	obj/kern/kernel.asm	/^f0101c71:	c7 44 24 0c 41 89 10 	movl   $0xf0108941,0xc(%esp)$/;"	l
f0101c78	obj/kern/kernel.asm	/^f0101c78:	f0 $/;"	l
f0101c79	obj/kern/kernel.asm	/^f0101c79:	c7 44 24 08 9f 87 10 	movl   $0xf010879f,0x8(%esp)$/;"	l
f0101c80	obj/kern/kernel.asm	/^f0101c80:	f0 $/;"	l
f0101c81	obj/kern/kernel.asm	/^f0101c81:	c7 44 24 04 f0 02 00 	movl   $0x2f0,0x4(%esp)$/;"	l
f0101c88	obj/kern/kernel.asm	/^f0101c88:	00 $/;"	l
f0101c89	obj/kern/kernel.asm	/^f0101c89:	c7 04 24 87 87 10 f0 	movl   $0xf0108787,(%esp)$/;"	l
f0101c90	obj/kern/kernel.asm	/^f0101c90:	e8 ab e3 ff ff       	call   f0100040 <_panic>$/;"	l
f0101c95	obj/kern/kernel.asm	/^f0101c95:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f0101c98	obj/kern/kernel.asm	/^f0101c98:	e8 c4 f8 ff ff       	call   f0101561 <page_free>$/;"	l
f0101c9d	obj/kern/kernel.asm	/^f0101c9d:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0101ca0	obj/kern/kernel.asm	/^f0101ca0:	e8 bc f8 ff ff       	call   f0101561 <page_free>$/;"	l
f0101ca5	obj/kern/kernel.asm	/^f0101ca5:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0101ca8	obj/kern/kernel.asm	/^f0101ca8:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101cab	obj/kern/kernel.asm	/^f0101cab:	e8 b1 f8 ff ff       	call   f0101561 <page_free>$/;"	l
f0101cb0	obj/kern/kernel.asm	/^f0101cb0:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0101cb7	obj/kern/kernel.asm	/^f0101cb7:	e8 21 f8 ff ff       	call   f01014dd <page_alloc>$/;"	l
f0101cbc	obj/kern/kernel.asm	/^f0101cbc:	89 c6                	mov    %eax,%esi$/;"	l
f0101cbe	obj/kern/kernel.asm	/^f0101cbe:	85 c0                	test   %eax,%eax$/;"	l
f0101cc0	obj/kern/kernel.asm	/^f0101cc0:	75 24                	jne    f0101ce6 <mem_init+0x3fa>$/;"	l
f0101cc2	obj/kern/kernel.asm	/^f0101cc2:	c7 44 24 0c 96 88 10 	movl   $0xf0108896,0xc(%esp)$/;"	l
f0101cc9	obj/kern/kernel.asm	/^f0101cc9:	f0 $/;"	l
f0101cca	obj/kern/kernel.asm	/^f0101cca:	c7 44 24 08 9f 87 10 	movl   $0xf010879f,0x8(%esp)$/;"	l
f0101cd1	obj/kern/kernel.asm	/^f0101cd1:	f0 $/;"	l
f0101cd2	obj/kern/kernel.asm	/^f0101cd2:	c7 44 24 04 f7 02 00 	movl   $0x2f7,0x4(%esp)$/;"	l
f0101cd9	obj/kern/kernel.asm	/^f0101cd9:	00 $/;"	l
f0101cda	obj/kern/kernel.asm	/^f0101cda:	c7 04 24 87 87 10 f0 	movl   $0xf0108787,(%esp)$/;"	l
f0101ce1	obj/kern/kernel.asm	/^f0101ce1:	e8 5a e3 ff ff       	call   f0100040 <_panic>$/;"	l
f0101ce6	obj/kern/kernel.asm	/^f0101ce6:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0101ced	obj/kern/kernel.asm	/^f0101ced:	e8 eb f7 ff ff       	call   f01014dd <page_alloc>$/;"	l
f0101cf2	obj/kern/kernel.asm	/^f0101cf2:	89 c7                	mov    %eax,%edi$/;"	l
f0101cf4	obj/kern/kernel.asm	/^f0101cf4:	85 c0                	test   %eax,%eax$/;"	l
f0101cf6	obj/kern/kernel.asm	/^f0101cf6:	75 24                	jne    f0101d1c <mem_init+0x430>$/;"	l
f0101cf8	obj/kern/kernel.asm	/^f0101cf8:	c7 44 24 0c ac 88 10 	movl   $0xf01088ac,0xc(%esp)$/;"	l
f0101cff	obj/kern/kernel.asm	/^f0101cff:	f0 $/;"	l
f0101d00	obj/kern/kernel.asm	/^f0101d00:	c7 44 24 08 9f 87 10 	movl   $0xf010879f,0x8(%esp)$/;"	l
f0101d07	obj/kern/kernel.asm	/^f0101d07:	f0 $/;"	l
f0101d08	obj/kern/kernel.asm	/^f0101d08:	c7 44 24 04 f8 02 00 	movl   $0x2f8,0x4(%esp)$/;"	l
f0101d0f	obj/kern/kernel.asm	/^f0101d0f:	00 $/;"	l
f0101d10	obj/kern/kernel.asm	/^f0101d10:	c7 04 24 87 87 10 f0 	movl   $0xf0108787,(%esp)$/;"	l
f0101d17	obj/kern/kernel.asm	/^f0101d17:	e8 24 e3 ff ff       	call   f0100040 <_panic>$/;"	l
f0101d1c	obj/kern/kernel.asm	/^f0101d1c:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0101d23	obj/kern/kernel.asm	/^f0101d23:	e8 b5 f7 ff ff       	call   f01014dd <page_alloc>$/;"	l
f0101d28	obj/kern/kernel.asm	/^f0101d28:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0101d2b	obj/kern/kernel.asm	/^f0101d2b:	85 c0                	test   %eax,%eax$/;"	l
f0101d2d	obj/kern/kernel.asm	/^f0101d2d:	75 24                	jne    f0101d53 <mem_init+0x467>$/;"	l
f0101d2f	obj/kern/kernel.asm	/^f0101d2f:	c7 44 24 0c c2 88 10 	movl   $0xf01088c2,0xc(%esp)$/;"	l
f0101d36	obj/kern/kernel.asm	/^f0101d36:	f0 $/;"	l
f0101d37	obj/kern/kernel.asm	/^f0101d37:	c7 44 24 08 9f 87 10 	movl   $0xf010879f,0x8(%esp)$/;"	l
f0101d3e	obj/kern/kernel.asm	/^f0101d3e:	f0 $/;"	l
f0101d3f	obj/kern/kernel.asm	/^f0101d3f:	c7 44 24 04 f9 02 00 	movl   $0x2f9,0x4(%esp)$/;"	l
f0101d46	obj/kern/kernel.asm	/^f0101d46:	00 $/;"	l
f0101d47	obj/kern/kernel.asm	/^f0101d47:	c7 04 24 87 87 10 f0 	movl   $0xf0108787,(%esp)$/;"	l
f0101d4e	obj/kern/kernel.asm	/^f0101d4e:	e8 ed e2 ff ff       	call   f0100040 <_panic>$/;"	l
f0101d53	obj/kern/kernel.asm	/^f0101d53:	39 fe                	cmp    %edi,%esi$/;"	l
f0101d55	obj/kern/kernel.asm	/^f0101d55:	75 24                	jne    f0101d7b <mem_init+0x48f>$/;"	l
f0101d57	obj/kern/kernel.asm	/^f0101d57:	c7 44 24 0c d8 88 10 	movl   $0xf01088d8,0xc(%esp)$/;"	l
f0101d5e	obj/kern/kernel.asm	/^f0101d5e:	f0 $/;"	l
f0101d5f	obj/kern/kernel.asm	/^f0101d5f:	c7 44 24 08 9f 87 10 	movl   $0xf010879f,0x8(%esp)$/;"	l
f0101d66	obj/kern/kernel.asm	/^f0101d66:	f0 $/;"	l
f0101d67	obj/kern/kernel.asm	/^f0101d67:	c7 44 24 04 fb 02 00 	movl   $0x2fb,0x4(%esp)$/;"	l
f0101d6e	obj/kern/kernel.asm	/^f0101d6e:	00 $/;"	l
f0101d6f	obj/kern/kernel.asm	/^f0101d6f:	c7 04 24 87 87 10 f0 	movl   $0xf0108787,(%esp)$/;"	l
f0101d76	obj/kern/kernel.asm	/^f0101d76:	e8 c5 e2 ff ff       	call   f0100040 <_panic>$/;"	l
f0101d7b	obj/kern/kernel.asm	/^f0101d7b:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0101d7e	obj/kern/kernel.asm	/^f0101d7e:	39 c7                	cmp    %eax,%edi$/;"	l
f0101d80	obj/kern/kernel.asm	/^f0101d80:	74 04                	je     f0101d86 <mem_init+0x49a>$/;"	l
f0101d82	obj/kern/kernel.asm	/^f0101d82:	39 c6                	cmp    %eax,%esi$/;"	l
f0101d84	obj/kern/kernel.asm	/^f0101d84:	75 24                	jne    f0101daa <mem_init+0x4be>$/;"	l
f0101d86	obj/kern/kernel.asm	/^f0101d86:	c7 44 24 0c 9c 7f 10 	movl   $0xf0107f9c,0xc(%esp)$/;"	l
f0101d8d	obj/kern/kernel.asm	/^f0101d8d:	f0 $/;"	l
f0101d8e	obj/kern/kernel.asm	/^f0101d8e:	c7 44 24 08 9f 87 10 	movl   $0xf010879f,0x8(%esp)$/;"	l
f0101d95	obj/kern/kernel.asm	/^f0101d95:	f0 $/;"	l
f0101d96	obj/kern/kernel.asm	/^f0101d96:	c7 44 24 04 fc 02 00 	movl   $0x2fc,0x4(%esp)$/;"	l
f0101d9d	obj/kern/kernel.asm	/^f0101d9d:	00 $/;"	l
f0101d9e	obj/kern/kernel.asm	/^f0101d9e:	c7 04 24 87 87 10 f0 	movl   $0xf0108787,(%esp)$/;"	l
f0101da5	obj/kern/kernel.asm	/^f0101da5:	e8 96 e2 ff ff       	call   f0100040 <_panic>$/;"	l
f0101daa	obj/kern/kernel.asm	/^f0101daa:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0101db1	obj/kern/kernel.asm	/^f0101db1:	e8 27 f7 ff ff       	call   f01014dd <page_alloc>$/;"	l
f0101db6	obj/kern/kernel.asm	/^f0101db6:	85 c0                	test   %eax,%eax$/;"	l
f0101db8	obj/kern/kernel.asm	/^f0101db8:	74 24                	je     f0101dde <mem_init+0x4f2>$/;"	l
f0101dba	obj/kern/kernel.asm	/^f0101dba:	c7 44 24 0c 41 89 10 	movl   $0xf0108941,0xc(%esp)$/;"	l
f0101dc1	obj/kern/kernel.asm	/^f0101dc1:	f0 $/;"	l
f0101dc2	obj/kern/kernel.asm	/^f0101dc2:	c7 44 24 08 9f 87 10 	movl   $0xf010879f,0x8(%esp)$/;"	l
f0101dc9	obj/kern/kernel.asm	/^f0101dc9:	f0 $/;"	l
f0101dca	obj/kern/kernel.asm	/^f0101dca:	c7 44 24 04 fd 02 00 	movl   $0x2fd,0x4(%esp)$/;"	l
f0101dd1	obj/kern/kernel.asm	/^f0101dd1:	00 $/;"	l
f0101dd2	obj/kern/kernel.asm	/^f0101dd2:	c7 04 24 87 87 10 f0 	movl   $0xf0108787,(%esp)$/;"	l
f0101dd9	obj/kern/kernel.asm	/^f0101dd9:	e8 62 e2 ff ff       	call   f0100040 <_panic>$/;"	l
f0101dde	obj/kern/kernel.asm	/^f0101dde:	89 f0                	mov    %esi,%eax$/;"	l
f0101de0	obj/kern/kernel.asm	/^f0101de0:	2b 05 90 de 20 f0    	sub    0xf020de90,%eax$/;"	l
f0101de6	obj/kern/kernel.asm	/^f0101de6:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0101de9	obj/kern/kernel.asm	/^f0101de9:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101dec	obj/kern/kernel.asm	/^f0101dec:	89 c2                	mov    %eax,%edx$/;"	l
f0101dee	obj/kern/kernel.asm	/^f0101dee:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0101df1	obj/kern/kernel.asm	/^f0101df1:	3b 15 88 de 20 f0    	cmp    0xf020de88,%edx$/;"	l
f0101df7	obj/kern/kernel.asm	/^f0101df7:	72 20                	jb     f0101e19 <mem_init+0x52d>$/;"	l
f0101df9	obj/kern/kernel.asm	/^f0101df9:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0101dfd	obj/kern/kernel.asm	/^f0101dfd:	c7 44 24 08 e4 76 10 	movl   $0xf01076e4,0x8(%esp)$/;"	l
f0101e04	obj/kern/kernel.asm	/^f0101e04:	f0 $/;"	l
f0101e05	obj/kern/kernel.asm	/^f0101e05:	c7 44 24 04 58 00 00 	movl   $0x58,0x4(%esp)$/;"	l
f0101e0c	obj/kern/kernel.asm	/^f0101e0c:	00 $/;"	l
f0101e0d	obj/kern/kernel.asm	/^f0101e0d:	c7 04 24 79 87 10 f0 	movl   $0xf0108779,(%esp)$/;"	l
f0101e14	obj/kern/kernel.asm	/^f0101e14:	e8 27 e2 ff ff       	call   f0100040 <_panic>$/;"	l
f0101e19	obj/kern/kernel.asm	/^f0101e19:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f0101e20	obj/kern/kernel.asm	/^f0101e20:	00 $/;"	l
f0101e21	obj/kern/kernel.asm	/^f0101e21:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
f0101e28	obj/kern/kernel.asm	/^f0101e28:	00 $/;"	l
f0101e29	obj/kern/kernel.asm	/^f0101e29:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0101e2e	obj/kern/kernel.asm	/^f0101e2e:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101e31	obj/kern/kernel.asm	/^f0101e31:	e8 61 4b 00 00       	call   f0106997 <memset>$/;"	l
f0101e36	obj/kern/kernel.asm	/^f0101e36:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0101e39	obj/kern/kernel.asm	/^f0101e39:	e8 23 f7 ff ff       	call   f0101561 <page_free>$/;"	l
f0101e3e	obj/kern/kernel.asm	/^f0101e3e:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
f0101e45	obj/kern/kernel.asm	/^f0101e45:	e8 93 f6 ff ff       	call   f01014dd <page_alloc>$/;"	l
f0101e4a	obj/kern/kernel.asm	/^f0101e4a:	85 c0                	test   %eax,%eax$/;"	l
f0101e4c	obj/kern/kernel.asm	/^f0101e4c:	75 24                	jne    f0101e72 <mem_init+0x586>$/;"	l
f0101e4e	obj/kern/kernel.asm	/^f0101e4e:	c7 44 24 0c 50 89 10 	movl   $0xf0108950,0xc(%esp)$/;"	l
f0101e55	obj/kern/kernel.asm	/^f0101e55:	f0 $/;"	l
f0101e56	obj/kern/kernel.asm	/^f0101e56:	c7 44 24 08 9f 87 10 	movl   $0xf010879f,0x8(%esp)$/;"	l
f0101e5d	obj/kern/kernel.asm	/^f0101e5d:	f0 $/;"	l
f0101e5e	obj/kern/kernel.asm	/^f0101e5e:	c7 44 24 04 02 03 00 	movl   $0x302,0x4(%esp)$/;"	l
f0101e65	obj/kern/kernel.asm	/^f0101e65:	00 $/;"	l
f0101e66	obj/kern/kernel.asm	/^f0101e66:	c7 04 24 87 87 10 f0 	movl   $0xf0108787,(%esp)$/;"	l
f0101e6d	obj/kern/kernel.asm	/^f0101e6d:	e8 ce e1 ff ff       	call   f0100040 <_panic>$/;"	l
f0101e72	obj/kern/kernel.asm	/^f0101e72:	39 c6                	cmp    %eax,%esi$/;"	l
f0101e74	obj/kern/kernel.asm	/^f0101e74:	74 24                	je     f0101e9a <mem_init+0x5ae>$/;"	l
f0101e76	obj/kern/kernel.asm	/^f0101e76:	c7 44 24 0c 6e 89 10 	movl   $0xf010896e,0xc(%esp)$/;"	l
f0101e7d	obj/kern/kernel.asm	/^f0101e7d:	f0 $/;"	l
f0101e7e	obj/kern/kernel.asm	/^f0101e7e:	c7 44 24 08 9f 87 10 	movl   $0xf010879f,0x8(%esp)$/;"	l
f0101e85	obj/kern/kernel.asm	/^f0101e85:	f0 $/;"	l
f0101e86	obj/kern/kernel.asm	/^f0101e86:	c7 44 24 04 03 03 00 	movl   $0x303,0x4(%esp)$/;"	l
f0101e8d	obj/kern/kernel.asm	/^f0101e8d:	00 $/;"	l
f0101e8e	obj/kern/kernel.asm	/^f0101e8e:	c7 04 24 87 87 10 f0 	movl   $0xf0108787,(%esp)$/;"	l
f0101e95	obj/kern/kernel.asm	/^f0101e95:	e8 a6 e1 ff ff       	call   f0100040 <_panic>$/;"	l
f0101e9a	obj/kern/kernel.asm	/^f0101e9a:	89 f0                	mov    %esi,%eax$/;"	l
f0101e9c	obj/kern/kernel.asm	/^f0101e9c:	2b 05 90 de 20 f0    	sub    0xf020de90,%eax$/;"	l
f0101ea2	obj/kern/kernel.asm	/^f0101ea2:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0101ea5	obj/kern/kernel.asm	/^f0101ea5:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101ea8	obj/kern/kernel.asm	/^f0101ea8:	89 c2                	mov    %eax,%edx$/;"	l
f0101eaa	obj/kern/kernel.asm	/^f0101eaa:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0101ead	obj/kern/kernel.asm	/^f0101ead:	3b 15 88 de 20 f0    	cmp    0xf020de88,%edx$/;"	l
f0101eb3	obj/kern/kernel.asm	/^f0101eb3:	72 20                	jb     f0101ed5 <mem_init+0x5e9>$/;"	l
f0101eb5	obj/kern/kernel.asm	/^f0101eb5:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0101eb9	obj/kern/kernel.asm	/^f0101eb9:	c7 44 24 08 e4 76 10 	movl   $0xf01076e4,0x8(%esp)$/;"	l
f0101ec0	obj/kern/kernel.asm	/^f0101ec0:	f0 $/;"	l
f0101ec1	obj/kern/kernel.asm	/^f0101ec1:	c7 44 24 04 58 00 00 	movl   $0x58,0x4(%esp)$/;"	l
f0101ec8	obj/kern/kernel.asm	/^f0101ec8:	00 $/;"	l
f0101ec9	obj/kern/kernel.asm	/^f0101ec9:	c7 04 24 79 87 10 f0 	movl   $0xf0108779,(%esp)$/;"	l
f0101ed0	obj/kern/kernel.asm	/^f0101ed0:	e8 6b e1 ff ff       	call   f0100040 <_panic>$/;"	l
f0101ed5	obj/kern/kernel.asm	/^f0101ed5:	8d 90 00 10 00 f0    	lea    -0xffff000(%eax),%edx$/;"	l
f0101edb	obj/kern/kernel.asm	/^f0101edb:	8d 80 00 00 00 f0    	lea    -0x10000000(%eax),%eax$/;"	l
f0101ee1	obj/kern/kernel.asm	/^f0101ee1:	80 38 00             	cmpb   $0x0,(%eax)$/;"	l
f0101ee4	obj/kern/kernel.asm	/^f0101ee4:	74 24                	je     f0101f0a <mem_init+0x61e>$/;"	l
f0101ee6	obj/kern/kernel.asm	/^f0101ee6:	c7 44 24 0c 7e 89 10 	movl   $0xf010897e,0xc(%esp)$/;"	l
f0101eed	obj/kern/kernel.asm	/^f0101eed:	f0 $/;"	l
f0101eee	obj/kern/kernel.asm	/^f0101eee:	c7 44 24 08 9f 87 10 	movl   $0xf010879f,0x8(%esp)$/;"	l
f0101ef5	obj/kern/kernel.asm	/^f0101ef5:	f0 $/;"	l
f0101ef6	obj/kern/kernel.asm	/^f0101ef6:	c7 44 24 04 06 03 00 	movl   $0x306,0x4(%esp)$/;"	l
f0101efd	obj/kern/kernel.asm	/^f0101efd:	00 $/;"	l
f0101efe	obj/kern/kernel.asm	/^f0101efe:	c7 04 24 87 87 10 f0 	movl   $0xf0108787,(%esp)$/;"	l
f0101f05	obj/kern/kernel.asm	/^f0101f05:	e8 36 e1 ff ff       	call   f0100040 <_panic>$/;"	l
f0101f0a	obj/kern/kernel.asm	/^f0101f0a:	83 c0 01             	add    $0x1,%eax$/;"	l
f0101f0d	obj/kern/kernel.asm	/^f0101f0d:	39 d0                	cmp    %edx,%eax$/;"	l
f0101f0f	obj/kern/kernel.asm	/^f0101f0f:	75 d0                	jne    f0101ee1 <mem_init+0x5f5>$/;"	l
f0101f11	obj/kern/kernel.asm	/^f0101f11:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
f0101f14	obj/kern/kernel.asm	/^f0101f14:	a3 40 d2 20 f0       	mov    %eax,0xf020d240$/;"	l
f0101f19	obj/kern/kernel.asm	/^f0101f19:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0101f1c	obj/kern/kernel.asm	/^f0101f1c:	e8 40 f6 ff ff       	call   f0101561 <page_free>$/;"	l
f0101f21	obj/kern/kernel.asm	/^f0101f21:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f0101f24	obj/kern/kernel.asm	/^f0101f24:	e8 38 f6 ff ff       	call   f0101561 <page_free>$/;"	l
f0101f29	obj/kern/kernel.asm	/^f0101f29:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0101f2c	obj/kern/kernel.asm	/^f0101f2c:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0101f2f	obj/kern/kernel.asm	/^f0101f2f:	e8 2d f6 ff ff       	call   f0101561 <page_free>$/;"	l
f0101f34	obj/kern/kernel.asm	/^f0101f34:	a1 40 d2 20 f0       	mov    0xf020d240,%eax$/;"	l
f0101f39	obj/kern/kernel.asm	/^f0101f39:	eb 05                	jmp    f0101f40 <mem_init+0x654>$/;"	l
f0101f3b	obj/kern/kernel.asm	/^f0101f3b:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f0101f3e	obj/kern/kernel.asm	/^f0101f3e:	8b 00                	mov    (%eax),%eax$/;"	l
f0101f40	obj/kern/kernel.asm	/^f0101f40:	85 c0                	test   %eax,%eax$/;"	l
f0101f42	obj/kern/kernel.asm	/^f0101f42:	75 f7                	jne    f0101f3b <mem_init+0x64f>$/;"	l
f0101f44	obj/kern/kernel.asm	/^f0101f44:	85 db                	test   %ebx,%ebx$/;"	l
f0101f46	obj/kern/kernel.asm	/^f0101f46:	74 24                	je     f0101f6c <mem_init+0x680>$/;"	l
f0101f48	obj/kern/kernel.asm	/^f0101f48:	c7 44 24 0c 88 89 10 	movl   $0xf0108988,0xc(%esp)$/;"	l
f0101f4f	obj/kern/kernel.asm	/^f0101f4f:	f0 $/;"	l
f0101f50	obj/kern/kernel.asm	/^f0101f50:	c7 44 24 08 9f 87 10 	movl   $0xf010879f,0x8(%esp)$/;"	l
f0101f57	obj/kern/kernel.asm	/^f0101f57:	f0 $/;"	l
f0101f58	obj/kern/kernel.asm	/^f0101f58:	c7 44 24 04 13 03 00 	movl   $0x313,0x4(%esp)$/;"	l
f0101f5f	obj/kern/kernel.asm	/^f0101f5f:	00 $/;"	l
f0101f60	obj/kern/kernel.asm	/^f0101f60:	c7 04 24 87 87 10 f0 	movl   $0xf0108787,(%esp)$/;"	l
f0101f67	obj/kern/kernel.asm	/^f0101f67:	e8 d4 e0 ff ff       	call   f0100040 <_panic>$/;"	l
f0101f6c	obj/kern/kernel.asm	/^f0101f6c:	c7 04 24 bc 7f 10 f0 	movl   $0xf0107fbc,(%esp)$/;"	l
f0101f73	obj/kern/kernel.asm	/^f0101f73:	e8 26 24 00 00       	call   f010439e <cprintf>$/;"	l
f0101f78	obj/kern/kernel.asm	/^f0101f78:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0101f7f	obj/kern/kernel.asm	/^f0101f7f:	e8 59 f5 ff ff       	call   f01014dd <page_alloc>$/;"	l
f0101f84	obj/kern/kernel.asm	/^f0101f84:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0101f87	obj/kern/kernel.asm	/^f0101f87:	85 c0                	test   %eax,%eax$/;"	l
f0101f89	obj/kern/kernel.asm	/^f0101f89:	75 24                	jne    f0101faf <mem_init+0x6c3>$/;"	l
f0101f8b	obj/kern/kernel.asm	/^f0101f8b:	c7 44 24 0c 96 88 10 	movl   $0xf0108896,0xc(%esp)$/;"	l
f0101f92	obj/kern/kernel.asm	/^f0101f92:	f0 $/;"	l
f0101f93	obj/kern/kernel.asm	/^f0101f93:	c7 44 24 08 9f 87 10 	movl   $0xf010879f,0x8(%esp)$/;"	l
f0101f9a	obj/kern/kernel.asm	/^f0101f9a:	f0 $/;"	l
f0101f9b	obj/kern/kernel.asm	/^f0101f9b:	c7 44 24 04 79 03 00 	movl   $0x379,0x4(%esp)$/;"	l
f0101fa2	obj/kern/kernel.asm	/^f0101fa2:	00 $/;"	l
f0101fa3	obj/kern/kernel.asm	/^f0101fa3:	c7 04 24 87 87 10 f0 	movl   $0xf0108787,(%esp)$/;"	l
f0101faa	obj/kern/kernel.asm	/^f0101faa:	e8 91 e0 ff ff       	call   f0100040 <_panic>$/;"	l
f0101faf	obj/kern/kernel.asm	/^f0101faf:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0101fb6	obj/kern/kernel.asm	/^f0101fb6:	e8 22 f5 ff ff       	call   f01014dd <page_alloc>$/;"	l
f0101fbb	obj/kern/kernel.asm	/^f0101fbb:	89 c3                	mov    %eax,%ebx$/;"	l
f0101fbd	obj/kern/kernel.asm	/^f0101fbd:	85 c0                	test   %eax,%eax$/;"	l
f0101fbf	obj/kern/kernel.asm	/^f0101fbf:	75 24                	jne    f0101fe5 <mem_init+0x6f9>$/;"	l
f0101fc1	obj/kern/kernel.asm	/^f0101fc1:	c7 44 24 0c ac 88 10 	movl   $0xf01088ac,0xc(%esp)$/;"	l
f0101fc8	obj/kern/kernel.asm	/^f0101fc8:	f0 $/;"	l
f0101fc9	obj/kern/kernel.asm	/^f0101fc9:	c7 44 24 08 9f 87 10 	movl   $0xf010879f,0x8(%esp)$/;"	l
f0101fd0	obj/kern/kernel.asm	/^f0101fd0:	f0 $/;"	l
f0101fd1	obj/kern/kernel.asm	/^f0101fd1:	c7 44 24 04 7a 03 00 	movl   $0x37a,0x4(%esp)$/;"	l
f0101fd8	obj/kern/kernel.asm	/^f0101fd8:	00 $/;"	l
f0101fd9	obj/kern/kernel.asm	/^f0101fd9:	c7 04 24 87 87 10 f0 	movl   $0xf0108787,(%esp)$/;"	l
f0101fe0	obj/kern/kernel.asm	/^f0101fe0:	e8 5b e0 ff ff       	call   f0100040 <_panic>$/;"	l
f0101fe5	obj/kern/kernel.asm	/^f0101fe5:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0101fec	obj/kern/kernel.asm	/^f0101fec:	e8 ec f4 ff ff       	call   f01014dd <page_alloc>$/;"	l
f0101ff1	obj/kern/kernel.asm	/^f0101ff1:	89 c6                	mov    %eax,%esi$/;"	l
f0101ff3	obj/kern/kernel.asm	/^f0101ff3:	85 c0                	test   %eax,%eax$/;"	l
f0101ff5	obj/kern/kernel.asm	/^f0101ff5:	75 24                	jne    f010201b <mem_init+0x72f>$/;"	l
f0101ff7	obj/kern/kernel.asm	/^f0101ff7:	c7 44 24 0c c2 88 10 	movl   $0xf01088c2,0xc(%esp)$/;"	l
f0101ffe	obj/kern/kernel.asm	/^f0101ffe:	f0 $/;"	l
f0101fff	obj/kern/kernel.asm	/^f0101fff:	c7 44 24 08 9f 87 10 	movl   $0xf010879f,0x8(%esp)$/;"	l
f0102006	obj/kern/kernel.asm	/^f0102006:	f0 $/;"	l
f0102007	obj/kern/kernel.asm	/^f0102007:	c7 44 24 04 7b 03 00 	movl   $0x37b,0x4(%esp)$/;"	l
f010200e	obj/kern/kernel.asm	/^f010200e:	00 $/;"	l
f010200f	obj/kern/kernel.asm	/^f010200f:	c7 04 24 87 87 10 f0 	movl   $0xf0108787,(%esp)$/;"	l
f0102016	obj/kern/kernel.asm	/^f0102016:	e8 25 e0 ff ff       	call   f0100040 <_panic>$/;"	l
f010201b	obj/kern/kernel.asm	/^f010201b:	39 5d d4             	cmp    %ebx,-0x2c(%ebp)$/;"	l
f010201e	obj/kern/kernel.asm	/^f010201e:	75 24                	jne    f0102044 <mem_init+0x758>$/;"	l
f0102020	obj/kern/kernel.asm	/^f0102020:	c7 44 24 0c d8 88 10 	movl   $0xf01088d8,0xc(%esp)$/;"	l
f0102027	obj/kern/kernel.asm	/^f0102027:	f0 $/;"	l
f0102028	obj/kern/kernel.asm	/^f0102028:	c7 44 24 08 9f 87 10 	movl   $0xf010879f,0x8(%esp)$/;"	l
f010202f	obj/kern/kernel.asm	/^f010202f:	f0 $/;"	l
f0102030	obj/kern/kernel.asm	/^f0102030:	c7 44 24 04 7e 03 00 	movl   $0x37e,0x4(%esp)$/;"	l
f0102037	obj/kern/kernel.asm	/^f0102037:	00 $/;"	l
f0102038	obj/kern/kernel.asm	/^f0102038:	c7 04 24 87 87 10 f0 	movl   $0xf0108787,(%esp)$/;"	l
f010203f	obj/kern/kernel.asm	/^f010203f:	e8 fc df ff ff       	call   f0100040 <_panic>$/;"	l
f0102044	obj/kern/kernel.asm	/^f0102044:	39 c3                	cmp    %eax,%ebx$/;"	l
f0102046	obj/kern/kernel.asm	/^f0102046:	74 05                	je     f010204d <mem_init+0x761>$/;"	l
f0102048	obj/kern/kernel.asm	/^f0102048:	39 45 d4             	cmp    %eax,-0x2c(%ebp)$/;"	l
f010204b	obj/kern/kernel.asm	/^f010204b:	75 24                	jne    f0102071 <mem_init+0x785>$/;"	l
f010204d	obj/kern/kernel.asm	/^f010204d:	c7 44 24 0c 9c 7f 10 	movl   $0xf0107f9c,0xc(%esp)$/;"	l
f0102054	obj/kern/kernel.asm	/^f0102054:	f0 $/;"	l
f0102055	obj/kern/kernel.asm	/^f0102055:	c7 44 24 08 9f 87 10 	movl   $0xf010879f,0x8(%esp)$/;"	l
f010205c	obj/kern/kernel.asm	/^f010205c:	f0 $/;"	l
f010205d	obj/kern/kernel.asm	/^f010205d:	c7 44 24 04 7f 03 00 	movl   $0x37f,0x4(%esp)$/;"	l
f0102064	obj/kern/kernel.asm	/^f0102064:	00 $/;"	l
f0102065	obj/kern/kernel.asm	/^f0102065:	c7 04 24 87 87 10 f0 	movl   $0xf0108787,(%esp)$/;"	l
f010206c	obj/kern/kernel.asm	/^f010206c:	e8 cf df ff ff       	call   f0100040 <_panic>$/;"	l
f0102071	obj/kern/kernel.asm	/^f0102071:	a1 40 d2 20 f0       	mov    0xf020d240,%eax$/;"	l
f0102076	obj/kern/kernel.asm	/^f0102076:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f0102079	obj/kern/kernel.asm	/^f0102079:	c7 05 40 d2 20 f0 00 	movl   $0x0,0xf020d240$/;"	l
f0102080	obj/kern/kernel.asm	/^f0102080:	00 00 00 $/;"	l
f0102083	obj/kern/kernel.asm	/^f0102083:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f010208a	obj/kern/kernel.asm	/^f010208a:	e8 4e f4 ff ff       	call   f01014dd <page_alloc>$/;"	l
f010208f	obj/kern/kernel.asm	/^f010208f:	85 c0                	test   %eax,%eax$/;"	l
f0102091	obj/kern/kernel.asm	/^f0102091:	74 24                	je     f01020b7 <mem_init+0x7cb>$/;"	l
f0102093	obj/kern/kernel.asm	/^f0102093:	c7 44 24 0c 41 89 10 	movl   $0xf0108941,0xc(%esp)$/;"	l
f010209a	obj/kern/kernel.asm	/^f010209a:	f0 $/;"	l
f010209b	obj/kern/kernel.asm	/^f010209b:	c7 44 24 08 9f 87 10 	movl   $0xf010879f,0x8(%esp)$/;"	l
f01020a2	obj/kern/kernel.asm	/^f01020a2:	f0 $/;"	l
f01020a3	obj/kern/kernel.asm	/^f01020a3:	c7 44 24 04 86 03 00 	movl   $0x386,0x4(%esp)$/;"	l
f01020aa	obj/kern/kernel.asm	/^f01020aa:	00 $/;"	l
f01020ab	obj/kern/kernel.asm	/^f01020ab:	c7 04 24 87 87 10 f0 	movl   $0xf0108787,(%esp)$/;"	l
f01020b2	obj/kern/kernel.asm	/^f01020b2:	e8 89 df ff ff       	call   f0100040 <_panic>$/;"	l
f01020b7	obj/kern/kernel.asm	/^f01020b7:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f01020ba	obj/kern/kernel.asm	/^f01020ba:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f01020be	obj/kern/kernel.asm	/^f01020be:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f01020c5	obj/kern/kernel.asm	/^f01020c5:	00 $/;"	l
f01020c6	obj/kern/kernel.asm	/^f01020c6:	a1 8c de 20 f0       	mov    0xf020de8c,%eax$/;"	l
f01020cb	obj/kern/kernel.asm	/^f01020cb:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01020ce	obj/kern/kernel.asm	/^f01020ce:	e8 39 f6 ff ff       	call   f010170c <page_lookup>$/;"	l
f01020d3	obj/kern/kernel.asm	/^f01020d3:	85 c0                	test   %eax,%eax$/;"	l
f01020d5	obj/kern/kernel.asm	/^f01020d5:	74 24                	je     f01020fb <mem_init+0x80f>$/;"	l
f01020d7	obj/kern/kernel.asm	/^f01020d7:	c7 44 24 0c dc 7f 10 	movl   $0xf0107fdc,0xc(%esp)$/;"	l
f01020de	obj/kern/kernel.asm	/^f01020de:	f0 $/;"	l
f01020df	obj/kern/kernel.asm	/^f01020df:	c7 44 24 08 9f 87 10 	movl   $0xf010879f,0x8(%esp)$/;"	l
f01020e6	obj/kern/kernel.asm	/^f01020e6:	f0 $/;"	l
f01020e7	obj/kern/kernel.asm	/^f01020e7:	c7 44 24 04 89 03 00 	movl   $0x389,0x4(%esp)$/;"	l
f01020ee	obj/kern/kernel.asm	/^f01020ee:	00 $/;"	l
f01020ef	obj/kern/kernel.asm	/^f01020ef:	c7 04 24 87 87 10 f0 	movl   $0xf0108787,(%esp)$/;"	l
f01020f6	obj/kern/kernel.asm	/^f01020f6:	e8 45 df ff ff       	call   f0100040 <_panic>$/;"	l
f01020fb	obj/kern/kernel.asm	/^f01020fb:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f0102102	obj/kern/kernel.asm	/^f0102102:	00 $/;"	l
f0102103	obj/kern/kernel.asm	/^f0102103:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f010210a	obj/kern/kernel.asm	/^f010210a:	00 $/;"	l
f010210b	obj/kern/kernel.asm	/^f010210b:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f010210f	obj/kern/kernel.asm	/^f010210f:	a1 8c de 20 f0       	mov    0xf020de8c,%eax$/;"	l
f0102114	obj/kern/kernel.asm	/^f0102114:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102117	obj/kern/kernel.asm	/^f0102117:	e8 f1 f6 ff ff       	call   f010180d <page_insert>$/;"	l
f010211c	obj/kern/kernel.asm	/^f010211c:	85 c0                	test   %eax,%eax$/;"	l
f010211e	obj/kern/kernel.asm	/^f010211e:	78 24                	js     f0102144 <mem_init+0x858>$/;"	l
f0102120	obj/kern/kernel.asm	/^f0102120:	c7 44 24 0c 14 80 10 	movl   $0xf0108014,0xc(%esp)$/;"	l
f0102127	obj/kern/kernel.asm	/^f0102127:	f0 $/;"	l
f0102128	obj/kern/kernel.asm	/^f0102128:	c7 44 24 08 9f 87 10 	movl   $0xf010879f,0x8(%esp)$/;"	l
f010212f	obj/kern/kernel.asm	/^f010212f:	f0 $/;"	l
f0102130	obj/kern/kernel.asm	/^f0102130:	c7 44 24 04 8c 03 00 	movl   $0x38c,0x4(%esp)$/;"	l
f0102137	obj/kern/kernel.asm	/^f0102137:	00 $/;"	l
f0102138	obj/kern/kernel.asm	/^f0102138:	c7 04 24 87 87 10 f0 	movl   $0xf0108787,(%esp)$/;"	l
f010213f	obj/kern/kernel.asm	/^f010213f:	e8 fc de ff ff       	call   f0100040 <_panic>$/;"	l
f0102144	obj/kern/kernel.asm	/^f0102144:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0102147	obj/kern/kernel.asm	/^f0102147:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010214a	obj/kern/kernel.asm	/^f010214a:	e8 12 f4 ff ff       	call   f0101561 <page_free>$/;"	l
f010214f	obj/kern/kernel.asm	/^f010214f:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f0102156	obj/kern/kernel.asm	/^f0102156:	00 $/;"	l
f0102157	obj/kern/kernel.asm	/^f0102157:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f010215e	obj/kern/kernel.asm	/^f010215e:	00 $/;"	l
f010215f	obj/kern/kernel.asm	/^f010215f:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0102163	obj/kern/kernel.asm	/^f0102163:	a1 8c de 20 f0       	mov    0xf020de8c,%eax$/;"	l
f0102168	obj/kern/kernel.asm	/^f0102168:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010216b	obj/kern/kernel.asm	/^f010216b:	e8 9d f6 ff ff       	call   f010180d <page_insert>$/;"	l
f0102170	obj/kern/kernel.asm	/^f0102170:	85 c0                	test   %eax,%eax$/;"	l
f0102172	obj/kern/kernel.asm	/^f0102172:	74 24                	je     f0102198 <mem_init+0x8ac>$/;"	l
f0102174	obj/kern/kernel.asm	/^f0102174:	c7 44 24 0c 44 80 10 	movl   $0xf0108044,0xc(%esp)$/;"	l
f010217b	obj/kern/kernel.asm	/^f010217b:	f0 $/;"	l
f010217c	obj/kern/kernel.asm	/^f010217c:	c7 44 24 08 9f 87 10 	movl   $0xf010879f,0x8(%esp)$/;"	l
f0102183	obj/kern/kernel.asm	/^f0102183:	f0 $/;"	l
f0102184	obj/kern/kernel.asm	/^f0102184:	c7 44 24 04 90 03 00 	movl   $0x390,0x4(%esp)$/;"	l
f010218b	obj/kern/kernel.asm	/^f010218b:	00 $/;"	l
f010218c	obj/kern/kernel.asm	/^f010218c:	c7 04 24 87 87 10 f0 	movl   $0xf0108787,(%esp)$/;"	l
f0102193	obj/kern/kernel.asm	/^f0102193:	e8 a8 de ff ff       	call   f0100040 <_panic>$/;"	l
f0102198	obj/kern/kernel.asm	/^f0102198:	8b 3d 8c de 20 f0    	mov    0xf020de8c,%edi$/;"	l
f010219e	obj/kern/kernel.asm	/^f010219e:	a1 90 de 20 f0       	mov    0xf020de90,%eax$/;"	l
f01021a3	obj/kern/kernel.asm	/^f01021a3:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
f01021a6	obj/kern/kernel.asm	/^f01021a6:	8b 17                	mov    (%edi),%edx$/;"	l
f01021a8	obj/kern/kernel.asm	/^f01021a8:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx$/;"	l
f01021ae	obj/kern/kernel.asm	/^f01021ae:	8b 4d d4             	mov    -0x2c(%ebp),%ecx$/;"	l
f01021b1	obj/kern/kernel.asm	/^f01021b1:	29 c1                	sub    %eax,%ecx$/;"	l
f01021b3	obj/kern/kernel.asm	/^f01021b3:	89 c8                	mov    %ecx,%eax$/;"	l
f01021b5	obj/kern/kernel.asm	/^f01021b5:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f01021b8	obj/kern/kernel.asm	/^f01021b8:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f01021bb	obj/kern/kernel.asm	/^f01021bb:	39 c2                	cmp    %eax,%edx$/;"	l
f01021bd	obj/kern/kernel.asm	/^f01021bd:	74 24                	je     f01021e3 <mem_init+0x8f7>$/;"	l
f01021bf	obj/kern/kernel.asm	/^f01021bf:	c7 44 24 0c 74 80 10 	movl   $0xf0108074,0xc(%esp)$/;"	l
f01021c6	obj/kern/kernel.asm	/^f01021c6:	f0 $/;"	l
f01021c7	obj/kern/kernel.asm	/^f01021c7:	c7 44 24 08 9f 87 10 	movl   $0xf010879f,0x8(%esp)$/;"	l
f01021ce	obj/kern/kernel.asm	/^f01021ce:	f0 $/;"	l
f01021cf	obj/kern/kernel.asm	/^f01021cf:	c7 44 24 04 91 03 00 	movl   $0x391,0x4(%esp)$/;"	l
f01021d6	obj/kern/kernel.asm	/^f01021d6:	00 $/;"	l
f01021d7	obj/kern/kernel.asm	/^f01021d7:	c7 04 24 87 87 10 f0 	movl   $0xf0108787,(%esp)$/;"	l
f01021de	obj/kern/kernel.asm	/^f01021de:	e8 5d de ff ff       	call   f0100040 <_panic>$/;"	l
f01021e3	obj/kern/kernel.asm	/^f01021e3:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01021e8	obj/kern/kernel.asm	/^f01021e8:	89 f8                	mov    %edi,%eax$/;"	l
f01021ea	obj/kern/kernel.asm	/^f01021ea:	e8 b6 ed ff ff       	call   f0100fa5 <check_va2pa>$/;"	l
f01021ef	obj/kern/kernel.asm	/^f01021ef:	89 da                	mov    %ebx,%edx$/;"	l
f01021f1	obj/kern/kernel.asm	/^f01021f1:	2b 55 cc             	sub    -0x34(%ebp),%edx$/;"	l
f01021f4	obj/kern/kernel.asm	/^f01021f4:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f01021f7	obj/kern/kernel.asm	/^f01021f7:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f01021fa	obj/kern/kernel.asm	/^f01021fa:	39 d0                	cmp    %edx,%eax$/;"	l
f01021fc	obj/kern/kernel.asm	/^f01021fc:	74 24                	je     f0102222 <mem_init+0x936>$/;"	l
f01021fe	obj/kern/kernel.asm	/^f01021fe:	c7 44 24 0c 9c 80 10 	movl   $0xf010809c,0xc(%esp)$/;"	l
f0102205	obj/kern/kernel.asm	/^f0102205:	f0 $/;"	l
f0102206	obj/kern/kernel.asm	/^f0102206:	c7 44 24 08 9f 87 10 	movl   $0xf010879f,0x8(%esp)$/;"	l
f010220d	obj/kern/kernel.asm	/^f010220d:	f0 $/;"	l
f010220e	obj/kern/kernel.asm	/^f010220e:	c7 44 24 04 92 03 00 	movl   $0x392,0x4(%esp)$/;"	l
f0102215	obj/kern/kernel.asm	/^f0102215:	00 $/;"	l
f0102216	obj/kern/kernel.asm	/^f0102216:	c7 04 24 87 87 10 f0 	movl   $0xf0108787,(%esp)$/;"	l
f010221d	obj/kern/kernel.asm	/^f010221d:	e8 1e de ff ff       	call   f0100040 <_panic>$/;"	l
f0102222	obj/kern/kernel.asm	/^f0102222:	66 83 7b 04 01       	cmpw   $0x1,0x4(%ebx)$/;"	l
f0102227	obj/kern/kernel.asm	/^f0102227:	74 24                	je     f010224d <mem_init+0x961>$/;"	l
f0102229	obj/kern/kernel.asm	/^f0102229:	c7 44 24 0c 93 89 10 	movl   $0xf0108993,0xc(%esp)$/;"	l
f0102230	obj/kern/kernel.asm	/^f0102230:	f0 $/;"	l
f0102231	obj/kern/kernel.asm	/^f0102231:	c7 44 24 08 9f 87 10 	movl   $0xf010879f,0x8(%esp)$/;"	l
f0102238	obj/kern/kernel.asm	/^f0102238:	f0 $/;"	l
f0102239	obj/kern/kernel.asm	/^f0102239:	c7 44 24 04 93 03 00 	movl   $0x393,0x4(%esp)$/;"	l
f0102240	obj/kern/kernel.asm	/^f0102240:	00 $/;"	l
f0102241	obj/kern/kernel.asm	/^f0102241:	c7 04 24 87 87 10 f0 	movl   $0xf0108787,(%esp)$/;"	l
f0102248	obj/kern/kernel.asm	/^f0102248:	e8 f3 dd ff ff       	call   f0100040 <_panic>$/;"	l
f010224d	obj/kern/kernel.asm	/^f010224d:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0102250	obj/kern/kernel.asm	/^f0102250:	66 83 78 04 01       	cmpw   $0x1,0x4(%eax)$/;"	l
f0102255	obj/kern/kernel.asm	/^f0102255:	74 24                	je     f010227b <mem_init+0x98f>$/;"	l
f0102257	obj/kern/kernel.asm	/^f0102257:	c7 44 24 0c a4 89 10 	movl   $0xf01089a4,0xc(%esp)$/;"	l
f010225e	obj/kern/kernel.asm	/^f010225e:	f0 $/;"	l
f010225f	obj/kern/kernel.asm	/^f010225f:	c7 44 24 08 9f 87 10 	movl   $0xf010879f,0x8(%esp)$/;"	l
f0102266	obj/kern/kernel.asm	/^f0102266:	f0 $/;"	l
f0102267	obj/kern/kernel.asm	/^f0102267:	c7 44 24 04 94 03 00 	movl   $0x394,0x4(%esp)$/;"	l
f010226e	obj/kern/kernel.asm	/^f010226e:	00 $/;"	l
f010226f	obj/kern/kernel.asm	/^f010226f:	c7 04 24 87 87 10 f0 	movl   $0xf0108787,(%esp)$/;"	l
f0102276	obj/kern/kernel.asm	/^f0102276:	e8 c5 dd ff ff       	call   f0100040 <_panic>$/;"	l
f010227b	obj/kern/kernel.asm	/^f010227b:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f0102282	obj/kern/kernel.asm	/^f0102282:	00 $/;"	l
f0102283	obj/kern/kernel.asm	/^f0102283:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f010228a	obj/kern/kernel.asm	/^f010228a:	00 $/;"	l
f010228b	obj/kern/kernel.asm	/^f010228b:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f010228f	obj/kern/kernel.asm	/^f010228f:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f0102292	obj/kern/kernel.asm	/^f0102292:	e8 76 f5 ff ff       	call   f010180d <page_insert>$/;"	l
f0102297	obj/kern/kernel.asm	/^f0102297:	85 c0                	test   %eax,%eax$/;"	l
f0102299	obj/kern/kernel.asm	/^f0102299:	74 24                	je     f01022bf <mem_init+0x9d3>$/;"	l
f010229b	obj/kern/kernel.asm	/^f010229b:	c7 44 24 0c cc 80 10 	movl   $0xf01080cc,0xc(%esp)$/;"	l
f01022a2	obj/kern/kernel.asm	/^f01022a2:	f0 $/;"	l
f01022a3	obj/kern/kernel.asm	/^f01022a3:	c7 44 24 08 9f 87 10 	movl   $0xf010879f,0x8(%esp)$/;"	l
f01022aa	obj/kern/kernel.asm	/^f01022aa:	f0 $/;"	l
f01022ab	obj/kern/kernel.asm	/^f01022ab:	c7 44 24 04 97 03 00 	movl   $0x397,0x4(%esp)$/;"	l
f01022b2	obj/kern/kernel.asm	/^f01022b2:	00 $/;"	l
f01022b3	obj/kern/kernel.asm	/^f01022b3:	c7 04 24 87 87 10 f0 	movl   $0xf0108787,(%esp)$/;"	l
f01022ba	obj/kern/kernel.asm	/^f01022ba:	e8 81 dd ff ff       	call   f0100040 <_panic>$/;"	l
f01022bf	obj/kern/kernel.asm	/^f01022bf:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f01022c4	obj/kern/kernel.asm	/^f01022c4:	a1 8c de 20 f0       	mov    0xf020de8c,%eax$/;"	l
f01022c9	obj/kern/kernel.asm	/^f01022c9:	e8 d7 ec ff ff       	call   f0100fa5 <check_va2pa>$/;"	l
f01022ce	obj/kern/kernel.asm	/^f01022ce:	89 f2                	mov    %esi,%edx$/;"	l
f01022d0	obj/kern/kernel.asm	/^f01022d0:	2b 15 90 de 20 f0    	sub    0xf020de90,%edx$/;"	l
f01022d6	obj/kern/kernel.asm	/^f01022d6:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f01022d9	obj/kern/kernel.asm	/^f01022d9:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f01022dc	obj/kern/kernel.asm	/^f01022dc:	39 d0                	cmp    %edx,%eax$/;"	l
f01022de	obj/kern/kernel.asm	/^f01022de:	74 24                	je     f0102304 <mem_init+0xa18>$/;"	l
f01022e0	obj/kern/kernel.asm	/^f01022e0:	c7 44 24 0c 08 81 10 	movl   $0xf0108108,0xc(%esp)$/;"	l
f01022e7	obj/kern/kernel.asm	/^f01022e7:	f0 $/;"	l
f01022e8	obj/kern/kernel.asm	/^f01022e8:	c7 44 24 08 9f 87 10 	movl   $0xf010879f,0x8(%esp)$/;"	l
f01022ef	obj/kern/kernel.asm	/^f01022ef:	f0 $/;"	l
f01022f0	obj/kern/kernel.asm	/^f01022f0:	c7 44 24 04 98 03 00 	movl   $0x398,0x4(%esp)$/;"	l
f01022f7	obj/kern/kernel.asm	/^f01022f7:	00 $/;"	l
f01022f8	obj/kern/kernel.asm	/^f01022f8:	c7 04 24 87 87 10 f0 	movl   $0xf0108787,(%esp)$/;"	l
f01022ff	obj/kern/kernel.asm	/^f01022ff:	e8 3c dd ff ff       	call   f0100040 <_panic>$/;"	l
f0102304	obj/kern/kernel.asm	/^f0102304:	66 83 7e 04 01       	cmpw   $0x1,0x4(%esi)$/;"	l
f0102309	obj/kern/kernel.asm	/^f0102309:	74 24                	je     f010232f <mem_init+0xa43>$/;"	l
f010230b	obj/kern/kernel.asm	/^f010230b:	c7 44 24 0c b5 89 10 	movl   $0xf01089b5,0xc(%esp)$/;"	l
f0102312	obj/kern/kernel.asm	/^f0102312:	f0 $/;"	l
f0102313	obj/kern/kernel.asm	/^f0102313:	c7 44 24 08 9f 87 10 	movl   $0xf010879f,0x8(%esp)$/;"	l
f010231a	obj/kern/kernel.asm	/^f010231a:	f0 $/;"	l
f010231b	obj/kern/kernel.asm	/^f010231b:	c7 44 24 04 99 03 00 	movl   $0x399,0x4(%esp)$/;"	l
f0102322	obj/kern/kernel.asm	/^f0102322:	00 $/;"	l
f0102323	obj/kern/kernel.asm	/^f0102323:	c7 04 24 87 87 10 f0 	movl   $0xf0108787,(%esp)$/;"	l
f010232a	obj/kern/kernel.asm	/^f010232a:	e8 11 dd ff ff       	call   f0100040 <_panic>$/;"	l
f010232f	obj/kern/kernel.asm	/^f010232f:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0102336	obj/kern/kernel.asm	/^f0102336:	e8 a2 f1 ff ff       	call   f01014dd <page_alloc>$/;"	l
f010233b	obj/kern/kernel.asm	/^f010233b:	85 c0                	test   %eax,%eax$/;"	l
f010233d	obj/kern/kernel.asm	/^f010233d:	74 24                	je     f0102363 <mem_init+0xa77>$/;"	l
f010233f	obj/kern/kernel.asm	/^f010233f:	c7 44 24 0c 41 89 10 	movl   $0xf0108941,0xc(%esp)$/;"	l
f0102346	obj/kern/kernel.asm	/^f0102346:	f0 $/;"	l
f0102347	obj/kern/kernel.asm	/^f0102347:	c7 44 24 08 9f 87 10 	movl   $0xf010879f,0x8(%esp)$/;"	l
f010234e	obj/kern/kernel.asm	/^f010234e:	f0 $/;"	l
f010234f	obj/kern/kernel.asm	/^f010234f:	c7 44 24 04 9c 03 00 	movl   $0x39c,0x4(%esp)$/;"	l
f0102356	obj/kern/kernel.asm	/^f0102356:	00 $/;"	l
f0102357	obj/kern/kernel.asm	/^f0102357:	c7 04 24 87 87 10 f0 	movl   $0xf0108787,(%esp)$/;"	l
f010235e	obj/kern/kernel.asm	/^f010235e:	e8 dd dc ff ff       	call   f0100040 <_panic>$/;"	l
f0102363	obj/kern/kernel.asm	/^f0102363:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f010236a	obj/kern/kernel.asm	/^f010236a:	00 $/;"	l
f010236b	obj/kern/kernel.asm	/^f010236b:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f0102372	obj/kern/kernel.asm	/^f0102372:	00 $/;"	l
f0102373	obj/kern/kernel.asm	/^f0102373:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0102377	obj/kern/kernel.asm	/^f0102377:	a1 8c de 20 f0       	mov    0xf020de8c,%eax$/;"	l
f010237c	obj/kern/kernel.asm	/^f010237c:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010237f	obj/kern/kernel.asm	/^f010237f:	e8 89 f4 ff ff       	call   f010180d <page_insert>$/;"	l
f0102384	obj/kern/kernel.asm	/^f0102384:	85 c0                	test   %eax,%eax$/;"	l
f0102386	obj/kern/kernel.asm	/^f0102386:	74 24                	je     f01023ac <mem_init+0xac0>$/;"	l
f0102388	obj/kern/kernel.asm	/^f0102388:	c7 44 24 0c cc 80 10 	movl   $0xf01080cc,0xc(%esp)$/;"	l
f010238f	obj/kern/kernel.asm	/^f010238f:	f0 $/;"	l
f0102390	obj/kern/kernel.asm	/^f0102390:	c7 44 24 08 9f 87 10 	movl   $0xf010879f,0x8(%esp)$/;"	l
f0102397	obj/kern/kernel.asm	/^f0102397:	f0 $/;"	l
f0102398	obj/kern/kernel.asm	/^f0102398:	c7 44 24 04 9f 03 00 	movl   $0x39f,0x4(%esp)$/;"	l
f010239f	obj/kern/kernel.asm	/^f010239f:	00 $/;"	l
f01023a0	obj/kern/kernel.asm	/^f01023a0:	c7 04 24 87 87 10 f0 	movl   $0xf0108787,(%esp)$/;"	l
f01023a7	obj/kern/kernel.asm	/^f01023a7:	e8 94 dc ff ff       	call   f0100040 <_panic>$/;"	l
f01023ac	obj/kern/kernel.asm	/^f01023ac:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f01023b1	obj/kern/kernel.asm	/^f01023b1:	a1 8c de 20 f0       	mov    0xf020de8c,%eax$/;"	l
f01023b6	obj/kern/kernel.asm	/^f01023b6:	e8 ea eb ff ff       	call   f0100fa5 <check_va2pa>$/;"	l
f01023bb	obj/kern/kernel.asm	/^f01023bb:	89 f2                	mov    %esi,%edx$/;"	l
f01023bd	obj/kern/kernel.asm	/^f01023bd:	2b 15 90 de 20 f0    	sub    0xf020de90,%edx$/;"	l
f01023c3	obj/kern/kernel.asm	/^f01023c3:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f01023c6	obj/kern/kernel.asm	/^f01023c6:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f01023c9	obj/kern/kernel.asm	/^f01023c9:	39 d0                	cmp    %edx,%eax$/;"	l
f01023cb	obj/kern/kernel.asm	/^f01023cb:	74 24                	je     f01023f1 <mem_init+0xb05>$/;"	l
f01023cd	obj/kern/kernel.asm	/^f01023cd:	c7 44 24 0c 08 81 10 	movl   $0xf0108108,0xc(%esp)$/;"	l
f01023d4	obj/kern/kernel.asm	/^f01023d4:	f0 $/;"	l
f01023d5	obj/kern/kernel.asm	/^f01023d5:	c7 44 24 08 9f 87 10 	movl   $0xf010879f,0x8(%esp)$/;"	l
f01023dc	obj/kern/kernel.asm	/^f01023dc:	f0 $/;"	l
f01023dd	obj/kern/kernel.asm	/^f01023dd:	c7 44 24 04 a1 03 00 	movl   $0x3a1,0x4(%esp)$/;"	l
f01023e4	obj/kern/kernel.asm	/^f01023e4:	00 $/;"	l
f01023e5	obj/kern/kernel.asm	/^f01023e5:	c7 04 24 87 87 10 f0 	movl   $0xf0108787,(%esp)$/;"	l
f01023ec	obj/kern/kernel.asm	/^f01023ec:	e8 4f dc ff ff       	call   f0100040 <_panic>$/;"	l
f01023f1	obj/kern/kernel.asm	/^f01023f1:	66 83 7e 04 01       	cmpw   $0x1,0x4(%esi)$/;"	l
f01023f6	obj/kern/kernel.asm	/^f01023f6:	74 24                	je     f010241c <mem_init+0xb30>$/;"	l
f01023f8	obj/kern/kernel.asm	/^f01023f8:	c7 44 24 0c b5 89 10 	movl   $0xf01089b5,0xc(%esp)$/;"	l
f01023ff	obj/kern/kernel.asm	/^f01023ff:	f0 $/;"	l
f0102400	obj/kern/kernel.asm	/^f0102400:	c7 44 24 08 9f 87 10 	movl   $0xf010879f,0x8(%esp)$/;"	l
f0102407	obj/kern/kernel.asm	/^f0102407:	f0 $/;"	l
f0102408	obj/kern/kernel.asm	/^f0102408:	c7 44 24 04 a2 03 00 	movl   $0x3a2,0x4(%esp)$/;"	l
f010240f	obj/kern/kernel.asm	/^f010240f:	00 $/;"	l
f0102410	obj/kern/kernel.asm	/^f0102410:	c7 04 24 87 87 10 f0 	movl   $0xf0108787,(%esp)$/;"	l
f0102417	obj/kern/kernel.asm	/^f0102417:	e8 24 dc ff ff       	call   f0100040 <_panic>$/;"	l
f010241c	obj/kern/kernel.asm	/^f010241c:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0102423	obj/kern/kernel.asm	/^f0102423:	e8 b5 f0 ff ff       	call   f01014dd <page_alloc>$/;"	l
f0102428	obj/kern/kernel.asm	/^f0102428:	85 c0                	test   %eax,%eax$/;"	l
f010242a	obj/kern/kernel.asm	/^f010242a:	74 24                	je     f0102450 <mem_init+0xb64>$/;"	l
f010242c	obj/kern/kernel.asm	/^f010242c:	c7 44 24 0c 41 89 10 	movl   $0xf0108941,0xc(%esp)$/;"	l
f0102433	obj/kern/kernel.asm	/^f0102433:	f0 $/;"	l
f0102434	obj/kern/kernel.asm	/^f0102434:	c7 44 24 08 9f 87 10 	movl   $0xf010879f,0x8(%esp)$/;"	l
f010243b	obj/kern/kernel.asm	/^f010243b:	f0 $/;"	l
f010243c	obj/kern/kernel.asm	/^f010243c:	c7 44 24 04 a6 03 00 	movl   $0x3a6,0x4(%esp)$/;"	l
f0102443	obj/kern/kernel.asm	/^f0102443:	00 $/;"	l
f0102444	obj/kern/kernel.asm	/^f0102444:	c7 04 24 87 87 10 f0 	movl   $0xf0108787,(%esp)$/;"	l
f010244b	obj/kern/kernel.asm	/^f010244b:	e8 f0 db ff ff       	call   f0100040 <_panic>$/;"	l
f0102450	obj/kern/kernel.asm	/^f0102450:	8b 15 8c de 20 f0    	mov    0xf020de8c,%edx$/;"	l
f0102456	obj/kern/kernel.asm	/^f0102456:	8b 02                	mov    (%edx),%eax$/;"	l
f0102458	obj/kern/kernel.asm	/^f0102458:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f010245d	obj/kern/kernel.asm	/^f010245d:	89 c1                	mov    %eax,%ecx$/;"	l
f010245f	obj/kern/kernel.asm	/^f010245f:	c1 e9 0c             	shr    $0xc,%ecx$/;"	l
f0102462	obj/kern/kernel.asm	/^f0102462:	3b 0d 88 de 20 f0    	cmp    0xf020de88,%ecx$/;"	l
f0102468	obj/kern/kernel.asm	/^f0102468:	72 20                	jb     f010248a <mem_init+0xb9e>$/;"	l
f010246a	obj/kern/kernel.asm	/^f010246a:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f010246e	obj/kern/kernel.asm	/^f010246e:	c7 44 24 08 e4 76 10 	movl   $0xf01076e4,0x8(%esp)$/;"	l
f0102475	obj/kern/kernel.asm	/^f0102475:	f0 $/;"	l
f0102476	obj/kern/kernel.asm	/^f0102476:	c7 44 24 04 a9 03 00 	movl   $0x3a9,0x4(%esp)$/;"	l
f010247d	obj/kern/kernel.asm	/^f010247d:	00 $/;"	l
f010247e	obj/kern/kernel.asm	/^f010247e:	c7 04 24 87 87 10 f0 	movl   $0xf0108787,(%esp)$/;"	l
f0102485	obj/kern/kernel.asm	/^f0102485:	e8 b6 db ff ff       	call   f0100040 <_panic>$/;"	l
f010248a	obj/kern/kernel.asm	/^f010248a:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f010248f	obj/kern/kernel.asm	/^f010248f:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0102492	obj/kern/kernel.asm	/^f0102492:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0102499	obj/kern/kernel.asm	/^f0102499:	00 $/;"	l
f010249a	obj/kern/kernel.asm	/^f010249a:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
f01024a1	obj/kern/kernel.asm	/^f01024a1:	00 $/;"	l
f01024a2	obj/kern/kernel.asm	/^f01024a2:	89 14 24             	mov    %edx,(%esp)$/;"	l
f01024a5	obj/kern/kernel.asm	/^f01024a5:	e8 6e f1 ff ff       	call   f0101618 <pgdir_walk>$/;"	l
f01024aa	obj/kern/kernel.asm	/^f01024aa:	8b 4d e4             	mov    -0x1c(%ebp),%ecx$/;"	l
f01024ad	obj/kern/kernel.asm	/^f01024ad:	8d 51 04             	lea    0x4(%ecx),%edx$/;"	l
f01024b0	obj/kern/kernel.asm	/^f01024b0:	39 d0                	cmp    %edx,%eax$/;"	l
f01024b2	obj/kern/kernel.asm	/^f01024b2:	74 24                	je     f01024d8 <mem_init+0xbec>$/;"	l
f01024b4	obj/kern/kernel.asm	/^f01024b4:	c7 44 24 0c 38 81 10 	movl   $0xf0108138,0xc(%esp)$/;"	l
f01024bb	obj/kern/kernel.asm	/^f01024bb:	f0 $/;"	l
f01024bc	obj/kern/kernel.asm	/^f01024bc:	c7 44 24 08 9f 87 10 	movl   $0xf010879f,0x8(%esp)$/;"	l
f01024c3	obj/kern/kernel.asm	/^f01024c3:	f0 $/;"	l
f01024c4	obj/kern/kernel.asm	/^f01024c4:	c7 44 24 04 aa 03 00 	movl   $0x3aa,0x4(%esp)$/;"	l
f01024cb	obj/kern/kernel.asm	/^f01024cb:	00 $/;"	l
f01024cc	obj/kern/kernel.asm	/^f01024cc:	c7 04 24 87 87 10 f0 	movl   $0xf0108787,(%esp)$/;"	l
f01024d3	obj/kern/kernel.asm	/^f01024d3:	e8 68 db ff ff       	call   f0100040 <_panic>$/;"	l
f01024d8	obj/kern/kernel.asm	/^f01024d8:	c7 44 24 0c 06 00 00 	movl   $0x6,0xc(%esp)$/;"	l
f01024df	obj/kern/kernel.asm	/^f01024df:	00 $/;"	l
f01024e0	obj/kern/kernel.asm	/^f01024e0:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f01024e7	obj/kern/kernel.asm	/^f01024e7:	00 $/;"	l
f01024e8	obj/kern/kernel.asm	/^f01024e8:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f01024ec	obj/kern/kernel.asm	/^f01024ec:	a1 8c de 20 f0       	mov    0xf020de8c,%eax$/;"	l
f01024f1	obj/kern/kernel.asm	/^f01024f1:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01024f4	obj/kern/kernel.asm	/^f01024f4:	e8 14 f3 ff ff       	call   f010180d <page_insert>$/;"	l
f01024f9	obj/kern/kernel.asm	/^f01024f9:	85 c0                	test   %eax,%eax$/;"	l
f01024fb	obj/kern/kernel.asm	/^f01024fb:	74 24                	je     f0102521 <mem_init+0xc35>$/;"	l
f01024fd	obj/kern/kernel.asm	/^f01024fd:	c7 44 24 0c 78 81 10 	movl   $0xf0108178,0xc(%esp)$/;"	l
f0102504	obj/kern/kernel.asm	/^f0102504:	f0 $/;"	l
f0102505	obj/kern/kernel.asm	/^f0102505:	c7 44 24 08 9f 87 10 	movl   $0xf010879f,0x8(%esp)$/;"	l
f010250c	obj/kern/kernel.asm	/^f010250c:	f0 $/;"	l
f010250d	obj/kern/kernel.asm	/^f010250d:	c7 44 24 04 ad 03 00 	movl   $0x3ad,0x4(%esp)$/;"	l
f0102514	obj/kern/kernel.asm	/^f0102514:	00 $/;"	l
f0102515	obj/kern/kernel.asm	/^f0102515:	c7 04 24 87 87 10 f0 	movl   $0xf0108787,(%esp)$/;"	l
f010251c	obj/kern/kernel.asm	/^f010251c:	e8 1f db ff ff       	call   f0100040 <_panic>$/;"	l
f0102521	obj/kern/kernel.asm	/^f0102521:	8b 3d 8c de 20 f0    	mov    0xf020de8c,%edi$/;"	l
f0102527	obj/kern/kernel.asm	/^f0102527:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f010252c	obj/kern/kernel.asm	/^f010252c:	89 f8                	mov    %edi,%eax$/;"	l
f010252e	obj/kern/kernel.asm	/^f010252e:	e8 72 ea ff ff       	call   f0100fa5 <check_va2pa>$/;"	l
f0102533	obj/kern/kernel.asm	/^f0102533:	89 f2                	mov    %esi,%edx$/;"	l
f0102535	obj/kern/kernel.asm	/^f0102535:	2b 15 90 de 20 f0    	sub    0xf020de90,%edx$/;"	l
f010253b	obj/kern/kernel.asm	/^f010253b:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f010253e	obj/kern/kernel.asm	/^f010253e:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0102541	obj/kern/kernel.asm	/^f0102541:	39 d0                	cmp    %edx,%eax$/;"	l
f0102543	obj/kern/kernel.asm	/^f0102543:	74 24                	je     f0102569 <mem_init+0xc7d>$/;"	l
f0102545	obj/kern/kernel.asm	/^f0102545:	c7 44 24 0c 08 81 10 	movl   $0xf0108108,0xc(%esp)$/;"	l
f010254c	obj/kern/kernel.asm	/^f010254c:	f0 $/;"	l
f010254d	obj/kern/kernel.asm	/^f010254d:	c7 44 24 08 9f 87 10 	movl   $0xf010879f,0x8(%esp)$/;"	l
f0102554	obj/kern/kernel.asm	/^f0102554:	f0 $/;"	l
f0102555	obj/kern/kernel.asm	/^f0102555:	c7 44 24 04 ae 03 00 	movl   $0x3ae,0x4(%esp)$/;"	l
f010255c	obj/kern/kernel.asm	/^f010255c:	00 $/;"	l
f010255d	obj/kern/kernel.asm	/^f010255d:	c7 04 24 87 87 10 f0 	movl   $0xf0108787,(%esp)$/;"	l
f0102564	obj/kern/kernel.asm	/^f0102564:	e8 d7 da ff ff       	call   f0100040 <_panic>$/;"	l
f0102569	obj/kern/kernel.asm	/^f0102569:	66 83 7e 04 01       	cmpw   $0x1,0x4(%esi)$/;"	l
f010256e	obj/kern/kernel.asm	/^f010256e:	74 24                	je     f0102594 <mem_init+0xca8>$/;"	l
f0102570	obj/kern/kernel.asm	/^f0102570:	c7 44 24 0c b5 89 10 	movl   $0xf01089b5,0xc(%esp)$/;"	l
f0102577	obj/kern/kernel.asm	/^f0102577:	f0 $/;"	l
f0102578	obj/kern/kernel.asm	/^f0102578:	c7 44 24 08 9f 87 10 	movl   $0xf010879f,0x8(%esp)$/;"	l
f010257f	obj/kern/kernel.asm	/^f010257f:	f0 $/;"	l
f0102580	obj/kern/kernel.asm	/^f0102580:	c7 44 24 04 af 03 00 	movl   $0x3af,0x4(%esp)$/;"	l
f0102587	obj/kern/kernel.asm	/^f0102587:	00 $/;"	l
f0102588	obj/kern/kernel.asm	/^f0102588:	c7 04 24 87 87 10 f0 	movl   $0xf0108787,(%esp)$/;"	l
f010258f	obj/kern/kernel.asm	/^f010258f:	e8 ac da ff ff       	call   f0100040 <_panic>$/;"	l
f0102594	obj/kern/kernel.asm	/^f0102594:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f010259b	obj/kern/kernel.asm	/^f010259b:	00 $/;"	l
f010259c	obj/kern/kernel.asm	/^f010259c:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
f01025a3	obj/kern/kernel.asm	/^f01025a3:	00 $/;"	l
f01025a4	obj/kern/kernel.asm	/^f01025a4:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f01025a7	obj/kern/kernel.asm	/^f01025a7:	e8 6c f0 ff ff       	call   f0101618 <pgdir_walk>$/;"	l
f01025ac	obj/kern/kernel.asm	/^f01025ac:	f6 00 04             	testb  $0x4,(%eax)$/;"	l
f01025af	obj/kern/kernel.asm	/^f01025af:	75 24                	jne    f01025d5 <mem_init+0xce9>$/;"	l
f01025b1	obj/kern/kernel.asm	/^f01025b1:	c7 44 24 0c b8 81 10 	movl   $0xf01081b8,0xc(%esp)$/;"	l
f01025b8	obj/kern/kernel.asm	/^f01025b8:	f0 $/;"	l
f01025b9	obj/kern/kernel.asm	/^f01025b9:	c7 44 24 08 9f 87 10 	movl   $0xf010879f,0x8(%esp)$/;"	l
f01025c0	obj/kern/kernel.asm	/^f01025c0:	f0 $/;"	l
f01025c1	obj/kern/kernel.asm	/^f01025c1:	c7 44 24 04 b0 03 00 	movl   $0x3b0,0x4(%esp)$/;"	l
f01025c8	obj/kern/kernel.asm	/^f01025c8:	00 $/;"	l
f01025c9	obj/kern/kernel.asm	/^f01025c9:	c7 04 24 87 87 10 f0 	movl   $0xf0108787,(%esp)$/;"	l
f01025d0	obj/kern/kernel.asm	/^f01025d0:	e8 6b da ff ff       	call   f0100040 <_panic>$/;"	l
f01025d5	obj/kern/kernel.asm	/^f01025d5:	a1 8c de 20 f0       	mov    0xf020de8c,%eax$/;"	l
f01025da	obj/kern/kernel.asm	/^f01025da:	f6 00 04             	testb  $0x4,(%eax)$/;"	l
f01025dd	obj/kern/kernel.asm	/^f01025dd:	75 24                	jne    f0102603 <mem_init+0xd17>$/;"	l
f01025df	obj/kern/kernel.asm	/^f01025df:	c7 44 24 0c c6 89 10 	movl   $0xf01089c6,0xc(%esp)$/;"	l
f01025e6	obj/kern/kernel.asm	/^f01025e6:	f0 $/;"	l
f01025e7	obj/kern/kernel.asm	/^f01025e7:	c7 44 24 08 9f 87 10 	movl   $0xf010879f,0x8(%esp)$/;"	l
f01025ee	obj/kern/kernel.asm	/^f01025ee:	f0 $/;"	l
f01025ef	obj/kern/kernel.asm	/^f01025ef:	c7 44 24 04 b1 03 00 	movl   $0x3b1,0x4(%esp)$/;"	l
f01025f6	obj/kern/kernel.asm	/^f01025f6:	00 $/;"	l
f01025f7	obj/kern/kernel.asm	/^f01025f7:	c7 04 24 87 87 10 f0 	movl   $0xf0108787,(%esp)$/;"	l
f01025fe	obj/kern/kernel.asm	/^f01025fe:	e8 3d da ff ff       	call   f0100040 <_panic>$/;"	l
f0102603	obj/kern/kernel.asm	/^f0102603:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f010260a	obj/kern/kernel.asm	/^f010260a:	00 $/;"	l
f010260b	obj/kern/kernel.asm	/^f010260b:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f0102612	obj/kern/kernel.asm	/^f0102612:	00 $/;"	l
f0102613	obj/kern/kernel.asm	/^f0102613:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0102617	obj/kern/kernel.asm	/^f0102617:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010261a	obj/kern/kernel.asm	/^f010261a:	e8 ee f1 ff ff       	call   f010180d <page_insert>$/;"	l
f010261f	obj/kern/kernel.asm	/^f010261f:	85 c0                	test   %eax,%eax$/;"	l
f0102621	obj/kern/kernel.asm	/^f0102621:	74 24                	je     f0102647 <mem_init+0xd5b>$/;"	l
f0102623	obj/kern/kernel.asm	/^f0102623:	c7 44 24 0c cc 80 10 	movl   $0xf01080cc,0xc(%esp)$/;"	l
f010262a	obj/kern/kernel.asm	/^f010262a:	f0 $/;"	l
f010262b	obj/kern/kernel.asm	/^f010262b:	c7 44 24 08 9f 87 10 	movl   $0xf010879f,0x8(%esp)$/;"	l
f0102632	obj/kern/kernel.asm	/^f0102632:	f0 $/;"	l
f0102633	obj/kern/kernel.asm	/^f0102633:	c7 44 24 04 b4 03 00 	movl   $0x3b4,0x4(%esp)$/;"	l
f010263a	obj/kern/kernel.asm	/^f010263a:	00 $/;"	l
f010263b	obj/kern/kernel.asm	/^f010263b:	c7 04 24 87 87 10 f0 	movl   $0xf0108787,(%esp)$/;"	l
f0102642	obj/kern/kernel.asm	/^f0102642:	e8 f9 d9 ff ff       	call   f0100040 <_panic>$/;"	l
f0102647	obj/kern/kernel.asm	/^f0102647:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f010264e	obj/kern/kernel.asm	/^f010264e:	00 $/;"	l
f010264f	obj/kern/kernel.asm	/^f010264f:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
f0102656	obj/kern/kernel.asm	/^f0102656:	00 $/;"	l
f0102657	obj/kern/kernel.asm	/^f0102657:	a1 8c de 20 f0       	mov    0xf020de8c,%eax$/;"	l
f010265c	obj/kern/kernel.asm	/^f010265c:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010265f	obj/kern/kernel.asm	/^f010265f:	e8 b4 ef ff ff       	call   f0101618 <pgdir_walk>$/;"	l
f0102664	obj/kern/kernel.asm	/^f0102664:	f6 00 02             	testb  $0x2,(%eax)$/;"	l
f0102667	obj/kern/kernel.asm	/^f0102667:	75 24                	jne    f010268d <mem_init+0xda1>$/;"	l
f0102669	obj/kern/kernel.asm	/^f0102669:	c7 44 24 0c ec 81 10 	movl   $0xf01081ec,0xc(%esp)$/;"	l
f0102670	obj/kern/kernel.asm	/^f0102670:	f0 $/;"	l
f0102671	obj/kern/kernel.asm	/^f0102671:	c7 44 24 08 9f 87 10 	movl   $0xf010879f,0x8(%esp)$/;"	l
f0102678	obj/kern/kernel.asm	/^f0102678:	f0 $/;"	l
f0102679	obj/kern/kernel.asm	/^f0102679:	c7 44 24 04 b5 03 00 	movl   $0x3b5,0x4(%esp)$/;"	l
f0102680	obj/kern/kernel.asm	/^f0102680:	00 $/;"	l
f0102681	obj/kern/kernel.asm	/^f0102681:	c7 04 24 87 87 10 f0 	movl   $0xf0108787,(%esp)$/;"	l
f0102688	obj/kern/kernel.asm	/^f0102688:	e8 b3 d9 ff ff       	call   f0100040 <_panic>$/;"	l
f010268d	obj/kern/kernel.asm	/^f010268d:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0102694	obj/kern/kernel.asm	/^f0102694:	00 $/;"	l
f0102695	obj/kern/kernel.asm	/^f0102695:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
f010269c	obj/kern/kernel.asm	/^f010269c:	00 $/;"	l
f010269d	obj/kern/kernel.asm	/^f010269d:	a1 8c de 20 f0       	mov    0xf020de8c,%eax$/;"	l
f01026a2	obj/kern/kernel.asm	/^f01026a2:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01026a5	obj/kern/kernel.asm	/^f01026a5:	e8 6e ef ff ff       	call   f0101618 <pgdir_walk>$/;"	l
f01026aa	obj/kern/kernel.asm	/^f01026aa:	f6 00 04             	testb  $0x4,(%eax)$/;"	l
f01026ad	obj/kern/kernel.asm	/^f01026ad:	74 24                	je     f01026d3 <mem_init+0xde7>$/;"	l
f01026af	obj/kern/kernel.asm	/^f01026af:	c7 44 24 0c 20 82 10 	movl   $0xf0108220,0xc(%esp)$/;"	l
f01026b6	obj/kern/kernel.asm	/^f01026b6:	f0 $/;"	l
f01026b7	obj/kern/kernel.asm	/^f01026b7:	c7 44 24 08 9f 87 10 	movl   $0xf010879f,0x8(%esp)$/;"	l
f01026be	obj/kern/kernel.asm	/^f01026be:	f0 $/;"	l
f01026bf	obj/kern/kernel.asm	/^f01026bf:	c7 44 24 04 b6 03 00 	movl   $0x3b6,0x4(%esp)$/;"	l
f01026c6	obj/kern/kernel.asm	/^f01026c6:	00 $/;"	l
f01026c7	obj/kern/kernel.asm	/^f01026c7:	c7 04 24 87 87 10 f0 	movl   $0xf0108787,(%esp)$/;"	l
f01026ce	obj/kern/kernel.asm	/^f01026ce:	e8 6d d9 ff ff       	call   f0100040 <_panic>$/;"	l
f01026d3	obj/kern/kernel.asm	/^f01026d3:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f01026da	obj/kern/kernel.asm	/^f01026da:	00 $/;"	l
f01026db	obj/kern/kernel.asm	/^f01026db:	c7 44 24 08 00 00 40 	movl   $0x400000,0x8(%esp)$/;"	l
f01026e2	obj/kern/kernel.asm	/^f01026e2:	00 $/;"	l
f01026e3	obj/kern/kernel.asm	/^f01026e3:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f01026e6	obj/kern/kernel.asm	/^f01026e6:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01026ea	obj/kern/kernel.asm	/^f01026ea:	a1 8c de 20 f0       	mov    0xf020de8c,%eax$/;"	l
f01026ef	obj/kern/kernel.asm	/^f01026ef:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01026f2	obj/kern/kernel.asm	/^f01026f2:	e8 16 f1 ff ff       	call   f010180d <page_insert>$/;"	l
f01026f7	obj/kern/kernel.asm	/^f01026f7:	85 c0                	test   %eax,%eax$/;"	l
f01026f9	obj/kern/kernel.asm	/^f01026f9:	78 24                	js     f010271f <mem_init+0xe33>$/;"	l
f01026fb	obj/kern/kernel.asm	/^f01026fb:	c7 44 24 0c 58 82 10 	movl   $0xf0108258,0xc(%esp)$/;"	l
f0102702	obj/kern/kernel.asm	/^f0102702:	f0 $/;"	l
f0102703	obj/kern/kernel.asm	/^f0102703:	c7 44 24 08 9f 87 10 	movl   $0xf010879f,0x8(%esp)$/;"	l
f010270a	obj/kern/kernel.asm	/^f010270a:	f0 $/;"	l
f010270b	obj/kern/kernel.asm	/^f010270b:	c7 44 24 04 b9 03 00 	movl   $0x3b9,0x4(%esp)$/;"	l
f0102712	obj/kern/kernel.asm	/^f0102712:	00 $/;"	l
f0102713	obj/kern/kernel.asm	/^f0102713:	c7 04 24 87 87 10 f0 	movl   $0xf0108787,(%esp)$/;"	l
f010271a	obj/kern/kernel.asm	/^f010271a:	e8 21 d9 ff ff       	call   f0100040 <_panic>$/;"	l
f010271f	obj/kern/kernel.asm	/^f010271f:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f0102726	obj/kern/kernel.asm	/^f0102726:	00 $/;"	l
f0102727	obj/kern/kernel.asm	/^f0102727:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f010272e	obj/kern/kernel.asm	/^f010272e:	00 $/;"	l
f010272f	obj/kern/kernel.asm	/^f010272f:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0102733	obj/kern/kernel.asm	/^f0102733:	a1 8c de 20 f0       	mov    0xf020de8c,%eax$/;"	l
f0102738	obj/kern/kernel.asm	/^f0102738:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010273b	obj/kern/kernel.asm	/^f010273b:	e8 cd f0 ff ff       	call   f010180d <page_insert>$/;"	l
f0102740	obj/kern/kernel.asm	/^f0102740:	85 c0                	test   %eax,%eax$/;"	l
f0102742	obj/kern/kernel.asm	/^f0102742:	74 24                	je     f0102768 <mem_init+0xe7c>$/;"	l
f0102744	obj/kern/kernel.asm	/^f0102744:	c7 44 24 0c 90 82 10 	movl   $0xf0108290,0xc(%esp)$/;"	l
f010274b	obj/kern/kernel.asm	/^f010274b:	f0 $/;"	l
f010274c	obj/kern/kernel.asm	/^f010274c:	c7 44 24 08 9f 87 10 	movl   $0xf010879f,0x8(%esp)$/;"	l
f0102753	obj/kern/kernel.asm	/^f0102753:	f0 $/;"	l
f0102754	obj/kern/kernel.asm	/^f0102754:	c7 44 24 04 bc 03 00 	movl   $0x3bc,0x4(%esp)$/;"	l
f010275b	obj/kern/kernel.asm	/^f010275b:	00 $/;"	l
f010275c	obj/kern/kernel.asm	/^f010275c:	c7 04 24 87 87 10 f0 	movl   $0xf0108787,(%esp)$/;"	l
f0102763	obj/kern/kernel.asm	/^f0102763:	e8 d8 d8 ff ff       	call   f0100040 <_panic>$/;"	l
f0102768	obj/kern/kernel.asm	/^f0102768:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f010276f	obj/kern/kernel.asm	/^f010276f:	00 $/;"	l
f0102770	obj/kern/kernel.asm	/^f0102770:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
f0102777	obj/kern/kernel.asm	/^f0102777:	00 $/;"	l
f0102778	obj/kern/kernel.asm	/^f0102778:	a1 8c de 20 f0       	mov    0xf020de8c,%eax$/;"	l
f010277d	obj/kern/kernel.asm	/^f010277d:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102780	obj/kern/kernel.asm	/^f0102780:	e8 93 ee ff ff       	call   f0101618 <pgdir_walk>$/;"	l
f0102785	obj/kern/kernel.asm	/^f0102785:	f6 00 04             	testb  $0x4,(%eax)$/;"	l
f0102788	obj/kern/kernel.asm	/^f0102788:	74 24                	je     f01027ae <mem_init+0xec2>$/;"	l
f010278a	obj/kern/kernel.asm	/^f010278a:	c7 44 24 0c 20 82 10 	movl   $0xf0108220,0xc(%esp)$/;"	l
f0102791	obj/kern/kernel.asm	/^f0102791:	f0 $/;"	l
f0102792	obj/kern/kernel.asm	/^f0102792:	c7 44 24 08 9f 87 10 	movl   $0xf010879f,0x8(%esp)$/;"	l
f0102799	obj/kern/kernel.asm	/^f0102799:	f0 $/;"	l
f010279a	obj/kern/kernel.asm	/^f010279a:	c7 44 24 04 bd 03 00 	movl   $0x3bd,0x4(%esp)$/;"	l
f01027a1	obj/kern/kernel.asm	/^f01027a1:	00 $/;"	l
f01027a2	obj/kern/kernel.asm	/^f01027a2:	c7 04 24 87 87 10 f0 	movl   $0xf0108787,(%esp)$/;"	l
f01027a9	obj/kern/kernel.asm	/^f01027a9:	e8 92 d8 ff ff       	call   f0100040 <_panic>$/;"	l
f01027ae	obj/kern/kernel.asm	/^f01027ae:	8b 3d 8c de 20 f0    	mov    0xf020de8c,%edi$/;"	l
f01027b4	obj/kern/kernel.asm	/^f01027b4:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01027b9	obj/kern/kernel.asm	/^f01027b9:	89 f8                	mov    %edi,%eax$/;"	l
f01027bb	obj/kern/kernel.asm	/^f01027bb:	e8 e5 e7 ff ff       	call   f0100fa5 <check_va2pa>$/;"	l
f01027c0	obj/kern/kernel.asm	/^f01027c0:	89 c1                	mov    %eax,%ecx$/;"	l
f01027c2	obj/kern/kernel.asm	/^f01027c2:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
f01027c5	obj/kern/kernel.asm	/^f01027c5:	89 d8                	mov    %ebx,%eax$/;"	l
f01027c7	obj/kern/kernel.asm	/^f01027c7:	2b 05 90 de 20 f0    	sub    0xf020de90,%eax$/;"	l
f01027cd	obj/kern/kernel.asm	/^f01027cd:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f01027d0	obj/kern/kernel.asm	/^f01027d0:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f01027d3	obj/kern/kernel.asm	/^f01027d3:	39 c1                	cmp    %eax,%ecx$/;"	l
f01027d5	obj/kern/kernel.asm	/^f01027d5:	74 24                	je     f01027fb <mem_init+0xf0f>$/;"	l
f01027d7	obj/kern/kernel.asm	/^f01027d7:	c7 44 24 0c cc 82 10 	movl   $0xf01082cc,0xc(%esp)$/;"	l
f01027de	obj/kern/kernel.asm	/^f01027de:	f0 $/;"	l
f01027df	obj/kern/kernel.asm	/^f01027df:	c7 44 24 08 9f 87 10 	movl   $0xf010879f,0x8(%esp)$/;"	l
f01027e6	obj/kern/kernel.asm	/^f01027e6:	f0 $/;"	l
f01027e7	obj/kern/kernel.asm	/^f01027e7:	c7 44 24 04 c0 03 00 	movl   $0x3c0,0x4(%esp)$/;"	l
f01027ee	obj/kern/kernel.asm	/^f01027ee:	00 $/;"	l
f01027ef	obj/kern/kernel.asm	/^f01027ef:	c7 04 24 87 87 10 f0 	movl   $0xf0108787,(%esp)$/;"	l
f01027f6	obj/kern/kernel.asm	/^f01027f6:	e8 45 d8 ff ff       	call   f0100040 <_panic>$/;"	l
f01027fb	obj/kern/kernel.asm	/^f01027fb:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f0102800	obj/kern/kernel.asm	/^f0102800:	89 f8                	mov    %edi,%eax$/;"	l
f0102802	obj/kern/kernel.asm	/^f0102802:	e8 9e e7 ff ff       	call   f0100fa5 <check_va2pa>$/;"	l
f0102807	obj/kern/kernel.asm	/^f0102807:	39 45 cc             	cmp    %eax,-0x34(%ebp)$/;"	l
f010280a	obj/kern/kernel.asm	/^f010280a:	74 24                	je     f0102830 <mem_init+0xf44>$/;"	l
f010280c	obj/kern/kernel.asm	/^f010280c:	c7 44 24 0c f8 82 10 	movl   $0xf01082f8,0xc(%esp)$/;"	l
f0102813	obj/kern/kernel.asm	/^f0102813:	f0 $/;"	l
f0102814	obj/kern/kernel.asm	/^f0102814:	c7 44 24 08 9f 87 10 	movl   $0xf010879f,0x8(%esp)$/;"	l
f010281b	obj/kern/kernel.asm	/^f010281b:	f0 $/;"	l
f010281c	obj/kern/kernel.asm	/^f010281c:	c7 44 24 04 c1 03 00 	movl   $0x3c1,0x4(%esp)$/;"	l
f0102823	obj/kern/kernel.asm	/^f0102823:	00 $/;"	l
f0102824	obj/kern/kernel.asm	/^f0102824:	c7 04 24 87 87 10 f0 	movl   $0xf0108787,(%esp)$/;"	l
f010282b	obj/kern/kernel.asm	/^f010282b:	e8 10 d8 ff ff       	call   f0100040 <_panic>$/;"	l
f0102830	obj/kern/kernel.asm	/^f0102830:	66 83 7b 04 02       	cmpw   $0x2,0x4(%ebx)$/;"	l
f0102835	obj/kern/kernel.asm	/^f0102835:	74 24                	je     f010285b <mem_init+0xf6f>$/;"	l
f0102837	obj/kern/kernel.asm	/^f0102837:	c7 44 24 0c dc 89 10 	movl   $0xf01089dc,0xc(%esp)$/;"	l
f010283e	obj/kern/kernel.asm	/^f010283e:	f0 $/;"	l
f010283f	obj/kern/kernel.asm	/^f010283f:	c7 44 24 08 9f 87 10 	movl   $0xf010879f,0x8(%esp)$/;"	l
f0102846	obj/kern/kernel.asm	/^f0102846:	f0 $/;"	l
f0102847	obj/kern/kernel.asm	/^f0102847:	c7 44 24 04 c3 03 00 	movl   $0x3c3,0x4(%esp)$/;"	l
f010284e	obj/kern/kernel.asm	/^f010284e:	00 $/;"	l
f010284f	obj/kern/kernel.asm	/^f010284f:	c7 04 24 87 87 10 f0 	movl   $0xf0108787,(%esp)$/;"	l
f0102856	obj/kern/kernel.asm	/^f0102856:	e8 e5 d7 ff ff       	call   f0100040 <_panic>$/;"	l
f010285b	obj/kern/kernel.asm	/^f010285b:	66 83 7e 04 00       	cmpw   $0x0,0x4(%esi)$/;"	l
f0102860	obj/kern/kernel.asm	/^f0102860:	74 24                	je     f0102886 <mem_init+0xf9a>$/;"	l
f0102862	obj/kern/kernel.asm	/^f0102862:	c7 44 24 0c ed 89 10 	movl   $0xf01089ed,0xc(%esp)$/;"	l
f0102869	obj/kern/kernel.asm	/^f0102869:	f0 $/;"	l
f010286a	obj/kern/kernel.asm	/^f010286a:	c7 44 24 08 9f 87 10 	movl   $0xf010879f,0x8(%esp)$/;"	l
f0102871	obj/kern/kernel.asm	/^f0102871:	f0 $/;"	l
f0102872	obj/kern/kernel.asm	/^f0102872:	c7 44 24 04 c4 03 00 	movl   $0x3c4,0x4(%esp)$/;"	l
f0102879	obj/kern/kernel.asm	/^f0102879:	00 $/;"	l
f010287a	obj/kern/kernel.asm	/^f010287a:	c7 04 24 87 87 10 f0 	movl   $0xf0108787,(%esp)$/;"	l
f0102881	obj/kern/kernel.asm	/^f0102881:	e8 ba d7 ff ff       	call   f0100040 <_panic>$/;"	l
f0102886	obj/kern/kernel.asm	/^f0102886:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f010288d	obj/kern/kernel.asm	/^f010288d:	e8 4b ec ff ff       	call   f01014dd <page_alloc>$/;"	l
f0102892	obj/kern/kernel.asm	/^f0102892:	85 c0                	test   %eax,%eax$/;"	l
f0102894	obj/kern/kernel.asm	/^f0102894:	74 04                	je     f010289a <mem_init+0xfae>$/;"	l
f0102896	obj/kern/kernel.asm	/^f0102896:	39 c6                	cmp    %eax,%esi$/;"	l
f0102898	obj/kern/kernel.asm	/^f0102898:	74 24                	je     f01028be <mem_init+0xfd2>$/;"	l
f010289a	obj/kern/kernel.asm	/^f010289a:	c7 44 24 0c 28 83 10 	movl   $0xf0108328,0xc(%esp)$/;"	l
f01028a1	obj/kern/kernel.asm	/^f01028a1:	f0 $/;"	l
f01028a2	obj/kern/kernel.asm	/^f01028a2:	c7 44 24 08 9f 87 10 	movl   $0xf010879f,0x8(%esp)$/;"	l
f01028a9	obj/kern/kernel.asm	/^f01028a9:	f0 $/;"	l
f01028aa	obj/kern/kernel.asm	/^f01028aa:	c7 44 24 04 c7 03 00 	movl   $0x3c7,0x4(%esp)$/;"	l
f01028b1	obj/kern/kernel.asm	/^f01028b1:	00 $/;"	l
f01028b2	obj/kern/kernel.asm	/^f01028b2:	c7 04 24 87 87 10 f0 	movl   $0xf0108787,(%esp)$/;"	l
f01028b9	obj/kern/kernel.asm	/^f01028b9:	e8 82 d7 ff ff       	call   f0100040 <_panic>$/;"	l
f01028be	obj/kern/kernel.asm	/^f01028be:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f01028c5	obj/kern/kernel.asm	/^f01028c5:	00 $/;"	l
f01028c6	obj/kern/kernel.asm	/^f01028c6:	a1 8c de 20 f0       	mov    0xf020de8c,%eax$/;"	l
f01028cb	obj/kern/kernel.asm	/^f01028cb:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01028ce	obj/kern/kernel.asm	/^f01028ce:	e8 e6 ee ff ff       	call   f01017b9 <page_remove>$/;"	l
f01028d3	obj/kern/kernel.asm	/^f01028d3:	8b 3d 8c de 20 f0    	mov    0xf020de8c,%edi$/;"	l
f01028d9	obj/kern/kernel.asm	/^f01028d9:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01028de	obj/kern/kernel.asm	/^f01028de:	89 f8                	mov    %edi,%eax$/;"	l
f01028e0	obj/kern/kernel.asm	/^f01028e0:	e8 c0 e6 ff ff       	call   f0100fa5 <check_va2pa>$/;"	l
f01028e5	obj/kern/kernel.asm	/^f01028e5:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f01028e8	obj/kern/kernel.asm	/^f01028e8:	74 24                	je     f010290e <mem_init+0x1022>$/;"	l
f01028ea	obj/kern/kernel.asm	/^f01028ea:	c7 44 24 0c 4c 83 10 	movl   $0xf010834c,0xc(%esp)$/;"	l
f01028f1	obj/kern/kernel.asm	/^f01028f1:	f0 $/;"	l
f01028f2	obj/kern/kernel.asm	/^f01028f2:	c7 44 24 08 9f 87 10 	movl   $0xf010879f,0x8(%esp)$/;"	l
f01028f9	obj/kern/kernel.asm	/^f01028f9:	f0 $/;"	l
f01028fa	obj/kern/kernel.asm	/^f01028fa:	c7 44 24 04 cb 03 00 	movl   $0x3cb,0x4(%esp)$/;"	l
f0102901	obj/kern/kernel.asm	/^f0102901:	00 $/;"	l
f0102902	obj/kern/kernel.asm	/^f0102902:	c7 04 24 87 87 10 f0 	movl   $0xf0108787,(%esp)$/;"	l
f0102909	obj/kern/kernel.asm	/^f0102909:	e8 32 d7 ff ff       	call   f0100040 <_panic>$/;"	l
f010290e	obj/kern/kernel.asm	/^f010290e:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f0102913	obj/kern/kernel.asm	/^f0102913:	89 f8                	mov    %edi,%eax$/;"	l
f0102915	obj/kern/kernel.asm	/^f0102915:	e8 8b e6 ff ff       	call   f0100fa5 <check_va2pa>$/;"	l
f010291a	obj/kern/kernel.asm	/^f010291a:	89 da                	mov    %ebx,%edx$/;"	l
f010291c	obj/kern/kernel.asm	/^f010291c:	2b 15 90 de 20 f0    	sub    0xf020de90,%edx$/;"	l
f0102922	obj/kern/kernel.asm	/^f0102922:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0102925	obj/kern/kernel.asm	/^f0102925:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0102928	obj/kern/kernel.asm	/^f0102928:	39 d0                	cmp    %edx,%eax$/;"	l
f010292a	obj/kern/kernel.asm	/^f010292a:	74 24                	je     f0102950 <mem_init+0x1064>$/;"	l
f010292c	obj/kern/kernel.asm	/^f010292c:	c7 44 24 0c f8 82 10 	movl   $0xf01082f8,0xc(%esp)$/;"	l
f0102933	obj/kern/kernel.asm	/^f0102933:	f0 $/;"	l
f0102934	obj/kern/kernel.asm	/^f0102934:	c7 44 24 08 9f 87 10 	movl   $0xf010879f,0x8(%esp)$/;"	l
f010293b	obj/kern/kernel.asm	/^f010293b:	f0 $/;"	l
f010293c	obj/kern/kernel.asm	/^f010293c:	c7 44 24 04 cc 03 00 	movl   $0x3cc,0x4(%esp)$/;"	l
f0102943	obj/kern/kernel.asm	/^f0102943:	00 $/;"	l
f0102944	obj/kern/kernel.asm	/^f0102944:	c7 04 24 87 87 10 f0 	movl   $0xf0108787,(%esp)$/;"	l
f010294b	obj/kern/kernel.asm	/^f010294b:	e8 f0 d6 ff ff       	call   f0100040 <_panic>$/;"	l
f0102950	obj/kern/kernel.asm	/^f0102950:	66 83 7b 04 01       	cmpw   $0x1,0x4(%ebx)$/;"	l
f0102955	obj/kern/kernel.asm	/^f0102955:	74 24                	je     f010297b <mem_init+0x108f>$/;"	l
f0102957	obj/kern/kernel.asm	/^f0102957:	c7 44 24 0c 93 89 10 	movl   $0xf0108993,0xc(%esp)$/;"	l
f010295e	obj/kern/kernel.asm	/^f010295e:	f0 $/;"	l
f010295f	obj/kern/kernel.asm	/^f010295f:	c7 44 24 08 9f 87 10 	movl   $0xf010879f,0x8(%esp)$/;"	l
f0102966	obj/kern/kernel.asm	/^f0102966:	f0 $/;"	l
f0102967	obj/kern/kernel.asm	/^f0102967:	c7 44 24 04 cd 03 00 	movl   $0x3cd,0x4(%esp)$/;"	l
f010296e	obj/kern/kernel.asm	/^f010296e:	00 $/;"	l
f010296f	obj/kern/kernel.asm	/^f010296f:	c7 04 24 87 87 10 f0 	movl   $0xf0108787,(%esp)$/;"	l
f0102976	obj/kern/kernel.asm	/^f0102976:	e8 c5 d6 ff ff       	call   f0100040 <_panic>$/;"	l
f010297b	obj/kern/kernel.asm	/^f010297b:	66 83 7e 04 00       	cmpw   $0x0,0x4(%esi)$/;"	l
f0102980	obj/kern/kernel.asm	/^f0102980:	74 24                	je     f01029a6 <mem_init+0x10ba>$/;"	l
f0102982	obj/kern/kernel.asm	/^f0102982:	c7 44 24 0c ed 89 10 	movl   $0xf01089ed,0xc(%esp)$/;"	l
f0102989	obj/kern/kernel.asm	/^f0102989:	f0 $/;"	l
f010298a	obj/kern/kernel.asm	/^f010298a:	c7 44 24 08 9f 87 10 	movl   $0xf010879f,0x8(%esp)$/;"	l
f0102991	obj/kern/kernel.asm	/^f0102991:	f0 $/;"	l
f0102992	obj/kern/kernel.asm	/^f0102992:	c7 44 24 04 ce 03 00 	movl   $0x3ce,0x4(%esp)$/;"	l
f0102999	obj/kern/kernel.asm	/^f0102999:	00 $/;"	l
f010299a	obj/kern/kernel.asm	/^f010299a:	c7 04 24 87 87 10 f0 	movl   $0xf0108787,(%esp)$/;"	l
f01029a1	obj/kern/kernel.asm	/^f01029a1:	e8 9a d6 ff ff       	call   f0100040 <_panic>$/;"	l
f01029a6	obj/kern/kernel.asm	/^f01029a6:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)$/;"	l
f01029ad	obj/kern/kernel.asm	/^f01029ad:	00 $/;"	l
f01029ae	obj/kern/kernel.asm	/^f01029ae:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f01029b5	obj/kern/kernel.asm	/^f01029b5:	00 $/;"	l
f01029b6	obj/kern/kernel.asm	/^f01029b6:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f01029ba	obj/kern/kernel.asm	/^f01029ba:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f01029bd	obj/kern/kernel.asm	/^f01029bd:	e8 4b ee ff ff       	call   f010180d <page_insert>$/;"	l
f01029c2	obj/kern/kernel.asm	/^f01029c2:	85 c0                	test   %eax,%eax$/;"	l
f01029c4	obj/kern/kernel.asm	/^f01029c4:	74 24                	je     f01029ea <mem_init+0x10fe>$/;"	l
f01029c6	obj/kern/kernel.asm	/^f01029c6:	c7 44 24 0c 70 83 10 	movl   $0xf0108370,0xc(%esp)$/;"	l
f01029cd	obj/kern/kernel.asm	/^f01029cd:	f0 $/;"	l
f01029ce	obj/kern/kernel.asm	/^f01029ce:	c7 44 24 08 9f 87 10 	movl   $0xf010879f,0x8(%esp)$/;"	l
f01029d5	obj/kern/kernel.asm	/^f01029d5:	f0 $/;"	l
f01029d6	obj/kern/kernel.asm	/^f01029d6:	c7 44 24 04 d1 03 00 	movl   $0x3d1,0x4(%esp)$/;"	l
f01029dd	obj/kern/kernel.asm	/^f01029dd:	00 $/;"	l
f01029de	obj/kern/kernel.asm	/^f01029de:	c7 04 24 87 87 10 f0 	movl   $0xf0108787,(%esp)$/;"	l
f01029e5	obj/kern/kernel.asm	/^f01029e5:	e8 56 d6 ff ff       	call   f0100040 <_panic>$/;"	l
f01029ea	obj/kern/kernel.asm	/^f01029ea:	66 83 7b 04 00       	cmpw   $0x0,0x4(%ebx)$/;"	l
f01029ef	obj/kern/kernel.asm	/^f01029ef:	75 24                	jne    f0102a15 <mem_init+0x1129>$/;"	l
f01029f1	obj/kern/kernel.asm	/^f01029f1:	c7 44 24 0c fe 89 10 	movl   $0xf01089fe,0xc(%esp)$/;"	l
f01029f8	obj/kern/kernel.asm	/^f01029f8:	f0 $/;"	l
f01029f9	obj/kern/kernel.asm	/^f01029f9:	c7 44 24 08 9f 87 10 	movl   $0xf010879f,0x8(%esp)$/;"	l
f0102a00	obj/kern/kernel.asm	/^f0102a00:	f0 $/;"	l
f0102a01	obj/kern/kernel.asm	/^f0102a01:	c7 44 24 04 d2 03 00 	movl   $0x3d2,0x4(%esp)$/;"	l
f0102a08	obj/kern/kernel.asm	/^f0102a08:	00 $/;"	l
f0102a09	obj/kern/kernel.asm	/^f0102a09:	c7 04 24 87 87 10 f0 	movl   $0xf0108787,(%esp)$/;"	l
f0102a10	obj/kern/kernel.asm	/^f0102a10:	e8 2b d6 ff ff       	call   f0100040 <_panic>$/;"	l
f0102a15	obj/kern/kernel.asm	/^f0102a15:	83 3b 00             	cmpl   $0x0,(%ebx)$/;"	l
f0102a18	obj/kern/kernel.asm	/^f0102a18:	74 24                	je     f0102a3e <mem_init+0x1152>$/;"	l
f0102a1a	obj/kern/kernel.asm	/^f0102a1a:	c7 44 24 0c 0a 8a 10 	movl   $0xf0108a0a,0xc(%esp)$/;"	l
f0102a21	obj/kern/kernel.asm	/^f0102a21:	f0 $/;"	l
f0102a22	obj/kern/kernel.asm	/^f0102a22:	c7 44 24 08 9f 87 10 	movl   $0xf010879f,0x8(%esp)$/;"	l
f0102a29	obj/kern/kernel.asm	/^f0102a29:	f0 $/;"	l
f0102a2a	obj/kern/kernel.asm	/^f0102a2a:	c7 44 24 04 d3 03 00 	movl   $0x3d3,0x4(%esp)$/;"	l
f0102a31	obj/kern/kernel.asm	/^f0102a31:	00 $/;"	l
f0102a32	obj/kern/kernel.asm	/^f0102a32:	c7 04 24 87 87 10 f0 	movl   $0xf0108787,(%esp)$/;"	l
f0102a39	obj/kern/kernel.asm	/^f0102a39:	e8 02 d6 ff ff       	call   f0100040 <_panic>$/;"	l
f0102a3e	obj/kern/kernel.asm	/^f0102a3e:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
f0102a45	obj/kern/kernel.asm	/^f0102a45:	00 $/;"	l
f0102a46	obj/kern/kernel.asm	/^f0102a46:	a1 8c de 20 f0       	mov    0xf020de8c,%eax$/;"	l
f0102a4b	obj/kern/kernel.asm	/^f0102a4b:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102a4e	obj/kern/kernel.asm	/^f0102a4e:	e8 66 ed ff ff       	call   f01017b9 <page_remove>$/;"	l
f0102a53	obj/kern/kernel.asm	/^f0102a53:	8b 3d 8c de 20 f0    	mov    0xf020de8c,%edi$/;"	l
f0102a59	obj/kern/kernel.asm	/^f0102a59:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0102a5e	obj/kern/kernel.asm	/^f0102a5e:	89 f8                	mov    %edi,%eax$/;"	l
f0102a60	obj/kern/kernel.asm	/^f0102a60:	e8 40 e5 ff ff       	call   f0100fa5 <check_va2pa>$/;"	l
f0102a65	obj/kern/kernel.asm	/^f0102a65:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f0102a68	obj/kern/kernel.asm	/^f0102a68:	74 24                	je     f0102a8e <mem_init+0x11a2>$/;"	l
f0102a6a	obj/kern/kernel.asm	/^f0102a6a:	c7 44 24 0c 4c 83 10 	movl   $0xf010834c,0xc(%esp)$/;"	l
f0102a71	obj/kern/kernel.asm	/^f0102a71:	f0 $/;"	l
f0102a72	obj/kern/kernel.asm	/^f0102a72:	c7 44 24 08 9f 87 10 	movl   $0xf010879f,0x8(%esp)$/;"	l
f0102a79	obj/kern/kernel.asm	/^f0102a79:	f0 $/;"	l
f0102a7a	obj/kern/kernel.asm	/^f0102a7a:	c7 44 24 04 d7 03 00 	movl   $0x3d7,0x4(%esp)$/;"	l
f0102a81	obj/kern/kernel.asm	/^f0102a81:	00 $/;"	l
f0102a82	obj/kern/kernel.asm	/^f0102a82:	c7 04 24 87 87 10 f0 	movl   $0xf0108787,(%esp)$/;"	l
f0102a89	obj/kern/kernel.asm	/^f0102a89:	e8 b2 d5 ff ff       	call   f0100040 <_panic>$/;"	l
f0102a8e	obj/kern/kernel.asm	/^f0102a8e:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f0102a93	obj/kern/kernel.asm	/^f0102a93:	89 f8                	mov    %edi,%eax$/;"	l
f0102a95	obj/kern/kernel.asm	/^f0102a95:	e8 0b e5 ff ff       	call   f0100fa5 <check_va2pa>$/;"	l
f0102a9a	obj/kern/kernel.asm	/^f0102a9a:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f0102a9d	obj/kern/kernel.asm	/^f0102a9d:	74 24                	je     f0102ac3 <mem_init+0x11d7>$/;"	l
f0102a9f	obj/kern/kernel.asm	/^f0102a9f:	c7 44 24 0c a8 83 10 	movl   $0xf01083a8,0xc(%esp)$/;"	l
f0102aa6	obj/kern/kernel.asm	/^f0102aa6:	f0 $/;"	l
f0102aa7	obj/kern/kernel.asm	/^f0102aa7:	c7 44 24 08 9f 87 10 	movl   $0xf010879f,0x8(%esp)$/;"	l
f0102aae	obj/kern/kernel.asm	/^f0102aae:	f0 $/;"	l
f0102aaf	obj/kern/kernel.asm	/^f0102aaf:	c7 44 24 04 d8 03 00 	movl   $0x3d8,0x4(%esp)$/;"	l
f0102ab6	obj/kern/kernel.asm	/^f0102ab6:	00 $/;"	l
f0102ab7	obj/kern/kernel.asm	/^f0102ab7:	c7 04 24 87 87 10 f0 	movl   $0xf0108787,(%esp)$/;"	l
f0102abe	obj/kern/kernel.asm	/^f0102abe:	e8 7d d5 ff ff       	call   f0100040 <_panic>$/;"	l
f0102ac3	obj/kern/kernel.asm	/^f0102ac3:	66 83 7b 04 00       	cmpw   $0x0,0x4(%ebx)$/;"	l
f0102ac8	obj/kern/kernel.asm	/^f0102ac8:	74 24                	je     f0102aee <mem_init+0x1202>$/;"	l
f0102aca	obj/kern/kernel.asm	/^f0102aca:	c7 44 24 0c 1f 8a 10 	movl   $0xf0108a1f,0xc(%esp)$/;"	l
f0102ad1	obj/kern/kernel.asm	/^f0102ad1:	f0 $/;"	l
f0102ad2	obj/kern/kernel.asm	/^f0102ad2:	c7 44 24 08 9f 87 10 	movl   $0xf010879f,0x8(%esp)$/;"	l
f0102ad9	obj/kern/kernel.asm	/^f0102ad9:	f0 $/;"	l
f0102ada	obj/kern/kernel.asm	/^f0102ada:	c7 44 24 04 d9 03 00 	movl   $0x3d9,0x4(%esp)$/;"	l
f0102ae1	obj/kern/kernel.asm	/^f0102ae1:	00 $/;"	l
f0102ae2	obj/kern/kernel.asm	/^f0102ae2:	c7 04 24 87 87 10 f0 	movl   $0xf0108787,(%esp)$/;"	l
f0102ae9	obj/kern/kernel.asm	/^f0102ae9:	e8 52 d5 ff ff       	call   f0100040 <_panic>$/;"	l
f0102aee	obj/kern/kernel.asm	/^f0102aee:	66 83 7e 04 00       	cmpw   $0x0,0x4(%esi)$/;"	l
f0102af3	obj/kern/kernel.asm	/^f0102af3:	74 24                	je     f0102b19 <mem_init+0x122d>$/;"	l
f0102af5	obj/kern/kernel.asm	/^f0102af5:	c7 44 24 0c ed 89 10 	movl   $0xf01089ed,0xc(%esp)$/;"	l
f0102afc	obj/kern/kernel.asm	/^f0102afc:	f0 $/;"	l
f0102afd	obj/kern/kernel.asm	/^f0102afd:	c7 44 24 08 9f 87 10 	movl   $0xf010879f,0x8(%esp)$/;"	l
f0102b04	obj/kern/kernel.asm	/^f0102b04:	f0 $/;"	l
f0102b05	obj/kern/kernel.asm	/^f0102b05:	c7 44 24 04 da 03 00 	movl   $0x3da,0x4(%esp)$/;"	l
f0102b0c	obj/kern/kernel.asm	/^f0102b0c:	00 $/;"	l
f0102b0d	obj/kern/kernel.asm	/^f0102b0d:	c7 04 24 87 87 10 f0 	movl   $0xf0108787,(%esp)$/;"	l
f0102b14	obj/kern/kernel.asm	/^f0102b14:	e8 27 d5 ff ff       	call   f0100040 <_panic>$/;"	l
f0102b19	obj/kern/kernel.asm	/^f0102b19:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0102b20	obj/kern/kernel.asm	/^f0102b20:	e8 b8 e9 ff ff       	call   f01014dd <page_alloc>$/;"	l
f0102b25	obj/kern/kernel.asm	/^f0102b25:	85 c0                	test   %eax,%eax$/;"	l
f0102b27	obj/kern/kernel.asm	/^f0102b27:	74 04                	je     f0102b2d <mem_init+0x1241>$/;"	l
f0102b29	obj/kern/kernel.asm	/^f0102b29:	39 c3                	cmp    %eax,%ebx$/;"	l
f0102b2b	obj/kern/kernel.asm	/^f0102b2b:	74 24                	je     f0102b51 <mem_init+0x1265>$/;"	l
f0102b2d	obj/kern/kernel.asm	/^f0102b2d:	c7 44 24 0c d0 83 10 	movl   $0xf01083d0,0xc(%esp)$/;"	l
f0102b34	obj/kern/kernel.asm	/^f0102b34:	f0 $/;"	l
f0102b35	obj/kern/kernel.asm	/^f0102b35:	c7 44 24 08 9f 87 10 	movl   $0xf010879f,0x8(%esp)$/;"	l
f0102b3c	obj/kern/kernel.asm	/^f0102b3c:	f0 $/;"	l
f0102b3d	obj/kern/kernel.asm	/^f0102b3d:	c7 44 24 04 dd 03 00 	movl   $0x3dd,0x4(%esp)$/;"	l
f0102b44	obj/kern/kernel.asm	/^f0102b44:	00 $/;"	l
f0102b45	obj/kern/kernel.asm	/^f0102b45:	c7 04 24 87 87 10 f0 	movl   $0xf0108787,(%esp)$/;"	l
f0102b4c	obj/kern/kernel.asm	/^f0102b4c:	e8 ef d4 ff ff       	call   f0100040 <_panic>$/;"	l
f0102b51	obj/kern/kernel.asm	/^f0102b51:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0102b58	obj/kern/kernel.asm	/^f0102b58:	e8 80 e9 ff ff       	call   f01014dd <page_alloc>$/;"	l
f0102b5d	obj/kern/kernel.asm	/^f0102b5d:	85 c0                	test   %eax,%eax$/;"	l
f0102b5f	obj/kern/kernel.asm	/^f0102b5f:	74 24                	je     f0102b85 <mem_init+0x1299>$/;"	l
f0102b61	obj/kern/kernel.asm	/^f0102b61:	c7 44 24 0c 41 89 10 	movl   $0xf0108941,0xc(%esp)$/;"	l
f0102b68	obj/kern/kernel.asm	/^f0102b68:	f0 $/;"	l
f0102b69	obj/kern/kernel.asm	/^f0102b69:	c7 44 24 08 9f 87 10 	movl   $0xf010879f,0x8(%esp)$/;"	l
f0102b70	obj/kern/kernel.asm	/^f0102b70:	f0 $/;"	l
f0102b71	obj/kern/kernel.asm	/^f0102b71:	c7 44 24 04 e0 03 00 	movl   $0x3e0,0x4(%esp)$/;"	l
f0102b78	obj/kern/kernel.asm	/^f0102b78:	00 $/;"	l
f0102b79	obj/kern/kernel.asm	/^f0102b79:	c7 04 24 87 87 10 f0 	movl   $0xf0108787,(%esp)$/;"	l
f0102b80	obj/kern/kernel.asm	/^f0102b80:	e8 bb d4 ff ff       	call   f0100040 <_panic>$/;"	l
f0102b85	obj/kern/kernel.asm	/^f0102b85:	a1 8c de 20 f0       	mov    0xf020de8c,%eax$/;"	l
f0102b8a	obj/kern/kernel.asm	/^f0102b8a:	8b 08                	mov    (%eax),%ecx$/;"	l
f0102b8c	obj/kern/kernel.asm	/^f0102b8c:	81 e1 00 f0 ff ff    	and    $0xfffff000,%ecx$/;"	l
f0102b92	obj/kern/kernel.asm	/^f0102b92:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
f0102b95	obj/kern/kernel.asm	/^f0102b95:	2b 15 90 de 20 f0    	sub    0xf020de90,%edx$/;"	l
f0102b9b	obj/kern/kernel.asm	/^f0102b9b:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0102b9e	obj/kern/kernel.asm	/^f0102b9e:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0102ba1	obj/kern/kernel.asm	/^f0102ba1:	39 d1                	cmp    %edx,%ecx$/;"	l
f0102ba3	obj/kern/kernel.asm	/^f0102ba3:	74 24                	je     f0102bc9 <mem_init+0x12dd>$/;"	l
f0102ba5	obj/kern/kernel.asm	/^f0102ba5:	c7 44 24 0c 74 80 10 	movl   $0xf0108074,0xc(%esp)$/;"	l
f0102bac	obj/kern/kernel.asm	/^f0102bac:	f0 $/;"	l
f0102bad	obj/kern/kernel.asm	/^f0102bad:	c7 44 24 08 9f 87 10 	movl   $0xf010879f,0x8(%esp)$/;"	l
f0102bb4	obj/kern/kernel.asm	/^f0102bb4:	f0 $/;"	l
f0102bb5	obj/kern/kernel.asm	/^f0102bb5:	c7 44 24 04 e3 03 00 	movl   $0x3e3,0x4(%esp)$/;"	l
f0102bbc	obj/kern/kernel.asm	/^f0102bbc:	00 $/;"	l
f0102bbd	obj/kern/kernel.asm	/^f0102bbd:	c7 04 24 87 87 10 f0 	movl   $0xf0108787,(%esp)$/;"	l
f0102bc4	obj/kern/kernel.asm	/^f0102bc4:	e8 77 d4 ff ff       	call   f0100040 <_panic>$/;"	l
f0102bc9	obj/kern/kernel.asm	/^f0102bc9:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0102bcf	obj/kern/kernel.asm	/^f0102bcf:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0102bd2	obj/kern/kernel.asm	/^f0102bd2:	66 83 78 04 01       	cmpw   $0x1,0x4(%eax)$/;"	l
f0102bd7	obj/kern/kernel.asm	/^f0102bd7:	74 24                	je     f0102bfd <mem_init+0x1311>$/;"	l
f0102bd9	obj/kern/kernel.asm	/^f0102bd9:	c7 44 24 0c a4 89 10 	movl   $0xf01089a4,0xc(%esp)$/;"	l
f0102be0	obj/kern/kernel.asm	/^f0102be0:	f0 $/;"	l
f0102be1	obj/kern/kernel.asm	/^f0102be1:	c7 44 24 08 9f 87 10 	movl   $0xf010879f,0x8(%esp)$/;"	l
f0102be8	obj/kern/kernel.asm	/^f0102be8:	f0 $/;"	l
f0102be9	obj/kern/kernel.asm	/^f0102be9:	c7 44 24 04 e5 03 00 	movl   $0x3e5,0x4(%esp)$/;"	l
f0102bf0	obj/kern/kernel.asm	/^f0102bf0:	00 $/;"	l
f0102bf1	obj/kern/kernel.asm	/^f0102bf1:	c7 04 24 87 87 10 f0 	movl   $0xf0108787,(%esp)$/;"	l
f0102bf8	obj/kern/kernel.asm	/^f0102bf8:	e8 43 d4 ff ff       	call   f0100040 <_panic>$/;"	l
f0102bfd	obj/kern/kernel.asm	/^f0102bfd:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0102c00	obj/kern/kernel.asm	/^f0102c00:	66 c7 40 04 00 00    	movw   $0x0,0x4(%eax)$/;"	l
f0102c06	obj/kern/kernel.asm	/^f0102c06:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102c09	obj/kern/kernel.asm	/^f0102c09:	e8 53 e9 ff ff       	call   f0101561 <page_free>$/;"	l
f0102c0e	obj/kern/kernel.asm	/^f0102c0e:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f0102c15	obj/kern/kernel.asm	/^f0102c15:	00 $/;"	l
f0102c16	obj/kern/kernel.asm	/^f0102c16:	c7 44 24 04 00 10 40 	movl   $0x401000,0x4(%esp)$/;"	l
f0102c1d	obj/kern/kernel.asm	/^f0102c1d:	00 $/;"	l
f0102c1e	obj/kern/kernel.asm	/^f0102c1e:	a1 8c de 20 f0       	mov    0xf020de8c,%eax$/;"	l
f0102c23	obj/kern/kernel.asm	/^f0102c23:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102c26	obj/kern/kernel.asm	/^f0102c26:	e8 ed e9 ff ff       	call   f0101618 <pgdir_walk>$/;"	l
f0102c2b	obj/kern/kernel.asm	/^f0102c2b:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
f0102c2e	obj/kern/kernel.asm	/^f0102c2e:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0102c31	obj/kern/kernel.asm	/^f0102c31:	8b 15 8c de 20 f0    	mov    0xf020de8c,%edx$/;"	l
f0102c37	obj/kern/kernel.asm	/^f0102c37:	8b 7a 04             	mov    0x4(%edx),%edi$/;"	l
f0102c3a	obj/kern/kernel.asm	/^f0102c3a:	81 e7 00 f0 ff ff    	and    $0xfffff000,%edi$/;"	l
f0102c40	obj/kern/kernel.asm	/^f0102c40:	8b 0d 88 de 20 f0    	mov    0xf020de88,%ecx$/;"	l
f0102c46	obj/kern/kernel.asm	/^f0102c46:	89 f8                	mov    %edi,%eax$/;"	l
f0102c48	obj/kern/kernel.asm	/^f0102c48:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0102c4b	obj/kern/kernel.asm	/^f0102c4b:	39 c8                	cmp    %ecx,%eax$/;"	l
f0102c4d	obj/kern/kernel.asm	/^f0102c4d:	72 20                	jb     f0102c6f <mem_init+0x1383>$/;"	l
f0102c4f	obj/kern/kernel.asm	/^f0102c4f:	89 7c 24 0c          	mov    %edi,0xc(%esp)$/;"	l
f0102c53	obj/kern/kernel.asm	/^f0102c53:	c7 44 24 08 e4 76 10 	movl   $0xf01076e4,0x8(%esp)$/;"	l
f0102c5a	obj/kern/kernel.asm	/^f0102c5a:	f0 $/;"	l
f0102c5b	obj/kern/kernel.asm	/^f0102c5b:	c7 44 24 04 ec 03 00 	movl   $0x3ec,0x4(%esp)$/;"	l
f0102c62	obj/kern/kernel.asm	/^f0102c62:	00 $/;"	l
f0102c63	obj/kern/kernel.asm	/^f0102c63:	c7 04 24 87 87 10 f0 	movl   $0xf0108787,(%esp)$/;"	l
f0102c6a	obj/kern/kernel.asm	/^f0102c6a:	e8 d1 d3 ff ff       	call   f0100040 <_panic>$/;"	l
f0102c6f	obj/kern/kernel.asm	/^f0102c6f:	81 ef fc ff ff 0f    	sub    $0xffffffc,%edi$/;"	l
f0102c75	obj/kern/kernel.asm	/^f0102c75:	39 7d cc             	cmp    %edi,-0x34(%ebp)$/;"	l
f0102c78	obj/kern/kernel.asm	/^f0102c78:	74 24                	je     f0102c9e <mem_init+0x13b2>$/;"	l
f0102c7a	obj/kern/kernel.asm	/^f0102c7a:	c7 44 24 0c 30 8a 10 	movl   $0xf0108a30,0xc(%esp)$/;"	l
f0102c81	obj/kern/kernel.asm	/^f0102c81:	f0 $/;"	l
f0102c82	obj/kern/kernel.asm	/^f0102c82:	c7 44 24 08 9f 87 10 	movl   $0xf010879f,0x8(%esp)$/;"	l
f0102c89	obj/kern/kernel.asm	/^f0102c89:	f0 $/;"	l
f0102c8a	obj/kern/kernel.asm	/^f0102c8a:	c7 44 24 04 ed 03 00 	movl   $0x3ed,0x4(%esp)$/;"	l
f0102c91	obj/kern/kernel.asm	/^f0102c91:	00 $/;"	l
f0102c92	obj/kern/kernel.asm	/^f0102c92:	c7 04 24 87 87 10 f0 	movl   $0xf0108787,(%esp)$/;"	l
f0102c99	obj/kern/kernel.asm	/^f0102c99:	e8 a2 d3 ff ff       	call   f0100040 <_panic>$/;"	l
f0102c9e	obj/kern/kernel.asm	/^f0102c9e:	c7 42 04 00 00 00 00 	movl   $0x0,0x4(%edx)$/;"	l
f0102ca5	obj/kern/kernel.asm	/^f0102ca5:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0102ca8	obj/kern/kernel.asm	/^f0102ca8:	66 c7 40 04 00 00    	movw   $0x0,0x4(%eax)$/;"	l
f0102cae	obj/kern/kernel.asm	/^f0102cae:	2b 05 90 de 20 f0    	sub    0xf020de90,%eax$/;"	l
f0102cb4	obj/kern/kernel.asm	/^f0102cb4:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0102cb7	obj/kern/kernel.asm	/^f0102cb7:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0102cba	obj/kern/kernel.asm	/^f0102cba:	89 c2                	mov    %eax,%edx$/;"	l
f0102cbc	obj/kern/kernel.asm	/^f0102cbc:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0102cbf	obj/kern/kernel.asm	/^f0102cbf:	39 d1                	cmp    %edx,%ecx$/;"	l
f0102cc1	obj/kern/kernel.asm	/^f0102cc1:	77 20                	ja     f0102ce3 <mem_init+0x13f7>$/;"	l
f0102cc3	obj/kern/kernel.asm	/^f0102cc3:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0102cc7	obj/kern/kernel.asm	/^f0102cc7:	c7 44 24 08 e4 76 10 	movl   $0xf01076e4,0x8(%esp)$/;"	l
f0102cce	obj/kern/kernel.asm	/^f0102cce:	f0 $/;"	l
f0102ccf	obj/kern/kernel.asm	/^f0102ccf:	c7 44 24 04 58 00 00 	movl   $0x58,0x4(%esp)$/;"	l
f0102cd6	obj/kern/kernel.asm	/^f0102cd6:	00 $/;"	l
f0102cd7	obj/kern/kernel.asm	/^f0102cd7:	c7 04 24 79 87 10 f0 	movl   $0xf0108779,(%esp)$/;"	l
f0102cde	obj/kern/kernel.asm	/^f0102cde:	e8 5d d3 ff ff       	call   f0100040 <_panic>$/;"	l
f0102ce3	obj/kern/kernel.asm	/^f0102ce3:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f0102cea	obj/kern/kernel.asm	/^f0102cea:	00 $/;"	l
f0102ceb	obj/kern/kernel.asm	/^f0102ceb:	c7 44 24 04 ff 00 00 	movl   $0xff,0x4(%esp)$/;"	l
f0102cf2	obj/kern/kernel.asm	/^f0102cf2:	00 $/;"	l
f0102cf3	obj/kern/kernel.asm	/^f0102cf3:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0102cf8	obj/kern/kernel.asm	/^f0102cf8:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102cfb	obj/kern/kernel.asm	/^f0102cfb:	e8 97 3c 00 00       	call   f0106997 <memset>$/;"	l
f0102d00	obj/kern/kernel.asm	/^f0102d00:	8b 7d d4             	mov    -0x2c(%ebp),%edi$/;"	l
f0102d03	obj/kern/kernel.asm	/^f0102d03:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f0102d06	obj/kern/kernel.asm	/^f0102d06:	e8 56 e8 ff ff       	call   f0101561 <page_free>$/;"	l
f0102d0b	obj/kern/kernel.asm	/^f0102d0b:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f0102d12	obj/kern/kernel.asm	/^f0102d12:	00 $/;"	l
f0102d13	obj/kern/kernel.asm	/^f0102d13:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0102d1a	obj/kern/kernel.asm	/^f0102d1a:	00 $/;"	l
f0102d1b	obj/kern/kernel.asm	/^f0102d1b:	a1 8c de 20 f0       	mov    0xf020de8c,%eax$/;"	l
f0102d20	obj/kern/kernel.asm	/^f0102d20:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102d23	obj/kern/kernel.asm	/^f0102d23:	e8 f0 e8 ff ff       	call   f0101618 <pgdir_walk>$/;"	l
f0102d28	obj/kern/kernel.asm	/^f0102d28:	89 fa                	mov    %edi,%edx$/;"	l
f0102d2a	obj/kern/kernel.asm	/^f0102d2a:	2b 15 90 de 20 f0    	sub    0xf020de90,%edx$/;"	l
f0102d30	obj/kern/kernel.asm	/^f0102d30:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0102d33	obj/kern/kernel.asm	/^f0102d33:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0102d36	obj/kern/kernel.asm	/^f0102d36:	89 d0                	mov    %edx,%eax$/;"	l
f0102d38	obj/kern/kernel.asm	/^f0102d38:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0102d3b	obj/kern/kernel.asm	/^f0102d3b:	3b 05 88 de 20 f0    	cmp    0xf020de88,%eax$/;"	l
f0102d41	obj/kern/kernel.asm	/^f0102d41:	72 20                	jb     f0102d63 <mem_init+0x1477>$/;"	l
f0102d43	obj/kern/kernel.asm	/^f0102d43:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f0102d47	obj/kern/kernel.asm	/^f0102d47:	c7 44 24 08 e4 76 10 	movl   $0xf01076e4,0x8(%esp)$/;"	l
f0102d4e	obj/kern/kernel.asm	/^f0102d4e:	f0 $/;"	l
f0102d4f	obj/kern/kernel.asm	/^f0102d4f:	c7 44 24 04 58 00 00 	movl   $0x58,0x4(%esp)$/;"	l
f0102d56	obj/kern/kernel.asm	/^f0102d56:	00 $/;"	l
f0102d57	obj/kern/kernel.asm	/^f0102d57:	c7 04 24 79 87 10 f0 	movl   $0xf0108779,(%esp)$/;"	l
f0102d5e	obj/kern/kernel.asm	/^f0102d5e:	e8 dd d2 ff ff       	call   f0100040 <_panic>$/;"	l
f0102d63	obj/kern/kernel.asm	/^f0102d63:	8d 82 00 00 00 f0    	lea    -0x10000000(%edx),%eax$/;"	l
f0102d69	obj/kern/kernel.asm	/^f0102d69:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0102d6c	obj/kern/kernel.asm	/^f0102d6c:	81 ea 00 f0 ff 0f    	sub    $0xffff000,%edx$/;"	l
f0102d72	obj/kern/kernel.asm	/^f0102d72:	f6 00 01             	testb  $0x1,(%eax)$/;"	l
f0102d75	obj/kern/kernel.asm	/^f0102d75:	74 24                	je     f0102d9b <mem_init+0x14af>$/;"	l
f0102d77	obj/kern/kernel.asm	/^f0102d77:	c7 44 24 0c 48 8a 10 	movl   $0xf0108a48,0xc(%esp)$/;"	l
f0102d7e	obj/kern/kernel.asm	/^f0102d7e:	f0 $/;"	l
f0102d7f	obj/kern/kernel.asm	/^f0102d7f:	c7 44 24 08 9f 87 10 	movl   $0xf010879f,0x8(%esp)$/;"	l
f0102d86	obj/kern/kernel.asm	/^f0102d86:	f0 $/;"	l
f0102d87	obj/kern/kernel.asm	/^f0102d87:	c7 44 24 04 f7 03 00 	movl   $0x3f7,0x4(%esp)$/;"	l
f0102d8e	obj/kern/kernel.asm	/^f0102d8e:	00 $/;"	l
f0102d8f	obj/kern/kernel.asm	/^f0102d8f:	c7 04 24 87 87 10 f0 	movl   $0xf0108787,(%esp)$/;"	l
f0102d96	obj/kern/kernel.asm	/^f0102d96:	e8 a5 d2 ff ff       	call   f0100040 <_panic>$/;"	l
f0102d9b	obj/kern/kernel.asm	/^f0102d9b:	83 c0 04             	add    $0x4,%eax$/;"	l
f0102d9e	obj/kern/kernel.asm	/^f0102d9e:	39 d0                	cmp    %edx,%eax$/;"	l
f0102da0	obj/kern/kernel.asm	/^f0102da0:	75 d0                	jne    f0102d72 <mem_init+0x1486>$/;"	l
f0102da2	obj/kern/kernel.asm	/^f0102da2:	a1 8c de 20 f0       	mov    0xf020de8c,%eax$/;"	l
f0102da7	obj/kern/kernel.asm	/^f0102da7:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0102dad	obj/kern/kernel.asm	/^f0102dad:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0102db0	obj/kern/kernel.asm	/^f0102db0:	66 c7 40 04 00 00    	movw   $0x0,0x4(%eax)$/;"	l
f0102db6	obj/kern/kernel.asm	/^f0102db6:	8b 4d d0             	mov    -0x30(%ebp),%ecx$/;"	l
f0102db9	obj/kern/kernel.asm	/^f0102db9:	89 0d 40 d2 20 f0    	mov    %ecx,0xf020d240$/;"	l
f0102dbf	obj/kern/kernel.asm	/^f0102dbf:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102dc2	obj/kern/kernel.asm	/^f0102dc2:	e8 9a e7 ff ff       	call   f0101561 <page_free>$/;"	l
f0102dc7	obj/kern/kernel.asm	/^f0102dc7:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0102dca	obj/kern/kernel.asm	/^f0102dca:	e8 92 e7 ff ff       	call   f0101561 <page_free>$/;"	l
f0102dcf	obj/kern/kernel.asm	/^f0102dcf:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0102dd2	obj/kern/kernel.asm	/^f0102dd2:	e8 8a e7 ff ff       	call   f0101561 <page_free>$/;"	l
f0102dd7	obj/kern/kernel.asm	/^f0102dd7:	c7 44 24 04 01 10 00 	movl   $0x1001,0x4(%esp)$/;"	l
f0102dde	obj/kern/kernel.asm	/^f0102dde:	00 $/;"	l
f0102ddf	obj/kern/kernel.asm	/^f0102ddf:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0102de6	obj/kern/kernel.asm	/^f0102de6:	e8 91 ea ff ff       	call   f010187c <mmio_map_region>$/;"	l
f0102deb	obj/kern/kernel.asm	/^f0102deb:	89 c3                	mov    %eax,%ebx$/;"	l
f0102ded	obj/kern/kernel.asm	/^f0102ded:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
f0102df4	obj/kern/kernel.asm	/^f0102df4:	00 $/;"	l
f0102df5	obj/kern/kernel.asm	/^f0102df5:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0102dfc	obj/kern/kernel.asm	/^f0102dfc:	e8 7b ea ff ff       	call   f010187c <mmio_map_region>$/;"	l
f0102e01	obj/kern/kernel.asm	/^f0102e01:	89 c6                	mov    %eax,%esi$/;"	l
f0102e03	obj/kern/kernel.asm	/^f0102e03:	8d 83 a0 1f 00 00    	lea    0x1fa0(%ebx),%eax$/;"	l
f0102e09	obj/kern/kernel.asm	/^f0102e09:	3d ff ff bf ef       	cmp    $0xefbfffff,%eax$/;"	l
f0102e0e	obj/kern/kernel.asm	/^f0102e0e:	77 08                	ja     f0102e18 <mem_init+0x152c>$/;"	l
f0102e10	obj/kern/kernel.asm	/^f0102e10:	81 fb ff ff 7f ef    	cmp    $0xef7fffff,%ebx$/;"	l
f0102e16	obj/kern/kernel.asm	/^f0102e16:	77 24                	ja     f0102e3c <mem_init+0x1550>$/;"	l
f0102e18	obj/kern/kernel.asm	/^f0102e18:	c7 44 24 0c f4 83 10 	movl   $0xf01083f4,0xc(%esp)$/;"	l
f0102e1f	obj/kern/kernel.asm	/^f0102e1f:	f0 $/;"	l
f0102e20	obj/kern/kernel.asm	/^f0102e20:	c7 44 24 08 9f 87 10 	movl   $0xf010879f,0x8(%esp)$/;"	l
f0102e27	obj/kern/kernel.asm	/^f0102e27:	f0 $/;"	l
f0102e28	obj/kern/kernel.asm	/^f0102e28:	c7 44 24 04 07 04 00 	movl   $0x407,0x4(%esp)$/;"	l
f0102e2f	obj/kern/kernel.asm	/^f0102e2f:	00 $/;"	l
f0102e30	obj/kern/kernel.asm	/^f0102e30:	c7 04 24 87 87 10 f0 	movl   $0xf0108787,(%esp)$/;"	l
f0102e37	obj/kern/kernel.asm	/^f0102e37:	e8 04 d2 ff ff       	call   f0100040 <_panic>$/;"	l
f0102e3c	obj/kern/kernel.asm	/^f0102e3c:	8d 96 a0 1f 00 00    	lea    0x1fa0(%esi),%edx$/;"	l
f0102e42	obj/kern/kernel.asm	/^f0102e42:	81 fa ff ff bf ef    	cmp    $0xefbfffff,%edx$/;"	l
f0102e48	obj/kern/kernel.asm	/^f0102e48:	77 08                	ja     f0102e52 <mem_init+0x1566>$/;"	l
f0102e4a	obj/kern/kernel.asm	/^f0102e4a:	81 fe ff ff 7f ef    	cmp    $0xef7fffff,%esi$/;"	l
f0102e50	obj/kern/kernel.asm	/^f0102e50:	77 24                	ja     f0102e76 <mem_init+0x158a>$/;"	l
f0102e52	obj/kern/kernel.asm	/^f0102e52:	c7 44 24 0c 1c 84 10 	movl   $0xf010841c,0xc(%esp)$/;"	l
f0102e59	obj/kern/kernel.asm	/^f0102e59:	f0 $/;"	l
f0102e5a	obj/kern/kernel.asm	/^f0102e5a:	c7 44 24 08 9f 87 10 	movl   $0xf010879f,0x8(%esp)$/;"	l
f0102e61	obj/kern/kernel.asm	/^f0102e61:	f0 $/;"	l
f0102e62	obj/kern/kernel.asm	/^f0102e62:	c7 44 24 04 08 04 00 	movl   $0x408,0x4(%esp)$/;"	l
f0102e69	obj/kern/kernel.asm	/^f0102e69:	00 $/;"	l
f0102e6a	obj/kern/kernel.asm	/^f0102e6a:	c7 04 24 87 87 10 f0 	movl   $0xf0108787,(%esp)$/;"	l
f0102e71	obj/kern/kernel.asm	/^f0102e71:	e8 ca d1 ff ff       	call   f0100040 <_panic>$/;"	l
f0102e76	obj/kern/kernel.asm	/^f0102e76:	89 da                	mov    %ebx,%edx$/;"	l
f0102e78	obj/kern/kernel.asm	/^f0102e78:	09 f2                	or     %esi,%edx$/;"	l
f0102e7a	obj/kern/kernel.asm	/^f0102e7a:	f7 c2 ff 0f 00 00    	test   $0xfff,%edx$/;"	l
f0102e80	obj/kern/kernel.asm	/^f0102e80:	74 24                	je     f0102ea6 <mem_init+0x15ba>$/;"	l
f0102e82	obj/kern/kernel.asm	/^f0102e82:	c7 44 24 0c 44 84 10 	movl   $0xf0108444,0xc(%esp)$/;"	l
f0102e89	obj/kern/kernel.asm	/^f0102e89:	f0 $/;"	l
f0102e8a	obj/kern/kernel.asm	/^f0102e8a:	c7 44 24 08 9f 87 10 	movl   $0xf010879f,0x8(%esp)$/;"	l
f0102e91	obj/kern/kernel.asm	/^f0102e91:	f0 $/;"	l
f0102e92	obj/kern/kernel.asm	/^f0102e92:	c7 44 24 04 0a 04 00 	movl   $0x40a,0x4(%esp)$/;"	l
f0102e99	obj/kern/kernel.asm	/^f0102e99:	00 $/;"	l
f0102e9a	obj/kern/kernel.asm	/^f0102e9a:	c7 04 24 87 87 10 f0 	movl   $0xf0108787,(%esp)$/;"	l
f0102ea1	obj/kern/kernel.asm	/^f0102ea1:	e8 9a d1 ff ff       	call   f0100040 <_panic>$/;"	l
f0102ea6	obj/kern/kernel.asm	/^f0102ea6:	39 c6                	cmp    %eax,%esi$/;"	l
f0102ea8	obj/kern/kernel.asm	/^f0102ea8:	73 24                	jae    f0102ece <mem_init+0x15e2>$/;"	l
f0102eaa	obj/kern/kernel.asm	/^f0102eaa:	c7 44 24 0c 5f 8a 10 	movl   $0xf0108a5f,0xc(%esp)$/;"	l
f0102eb1	obj/kern/kernel.asm	/^f0102eb1:	f0 $/;"	l
f0102eb2	obj/kern/kernel.asm	/^f0102eb2:	c7 44 24 08 9f 87 10 	movl   $0xf010879f,0x8(%esp)$/;"	l
f0102eb9	obj/kern/kernel.asm	/^f0102eb9:	f0 $/;"	l
f0102eba	obj/kern/kernel.asm	/^f0102eba:	c7 44 24 04 0c 04 00 	movl   $0x40c,0x4(%esp)$/;"	l
f0102ec1	obj/kern/kernel.asm	/^f0102ec1:	00 $/;"	l
f0102ec2	obj/kern/kernel.asm	/^f0102ec2:	c7 04 24 87 87 10 f0 	movl   $0xf0108787,(%esp)$/;"	l
f0102ec9	obj/kern/kernel.asm	/^f0102ec9:	e8 72 d1 ff ff       	call   f0100040 <_panic>$/;"	l
f0102ece	obj/kern/kernel.asm	/^f0102ece:	8b 3d 8c de 20 f0    	mov    0xf020de8c,%edi$/;"	l
f0102ed4	obj/kern/kernel.asm	/^f0102ed4:	89 da                	mov    %ebx,%edx$/;"	l
f0102ed6	obj/kern/kernel.asm	/^f0102ed6:	89 f8                	mov    %edi,%eax$/;"	l
f0102ed8	obj/kern/kernel.asm	/^f0102ed8:	e8 c8 e0 ff ff       	call   f0100fa5 <check_va2pa>$/;"	l
f0102edd	obj/kern/kernel.asm	/^f0102edd:	85 c0                	test   %eax,%eax$/;"	l
f0102edf	obj/kern/kernel.asm	/^f0102edf:	74 24                	je     f0102f05 <mem_init+0x1619>$/;"	l
f0102ee1	obj/kern/kernel.asm	/^f0102ee1:	c7 44 24 0c 6c 84 10 	movl   $0xf010846c,0xc(%esp)$/;"	l
f0102ee8	obj/kern/kernel.asm	/^f0102ee8:	f0 $/;"	l
f0102ee9	obj/kern/kernel.asm	/^f0102ee9:	c7 44 24 08 9f 87 10 	movl   $0xf010879f,0x8(%esp)$/;"	l
f0102ef0	obj/kern/kernel.asm	/^f0102ef0:	f0 $/;"	l
f0102ef1	obj/kern/kernel.asm	/^f0102ef1:	c7 44 24 04 0e 04 00 	movl   $0x40e,0x4(%esp)$/;"	l
f0102ef8	obj/kern/kernel.asm	/^f0102ef8:	00 $/;"	l
f0102ef9	obj/kern/kernel.asm	/^f0102ef9:	c7 04 24 87 87 10 f0 	movl   $0xf0108787,(%esp)$/;"	l
f0102f00	obj/kern/kernel.asm	/^f0102f00:	e8 3b d1 ff ff       	call   f0100040 <_panic>$/;"	l
f0102f05	obj/kern/kernel.asm	/^f0102f05:	8d 83 00 10 00 00    	lea    0x1000(%ebx),%eax$/;"	l
f0102f0b	obj/kern/kernel.asm	/^f0102f0b:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0102f0e	obj/kern/kernel.asm	/^f0102f0e:	89 c2                	mov    %eax,%edx$/;"	l
f0102f10	obj/kern/kernel.asm	/^f0102f10:	89 f8                	mov    %edi,%eax$/;"	l
f0102f12	obj/kern/kernel.asm	/^f0102f12:	e8 8e e0 ff ff       	call   f0100fa5 <check_va2pa>$/;"	l
f0102f17	obj/kern/kernel.asm	/^f0102f17:	3d 00 10 00 00       	cmp    $0x1000,%eax$/;"	l
f0102f1c	obj/kern/kernel.asm	/^f0102f1c:	74 24                	je     f0102f42 <mem_init+0x1656>$/;"	l
f0102f1e	obj/kern/kernel.asm	/^f0102f1e:	c7 44 24 0c 90 84 10 	movl   $0xf0108490,0xc(%esp)$/;"	l
f0102f25	obj/kern/kernel.asm	/^f0102f25:	f0 $/;"	l
f0102f26	obj/kern/kernel.asm	/^f0102f26:	c7 44 24 08 9f 87 10 	movl   $0xf010879f,0x8(%esp)$/;"	l
f0102f2d	obj/kern/kernel.asm	/^f0102f2d:	f0 $/;"	l
f0102f2e	obj/kern/kernel.asm	/^f0102f2e:	c7 44 24 04 0f 04 00 	movl   $0x40f,0x4(%esp)$/;"	l
f0102f35	obj/kern/kernel.asm	/^f0102f35:	00 $/;"	l
f0102f36	obj/kern/kernel.asm	/^f0102f36:	c7 04 24 87 87 10 f0 	movl   $0xf0108787,(%esp)$/;"	l
f0102f3d	obj/kern/kernel.asm	/^f0102f3d:	e8 fe d0 ff ff       	call   f0100040 <_panic>$/;"	l
f0102f42	obj/kern/kernel.asm	/^f0102f42:	89 f2                	mov    %esi,%edx$/;"	l
f0102f44	obj/kern/kernel.asm	/^f0102f44:	89 f8                	mov    %edi,%eax$/;"	l
f0102f46	obj/kern/kernel.asm	/^f0102f46:	e8 5a e0 ff ff       	call   f0100fa5 <check_va2pa>$/;"	l
f0102f4b	obj/kern/kernel.asm	/^f0102f4b:	85 c0                	test   %eax,%eax$/;"	l
f0102f4d	obj/kern/kernel.asm	/^f0102f4d:	74 24                	je     f0102f73 <mem_init+0x1687>$/;"	l
f0102f4f	obj/kern/kernel.asm	/^f0102f4f:	c7 44 24 0c c0 84 10 	movl   $0xf01084c0,0xc(%esp)$/;"	l
f0102f56	obj/kern/kernel.asm	/^f0102f56:	f0 $/;"	l
f0102f57	obj/kern/kernel.asm	/^f0102f57:	c7 44 24 08 9f 87 10 	movl   $0xf010879f,0x8(%esp)$/;"	l
f0102f5e	obj/kern/kernel.asm	/^f0102f5e:	f0 $/;"	l
f0102f5f	obj/kern/kernel.asm	/^f0102f5f:	c7 44 24 04 10 04 00 	movl   $0x410,0x4(%esp)$/;"	l
f0102f66	obj/kern/kernel.asm	/^f0102f66:	00 $/;"	l
f0102f67	obj/kern/kernel.asm	/^f0102f67:	c7 04 24 87 87 10 f0 	movl   $0xf0108787,(%esp)$/;"	l
f0102f6e	obj/kern/kernel.asm	/^f0102f6e:	e8 cd d0 ff ff       	call   f0100040 <_panic>$/;"	l
f0102f73	obj/kern/kernel.asm	/^f0102f73:	8d 96 00 10 00 00    	lea    0x1000(%esi),%edx$/;"	l
f0102f79	obj/kern/kernel.asm	/^f0102f79:	89 f8                	mov    %edi,%eax$/;"	l
f0102f7b	obj/kern/kernel.asm	/^f0102f7b:	e8 25 e0 ff ff       	call   f0100fa5 <check_va2pa>$/;"	l
f0102f80	obj/kern/kernel.asm	/^f0102f80:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f0102f83	obj/kern/kernel.asm	/^f0102f83:	74 24                	je     f0102fa9 <mem_init+0x16bd>$/;"	l
f0102f85	obj/kern/kernel.asm	/^f0102f85:	c7 44 24 0c e4 84 10 	movl   $0xf01084e4,0xc(%esp)$/;"	l
f0102f8c	obj/kern/kernel.asm	/^f0102f8c:	f0 $/;"	l
f0102f8d	obj/kern/kernel.asm	/^f0102f8d:	c7 44 24 08 9f 87 10 	movl   $0xf010879f,0x8(%esp)$/;"	l
f0102f94	obj/kern/kernel.asm	/^f0102f94:	f0 $/;"	l
f0102f95	obj/kern/kernel.asm	/^f0102f95:	c7 44 24 04 11 04 00 	movl   $0x411,0x4(%esp)$/;"	l
f0102f9c	obj/kern/kernel.asm	/^f0102f9c:	00 $/;"	l
f0102f9d	obj/kern/kernel.asm	/^f0102f9d:	c7 04 24 87 87 10 f0 	movl   $0xf0108787,(%esp)$/;"	l
f0102fa4	obj/kern/kernel.asm	/^f0102fa4:	e8 97 d0 ff ff       	call   f0100040 <_panic>$/;"	l
f0102fa9	obj/kern/kernel.asm	/^f0102fa9:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0102fb0	obj/kern/kernel.asm	/^f0102fb0:	00 $/;"	l
f0102fb1	obj/kern/kernel.asm	/^f0102fb1:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0102fb5	obj/kern/kernel.asm	/^f0102fb5:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f0102fb8	obj/kern/kernel.asm	/^f0102fb8:	e8 5b e6 ff ff       	call   f0101618 <pgdir_walk>$/;"	l
f0102fbd	obj/kern/kernel.asm	/^f0102fbd:	f6 00 1a             	testb  $0x1a,(%eax)$/;"	l
f0102fc0	obj/kern/kernel.asm	/^f0102fc0:	75 24                	jne    f0102fe6 <mem_init+0x16fa>$/;"	l
f0102fc2	obj/kern/kernel.asm	/^f0102fc2:	c7 44 24 0c 10 85 10 	movl   $0xf0108510,0xc(%esp)$/;"	l
f0102fc9	obj/kern/kernel.asm	/^f0102fc9:	f0 $/;"	l
f0102fca	obj/kern/kernel.asm	/^f0102fca:	c7 44 24 08 9f 87 10 	movl   $0xf010879f,0x8(%esp)$/;"	l
f0102fd1	obj/kern/kernel.asm	/^f0102fd1:	f0 $/;"	l
f0102fd2	obj/kern/kernel.asm	/^f0102fd2:	c7 44 24 04 13 04 00 	movl   $0x413,0x4(%esp)$/;"	l
f0102fd9	obj/kern/kernel.asm	/^f0102fd9:	00 $/;"	l
f0102fda	obj/kern/kernel.asm	/^f0102fda:	c7 04 24 87 87 10 f0 	movl   $0xf0108787,(%esp)$/;"	l
f0102fe1	obj/kern/kernel.asm	/^f0102fe1:	e8 5a d0 ff ff       	call   f0100040 <_panic>$/;"	l
f0102fe6	obj/kern/kernel.asm	/^f0102fe6:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0102fed	obj/kern/kernel.asm	/^f0102fed:	00 $/;"	l
f0102fee	obj/kern/kernel.asm	/^f0102fee:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0102ff2	obj/kern/kernel.asm	/^f0102ff2:	a1 8c de 20 f0       	mov    0xf020de8c,%eax$/;"	l
f0102ff7	obj/kern/kernel.asm	/^f0102ff7:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0102ffa	obj/kern/kernel.asm	/^f0102ffa:	e8 19 e6 ff ff       	call   f0101618 <pgdir_walk>$/;"	l
f0102fff	obj/kern/kernel.asm	/^f0102fff:	f6 00 04             	testb  $0x4,(%eax)$/;"	l
f0103002	obj/kern/kernel.asm	/^f0103002:	74 24                	je     f0103028 <mem_init+0x173c>$/;"	l
f0103004	obj/kern/kernel.asm	/^f0103004:	c7 44 24 0c 54 85 10 	movl   $0xf0108554,0xc(%esp)$/;"	l
f010300b	obj/kern/kernel.asm	/^f010300b:	f0 $/;"	l
f010300c	obj/kern/kernel.asm	/^f010300c:	c7 44 24 08 9f 87 10 	movl   $0xf010879f,0x8(%esp)$/;"	l
f0103013	obj/kern/kernel.asm	/^f0103013:	f0 $/;"	l
f0103014	obj/kern/kernel.asm	/^f0103014:	c7 44 24 04 14 04 00 	movl   $0x414,0x4(%esp)$/;"	l
f010301b	obj/kern/kernel.asm	/^f010301b:	00 $/;"	l
f010301c	obj/kern/kernel.asm	/^f010301c:	c7 04 24 87 87 10 f0 	movl   $0xf0108787,(%esp)$/;"	l
f0103023	obj/kern/kernel.asm	/^f0103023:	e8 18 d0 ff ff       	call   f0100040 <_panic>$/;"	l
f0103028	obj/kern/kernel.asm	/^f0103028:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f010302f	obj/kern/kernel.asm	/^f010302f:	00 $/;"	l
f0103030	obj/kern/kernel.asm	/^f0103030:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0103034	obj/kern/kernel.asm	/^f0103034:	a1 8c de 20 f0       	mov    0xf020de8c,%eax$/;"	l
f0103039	obj/kern/kernel.asm	/^f0103039:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010303c	obj/kern/kernel.asm	/^f010303c:	e8 d7 e5 ff ff       	call   f0101618 <pgdir_walk>$/;"	l
f0103041	obj/kern/kernel.asm	/^f0103041:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0103047	obj/kern/kernel.asm	/^f0103047:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f010304e	obj/kern/kernel.asm	/^f010304e:	00 $/;"	l
f010304f	obj/kern/kernel.asm	/^f010304f:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0103052	obj/kern/kernel.asm	/^f0103052:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0103056	obj/kern/kernel.asm	/^f0103056:	a1 8c de 20 f0       	mov    0xf020de8c,%eax$/;"	l
f010305b	obj/kern/kernel.asm	/^f010305b:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010305e	obj/kern/kernel.asm	/^f010305e:	e8 b5 e5 ff ff       	call   f0101618 <pgdir_walk>$/;"	l
f0103063	obj/kern/kernel.asm	/^f0103063:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0103069	obj/kern/kernel.asm	/^f0103069:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0103070	obj/kern/kernel.asm	/^f0103070:	00 $/;"	l
f0103071	obj/kern/kernel.asm	/^f0103071:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0103075	obj/kern/kernel.asm	/^f0103075:	a1 8c de 20 f0       	mov    0xf020de8c,%eax$/;"	l
f010307a	obj/kern/kernel.asm	/^f010307a:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010307d	obj/kern/kernel.asm	/^f010307d:	e8 96 e5 ff ff       	call   f0101618 <pgdir_walk>$/;"	l
f0103082	obj/kern/kernel.asm	/^f0103082:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0103088	obj/kern/kernel.asm	/^f0103088:	c7 04 24 71 8a 10 f0 	movl   $0xf0108a71,(%esp)$/;"	l
f010308f	obj/kern/kernel.asm	/^f010308f:	e8 0a 13 00 00       	call   f010439e <cprintf>$/;"	l
f0103094	obj/kern/kernel.asm	/^f0103094:	a1 88 de 20 f0       	mov    0xf020de88,%eax$/;"	l
f0103099	obj/kern/kernel.asm	/^f0103099:	8d 0c c5 ff 0f 00 00 	lea    0xfff(,%eax,8),%ecx$/;"	l
f01030a0	obj/kern/kernel.asm	/^f01030a0:	81 e1 00 f0 ff ff    	and    $0xfffff000,%ecx$/;"	l
f01030a6	obj/kern/kernel.asm	/^f01030a6:	a1 90 de 20 f0       	mov    0xf020de90,%eax$/;"	l
f01030ab	obj/kern/kernel.asm	/^f01030ab:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f01030b0	obj/kern/kernel.asm	/^f01030b0:	77 20                	ja     f01030d2 <mem_init+0x17e6>$/;"	l
f01030b2	obj/kern/kernel.asm	/^f01030b2:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01030b6	obj/kern/kernel.asm	/^f01030b6:	c7 44 24 08 08 77 10 	movl   $0xf0107708,0x8(%esp)$/;"	l
f01030bd	obj/kern/kernel.asm	/^f01030bd:	f0 $/;"	l
f01030be	obj/kern/kernel.asm	/^f01030be:	c7 44 24 04 b6 00 00 	movl   $0xb6,0x4(%esp)$/;"	l
f01030c5	obj/kern/kernel.asm	/^f01030c5:	00 $/;"	l
f01030c6	obj/kern/kernel.asm	/^f01030c6:	c7 04 24 87 87 10 f0 	movl   $0xf0108787,(%esp)$/;"	l
f01030cd	obj/kern/kernel.asm	/^f01030cd:	e8 6e cf ff ff       	call   f0100040 <_panic>$/;"	l
f01030d2	obj/kern/kernel.asm	/^f01030d2:	c7 44 24 04 05 00 00 	movl   $0x5,0x4(%esp)$/;"	l
f01030d9	obj/kern/kernel.asm	/^f01030d9:	00 $/;"	l
f01030da	obj/kern/kernel.asm	/^f01030da:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f01030df	obj/kern/kernel.asm	/^f01030df:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01030e2	obj/kern/kernel.asm	/^f01030e2:	ba 00 00 00 ef       	mov    $0xef000000,%edx$/;"	l
f01030e7	obj/kern/kernel.asm	/^f01030e7:	a1 8c de 20 f0       	mov    0xf020de8c,%eax$/;"	l
f01030ec	obj/kern/kernel.asm	/^f01030ec:	e8 c7 e5 ff ff       	call   f01016b8 <boot_map_region>$/;"	l
f01030f1	obj/kern/kernel.asm	/^f01030f1:	a1 48 d2 20 f0       	mov    0xf020d248,%eax$/;"	l
f01030f6	obj/kern/kernel.asm	/^f01030f6:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f01030fb	obj/kern/kernel.asm	/^f01030fb:	77 20                	ja     f010311d <mem_init+0x1831>$/;"	l
f01030fd	obj/kern/kernel.asm	/^f01030fd:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0103101	obj/kern/kernel.asm	/^f0103101:	c7 44 24 08 08 77 10 	movl   $0xf0107708,0x8(%esp)$/;"	l
f0103108	obj/kern/kernel.asm	/^f0103108:	f0 $/;"	l
f0103109	obj/kern/kernel.asm	/^f0103109:	c7 44 24 04 c0 00 00 	movl   $0xc0,0x4(%esp)$/;"	l
f0103110	obj/kern/kernel.asm	/^f0103110:	00 $/;"	l
f0103111	obj/kern/kernel.asm	/^f0103111:	c7 04 24 87 87 10 f0 	movl   $0xf0108787,(%esp)$/;"	l
f0103118	obj/kern/kernel.asm	/^f0103118:	e8 23 cf ff ff       	call   f0100040 <_panic>$/;"	l
f010311d	obj/kern/kernel.asm	/^f010311d:	c7 44 24 04 05 00 00 	movl   $0x5,0x4(%esp)$/;"	l
f0103124	obj/kern/kernel.asm	/^f0103124:	00 $/;"	l
f0103125	obj/kern/kernel.asm	/^f0103125:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f010312a	obj/kern/kernel.asm	/^f010312a:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010312d	obj/kern/kernel.asm	/^f010312d:	b9 00 f0 01 00       	mov    $0x1f000,%ecx$/;"	l
f0103132	obj/kern/kernel.asm	/^f0103132:	ba 00 00 c0 ee       	mov    $0xeec00000,%edx$/;"	l
f0103137	obj/kern/kernel.asm	/^f0103137:	a1 8c de 20 f0       	mov    0xf020de8c,%eax$/;"	l
f010313c	obj/kern/kernel.asm	/^f010313c:	e8 77 e5 ff ff       	call   f01016b8 <boot_map_region>$/;"	l
f0103141	obj/kern/kernel.asm	/^f0103141:	b8 00 90 11 f0       	mov    $0xf0119000,%eax$/;"	l
f0103146	obj/kern/kernel.asm	/^f0103146:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f010314b	obj/kern/kernel.asm	/^f010314b:	77 20                	ja     f010316d <mem_init+0x1881>$/;"	l
f010314d	obj/kern/kernel.asm	/^f010314d:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0103151	obj/kern/kernel.asm	/^f0103151:	c7 44 24 08 08 77 10 	movl   $0xf0107708,0x8(%esp)$/;"	l
f0103158	obj/kern/kernel.asm	/^f0103158:	f0 $/;"	l
f0103159	obj/kern/kernel.asm	/^f0103159:	c7 44 24 04 cd 00 00 	movl   $0xcd,0x4(%esp)$/;"	l
f0103160	obj/kern/kernel.asm	/^f0103160:	00 $/;"	l
f0103161	obj/kern/kernel.asm	/^f0103161:	c7 04 24 87 87 10 f0 	movl   $0xf0108787,(%esp)$/;"	l
f0103168	obj/kern/kernel.asm	/^f0103168:	e8 d3 ce ff ff       	call   f0100040 <_panic>$/;"	l
f010316d	obj/kern/kernel.asm	/^f010316d:	c7 44 24 04 03 00 00 	movl   $0x3,0x4(%esp)$/;"	l
f0103174	obj/kern/kernel.asm	/^f0103174:	00 $/;"	l
f0103175	obj/kern/kernel.asm	/^f0103175:	c7 04 24 00 90 11 00 	movl   $0x119000,(%esp)$/;"	l
f010317c	obj/kern/kernel.asm	/^f010317c:	b9 00 80 00 00       	mov    $0x8000,%ecx$/;"	l
f0103181	obj/kern/kernel.asm	/^f0103181:	ba 00 80 ff ef       	mov    $0xefff8000,%edx$/;"	l
f0103186	obj/kern/kernel.asm	/^f0103186:	a1 8c de 20 f0       	mov    0xf020de8c,%eax$/;"	l
f010318b	obj/kern/kernel.asm	/^f010318b:	e8 28 e5 ff ff       	call   f01016b8 <boot_map_region>$/;"	l
f0103190	obj/kern/kernel.asm	/^f0103190:	c7 44 24 04 03 00 00 	movl   $0x3,0x4(%esp)$/;"	l
f0103197	obj/kern/kernel.asm	/^f0103197:	00 $/;"	l
f0103198	obj/kern/kernel.asm	/^f0103198:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f010319f	obj/kern/kernel.asm	/^f010319f:	b9 00 00 00 10       	mov    $0x10000000,%ecx$/;"	l
f01031a4	obj/kern/kernel.asm	/^f01031a4:	ba 00 00 00 f0       	mov    $0xf0000000,%edx$/;"	l
f01031a9	obj/kern/kernel.asm	/^f01031a9:	a1 8c de 20 f0       	mov    0xf020de8c,%eax$/;"	l
f01031ae	obj/kern/kernel.asm	/^f01031ae:	e8 05 e5 ff ff       	call   f01016b8 <boot_map_region>$/;"	l
f01031b3	obj/kern/kernel.asm	/^f01031b3:	bf 00 f0 24 f0       	mov    $0xf024f000,%edi$/;"	l
f01031b8	obj/kern/kernel.asm	/^f01031b8:	bb 00 f0 20 f0       	mov    $0xf020f000,%ebx$/;"	l
f01031bd	obj/kern/kernel.asm	/^f01031bd:	be 00 80 ff ef       	mov    $0xefff8000,%esi$/;"	l
f01031c2	obj/kern/kernel.asm	/^f01031c2:	81 fb ff ff ff ef    	cmp    $0xefffffff,%ebx$/;"	l
f01031c8	obj/kern/kernel.asm	/^f01031c8:	77 20                	ja     f01031ea <mem_init+0x18fe>$/;"	l
f01031ca	obj/kern/kernel.asm	/^f01031ca:	89 5c 24 0c          	mov    %ebx,0xc(%esp)$/;"	l
f01031ce	obj/kern/kernel.asm	/^f01031ce:	c7 44 24 08 08 77 10 	movl   $0xf0107708,0x8(%esp)$/;"	l
f01031d5	obj/kern/kernel.asm	/^f01031d5:	f0 $/;"	l
f01031d6	obj/kern/kernel.asm	/^f01031d6:	c7 44 24 04 0d 01 00 	movl   $0x10d,0x4(%esp)$/;"	l
f01031dd	obj/kern/kernel.asm	/^f01031dd:	00 $/;"	l
f01031de	obj/kern/kernel.asm	/^f01031de:	c7 04 24 87 87 10 f0 	movl   $0xf0108787,(%esp)$/;"	l
f01031e5	obj/kern/kernel.asm	/^f01031e5:	e8 56 ce ff ff       	call   f0100040 <_panic>$/;"	l
f01031ea	obj/kern/kernel.asm	/^f01031ea:	c7 44 24 04 03 00 00 	movl   $0x3,0x4(%esp)$/;"	l
f01031f1	obj/kern/kernel.asm	/^f01031f1:	00 $/;"	l
f01031f2	obj/kern/kernel.asm	/^f01031f2:	8d 83 00 00 00 10    	lea    0x10000000(%ebx),%eax$/;"	l
f01031f8	obj/kern/kernel.asm	/^f01031f8:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01031fb	obj/kern/kernel.asm	/^f01031fb:	b9 00 80 00 00       	mov    $0x8000,%ecx$/;"	l
f0103200	obj/kern/kernel.asm	/^f0103200:	89 f2                	mov    %esi,%edx$/;"	l
f0103202	obj/kern/kernel.asm	/^f0103202:	a1 8c de 20 f0       	mov    0xf020de8c,%eax$/;"	l
f0103207	obj/kern/kernel.asm	/^f0103207:	e8 ac e4 ff ff       	call   f01016b8 <boot_map_region>$/;"	l
f010320c	obj/kern/kernel.asm	/^f010320c:	81 c3 00 80 00 00    	add    $0x8000,%ebx$/;"	l
f0103212	obj/kern/kernel.asm	/^f0103212:	81 ee 00 00 01 00    	sub    $0x10000,%esi$/;"	l
f0103218	obj/kern/kernel.asm	/^f0103218:	39 fb                	cmp    %edi,%ebx$/;"	l
f010321a	obj/kern/kernel.asm	/^f010321a:	75 a6                	jne    f01031c2 <mem_init+0x18d6>$/;"	l
f010321c	obj/kern/kernel.asm	/^f010321c:	8b 3d 8c de 20 f0    	mov    0xf020de8c,%edi$/;"	l
f0103222	obj/kern/kernel.asm	/^f0103222:	a1 88 de 20 f0       	mov    0xf020de88,%eax$/;"	l
f0103227	obj/kern/kernel.asm	/^f0103227:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f010322a	obj/kern/kernel.asm	/^f010322a:	8d 04 c5 ff 0f 00 00 	lea    0xfff(,%eax,8),%eax$/;"	l
f0103231	obj/kern/kernel.asm	/^f0103231:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0103236	obj/kern/kernel.asm	/^f0103236:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f0103239	obj/kern/kernel.asm	/^f0103239:	8b 35 90 de 20 f0    	mov    0xf020de90,%esi$/;"	l
f010323f	obj/kern/kernel.asm	/^f010323f:	89 75 cc             	mov    %esi,-0x34(%ebp)$/;"	l
f0103242	obj/kern/kernel.asm	/^f0103242:	8d 86 00 00 00 10    	lea    0x10000000(%esi),%eax$/;"	l
f0103248	obj/kern/kernel.asm	/^f0103248:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
f010324b	obj/kern/kernel.asm	/^f010324b:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0103250	obj/kern/kernel.asm	/^f0103250:	eb 6a                	jmp    f01032bc <mem_init+0x19d0>$/;"	l
f0103252	obj/kern/kernel.asm	/^f0103252:	8d 93 00 00 00 ef    	lea    -0x11000000(%ebx),%edx$/;"	l
f0103258	obj/kern/kernel.asm	/^f0103258:	89 f8                	mov    %edi,%eax$/;"	l
f010325a	obj/kern/kernel.asm	/^f010325a:	e8 46 dd ff ff       	call   f0100fa5 <check_va2pa>$/;"	l
f010325f	obj/kern/kernel.asm	/^f010325f:	81 7d cc ff ff ff ef 	cmpl   $0xefffffff,-0x34(%ebp)$/;"	l
f0103266	obj/kern/kernel.asm	/^f0103266:	77 20                	ja     f0103288 <mem_init+0x199c>$/;"	l
f0103268	obj/kern/kernel.asm	/^f0103268:	89 74 24 0c          	mov    %esi,0xc(%esp)$/;"	l
f010326c	obj/kern/kernel.asm	/^f010326c:	c7 44 24 08 08 77 10 	movl   $0xf0107708,0x8(%esp)$/;"	l
f0103273	obj/kern/kernel.asm	/^f0103273:	f0 $/;"	l
f0103274	obj/kern/kernel.asm	/^f0103274:	c7 44 24 04 2b 03 00 	movl   $0x32b,0x4(%esp)$/;"	l
f010327b	obj/kern/kernel.asm	/^f010327b:	00 $/;"	l
f010327c	obj/kern/kernel.asm	/^f010327c:	c7 04 24 87 87 10 f0 	movl   $0xf0108787,(%esp)$/;"	l
f0103283	obj/kern/kernel.asm	/^f0103283:	e8 b8 cd ff ff       	call   f0100040 <_panic>$/;"	l
f0103288	obj/kern/kernel.asm	/^f0103288:	8b 4d c8             	mov    -0x38(%ebp),%ecx$/;"	l
f010328b	obj/kern/kernel.asm	/^f010328b:	8d 14 0b             	lea    (%ebx,%ecx,1),%edx$/;"	l
f010328e	obj/kern/kernel.asm	/^f010328e:	39 d0                	cmp    %edx,%eax$/;"	l
f0103290	obj/kern/kernel.asm	/^f0103290:	74 24                	je     f01032b6 <mem_init+0x19ca>$/;"	l
f0103292	obj/kern/kernel.asm	/^f0103292:	c7 44 24 0c 88 85 10 	movl   $0xf0108588,0xc(%esp)$/;"	l
f0103299	obj/kern/kernel.asm	/^f0103299:	f0 $/;"	l
f010329a	obj/kern/kernel.asm	/^f010329a:	c7 44 24 08 9f 87 10 	movl   $0xf010879f,0x8(%esp)$/;"	l
f01032a1	obj/kern/kernel.asm	/^f01032a1:	f0 $/;"	l
f01032a2	obj/kern/kernel.asm	/^f01032a2:	c7 44 24 04 2b 03 00 	movl   $0x32b,0x4(%esp)$/;"	l
f01032a9	obj/kern/kernel.asm	/^f01032a9:	00 $/;"	l
f01032aa	obj/kern/kernel.asm	/^f01032aa:	c7 04 24 87 87 10 f0 	movl   $0xf0108787,(%esp)$/;"	l
f01032b1	obj/kern/kernel.asm	/^f01032b1:	e8 8a cd ff ff       	call   f0100040 <_panic>$/;"	l
f01032b6	obj/kern/kernel.asm	/^f01032b6:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f01032bc	obj/kern/kernel.asm	/^f01032bc:	39 5d d0             	cmp    %ebx,-0x30(%ebp)$/;"	l
f01032bf	obj/kern/kernel.asm	/^f01032bf:	77 91                	ja     f0103252 <mem_init+0x1966>$/;"	l
f01032c1	obj/kern/kernel.asm	/^f01032c1:	8b 1d 48 d2 20 f0    	mov    0xf020d248,%ebx$/;"	l
f01032c7	obj/kern/kernel.asm	/^f01032c7:	89 de                	mov    %ebx,%esi$/;"	l
f01032c9	obj/kern/kernel.asm	/^f01032c9:	ba 00 00 c0 ee       	mov    $0xeec00000,%edx$/;"	l
f01032ce	obj/kern/kernel.asm	/^f01032ce:	89 f8                	mov    %edi,%eax$/;"	l
f01032d0	obj/kern/kernel.asm	/^f01032d0:	e8 d0 dc ff ff       	call   f0100fa5 <check_va2pa>$/;"	l
f01032d5	obj/kern/kernel.asm	/^f01032d5:	81 fb ff ff ff ef    	cmp    $0xefffffff,%ebx$/;"	l
f01032db	obj/kern/kernel.asm	/^f01032db:	77 20                	ja     f01032fd <mem_init+0x1a11>$/;"	l
f01032dd	obj/kern/kernel.asm	/^f01032dd:	89 5c 24 0c          	mov    %ebx,0xc(%esp)$/;"	l
f01032e1	obj/kern/kernel.asm	/^f01032e1:	c7 44 24 08 08 77 10 	movl   $0xf0107708,0x8(%esp)$/;"	l
f01032e8	obj/kern/kernel.asm	/^f01032e8:	f0 $/;"	l
f01032e9	obj/kern/kernel.asm	/^f01032e9:	c7 44 24 04 30 03 00 	movl   $0x330,0x4(%esp)$/;"	l
f01032f0	obj/kern/kernel.asm	/^f01032f0:	00 $/;"	l
f01032f1	obj/kern/kernel.asm	/^f01032f1:	c7 04 24 87 87 10 f0 	movl   $0xf0108787,(%esp)$/;"	l
f01032f8	obj/kern/kernel.asm	/^f01032f8:	e8 43 cd ff ff       	call   f0100040 <_panic>$/;"	l
f01032fd	obj/kern/kernel.asm	/^f01032fd:	bb 00 00 c0 ee       	mov    $0xeec00000,%ebx$/;"	l
f0103302	obj/kern/kernel.asm	/^f0103302:	81 c6 00 00 40 21    	add    $0x21400000,%esi$/;"	l
f0103308	obj/kern/kernel.asm	/^f0103308:	8d 14 1e             	lea    (%esi,%ebx,1),%edx$/;"	l
f010330b	obj/kern/kernel.asm	/^f010330b:	39 d0                	cmp    %edx,%eax$/;"	l
f010330d	obj/kern/kernel.asm	/^f010330d:	74 24                	je     f0103333 <mem_init+0x1a47>$/;"	l
f010330f	obj/kern/kernel.asm	/^f010330f:	c7 44 24 0c bc 85 10 	movl   $0xf01085bc,0xc(%esp)$/;"	l
f0103316	obj/kern/kernel.asm	/^f0103316:	f0 $/;"	l
f0103317	obj/kern/kernel.asm	/^f0103317:	c7 44 24 08 9f 87 10 	movl   $0xf010879f,0x8(%esp)$/;"	l
f010331e	obj/kern/kernel.asm	/^f010331e:	f0 $/;"	l
f010331f	obj/kern/kernel.asm	/^f010331f:	c7 44 24 04 30 03 00 	movl   $0x330,0x4(%esp)$/;"	l
f0103326	obj/kern/kernel.asm	/^f0103326:	00 $/;"	l
f0103327	obj/kern/kernel.asm	/^f0103327:	c7 04 24 87 87 10 f0 	movl   $0xf0108787,(%esp)$/;"	l
f010332e	obj/kern/kernel.asm	/^f010332e:	e8 0d cd ff ff       	call   f0100040 <_panic>$/;"	l
f0103333	obj/kern/kernel.asm	/^f0103333:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f0103339	obj/kern/kernel.asm	/^f0103339:	81 fb 00 f0 c1 ee    	cmp    $0xeec1f000,%ebx$/;"	l
f010333f	obj/kern/kernel.asm	/^f010333f:	0f 85 a8 05 00 00    	jne    f01038ed <mem_init+0x2001>$/;"	l
f0103345	obj/kern/kernel.asm	/^f0103345:	8b 75 d4             	mov    -0x2c(%ebp),%esi$/;"	l
f0103348	obj/kern/kernel.asm	/^f0103348:	c1 e6 0c             	shl    $0xc,%esi$/;"	l
f010334b	obj/kern/kernel.asm	/^f010334b:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0103350	obj/kern/kernel.asm	/^f0103350:	eb 3b                	jmp    f010338d <mem_init+0x1aa1>$/;"	l
f0103352	obj/kern/kernel.asm	/^f0103352:	8d 93 00 00 00 f0    	lea    -0x10000000(%ebx),%edx$/;"	l
f0103358	obj/kern/kernel.asm	/^f0103358:	89 f8                	mov    %edi,%eax$/;"	l
f010335a	obj/kern/kernel.asm	/^f010335a:	e8 46 dc ff ff       	call   f0100fa5 <check_va2pa>$/;"	l
f010335f	obj/kern/kernel.asm	/^f010335f:	39 c3                	cmp    %eax,%ebx$/;"	l
f0103361	obj/kern/kernel.asm	/^f0103361:	74 24                	je     f0103387 <mem_init+0x1a9b>$/;"	l
f0103363	obj/kern/kernel.asm	/^f0103363:	c7 44 24 0c f0 85 10 	movl   $0xf01085f0,0xc(%esp)$/;"	l
f010336a	obj/kern/kernel.asm	/^f010336a:	f0 $/;"	l
f010336b	obj/kern/kernel.asm	/^f010336b:	c7 44 24 08 9f 87 10 	movl   $0xf010879f,0x8(%esp)$/;"	l
f0103372	obj/kern/kernel.asm	/^f0103372:	f0 $/;"	l
f0103373	obj/kern/kernel.asm	/^f0103373:	c7 44 24 04 34 03 00 	movl   $0x334,0x4(%esp)$/;"	l
f010337a	obj/kern/kernel.asm	/^f010337a:	00 $/;"	l
f010337b	obj/kern/kernel.asm	/^f010337b:	c7 04 24 87 87 10 f0 	movl   $0xf0108787,(%esp)$/;"	l
f0103382	obj/kern/kernel.asm	/^f0103382:	e8 b9 cc ff ff       	call   f0100040 <_panic>$/;"	l
f0103387	obj/kern/kernel.asm	/^f0103387:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f010338d	obj/kern/kernel.asm	/^f010338d:	39 f3                	cmp    %esi,%ebx$/;"	l
f010338f	obj/kern/kernel.asm	/^f010338f:	72 c1                	jb     f0103352 <mem_init+0x1a66>$/;"	l
f0103391	obj/kern/kernel.asm	/^f0103391:	c7 45 d0 00 f0 20 f0 	movl   $0xf020f000,-0x30(%ebp)$/;"	l
f0103398	obj/kern/kernel.asm	/^f0103398:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%ebp)$/;"	l
f010339f	obj/kern/kernel.asm	/^f010339f:	be 00 80 ff ef       	mov    $0xefff8000,%esi$/;"	l
f01033a4	obj/kern/kernel.asm	/^f01033a4:	b8 00 f0 20 f0       	mov    $0xf020f000,%eax$/;"	l
f01033a9	obj/kern/kernel.asm	/^f01033a9:	05 00 80 00 20       	add    $0x20008000,%eax$/;"	l
f01033ae	obj/kern/kernel.asm	/^f01033ae:	89 45 c4             	mov    %eax,-0x3c(%ebp)$/;"	l
f01033b1	obj/kern/kernel.asm	/^f01033b1:	8d 86 00 80 00 00    	lea    0x8000(%esi),%eax$/;"	l
f01033b7	obj/kern/kernel.asm	/^f01033b7:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
f01033ba	obj/kern/kernel.asm	/^f01033ba:	89 f2                	mov    %esi,%edx$/;"	l
f01033bc	obj/kern/kernel.asm	/^f01033bc:	89 f8                	mov    %edi,%eax$/;"	l
f01033be	obj/kern/kernel.asm	/^f01033be:	e8 e2 db ff ff       	call   f0100fa5 <check_va2pa>$/;"	l
f01033c3	obj/kern/kernel.asm	/^f01033c3:	8b 4d d0             	mov    -0x30(%ebp),%ecx$/;"	l
f01033c6	obj/kern/kernel.asm	/^f01033c6:	81 f9 ff ff ff ef    	cmp    $0xefffffff,%ecx$/;"	l
f01033cc	obj/kern/kernel.asm	/^f01033cc:	77 20                	ja     f01033ee <mem_init+0x1b02>$/;"	l
f01033ce	obj/kern/kernel.asm	/^f01033ce:	89 4c 24 0c          	mov    %ecx,0xc(%esp)$/;"	l
f01033d2	obj/kern/kernel.asm	/^f01033d2:	c7 44 24 08 08 77 10 	movl   $0xf0107708,0x8(%esp)$/;"	l
f01033d9	obj/kern/kernel.asm	/^f01033d9:	f0 $/;"	l
f01033da	obj/kern/kernel.asm	/^f01033da:	c7 44 24 04 3c 03 00 	movl   $0x33c,0x4(%esp)$/;"	l
f01033e1	obj/kern/kernel.asm	/^f01033e1:	00 $/;"	l
f01033e2	obj/kern/kernel.asm	/^f01033e2:	c7 04 24 87 87 10 f0 	movl   $0xf0108787,(%esp)$/;"	l
f01033e9	obj/kern/kernel.asm	/^f01033e9:	e8 52 cc ff ff       	call   f0100040 <_panic>$/;"	l
f01033ee	obj/kern/kernel.asm	/^f01033ee:	89 f3                	mov    %esi,%ebx$/;"	l
f01033f0	obj/kern/kernel.asm	/^f01033f0:	8b 4d c4             	mov    -0x3c(%ebp),%ecx$/;"	l
f01033f3	obj/kern/kernel.asm	/^f01033f3:	03 4d d4             	add    -0x2c(%ebp),%ecx$/;"	l
f01033f6	obj/kern/kernel.asm	/^f01033f6:	89 4d c8             	mov    %ecx,-0x38(%ebp)$/;"	l
f01033f9	obj/kern/kernel.asm	/^f01033f9:	8b 4d c8             	mov    -0x38(%ebp),%ecx$/;"	l
f01033fc	obj/kern/kernel.asm	/^f01033fc:	8d 14 19             	lea    (%ecx,%ebx,1),%edx$/;"	l
f01033ff	obj/kern/kernel.asm	/^f01033ff:	39 c2                	cmp    %eax,%edx$/;"	l
f0103401	obj/kern/kernel.asm	/^f0103401:	74 24                	je     f0103427 <mem_init+0x1b3b>$/;"	l
f0103403	obj/kern/kernel.asm	/^f0103403:	c7 44 24 0c 18 86 10 	movl   $0xf0108618,0xc(%esp)$/;"	l
f010340a	obj/kern/kernel.asm	/^f010340a:	f0 $/;"	l
f010340b	obj/kern/kernel.asm	/^f010340b:	c7 44 24 08 9f 87 10 	movl   $0xf010879f,0x8(%esp)$/;"	l
f0103412	obj/kern/kernel.asm	/^f0103412:	f0 $/;"	l
f0103413	obj/kern/kernel.asm	/^f0103413:	c7 44 24 04 3c 03 00 	movl   $0x33c,0x4(%esp)$/;"	l
f010341a	obj/kern/kernel.asm	/^f010341a:	00 $/;"	l
f010341b	obj/kern/kernel.asm	/^f010341b:	c7 04 24 87 87 10 f0 	movl   $0xf0108787,(%esp)$/;"	l
f0103422	obj/kern/kernel.asm	/^f0103422:	e8 19 cc ff ff       	call   f0100040 <_panic>$/;"	l
f0103427	obj/kern/kernel.asm	/^f0103427:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f010342d	obj/kern/kernel.asm	/^f010342d:	3b 5d cc             	cmp    -0x34(%ebp),%ebx$/;"	l
f0103430	obj/kern/kernel.asm	/^f0103430:	0f 85 a9 04 00 00    	jne    f01038df <mem_init+0x1ff3>$/;"	l
f0103436	obj/kern/kernel.asm	/^f0103436:	8d 9e 00 80 ff ff    	lea    -0x8000(%esi),%ebx$/;"	l
f010343c	obj/kern/kernel.asm	/^f010343c:	89 da                	mov    %ebx,%edx$/;"	l
f010343e	obj/kern/kernel.asm	/^f010343e:	89 f8                	mov    %edi,%eax$/;"	l
f0103440	obj/kern/kernel.asm	/^f0103440:	e8 60 db ff ff       	call   f0100fa5 <check_va2pa>$/;"	l
f0103445	obj/kern/kernel.asm	/^f0103445:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f0103448	obj/kern/kernel.asm	/^f0103448:	74 24                	je     f010346e <mem_init+0x1b82>$/;"	l
f010344a	obj/kern/kernel.asm	/^f010344a:	c7 44 24 0c 60 86 10 	movl   $0xf0108660,0xc(%esp)$/;"	l
f0103451	obj/kern/kernel.asm	/^f0103451:	f0 $/;"	l
f0103452	obj/kern/kernel.asm	/^f0103452:	c7 44 24 08 9f 87 10 	movl   $0xf010879f,0x8(%esp)$/;"	l
f0103459	obj/kern/kernel.asm	/^f0103459:	f0 $/;"	l
f010345a	obj/kern/kernel.asm	/^f010345a:	c7 44 24 04 3e 03 00 	movl   $0x33e,0x4(%esp)$/;"	l
f0103461	obj/kern/kernel.asm	/^f0103461:	00 $/;"	l
f0103462	obj/kern/kernel.asm	/^f0103462:	c7 04 24 87 87 10 f0 	movl   $0xf0108787,(%esp)$/;"	l
f0103469	obj/kern/kernel.asm	/^f0103469:	e8 d2 cb ff ff       	call   f0100040 <_panic>$/;"	l
f010346e	obj/kern/kernel.asm	/^f010346e:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f0103474	obj/kern/kernel.asm	/^f0103474:	39 de                	cmp    %ebx,%esi$/;"	l
f0103476	obj/kern/kernel.asm	/^f0103476:	75 c4                	jne    f010343c <mem_init+0x1b50>$/;"	l
f0103478	obj/kern/kernel.asm	/^f0103478:	81 ee 00 00 01 00    	sub    $0x10000,%esi$/;"	l
f010347e	obj/kern/kernel.asm	/^f010347e:	81 45 d4 00 80 01 00 	addl   $0x18000,-0x2c(%ebp)$/;"	l
f0103485	obj/kern/kernel.asm	/^f0103485:	81 45 d0 00 80 00 00 	addl   $0x8000,-0x30(%ebp)$/;"	l
f010348c	obj/kern/kernel.asm	/^f010348c:	81 fe 00 80 f7 ef    	cmp    $0xeff78000,%esi$/;"	l
f0103492	obj/kern/kernel.asm	/^f0103492:	0f 85 19 ff ff ff    	jne    f01033b1 <mem_init+0x1ac5>$/;"	l
f0103498	obj/kern/kernel.asm	/^f0103498:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010349d	obj/kern/kernel.asm	/^f010349d:	e9 c2 00 00 00       	jmp    f0103564 <mem_init+0x1c78>$/;"	l
f01034a2	obj/kern/kernel.asm	/^f01034a2:	8d 90 45 fc ff ff    	lea    -0x3bb(%eax),%edx$/;"	l
f01034a8	obj/kern/kernel.asm	/^f01034a8:	83 fa 04             	cmp    $0x4,%edx$/;"	l
f01034ab	obj/kern/kernel.asm	/^f01034ab:	77 2e                	ja     f01034db <mem_init+0x1bef>$/;"	l
f01034ad	obj/kern/kernel.asm	/^f01034ad:	f6 04 87 01          	testb  $0x1,(%edi,%eax,4)$/;"	l
f01034b1	obj/kern/kernel.asm	/^f01034b1:	0f 85 aa 00 00 00    	jne    f0103561 <mem_init+0x1c75>$/;"	l
f01034b7	obj/kern/kernel.asm	/^f01034b7:	c7 44 24 0c 8a 8a 10 	movl   $0xf0108a8a,0xc(%esp)$/;"	l
f01034be	obj/kern/kernel.asm	/^f01034be:	f0 $/;"	l
f01034bf	obj/kern/kernel.asm	/^f01034bf:	c7 44 24 08 9f 87 10 	movl   $0xf010879f,0x8(%esp)$/;"	l
f01034c6	obj/kern/kernel.asm	/^f01034c6:	f0 $/;"	l
f01034c7	obj/kern/kernel.asm	/^f01034c7:	c7 44 24 04 49 03 00 	movl   $0x349,0x4(%esp)$/;"	l
f01034ce	obj/kern/kernel.asm	/^f01034ce:	00 $/;"	l
f01034cf	obj/kern/kernel.asm	/^f01034cf:	c7 04 24 87 87 10 f0 	movl   $0xf0108787,(%esp)$/;"	l
f01034d6	obj/kern/kernel.asm	/^f01034d6:	e8 65 cb ff ff       	call   f0100040 <_panic>$/;"	l
f01034db	obj/kern/kernel.asm	/^f01034db:	3d bf 03 00 00       	cmp    $0x3bf,%eax$/;"	l
f01034e0	obj/kern/kernel.asm	/^f01034e0:	76 55                	jbe    f0103537 <mem_init+0x1c4b>$/;"	l
f01034e2	obj/kern/kernel.asm	/^f01034e2:	8b 14 87             	mov    (%edi,%eax,4),%edx$/;"	l
f01034e5	obj/kern/kernel.asm	/^f01034e5:	f6 c2 01             	test   $0x1,%dl$/;"	l
f01034e8	obj/kern/kernel.asm	/^f01034e8:	75 24                	jne    f010350e <mem_init+0x1c22>$/;"	l
f01034ea	obj/kern/kernel.asm	/^f01034ea:	c7 44 24 0c 8a 8a 10 	movl   $0xf0108a8a,0xc(%esp)$/;"	l
f01034f1	obj/kern/kernel.asm	/^f01034f1:	f0 $/;"	l
f01034f2	obj/kern/kernel.asm	/^f01034f2:	c7 44 24 08 9f 87 10 	movl   $0xf010879f,0x8(%esp)$/;"	l
f01034f9	obj/kern/kernel.asm	/^f01034f9:	f0 $/;"	l
f01034fa	obj/kern/kernel.asm	/^f01034fa:	c7 44 24 04 4d 03 00 	movl   $0x34d,0x4(%esp)$/;"	l
f0103501	obj/kern/kernel.asm	/^f0103501:	00 $/;"	l
f0103502	obj/kern/kernel.asm	/^f0103502:	c7 04 24 87 87 10 f0 	movl   $0xf0108787,(%esp)$/;"	l
f0103509	obj/kern/kernel.asm	/^f0103509:	e8 32 cb ff ff       	call   f0100040 <_panic>$/;"	l
f010350e	obj/kern/kernel.asm	/^f010350e:	f6 c2 02             	test   $0x2,%dl$/;"	l
f0103511	obj/kern/kernel.asm	/^f0103511:	75 4e                	jne    f0103561 <mem_init+0x1c75>$/;"	l
f0103513	obj/kern/kernel.asm	/^f0103513:	c7 44 24 0c 9b 8a 10 	movl   $0xf0108a9b,0xc(%esp)$/;"	l
f010351a	obj/kern/kernel.asm	/^f010351a:	f0 $/;"	l
f010351b	obj/kern/kernel.asm	/^f010351b:	c7 44 24 08 9f 87 10 	movl   $0xf010879f,0x8(%esp)$/;"	l
f0103522	obj/kern/kernel.asm	/^f0103522:	f0 $/;"	l
f0103523	obj/kern/kernel.asm	/^f0103523:	c7 44 24 04 4e 03 00 	movl   $0x34e,0x4(%esp)$/;"	l
f010352a	obj/kern/kernel.asm	/^f010352a:	00 $/;"	l
f010352b	obj/kern/kernel.asm	/^f010352b:	c7 04 24 87 87 10 f0 	movl   $0xf0108787,(%esp)$/;"	l
f0103532	obj/kern/kernel.asm	/^f0103532:	e8 09 cb ff ff       	call   f0100040 <_panic>$/;"	l
f0103537	obj/kern/kernel.asm	/^f0103537:	83 3c 87 00          	cmpl   $0x0,(%edi,%eax,4)$/;"	l
f010353b	obj/kern/kernel.asm	/^f010353b:	74 24                	je     f0103561 <mem_init+0x1c75>$/;"	l
f010353d	obj/kern/kernel.asm	/^f010353d:	c7 44 24 0c ac 8a 10 	movl   $0xf0108aac,0xc(%esp)$/;"	l
f0103544	obj/kern/kernel.asm	/^f0103544:	f0 $/;"	l
f0103545	obj/kern/kernel.asm	/^f0103545:	c7 44 24 08 9f 87 10 	movl   $0xf010879f,0x8(%esp)$/;"	l
f010354c	obj/kern/kernel.asm	/^f010354c:	f0 $/;"	l
f010354d	obj/kern/kernel.asm	/^f010354d:	c7 44 24 04 50 03 00 	movl   $0x350,0x4(%esp)$/;"	l
f0103554	obj/kern/kernel.asm	/^f0103554:	00 $/;"	l
f0103555	obj/kern/kernel.asm	/^f0103555:	c7 04 24 87 87 10 f0 	movl   $0xf0108787,(%esp)$/;"	l
f010355c	obj/kern/kernel.asm	/^f010355c:	e8 df ca ff ff       	call   f0100040 <_panic>$/;"	l
f0103561	obj/kern/kernel.asm	/^f0103561:	83 c0 01             	add    $0x1,%eax$/;"	l
f0103564	obj/kern/kernel.asm	/^f0103564:	3d 00 04 00 00       	cmp    $0x400,%eax$/;"	l
f0103569	obj/kern/kernel.asm	/^f0103569:	0f 85 33 ff ff ff    	jne    f01034a2 <mem_init+0x1bb6>$/;"	l
f010356f	obj/kern/kernel.asm	/^f010356f:	c7 04 24 84 86 10 f0 	movl   $0xf0108684,(%esp)$/;"	l
f0103576	obj/kern/kernel.asm	/^f0103576:	e8 23 0e 00 00       	call   f010439e <cprintf>$/;"	l
f010357b	obj/kern/kernel.asm	/^f010357b:	a1 8c de 20 f0       	mov    0xf020de8c,%eax$/;"	l
f0103580	obj/kern/kernel.asm	/^f0103580:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0103585	obj/kern/kernel.asm	/^f0103585:	77 20                	ja     f01035a7 <mem_init+0x1cbb>$/;"	l
f0103587	obj/kern/kernel.asm	/^f0103587:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f010358b	obj/kern/kernel.asm	/^f010358b:	c7 44 24 08 08 77 10 	movl   $0xf0107708,0x8(%esp)$/;"	l
f0103592	obj/kern/kernel.asm	/^f0103592:	f0 $/;"	l
f0103593	obj/kern/kernel.asm	/^f0103593:	c7 44 24 04 e6 00 00 	movl   $0xe6,0x4(%esp)$/;"	l
f010359a	obj/kern/kernel.asm	/^f010359a:	00 $/;"	l
f010359b	obj/kern/kernel.asm	/^f010359b:	c7 04 24 87 87 10 f0 	movl   $0xf0108787,(%esp)$/;"	l
f01035a2	obj/kern/kernel.asm	/^f01035a2:	e8 99 ca ff ff       	call   f0100040 <_panic>$/;"	l
f01035a7	obj/kern/kernel.asm	/^f01035a7:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f01035ac	obj/kern/kernel.asm	/^f01035ac:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f01035af	obj/kern/kernel.asm	/^f01035af:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01035b4	obj/kern/kernel.asm	/^f01035b4:	e8 f6 da ff ff       	call   f01010af <check_page_free_list>$/;"	l
f01035b9	obj/kern/kernel.asm	/^f01035b9:	0f 20 c0             	mov    %cr0,%eax$/;"	l
f01035bc	obj/kern/kernel.asm	/^f01035bc:	83 e0 f3             	and    $0xfffffff3,%eax$/;"	l
f01035bf	obj/kern/kernel.asm	/^f01035bf:	0d 23 00 05 80       	or     $0x80050023,%eax$/;"	l
f01035c4	obj/kern/kernel.asm	/^f01035c4:	0f 22 c0             	mov    %eax,%cr0$/;"	l
f01035c7	obj/kern/kernel.asm	/^f01035c7:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f01035ce	obj/kern/kernel.asm	/^f01035ce:	e8 0a df ff ff       	call   f01014dd <page_alloc>$/;"	l
f01035d3	obj/kern/kernel.asm	/^f01035d3:	89 c3                	mov    %eax,%ebx$/;"	l
f01035d5	obj/kern/kernel.asm	/^f01035d5:	85 c0                	test   %eax,%eax$/;"	l
f01035d7	obj/kern/kernel.asm	/^f01035d7:	75 24                	jne    f01035fd <mem_init+0x1d11>$/;"	l
f01035d9	obj/kern/kernel.asm	/^f01035d9:	c7 44 24 0c 96 88 10 	movl   $0xf0108896,0xc(%esp)$/;"	l
f01035e0	obj/kern/kernel.asm	/^f01035e0:	f0 $/;"	l
f01035e1	obj/kern/kernel.asm	/^f01035e1:	c7 44 24 08 9f 87 10 	movl   $0xf010879f,0x8(%esp)$/;"	l
f01035e8	obj/kern/kernel.asm	/^f01035e8:	f0 $/;"	l
f01035e9	obj/kern/kernel.asm	/^f01035e9:	c7 44 24 04 29 04 00 	movl   $0x429,0x4(%esp)$/;"	l
f01035f0	obj/kern/kernel.asm	/^f01035f0:	00 $/;"	l
f01035f1	obj/kern/kernel.asm	/^f01035f1:	c7 04 24 87 87 10 f0 	movl   $0xf0108787,(%esp)$/;"	l
f01035f8	obj/kern/kernel.asm	/^f01035f8:	e8 43 ca ff ff       	call   f0100040 <_panic>$/;"	l
f01035fd	obj/kern/kernel.asm	/^f01035fd:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0103604	obj/kern/kernel.asm	/^f0103604:	e8 d4 de ff ff       	call   f01014dd <page_alloc>$/;"	l
f0103609	obj/kern/kernel.asm	/^f0103609:	89 c7                	mov    %eax,%edi$/;"	l
f010360b	obj/kern/kernel.asm	/^f010360b:	85 c0                	test   %eax,%eax$/;"	l
f010360d	obj/kern/kernel.asm	/^f010360d:	75 24                	jne    f0103633 <mem_init+0x1d47>$/;"	l
f010360f	obj/kern/kernel.asm	/^f010360f:	c7 44 24 0c ac 88 10 	movl   $0xf01088ac,0xc(%esp)$/;"	l
f0103616	obj/kern/kernel.asm	/^f0103616:	f0 $/;"	l
f0103617	obj/kern/kernel.asm	/^f0103617:	c7 44 24 08 9f 87 10 	movl   $0xf010879f,0x8(%esp)$/;"	l
f010361e	obj/kern/kernel.asm	/^f010361e:	f0 $/;"	l
f010361f	obj/kern/kernel.asm	/^f010361f:	c7 44 24 04 2a 04 00 	movl   $0x42a,0x4(%esp)$/;"	l
f0103626	obj/kern/kernel.asm	/^f0103626:	00 $/;"	l
f0103627	obj/kern/kernel.asm	/^f0103627:	c7 04 24 87 87 10 f0 	movl   $0xf0108787,(%esp)$/;"	l
f010362e	obj/kern/kernel.asm	/^f010362e:	e8 0d ca ff ff       	call   f0100040 <_panic>$/;"	l
f0103633	obj/kern/kernel.asm	/^f0103633:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f010363a	obj/kern/kernel.asm	/^f010363a:	e8 9e de ff ff       	call   f01014dd <page_alloc>$/;"	l
f010363f	obj/kern/kernel.asm	/^f010363f:	89 c6                	mov    %eax,%esi$/;"	l
f0103641	obj/kern/kernel.asm	/^f0103641:	85 c0                	test   %eax,%eax$/;"	l
f0103643	obj/kern/kernel.asm	/^f0103643:	75 24                	jne    f0103669 <mem_init+0x1d7d>$/;"	l
f0103645	obj/kern/kernel.asm	/^f0103645:	c7 44 24 0c c2 88 10 	movl   $0xf01088c2,0xc(%esp)$/;"	l
f010364c	obj/kern/kernel.asm	/^f010364c:	f0 $/;"	l
f010364d	obj/kern/kernel.asm	/^f010364d:	c7 44 24 08 9f 87 10 	movl   $0xf010879f,0x8(%esp)$/;"	l
f0103654	obj/kern/kernel.asm	/^f0103654:	f0 $/;"	l
f0103655	obj/kern/kernel.asm	/^f0103655:	c7 44 24 04 2b 04 00 	movl   $0x42b,0x4(%esp)$/;"	l
f010365c	obj/kern/kernel.asm	/^f010365c:	00 $/;"	l
f010365d	obj/kern/kernel.asm	/^f010365d:	c7 04 24 87 87 10 f0 	movl   $0xf0108787,(%esp)$/;"	l
f0103664	obj/kern/kernel.asm	/^f0103664:	e8 d7 c9 ff ff       	call   f0100040 <_panic>$/;"	l
f0103669	obj/kern/kernel.asm	/^f0103669:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f010366c	obj/kern/kernel.asm	/^f010366c:	e8 f0 de ff ff       	call   f0101561 <page_free>$/;"	l
f0103671	obj/kern/kernel.asm	/^f0103671:	89 f8                	mov    %edi,%eax$/;"	l
f0103673	obj/kern/kernel.asm	/^f0103673:	e8 e8 d8 ff ff       	call   f0100f60 <page2kva>$/;"	l
f0103678	obj/kern/kernel.asm	/^f0103678:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f010367f	obj/kern/kernel.asm	/^f010367f:	00 $/;"	l
f0103680	obj/kern/kernel.asm	/^f0103680:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
f0103687	obj/kern/kernel.asm	/^f0103687:	00 $/;"	l
f0103688	obj/kern/kernel.asm	/^f0103688:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010368b	obj/kern/kernel.asm	/^f010368b:	e8 07 33 00 00       	call   f0106997 <memset>$/;"	l
f0103690	obj/kern/kernel.asm	/^f0103690:	89 f0                	mov    %esi,%eax$/;"	l
f0103692	obj/kern/kernel.asm	/^f0103692:	e8 c9 d8 ff ff       	call   f0100f60 <page2kva>$/;"	l
f0103697	obj/kern/kernel.asm	/^f0103697:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f010369e	obj/kern/kernel.asm	/^f010369e:	00 $/;"	l
f010369f	obj/kern/kernel.asm	/^f010369f:	c7 44 24 04 02 00 00 	movl   $0x2,0x4(%esp)$/;"	l
f01036a6	obj/kern/kernel.asm	/^f01036a6:	00 $/;"	l
f01036a7	obj/kern/kernel.asm	/^f01036a7:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01036aa	obj/kern/kernel.asm	/^f01036aa:	e8 e8 32 00 00       	call   f0106997 <memset>$/;"	l
f01036af	obj/kern/kernel.asm	/^f01036af:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f01036b6	obj/kern/kernel.asm	/^f01036b6:	00 $/;"	l
f01036b7	obj/kern/kernel.asm	/^f01036b7:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f01036be	obj/kern/kernel.asm	/^f01036be:	00 $/;"	l
f01036bf	obj/kern/kernel.asm	/^f01036bf:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f01036c3	obj/kern/kernel.asm	/^f01036c3:	a1 8c de 20 f0       	mov    0xf020de8c,%eax$/;"	l
f01036c8	obj/kern/kernel.asm	/^f01036c8:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01036cb	obj/kern/kernel.asm	/^f01036cb:	e8 3d e1 ff ff       	call   f010180d <page_insert>$/;"	l
f01036d0	obj/kern/kernel.asm	/^f01036d0:	66 83 7f 04 01       	cmpw   $0x1,0x4(%edi)$/;"	l
f01036d5	obj/kern/kernel.asm	/^f01036d5:	74 24                	je     f01036fb <mem_init+0x1e0f>$/;"	l
f01036d7	obj/kern/kernel.asm	/^f01036d7:	c7 44 24 0c 93 89 10 	movl   $0xf0108993,0xc(%esp)$/;"	l
f01036de	obj/kern/kernel.asm	/^f01036de:	f0 $/;"	l
f01036df	obj/kern/kernel.asm	/^f01036df:	c7 44 24 08 9f 87 10 	movl   $0xf010879f,0x8(%esp)$/;"	l
f01036e6	obj/kern/kernel.asm	/^f01036e6:	f0 $/;"	l
f01036e7	obj/kern/kernel.asm	/^f01036e7:	c7 44 24 04 30 04 00 	movl   $0x430,0x4(%esp)$/;"	l
f01036ee	obj/kern/kernel.asm	/^f01036ee:	00 $/;"	l
f01036ef	obj/kern/kernel.asm	/^f01036ef:	c7 04 24 87 87 10 f0 	movl   $0xf0108787,(%esp)$/;"	l
f01036f6	obj/kern/kernel.asm	/^f01036f6:	e8 45 c9 ff ff       	call   f0100040 <_panic>$/;"	l
f01036fb	obj/kern/kernel.asm	/^f01036fb:	81 3d 00 10 00 00 01 	cmpl   $0x1010101,0x1000$/;"	l
f0103702	obj/kern/kernel.asm	/^f0103702:	01 01 01 $/;"	l
f0103705	obj/kern/kernel.asm	/^f0103705:	74 24                	je     f010372b <mem_init+0x1e3f>$/;"	l
f0103707	obj/kern/kernel.asm	/^f0103707:	c7 44 24 0c a4 86 10 	movl   $0xf01086a4,0xc(%esp)$/;"	l
f010370e	obj/kern/kernel.asm	/^f010370e:	f0 $/;"	l
f010370f	obj/kern/kernel.asm	/^f010370f:	c7 44 24 08 9f 87 10 	movl   $0xf010879f,0x8(%esp)$/;"	l
f0103716	obj/kern/kernel.asm	/^f0103716:	f0 $/;"	l
f0103717	obj/kern/kernel.asm	/^f0103717:	c7 44 24 04 31 04 00 	movl   $0x431,0x4(%esp)$/;"	l
f010371e	obj/kern/kernel.asm	/^f010371e:	00 $/;"	l
f010371f	obj/kern/kernel.asm	/^f010371f:	c7 04 24 87 87 10 f0 	movl   $0xf0108787,(%esp)$/;"	l
f0103726	obj/kern/kernel.asm	/^f0103726:	e8 15 c9 ff ff       	call   f0100040 <_panic>$/;"	l
f010372b	obj/kern/kernel.asm	/^f010372b:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
f0103732	obj/kern/kernel.asm	/^f0103732:	00 $/;"	l
f0103733	obj/kern/kernel.asm	/^f0103733:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
f010373a	obj/kern/kernel.asm	/^f010373a:	00 $/;"	l
f010373b	obj/kern/kernel.asm	/^f010373b:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f010373f	obj/kern/kernel.asm	/^f010373f:	a1 8c de 20 f0       	mov    0xf020de8c,%eax$/;"	l
f0103744	obj/kern/kernel.asm	/^f0103744:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103747	obj/kern/kernel.asm	/^f0103747:	e8 c1 e0 ff ff       	call   f010180d <page_insert>$/;"	l
f010374c	obj/kern/kernel.asm	/^f010374c:	81 3d 00 10 00 00 02 	cmpl   $0x2020202,0x1000$/;"	l
f0103753	obj/kern/kernel.asm	/^f0103753:	02 02 02 $/;"	l
f0103756	obj/kern/kernel.asm	/^f0103756:	74 24                	je     f010377c <mem_init+0x1e90>$/;"	l
f0103758	obj/kern/kernel.asm	/^f0103758:	c7 44 24 0c c8 86 10 	movl   $0xf01086c8,0xc(%esp)$/;"	l
f010375f	obj/kern/kernel.asm	/^f010375f:	f0 $/;"	l
f0103760	obj/kern/kernel.asm	/^f0103760:	c7 44 24 08 9f 87 10 	movl   $0xf010879f,0x8(%esp)$/;"	l
f0103767	obj/kern/kernel.asm	/^f0103767:	f0 $/;"	l
f0103768	obj/kern/kernel.asm	/^f0103768:	c7 44 24 04 33 04 00 	movl   $0x433,0x4(%esp)$/;"	l
f010376f	obj/kern/kernel.asm	/^f010376f:	00 $/;"	l
f0103770	obj/kern/kernel.asm	/^f0103770:	c7 04 24 87 87 10 f0 	movl   $0xf0108787,(%esp)$/;"	l
f0103777	obj/kern/kernel.asm	/^f0103777:	e8 c4 c8 ff ff       	call   f0100040 <_panic>$/;"	l
f010377c	obj/kern/kernel.asm	/^f010377c:	66 83 7e 04 01       	cmpw   $0x1,0x4(%esi)$/;"	l
f0103781	obj/kern/kernel.asm	/^f0103781:	74 24                	je     f01037a7 <mem_init+0x1ebb>$/;"	l
f0103783	obj/kern/kernel.asm	/^f0103783:	c7 44 24 0c b5 89 10 	movl   $0xf01089b5,0xc(%esp)$/;"	l
f010378a	obj/kern/kernel.asm	/^f010378a:	f0 $/;"	l
f010378b	obj/kern/kernel.asm	/^f010378b:	c7 44 24 08 9f 87 10 	movl   $0xf010879f,0x8(%esp)$/;"	l
f0103792	obj/kern/kernel.asm	/^f0103792:	f0 $/;"	l
f0103793	obj/kern/kernel.asm	/^f0103793:	c7 44 24 04 34 04 00 	movl   $0x434,0x4(%esp)$/;"	l
f010379a	obj/kern/kernel.asm	/^f010379a:	00 $/;"	l
f010379b	obj/kern/kernel.asm	/^f010379b:	c7 04 24 87 87 10 f0 	movl   $0xf0108787,(%esp)$/;"	l
f01037a2	obj/kern/kernel.asm	/^f01037a2:	e8 99 c8 ff ff       	call   f0100040 <_panic>$/;"	l
f01037a7	obj/kern/kernel.asm	/^f01037a7:	66 83 7f 04 00       	cmpw   $0x0,0x4(%edi)$/;"	l
f01037ac	obj/kern/kernel.asm	/^f01037ac:	74 24                	je     f01037d2 <mem_init+0x1ee6>$/;"	l
f01037ae	obj/kern/kernel.asm	/^f01037ae:	c7 44 24 0c 1f 8a 10 	movl   $0xf0108a1f,0xc(%esp)$/;"	l
f01037b5	obj/kern/kernel.asm	/^f01037b5:	f0 $/;"	l
f01037b6	obj/kern/kernel.asm	/^f01037b6:	c7 44 24 08 9f 87 10 	movl   $0xf010879f,0x8(%esp)$/;"	l
f01037bd	obj/kern/kernel.asm	/^f01037bd:	f0 $/;"	l
f01037be	obj/kern/kernel.asm	/^f01037be:	c7 44 24 04 35 04 00 	movl   $0x435,0x4(%esp)$/;"	l
f01037c5	obj/kern/kernel.asm	/^f01037c5:	00 $/;"	l
f01037c6	obj/kern/kernel.asm	/^f01037c6:	c7 04 24 87 87 10 f0 	movl   $0xf0108787,(%esp)$/;"	l
f01037cd	obj/kern/kernel.asm	/^f01037cd:	e8 6e c8 ff ff       	call   f0100040 <_panic>$/;"	l
f01037d2	obj/kern/kernel.asm	/^f01037d2:	c7 05 00 10 00 00 03 	movl   $0x3030303,0x1000$/;"	l
f01037d9	obj/kern/kernel.asm	/^f01037d9:	03 03 03 $/;"	l
f01037dc	obj/kern/kernel.asm	/^f01037dc:	89 f0                	mov    %esi,%eax$/;"	l
f01037de	obj/kern/kernel.asm	/^f01037de:	e8 7d d7 ff ff       	call   f0100f60 <page2kva>$/;"	l
f01037e3	obj/kern/kernel.asm	/^f01037e3:	81 38 03 03 03 03    	cmpl   $0x3030303,(%eax)$/;"	l
f01037e9	obj/kern/kernel.asm	/^f01037e9:	74 24                	je     f010380f <mem_init+0x1f23>$/;"	l
f01037eb	obj/kern/kernel.asm	/^f01037eb:	c7 44 24 0c ec 86 10 	movl   $0xf01086ec,0xc(%esp)$/;"	l
f01037f2	obj/kern/kernel.asm	/^f01037f2:	f0 $/;"	l
f01037f3	obj/kern/kernel.asm	/^f01037f3:	c7 44 24 08 9f 87 10 	movl   $0xf010879f,0x8(%esp)$/;"	l
f01037fa	obj/kern/kernel.asm	/^f01037fa:	f0 $/;"	l
f01037fb	obj/kern/kernel.asm	/^f01037fb:	c7 44 24 04 37 04 00 	movl   $0x437,0x4(%esp)$/;"	l
f0103802	obj/kern/kernel.asm	/^f0103802:	00 $/;"	l
f0103803	obj/kern/kernel.asm	/^f0103803:	c7 04 24 87 87 10 f0 	movl   $0xf0108787,(%esp)$/;"	l
f010380a	obj/kern/kernel.asm	/^f010380a:	e8 31 c8 ff ff       	call   f0100040 <_panic>$/;"	l
f010380f	obj/kern/kernel.asm	/^f010380f:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
f0103816	obj/kern/kernel.asm	/^f0103816:	00 $/;"	l
f0103817	obj/kern/kernel.asm	/^f0103817:	a1 8c de 20 f0       	mov    0xf020de8c,%eax$/;"	l
f010381c	obj/kern/kernel.asm	/^f010381c:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010381f	obj/kern/kernel.asm	/^f010381f:	e8 95 df ff ff       	call   f01017b9 <page_remove>$/;"	l
f0103824	obj/kern/kernel.asm	/^f0103824:	66 83 7e 04 00       	cmpw   $0x0,0x4(%esi)$/;"	l
f0103829	obj/kern/kernel.asm	/^f0103829:	74 24                	je     f010384f <mem_init+0x1f63>$/;"	l
f010382b	obj/kern/kernel.asm	/^f010382b:	c7 44 24 0c ed 89 10 	movl   $0xf01089ed,0xc(%esp)$/;"	l
f0103832	obj/kern/kernel.asm	/^f0103832:	f0 $/;"	l
f0103833	obj/kern/kernel.asm	/^f0103833:	c7 44 24 08 9f 87 10 	movl   $0xf010879f,0x8(%esp)$/;"	l
f010383a	obj/kern/kernel.asm	/^f010383a:	f0 $/;"	l
f010383b	obj/kern/kernel.asm	/^f010383b:	c7 44 24 04 39 04 00 	movl   $0x439,0x4(%esp)$/;"	l
f0103842	obj/kern/kernel.asm	/^f0103842:	00 $/;"	l
f0103843	obj/kern/kernel.asm	/^f0103843:	c7 04 24 87 87 10 f0 	movl   $0xf0108787,(%esp)$/;"	l
f010384a	obj/kern/kernel.asm	/^f010384a:	e8 f1 c7 ff ff       	call   f0100040 <_panic>$/;"	l
f010384f	obj/kern/kernel.asm	/^f010384f:	a1 8c de 20 f0       	mov    0xf020de8c,%eax$/;"	l
f0103854	obj/kern/kernel.asm	/^f0103854:	8b 08                	mov    (%eax),%ecx$/;"	l
f0103856	obj/kern/kernel.asm	/^f0103856:	81 e1 00 f0 ff ff    	and    $0xfffff000,%ecx$/;"	l
f010385c	obj/kern/kernel.asm	/^f010385c:	89 da                	mov    %ebx,%edx$/;"	l
f010385e	obj/kern/kernel.asm	/^f010385e:	2b 15 90 de 20 f0    	sub    0xf020de90,%edx$/;"	l
f0103864	obj/kern/kernel.asm	/^f0103864:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0103867	obj/kern/kernel.asm	/^f0103867:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f010386a	obj/kern/kernel.asm	/^f010386a:	39 d1                	cmp    %edx,%ecx$/;"	l
f010386c	obj/kern/kernel.asm	/^f010386c:	74 24                	je     f0103892 <mem_init+0x1fa6>$/;"	l
f010386e	obj/kern/kernel.asm	/^f010386e:	c7 44 24 0c 74 80 10 	movl   $0xf0108074,0xc(%esp)$/;"	l
f0103875	obj/kern/kernel.asm	/^f0103875:	f0 $/;"	l
f0103876	obj/kern/kernel.asm	/^f0103876:	c7 44 24 08 9f 87 10 	movl   $0xf010879f,0x8(%esp)$/;"	l
f010387d	obj/kern/kernel.asm	/^f010387d:	f0 $/;"	l
f010387e	obj/kern/kernel.asm	/^f010387e:	c7 44 24 04 3c 04 00 	movl   $0x43c,0x4(%esp)$/;"	l
f0103885	obj/kern/kernel.asm	/^f0103885:	00 $/;"	l
f0103886	obj/kern/kernel.asm	/^f0103886:	c7 04 24 87 87 10 f0 	movl   $0xf0108787,(%esp)$/;"	l
f010388d	obj/kern/kernel.asm	/^f010388d:	e8 ae c7 ff ff       	call   f0100040 <_panic>$/;"	l
f0103892	obj/kern/kernel.asm	/^f0103892:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0103898	obj/kern/kernel.asm	/^f0103898:	66 83 7b 04 01       	cmpw   $0x1,0x4(%ebx)$/;"	l
f010389d	obj/kern/kernel.asm	/^f010389d:	74 24                	je     f01038c3 <mem_init+0x1fd7>$/;"	l
f010389f	obj/kern/kernel.asm	/^f010389f:	c7 44 24 0c a4 89 10 	movl   $0xf01089a4,0xc(%esp)$/;"	l
f01038a6	obj/kern/kernel.asm	/^f01038a6:	f0 $/;"	l
f01038a7	obj/kern/kernel.asm	/^f01038a7:	c7 44 24 08 9f 87 10 	movl   $0xf010879f,0x8(%esp)$/;"	l
f01038ae	obj/kern/kernel.asm	/^f01038ae:	f0 $/;"	l
f01038af	obj/kern/kernel.asm	/^f01038af:	c7 44 24 04 3e 04 00 	movl   $0x43e,0x4(%esp)$/;"	l
f01038b6	obj/kern/kernel.asm	/^f01038b6:	00 $/;"	l
f01038b7	obj/kern/kernel.asm	/^f01038b7:	c7 04 24 87 87 10 f0 	movl   $0xf0108787,(%esp)$/;"	l
f01038be	obj/kern/kernel.asm	/^f01038be:	e8 7d c7 ff ff       	call   f0100040 <_panic>$/;"	l
f01038c3	obj/kern/kernel.asm	/^f01038c3:	66 c7 43 04 00 00    	movw   $0x0,0x4(%ebx)$/;"	l
f01038c9	obj/kern/kernel.asm	/^f01038c9:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f01038cc	obj/kern/kernel.asm	/^f01038cc:	e8 90 dc ff ff       	call   f0101561 <page_free>$/;"	l
f01038d1	obj/kern/kernel.asm	/^f01038d1:	c7 04 24 18 87 10 f0 	movl   $0xf0108718,(%esp)$/;"	l
f01038d8	obj/kern/kernel.asm	/^f01038d8:	e8 c1 0a 00 00       	call   f010439e <cprintf>$/;"	l
f01038dd	obj/kern/kernel.asm	/^f01038dd:	eb 1c                	jmp    f01038fb <mem_init+0x200f>$/;"	l
f01038df	obj/kern/kernel.asm	/^f01038df:	89 da                	mov    %ebx,%edx$/;"	l
f01038e1	obj/kern/kernel.asm	/^f01038e1:	89 f8                	mov    %edi,%eax$/;"	l
f01038e3	obj/kern/kernel.asm	/^f01038e3:	e8 bd d6 ff ff       	call   f0100fa5 <check_va2pa>$/;"	l
f01038e8	obj/kern/kernel.asm	/^f01038e8:	e9 0c fb ff ff       	jmp    f01033f9 <mem_init+0x1b0d>$/;"	l
f01038ed	obj/kern/kernel.asm	/^f01038ed:	89 da                	mov    %ebx,%edx$/;"	l
f01038ef	obj/kern/kernel.asm	/^f01038ef:	89 f8                	mov    %edi,%eax$/;"	l
f01038f1	obj/kern/kernel.asm	/^f01038f1:	e8 af d6 ff ff       	call   f0100fa5 <check_va2pa>$/;"	l
f01038f6	obj/kern/kernel.asm	/^f01038f6:	e9 0d fa ff ff       	jmp    f0103308 <mem_init+0x1a1c>$/;"	l
f01038fb	obj/kern/kernel.asm	/^f01038fb:	83 c4 4c             	add    $0x4c,%esp$/;"	l
f01038fe	obj/kern/kernel.asm	/^f01038fe:	5b                   	pop    %ebx$/;"	l
f01038ff	obj/kern/kernel.asm	/^f01038ff:	5e                   	pop    %esi$/;"	l
f0103900	obj/kern/kernel.asm	/^f0103900:	5f                   	pop    %edi$/;"	l
f0103901	obj/kern/kernel.asm	/^f0103901:	5d                   	pop    %ebp$/;"	l
f0103902	obj/kern/kernel.asm	/^f0103902:	c3                   	ret    $/;"	l
f0103903	obj/kern/kernel.asm	/^f0103903 <user_mem_check>:$/;"	l
f0103903	obj/kern/kernel.asm	/^f0103903:	55                   	push   %ebp$/;"	l
f0103904	obj/kern/kernel.asm	/^f0103904:	89 e5                	mov    %esp,%ebp$/;"	l
f0103906	obj/kern/kernel.asm	/^f0103906:	57                   	push   %edi$/;"	l
f0103907	obj/kern/kernel.asm	/^f0103907:	56                   	push   %esi$/;"	l
f0103908	obj/kern/kernel.asm	/^f0103908:	53                   	push   %ebx$/;"	l
f0103909	obj/kern/kernel.asm	/^f0103909:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f010390c	obj/kern/kernel.asm	/^f010390c:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f010390f	obj/kern/kernel.asm	/^f010390f:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0103912	obj/kern/kernel.asm	/^f0103912:	03 45 10             	add    0x10(%ebp),%eax$/;"	l
f0103915	obj/kern/kernel.asm	/^f0103915:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0103918	obj/kern/kernel.asm	/^f0103918:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f010391f	obj/kern/kernel.asm	/^f010391f:	00 $/;"	l
f0103920	obj/kern/kernel.asm	/^f0103920:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0103923	obj/kern/kernel.asm	/^f0103923:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0103927	obj/kern/kernel.asm	/^f0103927:	8b 47 60             	mov    0x60(%edi),%eax$/;"	l
f010392a	obj/kern/kernel.asm	/^f010392a:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010392d	obj/kern/kernel.asm	/^f010392d:	e8 e6 dc ff ff       	call   f0101618 <pgdir_walk>$/;"	l
f0103932	obj/kern/kernel.asm	/^f0103932:	85 c0                	test   %eax,%eax$/;"	l
f0103934	obj/kern/kernel.asm	/^f0103934:	74 1f                	je     f0103955 <user_mem_check+0x52>$/;"	l
f0103936	obj/kern/kernel.asm	/^f0103936:	8b 75 14             	mov    0x14(%ebp),%esi$/;"	l
f0103939	obj/kern/kernel.asm	/^f0103939:	83 ce 01             	or     $0x1,%esi$/;"	l
f010393c	obj/kern/kernel.asm	/^f010393c:	89 f1                	mov    %esi,%ecx$/;"	l
f010393e	obj/kern/kernel.asm	/^f010393e:	23 08                	and    (%eax),%ecx$/;"	l
f0103940	obj/kern/kernel.asm	/^f0103940:	89 c8                	mov    %ecx,%eax$/;"	l
f0103942	obj/kern/kernel.asm	/^f0103942:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f0103945	obj/kern/kernel.asm	/^f0103945:	8d 99 ff 0f 00 00    	lea    0xfff(%ecx),%ebx$/;"	l
f010394b	obj/kern/kernel.asm	/^f010394b:	81 e3 00 f0 ff ff    	and    $0xfffff000,%ebx$/;"	l
f0103951	obj/kern/kernel.asm	/^f0103951:	39 c6                	cmp    %eax,%esi$/;"	l
f0103953	obj/kern/kernel.asm	/^f0103953:	74 3f                	je     f0103994 <user_mem_check+0x91>$/;"	l
f0103955	obj/kern/kernel.asm	/^f0103955:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0103958	obj/kern/kernel.asm	/^f0103958:	a3 3c d2 20 f0       	mov    %eax,0xf020d23c$/;"	l
f010395d	obj/kern/kernel.asm	/^f010395d:	b8 fa ff ff ff       	mov    $0xfffffffa,%eax$/;"	l
f0103962	obj/kern/kernel.asm	/^f0103962:	eb 44                	jmp    f01039a8 <user_mem_check+0xa5>$/;"	l
f0103964	obj/kern/kernel.asm	/^f0103964:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f010396b	obj/kern/kernel.asm	/^f010396b:	00 $/;"	l
f010396c	obj/kern/kernel.asm	/^f010396c:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0103970	obj/kern/kernel.asm	/^f0103970:	8b 47 60             	mov    0x60(%edi),%eax$/;"	l
f0103973	obj/kern/kernel.asm	/^f0103973:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103976	obj/kern/kernel.asm	/^f0103976:	e8 9d dc ff ff       	call   f0101618 <pgdir_walk>$/;"	l
f010397b	obj/kern/kernel.asm	/^f010397b:	85 c0                	test   %eax,%eax$/;"	l
f010397d	obj/kern/kernel.asm	/^f010397d:	74 08                	je     f0103987 <user_mem_check+0x84>$/;"	l
f010397f	obj/kern/kernel.asm	/^f010397f:	89 f2                	mov    %esi,%edx$/;"	l
f0103981	obj/kern/kernel.asm	/^f0103981:	23 10                	and    (%eax),%edx$/;"	l
f0103983	obj/kern/kernel.asm	/^f0103983:	39 d6                	cmp    %edx,%esi$/;"	l
f0103985	obj/kern/kernel.asm	/^f0103985:	74 19                	je     f01039a0 <user_mem_check+0x9d>$/;"	l
f0103987	obj/kern/kernel.asm	/^f0103987:	89 1d 3c d2 20 f0    	mov    %ebx,0xf020d23c$/;"	l
f010398d	obj/kern/kernel.asm	/^f010398d:	b8 fa ff ff ff       	mov    $0xfffffffa,%eax$/;"	l
f0103992	obj/kern/kernel.asm	/^f0103992:	eb 14                	jmp    f01039a8 <user_mem_check+0xa5>$/;"	l
f0103994	obj/kern/kernel.asm	/^f0103994:	3b 5d e4             	cmp    -0x1c(%ebp),%ebx$/;"	l
f0103997	obj/kern/kernel.asm	/^f0103997:	72 cb                	jb     f0103964 <user_mem_check+0x61>$/;"	l
f0103999	obj/kern/kernel.asm	/^f0103999:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010399e	obj/kern/kernel.asm	/^f010399e:	eb 08                	jmp    f01039a8 <user_mem_check+0xa5>$/;"	l
f01039a0	obj/kern/kernel.asm	/^f01039a0:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f01039a6	obj/kern/kernel.asm	/^f01039a6:	eb ec                	jmp    f0103994 <user_mem_check+0x91>$/;"	l
f01039a8	obj/kern/kernel.asm	/^f01039a8:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f01039ab	obj/kern/kernel.asm	/^f01039ab:	5b                   	pop    %ebx$/;"	l
f01039ac	obj/kern/kernel.asm	/^f01039ac:	5e                   	pop    %esi$/;"	l
f01039ad	obj/kern/kernel.asm	/^f01039ad:	5f                   	pop    %edi$/;"	l
f01039ae	obj/kern/kernel.asm	/^f01039ae:	5d                   	pop    %ebp$/;"	l
f01039af	obj/kern/kernel.asm	/^f01039af:	c3                   	ret    $/;"	l
f01039b0	obj/kern/kernel.asm	/^f01039b0 <user_mem_assert>:$/;"	l
f01039b0	obj/kern/kernel.asm	/^f01039b0:	55                   	push   %ebp$/;"	l
f01039b1	obj/kern/kernel.asm	/^f01039b1:	89 e5                	mov    %esp,%ebp$/;"	l
f01039b3	obj/kern/kernel.asm	/^f01039b3:	53                   	push   %ebx$/;"	l
f01039b4	obj/kern/kernel.asm	/^f01039b4:	83 ec 14             	sub    $0x14,%esp$/;"	l
f01039b7	obj/kern/kernel.asm	/^f01039b7:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f01039ba	obj/kern/kernel.asm	/^f01039ba:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f01039bd	obj/kern/kernel.asm	/^f01039bd:	83 c8 04             	or     $0x4,%eax$/;"	l
f01039c0	obj/kern/kernel.asm	/^f01039c0:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01039c4	obj/kern/kernel.asm	/^f01039c4:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f01039c7	obj/kern/kernel.asm	/^f01039c7:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f01039cb	obj/kern/kernel.asm	/^f01039cb:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01039ce	obj/kern/kernel.asm	/^f01039ce:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01039d2	obj/kern/kernel.asm	/^f01039d2:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f01039d5	obj/kern/kernel.asm	/^f01039d5:	e8 29 ff ff ff       	call   f0103903 <user_mem_check>$/;"	l
f01039da	obj/kern/kernel.asm	/^f01039da:	85 c0                	test   %eax,%eax$/;"	l
f01039dc	obj/kern/kernel.asm	/^f01039dc:	79 24                	jns    f0103a02 <user_mem_assert+0x52>$/;"	l
f01039de	obj/kern/kernel.asm	/^f01039de:	a1 3c d2 20 f0       	mov    0xf020d23c,%eax$/;"	l
f01039e3	obj/kern/kernel.asm	/^f01039e3:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f01039e7	obj/kern/kernel.asm	/^f01039e7:	8b 43 48             	mov    0x48(%ebx),%eax$/;"	l
f01039ea	obj/kern/kernel.asm	/^f01039ea:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01039ee	obj/kern/kernel.asm	/^f01039ee:	c7 04 24 44 87 10 f0 	movl   $0xf0108744,(%esp)$/;"	l
f01039f5	obj/kern/kernel.asm	/^f01039f5:	e8 a4 09 00 00       	call   f010439e <cprintf>$/;"	l
f01039fa	obj/kern/kernel.asm	/^f01039fa:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f01039fd	obj/kern/kernel.asm	/^f01039fd:	e8 b1 06 00 00       	call   f01040b3 <env_destroy>$/;"	l
f0103a02	obj/kern/kernel.asm	/^f0103a02:	83 c4 14             	add    $0x14,%esp$/;"	l
f0103a05	obj/kern/kernel.asm	/^f0103a05:	5b                   	pop    %ebx$/;"	l
f0103a06	obj/kern/kernel.asm	/^f0103a06:	5d                   	pop    %ebp$/;"	l
f0103a07	obj/kern/kernel.asm	/^f0103a07:	c3                   	ret    $/;"	l
f0103a08	obj/kern/kernel.asm	/^f0103a08 <region_alloc>:$/;"	l
f0103a08	obj/kern/kernel.asm	/^f0103a08:	55                   	push   %ebp$/;"	l
f0103a09	obj/kern/kernel.asm	/^f0103a09:	89 e5                	mov    %esp,%ebp$/;"	l
f0103a0b	obj/kern/kernel.asm	/^f0103a0b:	57                   	push   %edi$/;"	l
f0103a0c	obj/kern/kernel.asm	/^f0103a0c:	56                   	push   %esi$/;"	l
f0103a0d	obj/kern/kernel.asm	/^f0103a0d:	53                   	push   %ebx$/;"	l
f0103a0e	obj/kern/kernel.asm	/^f0103a0e:	83 ec 3c             	sub    $0x3c,%esp$/;"	l
f0103a11	obj/kern/kernel.asm	/^f0103a11:	89 c6                	mov    %eax,%esi$/;"	l
f0103a13	obj/kern/kernel.asm	/^f0103a13:	89 d3                	mov    %edx,%ebx$/;"	l
f0103a15	obj/kern/kernel.asm	/^f0103a15:	81 e3 00 f0 ff ff    	and    $0xfffff000,%ebx$/;"	l
f0103a1b	obj/kern/kernel.asm	/^f0103a1b:	8d 84 0a ff 0f 00 00 	lea    0xfff(%edx,%ecx,1),%eax$/;"	l
f0103a22	obj/kern/kernel.asm	/^f0103a22:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0103a27	obj/kern/kernel.asm	/^f0103a27:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0103a2a	obj/kern/kernel.asm	/^f0103a2a:	3d 00 00 c0 ee       	cmp    $0xeec00000,%eax$/;"	l
f0103a2f	obj/kern/kernel.asm	/^f0103a2f:	77 08                	ja     f0103a39 <region_alloc+0x31>$/;"	l
f0103a31	obj/kern/kernel.asm	/^f0103a31:	8d 7d e4             	lea    -0x1c(%ebp),%edi$/;"	l
f0103a34	obj/kern/kernel.asm	/^f0103a34:	e9 a0 00 00 00       	jmp    f0103ad9 <region_alloc+0xd1>$/;"	l
f0103a39	obj/kern/kernel.asm	/^f0103a39:	c7 44 24 08 bc 8a 10 	movl   $0xf0108abc,0x8(%esp)$/;"	l
f0103a40	obj/kern/kernel.asm	/^f0103a40:	f0 $/;"	l
f0103a41	obj/kern/kernel.asm	/^f0103a41:	c7 44 24 04 26 01 00 	movl   $0x126,0x4(%esp)$/;"	l
f0103a48	obj/kern/kernel.asm	/^f0103a48:	00 $/;"	l
f0103a49	obj/kern/kernel.asm	/^f0103a49:	c7 04 24 76 8b 10 f0 	movl   $0xf0108b76,(%esp)$/;"	l
f0103a50	obj/kern/kernel.asm	/^f0103a50:	e8 eb c5 ff ff       	call   f0100040 <_panic>$/;"	l
f0103a55	obj/kern/kernel.asm	/^f0103a55:	89 7c 24 08          	mov    %edi,0x8(%esp)$/;"	l
f0103a59	obj/kern/kernel.asm	/^f0103a59:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0103a5d	obj/kern/kernel.asm	/^f0103a5d:	8b 46 60             	mov    0x60(%esi),%eax$/;"	l
f0103a60	obj/kern/kernel.asm	/^f0103a60:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103a63	obj/kern/kernel.asm	/^f0103a63:	e8 a4 dc ff ff       	call   f010170c <page_lookup>$/;"	l
f0103a68	obj/kern/kernel.asm	/^f0103a68:	85 c0                	test   %eax,%eax$/;"	l
f0103a6a	obj/kern/kernel.asm	/^f0103a6a:	75 67                	jne    f0103ad3 <region_alloc+0xcb>$/;"	l
f0103a6c	obj/kern/kernel.asm	/^f0103a6c:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0103a73	obj/kern/kernel.asm	/^f0103a73:	e8 65 da ff ff       	call   f01014dd <page_alloc>$/;"	l
f0103a78	obj/kern/kernel.asm	/^f0103a78:	85 c0                	test   %eax,%eax$/;"	l
f0103a7a	obj/kern/kernel.asm	/^f0103a7a:	75 1c                	jne    f0103a98 <region_alloc+0x90>$/;"	l
f0103a7c	obj/kern/kernel.asm	/^f0103a7c:	c7 44 24 08 fc 8a 10 	movl   $0xf0108afc,0x8(%esp)$/;"	l
f0103a83	obj/kern/kernel.asm	/^f0103a83:	f0 $/;"	l
f0103a84	obj/kern/kernel.asm	/^f0103a84:	c7 44 24 04 30 01 00 	movl   $0x130,0x4(%esp)$/;"	l
f0103a8b	obj/kern/kernel.asm	/^f0103a8b:	00 $/;"	l
f0103a8c	obj/kern/kernel.asm	/^f0103a8c:	c7 04 24 76 8b 10 f0 	movl   $0xf0108b76,(%esp)$/;"	l
f0103a93	obj/kern/kernel.asm	/^f0103a93:	e8 a8 c5 ff ff       	call   f0100040 <_panic>$/;"	l
f0103a98	obj/kern/kernel.asm	/^f0103a98:	c7 44 24 0c 07 00 00 	movl   $0x7,0xc(%esp)$/;"	l
f0103a9f	obj/kern/kernel.asm	/^f0103a9f:	00 $/;"	l
f0103aa0	obj/kern/kernel.asm	/^f0103aa0:	89 5c 24 08          	mov    %ebx,0x8(%esp)$/;"	l
f0103aa4	obj/kern/kernel.asm	/^f0103aa4:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0103aa8	obj/kern/kernel.asm	/^f0103aa8:	8b 46 60             	mov    0x60(%esi),%eax$/;"	l
f0103aab	obj/kern/kernel.asm	/^f0103aab:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103aae	obj/kern/kernel.asm	/^f0103aae:	e8 5a dd ff ff       	call   f010180d <page_insert>$/;"	l
f0103ab3	obj/kern/kernel.asm	/^f0103ab3:	85 c0                	test   %eax,%eax$/;"	l
f0103ab5	obj/kern/kernel.asm	/^f0103ab5:	79 1c                	jns    f0103ad3 <region_alloc+0xcb>$/;"	l
f0103ab7	obj/kern/kernel.asm	/^f0103ab7:	c7 44 24 08 20 8b 10 	movl   $0xf0108b20,0x8(%esp)$/;"	l
f0103abe	obj/kern/kernel.asm	/^f0103abe:	f0 $/;"	l
f0103abf	obj/kern/kernel.asm	/^f0103abf:	c7 44 24 04 33 01 00 	movl   $0x133,0x4(%esp)$/;"	l
f0103ac6	obj/kern/kernel.asm	/^f0103ac6:	00 $/;"	l
f0103ac7	obj/kern/kernel.asm	/^f0103ac7:	c7 04 24 76 8b 10 f0 	movl   $0xf0108b76,(%esp)$/;"	l
f0103ace	obj/kern/kernel.asm	/^f0103ace:	e8 6d c5 ff ff       	call   f0100040 <_panic>$/;"	l
f0103ad3	obj/kern/kernel.asm	/^f0103ad3:	81 c3 00 10 00 00    	add    $0x1000,%ebx$/;"	l
f0103ad9	obj/kern/kernel.asm	/^f0103ad9:	3b 5d d4             	cmp    -0x2c(%ebp),%ebx$/;"	l
f0103adc	obj/kern/kernel.asm	/^f0103adc:	0f 82 73 ff ff ff    	jb     f0103a55 <region_alloc+0x4d>$/;"	l
f0103ae2	obj/kern/kernel.asm	/^f0103ae2:	83 c4 3c             	add    $0x3c,%esp$/;"	l
f0103ae5	obj/kern/kernel.asm	/^f0103ae5:	5b                   	pop    %ebx$/;"	l
f0103ae6	obj/kern/kernel.asm	/^f0103ae6:	5e                   	pop    %esi$/;"	l
f0103ae7	obj/kern/kernel.asm	/^f0103ae7:	5f                   	pop    %edi$/;"	l
f0103ae8	obj/kern/kernel.asm	/^f0103ae8:	5d                   	pop    %ebp$/;"	l
f0103ae9	obj/kern/kernel.asm	/^f0103ae9:	c3                   	ret    $/;"	l
f0103aea	obj/kern/kernel.asm	/^f0103aea <envid2env>:$/;"	l
f0103aea	obj/kern/kernel.asm	/^f0103aea:	55                   	push   %ebp$/;"	l
f0103aeb	obj/kern/kernel.asm	/^f0103aeb:	89 e5                	mov    %esp,%ebp$/;"	l
f0103aed	obj/kern/kernel.asm	/^f0103aed:	56                   	push   %esi$/;"	l
f0103aee	obj/kern/kernel.asm	/^f0103aee:	53                   	push   %ebx$/;"	l
f0103aef	obj/kern/kernel.asm	/^f0103aef:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0103af2	obj/kern/kernel.asm	/^f0103af2:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
f0103af5	obj/kern/kernel.asm	/^f0103af5:	85 c0                	test   %eax,%eax$/;"	l
f0103af7	obj/kern/kernel.asm	/^f0103af7:	75 1a                	jne    f0103b13 <envid2env+0x29>$/;"	l
f0103af9	obj/kern/kernel.asm	/^f0103af9:	e8 ee 34 00 00       	call   f0106fec <cpunum>$/;"	l
f0103afe	obj/kern/kernel.asm	/^f0103afe:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103b01	obj/kern/kernel.asm	/^f0103b01:	8b 80 28 e0 20 f0    	mov    -0xfdf1fd8(%eax),%eax$/;"	l
f0103b07	obj/kern/kernel.asm	/^f0103b07:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f0103b0a	obj/kern/kernel.asm	/^f0103b0a:	89 01                	mov    %eax,(%ecx)$/;"	l
f0103b0c	obj/kern/kernel.asm	/^f0103b0c:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0103b11	obj/kern/kernel.asm	/^f0103b11:	eb 70                	jmp    f0103b83 <envid2env+0x99>$/;"	l
f0103b13	obj/kern/kernel.asm	/^f0103b13:	89 c3                	mov    %eax,%ebx$/;"	l
f0103b15	obj/kern/kernel.asm	/^f0103b15:	81 e3 ff 03 00 00    	and    $0x3ff,%ebx$/;"	l
f0103b1b	obj/kern/kernel.asm	/^f0103b1b:	6b db 7c             	imul   $0x7c,%ebx,%ebx$/;"	l
f0103b1e	obj/kern/kernel.asm	/^f0103b1e:	03 1d 48 d2 20 f0    	add    0xf020d248,%ebx$/;"	l
f0103b24	obj/kern/kernel.asm	/^f0103b24:	83 7b 54 00          	cmpl   $0x0,0x54(%ebx)$/;"	l
f0103b28	obj/kern/kernel.asm	/^f0103b28:	74 05                	je     f0103b2f <envid2env+0x45>$/;"	l
f0103b2a	obj/kern/kernel.asm	/^f0103b2a:	39 43 48             	cmp    %eax,0x48(%ebx)$/;"	l
f0103b2d	obj/kern/kernel.asm	/^f0103b2d:	74 10                	je     f0103b3f <envid2env+0x55>$/;"	l
f0103b2f	obj/kern/kernel.asm	/^f0103b2f:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0103b32	obj/kern/kernel.asm	/^f0103b32:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0103b38	obj/kern/kernel.asm	/^f0103b38:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax$/;"	l
f0103b3d	obj/kern/kernel.asm	/^f0103b3d:	eb 44                	jmp    f0103b83 <envid2env+0x99>$/;"	l
f0103b3f	obj/kern/kernel.asm	/^f0103b3f:	84 d2                	test   %dl,%dl$/;"	l
f0103b41	obj/kern/kernel.asm	/^f0103b41:	74 36                	je     f0103b79 <envid2env+0x8f>$/;"	l
f0103b43	obj/kern/kernel.asm	/^f0103b43:	e8 a4 34 00 00       	call   f0106fec <cpunum>$/;"	l
f0103b48	obj/kern/kernel.asm	/^f0103b48:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103b4b	obj/kern/kernel.asm	/^f0103b4b:	39 98 28 e0 20 f0    	cmp    %ebx,-0xfdf1fd8(%eax)$/;"	l
f0103b51	obj/kern/kernel.asm	/^f0103b51:	74 26                	je     f0103b79 <envid2env+0x8f>$/;"	l
f0103b53	obj/kern/kernel.asm	/^f0103b53:	8b 73 4c             	mov    0x4c(%ebx),%esi$/;"	l
f0103b56	obj/kern/kernel.asm	/^f0103b56:	e8 91 34 00 00       	call   f0106fec <cpunum>$/;"	l
f0103b5b	obj/kern/kernel.asm	/^f0103b5b:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103b5e	obj/kern/kernel.asm	/^f0103b5e:	8b 80 28 e0 20 f0    	mov    -0xfdf1fd8(%eax),%eax$/;"	l
f0103b64	obj/kern/kernel.asm	/^f0103b64:	3b 70 48             	cmp    0x48(%eax),%esi$/;"	l
f0103b67	obj/kern/kernel.asm	/^f0103b67:	74 10                	je     f0103b79 <envid2env+0x8f>$/;"	l
f0103b69	obj/kern/kernel.asm	/^f0103b69:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0103b6c	obj/kern/kernel.asm	/^f0103b6c:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0103b72	obj/kern/kernel.asm	/^f0103b72:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax$/;"	l
f0103b77	obj/kern/kernel.asm	/^f0103b77:	eb 0a                	jmp    f0103b83 <envid2env+0x99>$/;"	l
f0103b79	obj/kern/kernel.asm	/^f0103b79:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0103b7c	obj/kern/kernel.asm	/^f0103b7c:	89 18                	mov    %ebx,(%eax)$/;"	l
f0103b7e	obj/kern/kernel.asm	/^f0103b7e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0103b83	obj/kern/kernel.asm	/^f0103b83:	5b                   	pop    %ebx$/;"	l
f0103b84	obj/kern/kernel.asm	/^f0103b84:	5e                   	pop    %esi$/;"	l
f0103b85	obj/kern/kernel.asm	/^f0103b85:	5d                   	pop    %ebp$/;"	l
f0103b86	obj/kern/kernel.asm	/^f0103b86:	c3                   	ret    $/;"	l
f0103b87	obj/kern/kernel.asm	/^f0103b87 <env_init_percpu>:$/;"	l
f0103b87	obj/kern/kernel.asm	/^f0103b87:	55                   	push   %ebp$/;"	l
f0103b88	obj/kern/kernel.asm	/^f0103b88:	89 e5                	mov    %esp,%ebp$/;"	l
f0103b8a	obj/kern/kernel.asm	/^f0103b8a:	b8 20 33 12 f0       	mov    $0xf0123320,%eax$/;"	l
f0103b8f	obj/kern/kernel.asm	/^f0103b8f:	0f 01 10             	lgdtl  (%eax)$/;"	l
f0103b92	obj/kern/kernel.asm	/^f0103b92:	b8 23 00 00 00       	mov    $0x23,%eax$/;"	l
f0103b97	obj/kern/kernel.asm	/^f0103b97:	8e e8                	mov    %eax,%gs$/;"	l
f0103b99	obj/kern/kernel.asm	/^f0103b99:	8e e0                	mov    %eax,%fs$/;"	l
f0103b9b	obj/kern/kernel.asm	/^f0103b9b:	b0 10                	mov    $0x10,%al$/;"	l
f0103b9d	obj/kern/kernel.asm	/^f0103b9d:	8e c0                	mov    %eax,%es$/;"	l
f0103b9f	obj/kern/kernel.asm	/^f0103b9f:	8e d8                	mov    %eax,%ds$/;"	l
f0103ba1	obj/kern/kernel.asm	/^f0103ba1:	8e d0                	mov    %eax,%ss$/;"	l
f0103ba3	obj/kern/kernel.asm	/^f0103ba3:	ea aa 3b 10 f0 08 00 	ljmp   $0x8,$0xf0103baa$/;"	l
f0103baa	obj/kern/kernel.asm	/^f0103baa:	b0 00                	mov    $0x0,%al$/;"	l
f0103bac	obj/kern/kernel.asm	/^f0103bac:	0f 00 d0             	lldt   %ax$/;"	l
f0103baf	obj/kern/kernel.asm	/^f0103baf:	5d                   	pop    %ebp$/;"	l
f0103bb0	obj/kern/kernel.asm	/^f0103bb0:	c3                   	ret    $/;"	l
f0103bb1	obj/kern/kernel.asm	/^f0103bb1 <env_init>:$/;"	l
f0103bb1	obj/kern/kernel.asm	/^f0103bb1:	55                   	push   %ebp$/;"	l
f0103bb2	obj/kern/kernel.asm	/^f0103bb2:	89 e5                	mov    %esp,%ebp$/;"	l
f0103bb4	obj/kern/kernel.asm	/^f0103bb4:	56                   	push   %esi$/;"	l
f0103bb5	obj/kern/kernel.asm	/^f0103bb5:	53                   	push   %ebx$/;"	l
f0103bb6	obj/kern/kernel.asm	/^f0103bb6:	8b 35 48 d2 20 f0    	mov    0xf020d248,%esi$/;"	l
f0103bbc	obj/kern/kernel.asm	/^f0103bbc:	8b 0d 4c d2 20 f0    	mov    0xf020d24c,%ecx$/;"	l
f0103bc2	obj/kern/kernel.asm	/^f0103bc2:	8d 86 00 f0 01 00    	lea    0x1f000(%esi),%eax$/;"	l
f0103bc8	obj/kern/kernel.asm	/^f0103bc8:	ba 01 04 00 00       	mov    $0x401,%edx$/;"	l
f0103bcd	obj/kern/kernel.asm	/^f0103bcd:	89 c3                	mov    %eax,%ebx$/;"	l
f0103bcf	obj/kern/kernel.asm	/^f0103bcf:	c7 40 48 00 00 00 00 	movl   $0x0,0x48(%eax)$/;"	l
f0103bd6	obj/kern/kernel.asm	/^f0103bd6:	c7 40 54 00 00 00 00 	movl   $0x0,0x54(%eax)$/;"	l
f0103bdd	obj/kern/kernel.asm	/^f0103bdd:	89 48 44             	mov    %ecx,0x44(%eax)$/;"	l
f0103be0	obj/kern/kernel.asm	/^f0103be0:	83 e8 7c             	sub    $0x7c,%eax$/;"	l
f0103be3	obj/kern/kernel.asm	/^f0103be3:	83 ea 01             	sub    $0x1,%edx$/;"	l
f0103be6	obj/kern/kernel.asm	/^f0103be6:	74 04                	je     f0103bec <env_init+0x3b>$/;"	l
f0103be8	obj/kern/kernel.asm	/^f0103be8:	89 d9                	mov    %ebx,%ecx$/;"	l
f0103bea	obj/kern/kernel.asm	/^f0103bea:	eb e1                	jmp    f0103bcd <env_init+0x1c>$/;"	l
f0103bec	obj/kern/kernel.asm	/^f0103bec:	89 35 4c d2 20 f0    	mov    %esi,0xf020d24c$/;"	l
f0103bf2	obj/kern/kernel.asm	/^f0103bf2:	e8 90 ff ff ff       	call   f0103b87 <env_init_percpu>$/;"	l
f0103bf7	obj/kern/kernel.asm	/^f0103bf7:	5b                   	pop    %ebx$/;"	l
f0103bf8	obj/kern/kernel.asm	/^f0103bf8:	5e                   	pop    %esi$/;"	l
f0103bf9	obj/kern/kernel.asm	/^f0103bf9:	5d                   	pop    %ebp$/;"	l
f0103bfa	obj/kern/kernel.asm	/^f0103bfa:	c3                   	ret    $/;"	l
f0103bfb	obj/kern/kernel.asm	/^f0103bfb <env_alloc>:$/;"	l
f0103bfb	obj/kern/kernel.asm	/^f0103bfb:	55                   	push   %ebp$/;"	l
f0103bfc	obj/kern/kernel.asm	/^f0103bfc:	89 e5                	mov    %esp,%ebp$/;"	l
f0103bfe	obj/kern/kernel.asm	/^f0103bfe:	53                   	push   %ebx$/;"	l
f0103bff	obj/kern/kernel.asm	/^f0103bff:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0103c02	obj/kern/kernel.asm	/^f0103c02:	8b 1d 4c d2 20 f0    	mov    0xf020d24c,%ebx$/;"	l
f0103c08	obj/kern/kernel.asm	/^f0103c08:	85 db                	test   %ebx,%ebx$/;"	l
f0103c0a	obj/kern/kernel.asm	/^f0103c0a:	0f 84 57 01 00 00    	je     f0103d67 <env_alloc+0x16c>$/;"	l
f0103c10	obj/kern/kernel.asm	/^f0103c10:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
f0103c17	obj/kern/kernel.asm	/^f0103c17:	e8 c1 d8 ff ff       	call   f01014dd <page_alloc>$/;"	l
f0103c1c	obj/kern/kernel.asm	/^f0103c1c:	85 c0                	test   %eax,%eax$/;"	l
f0103c1e	obj/kern/kernel.asm	/^f0103c1e:	0f 84 4a 01 00 00    	je     f0103d6e <env_alloc+0x173>$/;"	l
f0103c24	obj/kern/kernel.asm	/^f0103c24:	89 c2                	mov    %eax,%edx$/;"	l
f0103c26	obj/kern/kernel.asm	/^f0103c26:	2b 15 90 de 20 f0    	sub    0xf020de90,%edx$/;"	l
f0103c2c	obj/kern/kernel.asm	/^f0103c2c:	c1 fa 03             	sar    $0x3,%edx$/;"	l
f0103c2f	obj/kern/kernel.asm	/^f0103c2f:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
f0103c32	obj/kern/kernel.asm	/^f0103c32:	89 d1                	mov    %edx,%ecx$/;"	l
f0103c34	obj/kern/kernel.asm	/^f0103c34:	c1 e9 0c             	shr    $0xc,%ecx$/;"	l
f0103c37	obj/kern/kernel.asm	/^f0103c37:	3b 0d 88 de 20 f0    	cmp    0xf020de88,%ecx$/;"	l
f0103c3d	obj/kern/kernel.asm	/^f0103c3d:	72 20                	jb     f0103c5f <env_alloc+0x64>$/;"	l
f0103c3f	obj/kern/kernel.asm	/^f0103c3f:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f0103c43	obj/kern/kernel.asm	/^f0103c43:	c7 44 24 08 e4 76 10 	movl   $0xf01076e4,0x8(%esp)$/;"	l
f0103c4a	obj/kern/kernel.asm	/^f0103c4a:	f0 $/;"	l
f0103c4b	obj/kern/kernel.asm	/^f0103c4b:	c7 44 24 04 58 00 00 	movl   $0x58,0x4(%esp)$/;"	l
f0103c52	obj/kern/kernel.asm	/^f0103c52:	00 $/;"	l
f0103c53	obj/kern/kernel.asm	/^f0103c53:	c7 04 24 79 87 10 f0 	movl   $0xf0108779,(%esp)$/;"	l
f0103c5a	obj/kern/kernel.asm	/^f0103c5a:	e8 e1 c3 ff ff       	call   f0100040 <_panic>$/;"	l
f0103c5f	obj/kern/kernel.asm	/^f0103c5f:	81 ea 00 00 00 10    	sub    $0x10000000,%edx$/;"	l
f0103c65	obj/kern/kernel.asm	/^f0103c65:	89 53 60             	mov    %edx,0x60(%ebx)$/;"	l
f0103c68	obj/kern/kernel.asm	/^f0103c68:	66 83 40 04 01       	addw   $0x1,0x4(%eax)$/;"	l
f0103c6d	obj/kern/kernel.asm	/^f0103c6d:	b8 ec 0e 00 00       	mov    $0xeec,%eax$/;"	l
f0103c72	obj/kern/kernel.asm	/^f0103c72:	8b 15 8c de 20 f0    	mov    0xf020de8c,%edx$/;"	l
f0103c78	obj/kern/kernel.asm	/^f0103c78:	8b 0c 02             	mov    (%edx,%eax,1),%ecx$/;"	l
f0103c7b	obj/kern/kernel.asm	/^f0103c7b:	8b 53 60             	mov    0x60(%ebx),%edx$/;"	l
f0103c7e	obj/kern/kernel.asm	/^f0103c7e:	89 0c 02             	mov    %ecx,(%edx,%eax,1)$/;"	l
f0103c81	obj/kern/kernel.asm	/^f0103c81:	83 c0 04             	add    $0x4,%eax$/;"	l
f0103c84	obj/kern/kernel.asm	/^f0103c84:	3d 00 10 00 00       	cmp    $0x1000,%eax$/;"	l
f0103c89	obj/kern/kernel.asm	/^f0103c89:	75 e7                	jne    f0103c72 <env_alloc+0x77>$/;"	l
f0103c8b	obj/kern/kernel.asm	/^f0103c8b:	8b 43 60             	mov    0x60(%ebx),%eax$/;"	l
f0103c8e	obj/kern/kernel.asm	/^f0103c8e:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0103c93	obj/kern/kernel.asm	/^f0103c93:	77 20                	ja     f0103cb5 <env_alloc+0xba>$/;"	l
f0103c95	obj/kern/kernel.asm	/^f0103c95:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0103c99	obj/kern/kernel.asm	/^f0103c99:	c7 44 24 08 08 77 10 	movl   $0xf0107708,0x8(%esp)$/;"	l
f0103ca0	obj/kern/kernel.asm	/^f0103ca0:	f0 $/;"	l
f0103ca1	obj/kern/kernel.asm	/^f0103ca1:	c7 44 24 04 c5 00 00 	movl   $0xc5,0x4(%esp)$/;"	l
f0103ca8	obj/kern/kernel.asm	/^f0103ca8:	00 $/;"	l
f0103ca9	obj/kern/kernel.asm	/^f0103ca9:	c7 04 24 76 8b 10 f0 	movl   $0xf0108b76,(%esp)$/;"	l
f0103cb0	obj/kern/kernel.asm	/^f0103cb0:	e8 8b c3 ff ff       	call   f0100040 <_panic>$/;"	l
f0103cb5	obj/kern/kernel.asm	/^f0103cb5:	8d 90 00 00 00 10    	lea    0x10000000(%eax),%edx$/;"	l
f0103cbb	obj/kern/kernel.asm	/^f0103cbb:	83 ca 05             	or     $0x5,%edx$/;"	l
f0103cbe	obj/kern/kernel.asm	/^f0103cbe:	89 90 f4 0e 00 00    	mov    %edx,0xef4(%eax)$/;"	l
f0103cc4	obj/kern/kernel.asm	/^f0103cc4:	8b 43 48             	mov    0x48(%ebx),%eax$/;"	l
f0103cc7	obj/kern/kernel.asm	/^f0103cc7:	05 00 10 00 00       	add    $0x1000,%eax$/;"	l
f0103ccc	obj/kern/kernel.asm	/^f0103ccc:	25 00 fc ff ff       	and    $0xfffffc00,%eax$/;"	l
f0103cd1	obj/kern/kernel.asm	/^f0103cd1:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f0103cd6	obj/kern/kernel.asm	/^f0103cd6:	0f 4e c2             	cmovle %edx,%eax$/;"	l
f0103cd9	obj/kern/kernel.asm	/^f0103cd9:	89 da                	mov    %ebx,%edx$/;"	l
f0103cdb	obj/kern/kernel.asm	/^f0103cdb:	2b 15 48 d2 20 f0    	sub    0xf020d248,%edx$/;"	l
f0103ce1	obj/kern/kernel.asm	/^f0103ce1:	c1 fa 02             	sar    $0x2,%edx$/;"	l
f0103ce4	obj/kern/kernel.asm	/^f0103ce4:	69 d2 df 7b ef bd    	imul   $0xbdef7bdf,%edx,%edx$/;"	l
f0103cea	obj/kern/kernel.asm	/^f0103cea:	09 d0                	or     %edx,%eax$/;"	l
f0103cec	obj/kern/kernel.asm	/^f0103cec:	89 43 48             	mov    %eax,0x48(%ebx)$/;"	l
f0103cef	obj/kern/kernel.asm	/^f0103cef:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0103cf2	obj/kern/kernel.asm	/^f0103cf2:	89 43 4c             	mov    %eax,0x4c(%ebx)$/;"	l
f0103cf5	obj/kern/kernel.asm	/^f0103cf5:	c7 43 50 00 00 00 00 	movl   $0x0,0x50(%ebx)$/;"	l
f0103cfc	obj/kern/kernel.asm	/^f0103cfc:	c7 43 54 02 00 00 00 	movl   $0x2,0x54(%ebx)$/;"	l
f0103d03	obj/kern/kernel.asm	/^f0103d03:	c7 43 58 00 00 00 00 	movl   $0x0,0x58(%ebx)$/;"	l
f0103d0a	obj/kern/kernel.asm	/^f0103d0a:	c7 44 24 08 44 00 00 	movl   $0x44,0x8(%esp)$/;"	l
f0103d11	obj/kern/kernel.asm	/^f0103d11:	00 $/;"	l
f0103d12	obj/kern/kernel.asm	/^f0103d12:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0103d19	obj/kern/kernel.asm	/^f0103d19:	00 $/;"	l
f0103d1a	obj/kern/kernel.asm	/^f0103d1a:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0103d1d	obj/kern/kernel.asm	/^f0103d1d:	e8 75 2c 00 00       	call   f0106997 <memset>$/;"	l
f0103d22	obj/kern/kernel.asm	/^f0103d22:	66 c7 43 24 23 00    	movw   $0x23,0x24(%ebx)$/;"	l
f0103d28	obj/kern/kernel.asm	/^f0103d28:	66 c7 43 20 23 00    	movw   $0x23,0x20(%ebx)$/;"	l
f0103d2e	obj/kern/kernel.asm	/^f0103d2e:	66 c7 43 40 23 00    	movw   $0x23,0x40(%ebx)$/;"	l
f0103d34	obj/kern/kernel.asm	/^f0103d34:	c7 43 3c 00 e0 bf ee 	movl   $0xeebfe000,0x3c(%ebx)$/;"	l
f0103d3b	obj/kern/kernel.asm	/^f0103d3b:	66 c7 43 34 1b 00    	movw   $0x1b,0x34(%ebx)$/;"	l
f0103d41	obj/kern/kernel.asm	/^f0103d41:	c7 43 38 00 02 00 00 	movl   $0x200,0x38(%ebx)$/;"	l
f0103d48	obj/kern/kernel.asm	/^f0103d48:	c7 43 64 00 00 00 00 	movl   $0x0,0x64(%ebx)$/;"	l
f0103d4f	obj/kern/kernel.asm	/^f0103d4f:	c6 43 68 00          	movb   $0x0,0x68(%ebx)$/;"	l
f0103d53	obj/kern/kernel.asm	/^f0103d53:	8b 43 44             	mov    0x44(%ebx),%eax$/;"	l
f0103d56	obj/kern/kernel.asm	/^f0103d56:	a3 4c d2 20 f0       	mov    %eax,0xf020d24c$/;"	l
f0103d5b	obj/kern/kernel.asm	/^f0103d5b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0103d5e	obj/kern/kernel.asm	/^f0103d5e:	89 18                	mov    %ebx,(%eax)$/;"	l
f0103d60	obj/kern/kernel.asm	/^f0103d60:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0103d65	obj/kern/kernel.asm	/^f0103d65:	eb 0c                	jmp    f0103d73 <env_alloc+0x178>$/;"	l
f0103d67	obj/kern/kernel.asm	/^f0103d67:	b8 fb ff ff ff       	mov    $0xfffffffb,%eax$/;"	l
f0103d6c	obj/kern/kernel.asm	/^f0103d6c:	eb 05                	jmp    f0103d73 <env_alloc+0x178>$/;"	l
f0103d6e	obj/kern/kernel.asm	/^f0103d6e:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
f0103d73	obj/kern/kernel.asm	/^f0103d73:	83 c4 14             	add    $0x14,%esp$/;"	l
f0103d76	obj/kern/kernel.asm	/^f0103d76:	5b                   	pop    %ebx$/;"	l
f0103d77	obj/kern/kernel.asm	/^f0103d77:	5d                   	pop    %ebp$/;"	l
f0103d78	obj/kern/kernel.asm	/^f0103d78:	c3                   	ret    $/;"	l
f0103d79	obj/kern/kernel.asm	/^f0103d79 <env_create>:$/;"	l
f0103d79	obj/kern/kernel.asm	/^f0103d79:	55                   	push   %ebp$/;"	l
f0103d7a	obj/kern/kernel.asm	/^f0103d7a:	89 e5                	mov    %esp,%ebp$/;"	l
f0103d7c	obj/kern/kernel.asm	/^f0103d7c:	57                   	push   %edi$/;"	l
f0103d7d	obj/kern/kernel.asm	/^f0103d7d:	56                   	push   %esi$/;"	l
f0103d7e	obj/kern/kernel.asm	/^f0103d7e:	53                   	push   %ebx$/;"	l
f0103d7f	obj/kern/kernel.asm	/^f0103d7f:	83 ec 3c             	sub    $0x3c,%esp$/;"	l
f0103d82	obj/kern/kernel.asm	/^f0103d82:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f0103d85	obj/kern/kernel.asm	/^f0103d85:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0103d8c	obj/kern/kernel.asm	/^f0103d8c:	00 $/;"	l
f0103d8d	obj/kern/kernel.asm	/^f0103d8d:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f0103d90	obj/kern/kernel.asm	/^f0103d90:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103d93	obj/kern/kernel.asm	/^f0103d93:	e8 63 fe ff ff       	call   f0103bfb <env_alloc>$/;"	l
f0103d98	obj/kern/kernel.asm	/^f0103d98:	85 c0                	test   %eax,%eax$/;"	l
f0103d9a	obj/kern/kernel.asm	/^f0103d9a:	78 0a                	js     f0103da6 <env_create+0x2d>$/;"	l
f0103d9c	obj/kern/kernel.asm	/^f0103d9c:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0103d9f	obj/kern/kernel.asm	/^f0103d9f:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0103da2	obj/kern/kernel.asm	/^f0103da2:	85 c0                	test   %eax,%eax$/;"	l
f0103da4	obj/kern/kernel.asm	/^f0103da4:	75 1c                	jne    f0103dc2 <env_create+0x49>$/;"	l
f0103da6	obj/kern/kernel.asm	/^f0103da6:	c7 44 24 08 44 8b 10 	movl   $0xf0108b44,0x8(%esp)$/;"	l
f0103dad	obj/kern/kernel.asm	/^f0103dad:	f0 $/;"	l
f0103dae	obj/kern/kernel.asm	/^f0103dae:	c7 44 24 04 9a 01 00 	movl   $0x19a,0x4(%esp)$/;"	l
f0103db5	obj/kern/kernel.asm	/^f0103db5:	00 $/;"	l
f0103db6	obj/kern/kernel.asm	/^f0103db6:	c7 04 24 76 8b 10 f0 	movl   $0xf0108b76,(%esp)$/;"	l
f0103dbd	obj/kern/kernel.asm	/^f0103dbd:	e8 7e c2 ff ff       	call   f0100040 <_panic>$/;"	l
f0103dc2	obj/kern/kernel.asm	/^f0103dc2:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0103dc5	obj/kern/kernel.asm	/^f0103dc5:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f0103dc8	obj/kern/kernel.asm	/^f0103dc8:	89 48 50             	mov    %ecx,0x50(%eax)$/;"	l
f0103dcb	obj/kern/kernel.asm	/^f0103dcb:	8b 40 60             	mov    0x60(%eax),%eax$/;"	l
f0103dce	obj/kern/kernel.asm	/^f0103dce:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0103dd3	obj/kern/kernel.asm	/^f0103dd3:	77 20                	ja     f0103df5 <env_create+0x7c>$/;"	l
f0103dd5	obj/kern/kernel.asm	/^f0103dd5:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0103dd9	obj/kern/kernel.asm	/^f0103dd9:	c7 44 24 08 08 77 10 	movl   $0xf0107708,0x8(%esp)$/;"	l
f0103de0	obj/kern/kernel.asm	/^f0103de0:	f0 $/;"	l
f0103de1	obj/kern/kernel.asm	/^f0103de1:	c7 44 24 04 70 01 00 	movl   $0x170,0x4(%esp)$/;"	l
f0103de8	obj/kern/kernel.asm	/^f0103de8:	00 $/;"	l
f0103de9	obj/kern/kernel.asm	/^f0103de9:	c7 04 24 76 8b 10 f0 	movl   $0xf0108b76,(%esp)$/;"	l
f0103df0	obj/kern/kernel.asm	/^f0103df0:	e8 4b c2 ff ff       	call   f0100040 <_panic>$/;"	l
f0103df5	obj/kern/kernel.asm	/^f0103df5:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0103dfa	obj/kern/kernel.asm	/^f0103dfa:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f0103dfd	obj/kern/kernel.asm	/^f0103dfd:	81 3f 7f 45 4c 46    	cmpl   $0x464c457f,(%edi)$/;"	l
f0103e03	obj/kern/kernel.asm	/^f0103e03:	74 24                	je     f0103e29 <env_create+0xb0>$/;"	l
f0103e05	obj/kern/kernel.asm	/^f0103e05:	c7 44 24 0c 81 8b 10 	movl   $0xf0108b81,0xc(%esp)$/;"	l
f0103e0c	obj/kern/kernel.asm	/^f0103e0c:	f0 $/;"	l
f0103e0d	obj/kern/kernel.asm	/^f0103e0d:	c7 44 24 08 9f 87 10 	movl   $0xf010879f,0x8(%esp)$/;"	l
f0103e14	obj/kern/kernel.asm	/^f0103e14:	f0 $/;"	l
f0103e15	obj/kern/kernel.asm	/^f0103e15:	c7 44 24 04 74 01 00 	movl   $0x174,0x4(%esp)$/;"	l
f0103e1c	obj/kern/kernel.asm	/^f0103e1c:	00 $/;"	l
f0103e1d	obj/kern/kernel.asm	/^f0103e1d:	c7 04 24 76 8b 10 f0 	movl   $0xf0108b76,(%esp)$/;"	l
f0103e24	obj/kern/kernel.asm	/^f0103e24:	e8 17 c2 ff ff       	call   f0100040 <_panic>$/;"	l
f0103e29	obj/kern/kernel.asm	/^f0103e29:	89 fb                	mov    %edi,%ebx$/;"	l
f0103e2b	obj/kern/kernel.asm	/^f0103e2b:	03 5f 1c             	add    0x1c(%edi),%ebx$/;"	l
f0103e2e	obj/kern/kernel.asm	/^f0103e2e:	0f b7 77 2c          	movzwl 0x2c(%edi),%esi$/;"	l
f0103e32	obj/kern/kernel.asm	/^f0103e32:	c1 e6 05             	shl    $0x5,%esi$/;"	l
f0103e35	obj/kern/kernel.asm	/^f0103e35:	01 de                	add    %ebx,%esi$/;"	l
f0103e37	obj/kern/kernel.asm	/^f0103e37:	eb 79                	jmp    f0103eb2 <env_create+0x139>$/;"	l
f0103e39	obj/kern/kernel.asm	/^f0103e39:	83 3b 01             	cmpl   $0x1,(%ebx)$/;"	l
f0103e3c	obj/kern/kernel.asm	/^f0103e3c:	75 71                	jne    f0103eaf <env_create+0x136>$/;"	l
f0103e3e	obj/kern/kernel.asm	/^f0103e3e:	8b 4b 14             	mov    0x14(%ebx),%ecx$/;"	l
f0103e41	obj/kern/kernel.asm	/^f0103e41:	39 4b 10             	cmp    %ecx,0x10(%ebx)$/;"	l
f0103e44	obj/kern/kernel.asm	/^f0103e44:	76 24                	jbe    f0103e6a <env_create+0xf1>$/;"	l
f0103e46	obj/kern/kernel.asm	/^f0103e46:	c7 44 24 0c 9f 8b 10 	movl   $0xf0108b9f,0xc(%esp)$/;"	l
f0103e4d	obj/kern/kernel.asm	/^f0103e4d:	f0 $/;"	l
f0103e4e	obj/kern/kernel.asm	/^f0103e4e:	c7 44 24 08 9f 87 10 	movl   $0xf010879f,0x8(%esp)$/;"	l
f0103e55	obj/kern/kernel.asm	/^f0103e55:	f0 $/;"	l
f0103e56	obj/kern/kernel.asm	/^f0103e56:	c7 44 24 04 7d 01 00 	movl   $0x17d,0x4(%esp)$/;"	l
f0103e5d	obj/kern/kernel.asm	/^f0103e5d:	00 $/;"	l
f0103e5e	obj/kern/kernel.asm	/^f0103e5e:	c7 04 24 76 8b 10 f0 	movl   $0xf0108b76,(%esp)$/;"	l
f0103e65	obj/kern/kernel.asm	/^f0103e65:	e8 d6 c1 ff ff       	call   f0100040 <_panic>$/;"	l
f0103e6a	obj/kern/kernel.asm	/^f0103e6a:	8b 53 08             	mov    0x8(%ebx),%edx$/;"	l
f0103e6d	obj/kern/kernel.asm	/^f0103e6d:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0103e70	obj/kern/kernel.asm	/^f0103e70:	e8 93 fb ff ff       	call   f0103a08 <region_alloc>$/;"	l
f0103e75	obj/kern/kernel.asm	/^f0103e75:	8b 43 10             	mov    0x10(%ebx),%eax$/;"	l
f0103e78	obj/kern/kernel.asm	/^f0103e78:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0103e7c	obj/kern/kernel.asm	/^f0103e7c:	89 f8                	mov    %edi,%eax$/;"	l
f0103e7e	obj/kern/kernel.asm	/^f0103e7e:	03 43 04             	add    0x4(%ebx),%eax$/;"	l
f0103e81	obj/kern/kernel.asm	/^f0103e81:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0103e85	obj/kern/kernel.asm	/^f0103e85:	8b 43 08             	mov    0x8(%ebx),%eax$/;"	l
f0103e88	obj/kern/kernel.asm	/^f0103e88:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103e8b	obj/kern/kernel.asm	/^f0103e8b:	e8 bc 2b 00 00       	call   f0106a4c <memcpy>$/;"	l
f0103e90	obj/kern/kernel.asm	/^f0103e90:	8b 43 10             	mov    0x10(%ebx),%eax$/;"	l
f0103e93	obj/kern/kernel.asm	/^f0103e93:	8b 53 14             	mov    0x14(%ebx),%edx$/;"	l
f0103e96	obj/kern/kernel.asm	/^f0103e96:	29 c2                	sub    %eax,%edx$/;"	l
f0103e98	obj/kern/kernel.asm	/^f0103e98:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f0103e9c	obj/kern/kernel.asm	/^f0103e9c:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
f0103ea3	obj/kern/kernel.asm	/^f0103ea3:	00 $/;"	l
f0103ea4	obj/kern/kernel.asm	/^f0103ea4:	03 43 08             	add    0x8(%ebx),%eax$/;"	l
f0103ea7	obj/kern/kernel.asm	/^f0103ea7:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103eaa	obj/kern/kernel.asm	/^f0103eaa:	e8 e8 2a 00 00       	call   f0106997 <memset>$/;"	l
f0103eaf	obj/kern/kernel.asm	/^f0103eaf:	83 c3 20             	add    $0x20,%ebx$/;"	l
f0103eb2	obj/kern/kernel.asm	/^f0103eb2:	39 de                	cmp    %ebx,%esi$/;"	l
f0103eb4	obj/kern/kernel.asm	/^f0103eb4:	77 83                	ja     f0103e39 <env_create+0xc0>$/;"	l
f0103eb6	obj/kern/kernel.asm	/^f0103eb6:	8b 47 18             	mov    0x18(%edi),%eax$/;"	l
f0103eb9	obj/kern/kernel.asm	/^f0103eb9:	8b 7d d4             	mov    -0x2c(%ebp),%edi$/;"	l
f0103ebc	obj/kern/kernel.asm	/^f0103ebc:	89 47 30             	mov    %eax,0x30(%edi)$/;"	l
f0103ebf	obj/kern/kernel.asm	/^f0103ebf:	b9 00 10 00 00       	mov    $0x1000,%ecx$/;"	l
f0103ec4	obj/kern/kernel.asm	/^f0103ec4:	ba 00 d0 bf ee       	mov    $0xeebfd000,%edx$/;"	l
f0103ec9	obj/kern/kernel.asm	/^f0103ec9:	89 f8                	mov    %edi,%eax$/;"	l
f0103ecb	obj/kern/kernel.asm	/^f0103ecb:	e8 38 fb ff ff       	call   f0103a08 <region_alloc>$/;"	l
f0103ed0	obj/kern/kernel.asm	/^f0103ed0:	83 7d 0c 01          	cmpl   $0x1,0xc(%ebp)$/;"	l
f0103ed4	obj/kern/kernel.asm	/^f0103ed4:	75 0a                	jne    f0103ee0 <env_create+0x167>$/;"	l
f0103ed6	obj/kern/kernel.asm	/^f0103ed6:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0103ed9	obj/kern/kernel.asm	/^f0103ed9:	81 48 38 00 30 00 00 	orl    $0x3000,0x38(%eax)$/;"	l
f0103ee0	obj/kern/kernel.asm	/^f0103ee0:	83 c4 3c             	add    $0x3c,%esp$/;"	l
f0103ee3	obj/kern/kernel.asm	/^f0103ee3:	5b                   	pop    %ebx$/;"	l
f0103ee4	obj/kern/kernel.asm	/^f0103ee4:	5e                   	pop    %esi$/;"	l
f0103ee5	obj/kern/kernel.asm	/^f0103ee5:	5f                   	pop    %edi$/;"	l
f0103ee6	obj/kern/kernel.asm	/^f0103ee6:	5d                   	pop    %ebp$/;"	l
f0103ee7	obj/kern/kernel.asm	/^f0103ee7:	c3                   	ret    $/;"	l
f0103ee8	obj/kern/kernel.asm	/^f0103ee8 <env_free>:$/;"	l
f0103ee8	obj/kern/kernel.asm	/^f0103ee8:	55                   	push   %ebp$/;"	l
f0103ee9	obj/kern/kernel.asm	/^f0103ee9:	89 e5                	mov    %esp,%ebp$/;"	l
f0103eeb	obj/kern/kernel.asm	/^f0103eeb:	57                   	push   %edi$/;"	l
f0103eec	obj/kern/kernel.asm	/^f0103eec:	56                   	push   %esi$/;"	l
f0103eed	obj/kern/kernel.asm	/^f0103eed:	53                   	push   %ebx$/;"	l
f0103eee	obj/kern/kernel.asm	/^f0103eee:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f0103ef1	obj/kern/kernel.asm	/^f0103ef1:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f0103ef4	obj/kern/kernel.asm	/^f0103ef4:	e8 f3 30 00 00       	call   f0106fec <cpunum>$/;"	l
f0103ef9	obj/kern/kernel.asm	/^f0103ef9:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103efc	obj/kern/kernel.asm	/^f0103efc:	39 b8 28 e0 20 f0    	cmp    %edi,-0xfdf1fd8(%eax)$/;"	l
f0103f02	obj/kern/kernel.asm	/^f0103f02:	74 09                	je     f0103f0d <env_free+0x25>$/;"	l
f0103f04	obj/kern/kernel.asm	/^f0103f04:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)$/;"	l
f0103f0b	obj/kern/kernel.asm	/^f0103f0b:	eb 36                	jmp    f0103f43 <env_free+0x5b>$/;"	l
f0103f0d	obj/kern/kernel.asm	/^f0103f0d:	a1 8c de 20 f0       	mov    0xf020de8c,%eax$/;"	l
f0103f12	obj/kern/kernel.asm	/^f0103f12:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0103f17	obj/kern/kernel.asm	/^f0103f17:	77 20                	ja     f0103f39 <env_free+0x51>$/;"	l
f0103f19	obj/kern/kernel.asm	/^f0103f19:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0103f1d	obj/kern/kernel.asm	/^f0103f1d:	c7 44 24 08 08 77 10 	movl   $0xf0107708,0x8(%esp)$/;"	l
f0103f24	obj/kern/kernel.asm	/^f0103f24:	f0 $/;"	l
f0103f25	obj/kern/kernel.asm	/^f0103f25:	c7 44 24 04 b2 01 00 	movl   $0x1b2,0x4(%esp)$/;"	l
f0103f2c	obj/kern/kernel.asm	/^f0103f2c:	00 $/;"	l
f0103f2d	obj/kern/kernel.asm	/^f0103f2d:	c7 04 24 76 8b 10 f0 	movl   $0xf0108b76,(%esp)$/;"	l
f0103f34	obj/kern/kernel.asm	/^f0103f34:	e8 07 c1 ff ff       	call   f0100040 <_panic>$/;"	l
f0103f39	obj/kern/kernel.asm	/^f0103f39:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0103f3e	obj/kern/kernel.asm	/^f0103f3e:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f0103f41	obj/kern/kernel.asm	/^f0103f41:	eb c1                	jmp    f0103f04 <env_free+0x1c>$/;"	l
f0103f43	obj/kern/kernel.asm	/^f0103f43:	8b 4d e0             	mov    -0x20(%ebp),%ecx$/;"	l
f0103f46	obj/kern/kernel.asm	/^f0103f46:	89 c8                	mov    %ecx,%eax$/;"	l
f0103f48	obj/kern/kernel.asm	/^f0103f48:	c1 e0 02             	shl    $0x2,%eax$/;"	l
f0103f4b	obj/kern/kernel.asm	/^f0103f4b:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f0103f4e	obj/kern/kernel.asm	/^f0103f4e:	8b 47 60             	mov    0x60(%edi),%eax$/;"	l
f0103f51	obj/kern/kernel.asm	/^f0103f51:	8b 34 88             	mov    (%eax,%ecx,4),%esi$/;"	l
f0103f54	obj/kern/kernel.asm	/^f0103f54:	f7 c6 01 00 00 00    	test   $0x1,%esi$/;"	l
f0103f5a	obj/kern/kernel.asm	/^f0103f5a:	0f 84 b7 00 00 00    	je     f0104017 <env_free+0x12f>$/;"	l
f0103f60	obj/kern/kernel.asm	/^f0103f60:	81 e6 00 f0 ff ff    	and    $0xfffff000,%esi$/;"	l
f0103f66	obj/kern/kernel.asm	/^f0103f66:	89 f0                	mov    %esi,%eax$/;"	l
f0103f68	obj/kern/kernel.asm	/^f0103f68:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0103f6b	obj/kern/kernel.asm	/^f0103f6b:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f0103f6e	obj/kern/kernel.asm	/^f0103f6e:	3b 05 88 de 20 f0    	cmp    0xf020de88,%eax$/;"	l
f0103f74	obj/kern/kernel.asm	/^f0103f74:	72 20                	jb     f0103f96 <env_free+0xae>$/;"	l
f0103f76	obj/kern/kernel.asm	/^f0103f76:	89 74 24 0c          	mov    %esi,0xc(%esp)$/;"	l
f0103f7a	obj/kern/kernel.asm	/^f0103f7a:	c7 44 24 08 e4 76 10 	movl   $0xf01076e4,0x8(%esp)$/;"	l
f0103f81	obj/kern/kernel.asm	/^f0103f81:	f0 $/;"	l
f0103f82	obj/kern/kernel.asm	/^f0103f82:	c7 44 24 04 c1 01 00 	movl   $0x1c1,0x4(%esp)$/;"	l
f0103f89	obj/kern/kernel.asm	/^f0103f89:	00 $/;"	l
f0103f8a	obj/kern/kernel.asm	/^f0103f8a:	c7 04 24 76 8b 10 f0 	movl   $0xf0108b76,(%esp)$/;"	l
f0103f91	obj/kern/kernel.asm	/^f0103f91:	e8 aa c0 ff ff       	call   f0100040 <_panic>$/;"	l
f0103f96	obj/kern/kernel.asm	/^f0103f96:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0103f99	obj/kern/kernel.asm	/^f0103f99:	c1 e0 16             	shl    $0x16,%eax$/;"	l
f0103f9c	obj/kern/kernel.asm	/^f0103f9c:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0103f9f	obj/kern/kernel.asm	/^f0103f9f:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0103fa4	obj/kern/kernel.asm	/^f0103fa4:	f6 84 9e 00 00 00 f0 	testb  $0x1,-0x10000000(%esi,%ebx,4)$/;"	l
f0103fab	obj/kern/kernel.asm	/^f0103fab:	01 $/;"	l
f0103fac	obj/kern/kernel.asm	/^f0103fac:	74 17                	je     f0103fc5 <env_free+0xdd>$/;"	l
f0103fae	obj/kern/kernel.asm	/^f0103fae:	89 d8                	mov    %ebx,%eax$/;"	l
f0103fb0	obj/kern/kernel.asm	/^f0103fb0:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0103fb3	obj/kern/kernel.asm	/^f0103fb3:	0b 45 e4             	or     -0x1c(%ebp),%eax$/;"	l
f0103fb6	obj/kern/kernel.asm	/^f0103fb6:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0103fba	obj/kern/kernel.asm	/^f0103fba:	8b 47 60             	mov    0x60(%edi),%eax$/;"	l
f0103fbd	obj/kern/kernel.asm	/^f0103fbd:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0103fc0	obj/kern/kernel.asm	/^f0103fc0:	e8 f4 d7 ff ff       	call   f01017b9 <page_remove>$/;"	l
f0103fc5	obj/kern/kernel.asm	/^f0103fc5:	83 c3 01             	add    $0x1,%ebx$/;"	l
f0103fc8	obj/kern/kernel.asm	/^f0103fc8:	81 fb 00 04 00 00    	cmp    $0x400,%ebx$/;"	l
f0103fce	obj/kern/kernel.asm	/^f0103fce:	75 d4                	jne    f0103fa4 <env_free+0xbc>$/;"	l
f0103fd0	obj/kern/kernel.asm	/^f0103fd0:	8b 47 60             	mov    0x60(%edi),%eax$/;"	l
f0103fd3	obj/kern/kernel.asm	/^f0103fd3:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f0103fd6	obj/kern/kernel.asm	/^f0103fd6:	c7 04 10 00 00 00 00 	movl   $0x0,(%eax,%edx,1)$/;"	l
f0103fdd	obj/kern/kernel.asm	/^f0103fdd:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
f0103fe0	obj/kern/kernel.asm	/^f0103fe0:	3b 05 88 de 20 f0    	cmp    0xf020de88,%eax$/;"	l
f0103fe6	obj/kern/kernel.asm	/^f0103fe6:	72 1c                	jb     f0104004 <env_free+0x11c>$/;"	l
f0103fe8	obj/kern/kernel.asm	/^f0103fe8:	c7 44 24 08 18 7f 10 	movl   $0xf0107f18,0x8(%esp)$/;"	l
f0103fef	obj/kern/kernel.asm	/^f0103fef:	f0 $/;"	l
f0103ff0	obj/kern/kernel.asm	/^f0103ff0:	c7 44 24 04 51 00 00 	movl   $0x51,0x4(%esp)$/;"	l
f0103ff7	obj/kern/kernel.asm	/^f0103ff7:	00 $/;"	l
f0103ff8	obj/kern/kernel.asm	/^f0103ff8:	c7 04 24 79 87 10 f0 	movl   $0xf0108779,(%esp)$/;"	l
f0103fff	obj/kern/kernel.asm	/^f0103fff:	e8 3c c0 ff ff       	call   f0100040 <_panic>$/;"	l
f0104004	obj/kern/kernel.asm	/^f0104004:	a1 90 de 20 f0       	mov    0xf020de90,%eax$/;"	l
f0104009	obj/kern/kernel.asm	/^f0104009:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
f010400c	obj/kern/kernel.asm	/^f010400c:	8d 04 d0             	lea    (%eax,%edx,8),%eax$/;"	l
f010400f	obj/kern/kernel.asm	/^f010400f:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104012	obj/kern/kernel.asm	/^f0104012:	e8 de d5 ff ff       	call   f01015f5 <page_decref>$/;"	l
f0104017	obj/kern/kernel.asm	/^f0104017:	83 45 e0 01          	addl   $0x1,-0x20(%ebp)$/;"	l
f010401b	obj/kern/kernel.asm	/^f010401b:	81 7d e0 bb 03 00 00 	cmpl   $0x3bb,-0x20(%ebp)$/;"	l
f0104022	obj/kern/kernel.asm	/^f0104022:	0f 85 1b ff ff ff    	jne    f0103f43 <env_free+0x5b>$/;"	l
f0104028	obj/kern/kernel.asm	/^f0104028:	8b 47 60             	mov    0x60(%edi),%eax$/;"	l
f010402b	obj/kern/kernel.asm	/^f010402b:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0104030	obj/kern/kernel.asm	/^f0104030:	77 20                	ja     f0104052 <env_free+0x16a>$/;"	l
f0104032	obj/kern/kernel.asm	/^f0104032:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0104036	obj/kern/kernel.asm	/^f0104036:	c7 44 24 08 08 77 10 	movl   $0xf0107708,0x8(%esp)$/;"	l
f010403d	obj/kern/kernel.asm	/^f010403d:	f0 $/;"	l
f010403e	obj/kern/kernel.asm	/^f010403e:	c7 44 24 04 cf 01 00 	movl   $0x1cf,0x4(%esp)$/;"	l
f0104045	obj/kern/kernel.asm	/^f0104045:	00 $/;"	l
f0104046	obj/kern/kernel.asm	/^f0104046:	c7 04 24 76 8b 10 f0 	movl   $0xf0108b76,(%esp)$/;"	l
f010404d	obj/kern/kernel.asm	/^f010404d:	e8 ee bf ff ff       	call   f0100040 <_panic>$/;"	l
f0104052	obj/kern/kernel.asm	/^f0104052:	c7 47 60 00 00 00 00 	movl   $0x0,0x60(%edi)$/;"	l
f0104059	obj/kern/kernel.asm	/^f0104059:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f010405e	obj/kern/kernel.asm	/^f010405e:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0104061	obj/kern/kernel.asm	/^f0104061:	3b 05 88 de 20 f0    	cmp    0xf020de88,%eax$/;"	l
f0104067	obj/kern/kernel.asm	/^f0104067:	72 1c                	jb     f0104085 <env_free+0x19d>$/;"	l
f0104069	obj/kern/kernel.asm	/^f0104069:	c7 44 24 08 18 7f 10 	movl   $0xf0107f18,0x8(%esp)$/;"	l
f0104070	obj/kern/kernel.asm	/^f0104070:	f0 $/;"	l
f0104071	obj/kern/kernel.asm	/^f0104071:	c7 44 24 04 51 00 00 	movl   $0x51,0x4(%esp)$/;"	l
f0104078	obj/kern/kernel.asm	/^f0104078:	00 $/;"	l
f0104079	obj/kern/kernel.asm	/^f0104079:	c7 04 24 79 87 10 f0 	movl   $0xf0108779,(%esp)$/;"	l
f0104080	obj/kern/kernel.asm	/^f0104080:	e8 bb bf ff ff       	call   f0100040 <_panic>$/;"	l
f0104085	obj/kern/kernel.asm	/^f0104085:	8b 15 90 de 20 f0    	mov    0xf020de90,%edx$/;"	l
f010408b	obj/kern/kernel.asm	/^f010408b:	8d 04 c2             	lea    (%edx,%eax,8),%eax$/;"	l
f010408e	obj/kern/kernel.asm	/^f010408e:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104091	obj/kern/kernel.asm	/^f0104091:	e8 5f d5 ff ff       	call   f01015f5 <page_decref>$/;"	l
f0104096	obj/kern/kernel.asm	/^f0104096:	c7 47 54 00 00 00 00 	movl   $0x0,0x54(%edi)$/;"	l
f010409d	obj/kern/kernel.asm	/^f010409d:	a1 4c d2 20 f0       	mov    0xf020d24c,%eax$/;"	l
f01040a2	obj/kern/kernel.asm	/^f01040a2:	89 47 44             	mov    %eax,0x44(%edi)$/;"	l
f01040a5	obj/kern/kernel.asm	/^f01040a5:	89 3d 4c d2 20 f0    	mov    %edi,0xf020d24c$/;"	l
f01040ab	obj/kern/kernel.asm	/^f01040ab:	83 c4 2c             	add    $0x2c,%esp$/;"	l
f01040ae	obj/kern/kernel.asm	/^f01040ae:	5b                   	pop    %ebx$/;"	l
f01040af	obj/kern/kernel.asm	/^f01040af:	5e                   	pop    %esi$/;"	l
f01040b0	obj/kern/kernel.asm	/^f01040b0:	5f                   	pop    %edi$/;"	l
f01040b1	obj/kern/kernel.asm	/^f01040b1:	5d                   	pop    %ebp$/;"	l
f01040b2	obj/kern/kernel.asm	/^f01040b2:	c3                   	ret    $/;"	l
f01040b3	obj/kern/kernel.asm	/^f01040b3 <env_destroy>:$/;"	l
f01040b3	obj/kern/kernel.asm	/^f01040b3:	55                   	push   %ebp$/;"	l
f01040b4	obj/kern/kernel.asm	/^f01040b4:	89 e5                	mov    %esp,%ebp$/;"	l
f01040b6	obj/kern/kernel.asm	/^f01040b6:	53                   	push   %ebx$/;"	l
f01040b7	obj/kern/kernel.asm	/^f01040b7:	83 ec 14             	sub    $0x14,%esp$/;"	l
f01040ba	obj/kern/kernel.asm	/^f01040ba:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f01040bd	obj/kern/kernel.asm	/^f01040bd:	83 7b 54 03          	cmpl   $0x3,0x54(%ebx)$/;"	l
f01040c1	obj/kern/kernel.asm	/^f01040c1:	75 19                	jne    f01040dc <env_destroy+0x29>$/;"	l
f01040c3	obj/kern/kernel.asm	/^f01040c3:	e8 24 2f 00 00       	call   f0106fec <cpunum>$/;"	l
f01040c8	obj/kern/kernel.asm	/^f01040c8:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01040cb	obj/kern/kernel.asm	/^f01040cb:	39 98 28 e0 20 f0    	cmp    %ebx,-0xfdf1fd8(%eax)$/;"	l
f01040d1	obj/kern/kernel.asm	/^f01040d1:	74 09                	je     f01040dc <env_destroy+0x29>$/;"	l
f01040d3	obj/kern/kernel.asm	/^f01040d3:	c7 43 54 01 00 00 00 	movl   $0x1,0x54(%ebx)$/;"	l
f01040da	obj/kern/kernel.asm	/^f01040da:	eb 2f                	jmp    f010410b <env_destroy+0x58>$/;"	l
f01040dc	obj/kern/kernel.asm	/^f01040dc:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f01040df	obj/kern/kernel.asm	/^f01040df:	e8 04 fe ff ff       	call   f0103ee8 <env_free>$/;"	l
f01040e4	obj/kern/kernel.asm	/^f01040e4:	e8 03 2f 00 00       	call   f0106fec <cpunum>$/;"	l
f01040e9	obj/kern/kernel.asm	/^f01040e9:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01040ec	obj/kern/kernel.asm	/^f01040ec:	39 98 28 e0 20 f0    	cmp    %ebx,-0xfdf1fd8(%eax)$/;"	l
f01040f2	obj/kern/kernel.asm	/^f01040f2:	75 17                	jne    f010410b <env_destroy+0x58>$/;"	l
f01040f4	obj/kern/kernel.asm	/^f01040f4:	e8 f3 2e 00 00       	call   f0106fec <cpunum>$/;"	l
f01040f9	obj/kern/kernel.asm	/^f01040f9:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01040fc	obj/kern/kernel.asm	/^f01040fc:	c7 80 28 e0 20 f0 00 	movl   $0x0,-0xfdf1fd8(%eax)$/;"	l
f0104103	obj/kern/kernel.asm	/^f0104103:	00 00 00 $/;"	l
f0104106	obj/kern/kernel.asm	/^f0104106:	e8 37 16 00 00       	call   f0105742 <sched_yield>$/;"	l
f010410b	obj/kern/kernel.asm	/^f010410b:	83 c4 14             	add    $0x14,%esp$/;"	l
f010410e	obj/kern/kernel.asm	/^f010410e:	5b                   	pop    %ebx$/;"	l
f010410f	obj/kern/kernel.asm	/^f010410f:	5d                   	pop    %ebp$/;"	l
f0104110	obj/kern/kernel.asm	/^f0104110:	c3                   	ret    $/;"	l
f0104111	obj/kern/kernel.asm	/^f0104111 <env_pop_tf>:$/;"	l
f0104111	obj/kern/kernel.asm	/^f0104111:	55                   	push   %ebp$/;"	l
f0104112	obj/kern/kernel.asm	/^f0104112:	89 e5                	mov    %esp,%ebp$/;"	l
f0104114	obj/kern/kernel.asm	/^f0104114:	53                   	push   %ebx$/;"	l
f0104115	obj/kern/kernel.asm	/^f0104115:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0104118	obj/kern/kernel.asm	/^f0104118:	e8 cf 2e 00 00       	call   f0106fec <cpunum>$/;"	l
f010411d	obj/kern/kernel.asm	/^f010411d:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104120	obj/kern/kernel.asm	/^f0104120:	8b 98 28 e0 20 f0    	mov    -0xfdf1fd8(%eax),%ebx$/;"	l
f0104126	obj/kern/kernel.asm	/^f0104126:	e8 c1 2e 00 00       	call   f0106fec <cpunum>$/;"	l
f010412b	obj/kern/kernel.asm	/^f010412b:	89 43 5c             	mov    %eax,0x5c(%ebx)$/;"	l
f010412e	obj/kern/kernel.asm	/^f010412e:	8b 65 08             	mov    0x8(%ebp),%esp$/;"	l
f0104131	obj/kern/kernel.asm	/^f0104131:	61                   	popa   $/;"	l
f0104132	obj/kern/kernel.asm	/^f0104132:	07                   	pop    %es$/;"	l
f0104133	obj/kern/kernel.asm	/^f0104133:	1f                   	pop    %ds$/;"	l
f0104134	obj/kern/kernel.asm	/^f0104134:	83 c4 08             	add    $0x8,%esp$/;"	l
f0104137	obj/kern/kernel.asm	/^f0104137:	cf                   	iret   $/;"	l
f0104138	obj/kern/kernel.asm	/^f0104138:	c7 44 24 08 bb 8b 10 	movl   $0xf0108bbb,0x8(%esp)$/;"	l
f010413f	obj/kern/kernel.asm	/^f010413f:	f0 $/;"	l
f0104140	obj/kern/kernel.asm	/^f0104140:	c7 44 24 04 05 02 00 	movl   $0x205,0x4(%esp)$/;"	l
f0104147	obj/kern/kernel.asm	/^f0104147:	00 $/;"	l
f0104148	obj/kern/kernel.asm	/^f0104148:	c7 04 24 76 8b 10 f0 	movl   $0xf0108b76,(%esp)$/;"	l
f010414f	obj/kern/kernel.asm	/^f010414f:	e8 ec be ff ff       	call   f0100040 <_panic>$/;"	l
f0104154	obj/kern/kernel.asm	/^f0104154 <env_run>:$/;"	l
f0104154	obj/kern/kernel.asm	/^f0104154:	55                   	push   %ebp$/;"	l
f0104155	obj/kern/kernel.asm	/^f0104155:	89 e5                	mov    %esp,%ebp$/;"	l
f0104157	obj/kern/kernel.asm	/^f0104157:	83 ec 18             	sub    $0x18,%esp$/;"	l
f010415a	obj/kern/kernel.asm	/^f010415a:	e8 8d 2e 00 00       	call   f0106fec <cpunum>$/;"	l
f010415f	obj/kern/kernel.asm	/^f010415f:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104162	obj/kern/kernel.asm	/^f0104162:	83 b8 28 e0 20 f0 00 	cmpl   $0x0,-0xfdf1fd8(%eax)$/;"	l
f0104169	obj/kern/kernel.asm	/^f0104169:	74 29                	je     f0104194 <env_run+0x40>$/;"	l
f010416b	obj/kern/kernel.asm	/^f010416b:	e8 7c 2e 00 00       	call   f0106fec <cpunum>$/;"	l
f0104170	obj/kern/kernel.asm	/^f0104170:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104173	obj/kern/kernel.asm	/^f0104173:	8b 80 28 e0 20 f0    	mov    -0xfdf1fd8(%eax),%eax$/;"	l
f0104179	obj/kern/kernel.asm	/^f0104179:	83 78 54 03          	cmpl   $0x3,0x54(%eax)$/;"	l
f010417d	obj/kern/kernel.asm	/^f010417d:	75 15                	jne    f0104194 <env_run+0x40>$/;"	l
f010417f	obj/kern/kernel.asm	/^f010417f:	e8 68 2e 00 00       	call   f0106fec <cpunum>$/;"	l
f0104184	obj/kern/kernel.asm	/^f0104184:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104187	obj/kern/kernel.asm	/^f0104187:	8b 80 28 e0 20 f0    	mov    -0xfdf1fd8(%eax),%eax$/;"	l
f010418d	obj/kern/kernel.asm	/^f010418d:	c7 40 54 02 00 00 00 	movl   $0x2,0x54(%eax)$/;"	l
f0104194	obj/kern/kernel.asm	/^f0104194:	e8 53 2e 00 00       	call   f0106fec <cpunum>$/;"	l
f0104199	obj/kern/kernel.asm	/^f0104199:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010419c	obj/kern/kernel.asm	/^f010419c:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f010419f	obj/kern/kernel.asm	/^f010419f:	89 90 28 e0 20 f0    	mov    %edx,-0xfdf1fd8(%eax)$/;"	l
f01041a5	obj/kern/kernel.asm	/^f01041a5:	e8 42 2e 00 00       	call   f0106fec <cpunum>$/;"	l
f01041aa	obj/kern/kernel.asm	/^f01041aa:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01041ad	obj/kern/kernel.asm	/^f01041ad:	8b 80 28 e0 20 f0    	mov    -0xfdf1fd8(%eax),%eax$/;"	l
f01041b3	obj/kern/kernel.asm	/^f01041b3:	c7 40 54 03 00 00 00 	movl   $0x3,0x54(%eax)$/;"	l
f01041ba	obj/kern/kernel.asm	/^f01041ba:	e8 2d 2e 00 00       	call   f0106fec <cpunum>$/;"	l
f01041bf	obj/kern/kernel.asm	/^f01041bf:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01041c2	obj/kern/kernel.asm	/^f01041c2:	8b 80 28 e0 20 f0    	mov    -0xfdf1fd8(%eax),%eax$/;"	l
f01041c8	obj/kern/kernel.asm	/^f01041c8:	83 40 58 01          	addl   $0x1,0x58(%eax)$/;"	l
f01041cc	obj/kern/kernel.asm	/^f01041cc:	e8 1b 2e 00 00       	call   f0106fec <cpunum>$/;"	l
f01041d1	obj/kern/kernel.asm	/^f01041d1:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01041d4	obj/kern/kernel.asm	/^f01041d4:	8b 80 28 e0 20 f0    	mov    -0xfdf1fd8(%eax),%eax$/;"	l
f01041da	obj/kern/kernel.asm	/^f01041da:	8b 40 60             	mov    0x60(%eax),%eax$/;"	l
f01041dd	obj/kern/kernel.asm	/^f01041dd:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f01041e2	obj/kern/kernel.asm	/^f01041e2:	77 20                	ja     f0104204 <env_run+0xb0>$/;"	l
f01041e4	obj/kern/kernel.asm	/^f01041e4:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01041e8	obj/kern/kernel.asm	/^f01041e8:	c7 44 24 08 08 77 10 	movl   $0xf0107708,0x8(%esp)$/;"	l
f01041ef	obj/kern/kernel.asm	/^f01041ef:	f0 $/;"	l
f01041f0	obj/kern/kernel.asm	/^f01041f0:	c7 44 24 04 27 02 00 	movl   $0x227,0x4(%esp)$/;"	l
f01041f7	obj/kern/kernel.asm	/^f01041f7:	00 $/;"	l
f01041f8	obj/kern/kernel.asm	/^f01041f8:	c7 04 24 76 8b 10 f0 	movl   $0xf0108b76,(%esp)$/;"	l
f01041ff	obj/kern/kernel.asm	/^f01041ff:	e8 3c be ff ff       	call   f0100040 <_panic>$/;"	l
f0104204	obj/kern/kernel.asm	/^f0104204:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0104209	obj/kern/kernel.asm	/^f0104209:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f010420c	obj/kern/kernel.asm	/^f010420c:	c7 04 24 c0 37 12 f0 	movl   $0xf01237c0,(%esp)$/;"	l
f0104213	obj/kern/kernel.asm	/^f0104213:	e8 ff 30 00 00       	call   f0107317 <spin_unlock>$/;"	l
f0104218	obj/kern/kernel.asm	/^f0104218:	f3 90                	pause  $/;"	l
f010421a	obj/kern/kernel.asm	/^f010421a:	e8 cd 2d 00 00       	call   f0106fec <cpunum>$/;"	l
f010421f	obj/kern/kernel.asm	/^f010421f:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104222	obj/kern/kernel.asm	/^f0104222:	8b 80 28 e0 20 f0    	mov    -0xfdf1fd8(%eax),%eax$/;"	l
f0104228	obj/kern/kernel.asm	/^f0104228:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010422b	obj/kern/kernel.asm	/^f010422b:	e8 e1 fe ff ff       	call   f0104111 <env_pop_tf>$/;"	l
f0104230	obj/kern/kernel.asm	/^f0104230 <mc146818_read>:$/;"	l
f0104230	obj/kern/kernel.asm	/^f0104230:	55                   	push   %ebp$/;"	l
f0104231	obj/kern/kernel.asm	/^f0104231:	89 e5                	mov    %esp,%ebp$/;"	l
f0104233	obj/kern/kernel.asm	/^f0104233:	0f b6 45 08          	movzbl 0x8(%ebp),%eax$/;"	l
f0104237	obj/kern/kernel.asm	/^f0104237:	ba 70 00 00 00       	mov    $0x70,%edx$/;"	l
f010423c	obj/kern/kernel.asm	/^f010423c:	ee                   	out    %al,(%dx)$/;"	l
f010423d	obj/kern/kernel.asm	/^f010423d:	b2 71                	mov    $0x71,%dl$/;"	l
f010423f	obj/kern/kernel.asm	/^f010423f:	ec                   	in     (%dx),%al$/;"	l
f0104240	obj/kern/kernel.asm	/^f0104240:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0104243	obj/kern/kernel.asm	/^f0104243:	5d                   	pop    %ebp$/;"	l
f0104244	obj/kern/kernel.asm	/^f0104244:	c3                   	ret    $/;"	l
f0104245	obj/kern/kernel.asm	/^f0104245 <mc146818_write>:$/;"	l
f0104245	obj/kern/kernel.asm	/^f0104245:	55                   	push   %ebp$/;"	l
f0104246	obj/kern/kernel.asm	/^f0104246:	89 e5                	mov    %esp,%ebp$/;"	l
f0104248	obj/kern/kernel.asm	/^f0104248:	0f b6 45 08          	movzbl 0x8(%ebp),%eax$/;"	l
f010424c	obj/kern/kernel.asm	/^f010424c:	ba 70 00 00 00       	mov    $0x70,%edx$/;"	l
f0104251	obj/kern/kernel.asm	/^f0104251:	ee                   	out    %al,(%dx)$/;"	l
f0104252	obj/kern/kernel.asm	/^f0104252:	b2 71                	mov    $0x71,%dl$/;"	l
f0104254	obj/kern/kernel.asm	/^f0104254:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0104257	obj/kern/kernel.asm	/^f0104257:	ee                   	out    %al,(%dx)$/;"	l
f0104258	obj/kern/kernel.asm	/^f0104258:	5d                   	pop    %ebp$/;"	l
f0104259	obj/kern/kernel.asm	/^f0104259:	c3                   	ret    $/;"	l
f010425a	obj/kern/kernel.asm	/^f010425a:	66 90                	xchg   %ax,%ax$/;"	l
f010425c	obj/kern/kernel.asm	/^f010425c <irq_setmask_8259A>:$/;"	l
f010425c	obj/kern/kernel.asm	/^f010425c:	55                   	push   %ebp$/;"	l
f010425d	obj/kern/kernel.asm	/^f010425d:	89 e5                	mov    %esp,%ebp$/;"	l
f010425f	obj/kern/kernel.asm	/^f010425f:	56                   	push   %esi$/;"	l
f0104260	obj/kern/kernel.asm	/^f0104260:	53                   	push   %ebx$/;"	l
f0104261	obj/kern/kernel.asm	/^f0104261:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0104264	obj/kern/kernel.asm	/^f0104264:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0104267	obj/kern/kernel.asm	/^f0104267:	66 a3 a8 33 12 f0    	mov    %ax,0xf01233a8$/;"	l
f010426d	obj/kern/kernel.asm	/^f010426d:	80 3d 50 d2 20 f0 00 	cmpb   $0x0,0xf020d250$/;"	l
f0104274	obj/kern/kernel.asm	/^f0104274:	74 4e                	je     f01042c4 <irq_setmask_8259A+0x68>$/;"	l
f0104276	obj/kern/kernel.asm	/^f0104276:	89 c6                	mov    %eax,%esi$/;"	l
f0104278	obj/kern/kernel.asm	/^f0104278:	ba 21 00 00 00       	mov    $0x21,%edx$/;"	l
f010427d	obj/kern/kernel.asm	/^f010427d:	ee                   	out    %al,(%dx)$/;"	l
f010427e	obj/kern/kernel.asm	/^f010427e:	66 c1 e8 08          	shr    $0x8,%ax$/;"	l
f0104282	obj/kern/kernel.asm	/^f0104282:	b2 a1                	mov    $0xa1,%dl$/;"	l
f0104284	obj/kern/kernel.asm	/^f0104284:	ee                   	out    %al,(%dx)$/;"	l
f0104285	obj/kern/kernel.asm	/^f0104285:	c7 04 24 c7 8b 10 f0 	movl   $0xf0108bc7,(%esp)$/;"	l
f010428c	obj/kern/kernel.asm	/^f010428c:	e8 0d 01 00 00       	call   f010439e <cprintf>$/;"	l
f0104291	obj/kern/kernel.asm	/^f0104291:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0104296	obj/kern/kernel.asm	/^f0104296:	0f b7 f6             	movzwl %si,%esi$/;"	l
f0104299	obj/kern/kernel.asm	/^f0104299:	f7 d6                	not    %esi$/;"	l
f010429b	obj/kern/kernel.asm	/^f010429b:	0f a3 de             	bt     %ebx,%esi$/;"	l
f010429e	obj/kern/kernel.asm	/^f010429e:	73 10                	jae    f01042b0 <irq_setmask_8259A+0x54>$/;"	l
f01042a0	obj/kern/kernel.asm	/^f01042a0:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f01042a4	obj/kern/kernel.asm	/^f01042a4:	c7 04 24 6b 90 10 f0 	movl   $0xf010906b,(%esp)$/;"	l
f01042ab	obj/kern/kernel.asm	/^f01042ab:	e8 ee 00 00 00       	call   f010439e <cprintf>$/;"	l
f01042b0	obj/kern/kernel.asm	/^f01042b0:	83 c3 01             	add    $0x1,%ebx$/;"	l
f01042b3	obj/kern/kernel.asm	/^f01042b3:	83 fb 10             	cmp    $0x10,%ebx$/;"	l
f01042b6	obj/kern/kernel.asm	/^f01042b6:	75 e3                	jne    f010429b <irq_setmask_8259A+0x3f>$/;"	l
f01042b8	obj/kern/kernel.asm	/^f01042b8:	c7 04 24 88 8a 10 f0 	movl   $0xf0108a88,(%esp)$/;"	l
f01042bf	obj/kern/kernel.asm	/^f01042bf:	e8 da 00 00 00       	call   f010439e <cprintf>$/;"	l
f01042c4	obj/kern/kernel.asm	/^f01042c4:	83 c4 10             	add    $0x10,%esp$/;"	l
f01042c7	obj/kern/kernel.asm	/^f01042c7:	5b                   	pop    %ebx$/;"	l
f01042c8	obj/kern/kernel.asm	/^f01042c8:	5e                   	pop    %esi$/;"	l
f01042c9	obj/kern/kernel.asm	/^f01042c9:	5d                   	pop    %ebp$/;"	l
f01042ca	obj/kern/kernel.asm	/^f01042ca:	c3                   	ret    $/;"	l
f01042cb	obj/kern/kernel.asm	/^f01042cb <pic_init>:$/;"	l
f01042cb	obj/kern/kernel.asm	/^f01042cb:	c6 05 50 d2 20 f0 01 	movb   $0x1,0xf020d250$/;"	l
f01042d2	obj/kern/kernel.asm	/^f01042d2:	ba 21 00 00 00       	mov    $0x21,%edx$/;"	l
f01042d7	obj/kern/kernel.asm	/^f01042d7:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f01042dc	obj/kern/kernel.asm	/^f01042dc:	ee                   	out    %al,(%dx)$/;"	l
f01042dd	obj/kern/kernel.asm	/^f01042dd:	b2 a1                	mov    $0xa1,%dl$/;"	l
f01042df	obj/kern/kernel.asm	/^f01042df:	ee                   	out    %al,(%dx)$/;"	l
f01042e0	obj/kern/kernel.asm	/^f01042e0:	b2 20                	mov    $0x20,%dl$/;"	l
f01042e2	obj/kern/kernel.asm	/^f01042e2:	b8 11 00 00 00       	mov    $0x11,%eax$/;"	l
f01042e7	obj/kern/kernel.asm	/^f01042e7:	ee                   	out    %al,(%dx)$/;"	l
f01042e8	obj/kern/kernel.asm	/^f01042e8:	b2 21                	mov    $0x21,%dl$/;"	l
f01042ea	obj/kern/kernel.asm	/^f01042ea:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f01042ef	obj/kern/kernel.asm	/^f01042ef:	ee                   	out    %al,(%dx)$/;"	l
f01042f0	obj/kern/kernel.asm	/^f01042f0:	b8 04 00 00 00       	mov    $0x4,%eax$/;"	l
f01042f5	obj/kern/kernel.asm	/^f01042f5:	ee                   	out    %al,(%dx)$/;"	l
f01042f6	obj/kern/kernel.asm	/^f01042f6:	b8 03 00 00 00       	mov    $0x3,%eax$/;"	l
f01042fb	obj/kern/kernel.asm	/^f01042fb:	ee                   	out    %al,(%dx)$/;"	l
f01042fc	obj/kern/kernel.asm	/^f01042fc:	b2 a0                	mov    $0xa0,%dl$/;"	l
f01042fe	obj/kern/kernel.asm	/^f01042fe:	b8 11 00 00 00       	mov    $0x11,%eax$/;"	l
f0104303	obj/kern/kernel.asm	/^f0104303:	ee                   	out    %al,(%dx)$/;"	l
f0104304	obj/kern/kernel.asm	/^f0104304:	b2 a1                	mov    $0xa1,%dl$/;"	l
f0104306	obj/kern/kernel.asm	/^f0104306:	b8 28 00 00 00       	mov    $0x28,%eax$/;"	l
f010430b	obj/kern/kernel.asm	/^f010430b:	ee                   	out    %al,(%dx)$/;"	l
f010430c	obj/kern/kernel.asm	/^f010430c:	b8 02 00 00 00       	mov    $0x2,%eax$/;"	l
f0104311	obj/kern/kernel.asm	/^f0104311:	ee                   	out    %al,(%dx)$/;"	l
f0104312	obj/kern/kernel.asm	/^f0104312:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0104317	obj/kern/kernel.asm	/^f0104317:	ee                   	out    %al,(%dx)$/;"	l
f0104318	obj/kern/kernel.asm	/^f0104318:	b2 20                	mov    $0x20,%dl$/;"	l
f010431a	obj/kern/kernel.asm	/^f010431a:	b8 68 00 00 00       	mov    $0x68,%eax$/;"	l
f010431f	obj/kern/kernel.asm	/^f010431f:	ee                   	out    %al,(%dx)$/;"	l
f0104320	obj/kern/kernel.asm	/^f0104320:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f0104325	obj/kern/kernel.asm	/^f0104325:	ee                   	out    %al,(%dx)$/;"	l
f0104326	obj/kern/kernel.asm	/^f0104326:	b2 a0                	mov    $0xa0,%dl$/;"	l
f0104328	obj/kern/kernel.asm	/^f0104328:	b8 68 00 00 00       	mov    $0x68,%eax$/;"	l
f010432d	obj/kern/kernel.asm	/^f010432d:	ee                   	out    %al,(%dx)$/;"	l
f010432e	obj/kern/kernel.asm	/^f010432e:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f0104333	obj/kern/kernel.asm	/^f0104333:	ee                   	out    %al,(%dx)$/;"	l
f0104334	obj/kern/kernel.asm	/^f0104334:	0f b7 05 a8 33 12 f0 	movzwl 0xf01233a8,%eax$/;"	l
f010433b	obj/kern/kernel.asm	/^f010433b:	66 83 f8 ff          	cmp    $0xffff,%ax$/;"	l
f010433f	obj/kern/kernel.asm	/^f010433f:	74 12                	je     f0104353 <pic_init+0x88>$/;"	l
f0104341	obj/kern/kernel.asm	/^f0104341:	55                   	push   %ebp$/;"	l
f0104342	obj/kern/kernel.asm	/^f0104342:	89 e5                	mov    %esp,%ebp$/;"	l
f0104344	obj/kern/kernel.asm	/^f0104344:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0104347	obj/kern/kernel.asm	/^f0104347:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f010434a	obj/kern/kernel.asm	/^f010434a:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010434d	obj/kern/kernel.asm	/^f010434d:	e8 0a ff ff ff       	call   f010425c <irq_setmask_8259A>$/;"	l
f0104352	obj/kern/kernel.asm	/^f0104352:	c9                   	leave  $/;"	l
f0104353	obj/kern/kernel.asm	/^f0104353:	f3 c3                	repz ret $/;"	l
f0104355	obj/kern/kernel.asm	/^f0104355:	66 90                	xchg   %ax,%ax$/;"	l
f0104357	obj/kern/kernel.asm	/^f0104357:	90                   	nop$/;"	l
f0104358	obj/kern/kernel.asm	/^f0104358 <putch>:$/;"	l
f0104358	obj/kern/kernel.asm	/^f0104358:	55                   	push   %ebp$/;"	l
f0104359	obj/kern/kernel.asm	/^f0104359:	89 e5                	mov    %esp,%ebp$/;"	l
f010435b	obj/kern/kernel.asm	/^f010435b:	83 ec 18             	sub    $0x18,%esp$/;"	l
f010435e	obj/kern/kernel.asm	/^f010435e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0104361	obj/kern/kernel.asm	/^f0104361:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104364	obj/kern/kernel.asm	/^f0104364:	e8 4e c4 ff ff       	call   f01007b7 <cputchar>$/;"	l
f0104369	obj/kern/kernel.asm	/^f0104369:	c9                   	leave  $/;"	l
f010436a	obj/kern/kernel.asm	/^f010436a:	c3                   	ret    $/;"	l
f010436b	obj/kern/kernel.asm	/^f010436b <vcprintf>:$/;"	l
f010436b	obj/kern/kernel.asm	/^f010436b:	55                   	push   %ebp$/;"	l
f010436c	obj/kern/kernel.asm	/^f010436c:	89 e5                	mov    %esp,%ebp$/;"	l
f010436e	obj/kern/kernel.asm	/^f010436e:	83 ec 28             	sub    $0x28,%esp$/;"	l
f0104371	obj/kern/kernel.asm	/^f0104371:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
f0104378	obj/kern/kernel.asm	/^f0104378:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f010437b	obj/kern/kernel.asm	/^f010437b:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f010437f	obj/kern/kernel.asm	/^f010437f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0104382	obj/kern/kernel.asm	/^f0104382:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0104386	obj/kern/kernel.asm	/^f0104386:	8d 45 f4             	lea    -0xc(%ebp),%eax$/;"	l
f0104389	obj/kern/kernel.asm	/^f0104389:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010438d	obj/kern/kernel.asm	/^f010438d:	c7 04 24 58 43 10 f0 	movl   $0xf0104358,(%esp)$/;"	l
f0104394	obj/kern/kernel.asm	/^f0104394:	e8 35 1f 00 00       	call   f01062ce <vprintfmt>$/;"	l
f0104399	obj/kern/kernel.asm	/^f0104399:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f010439c	obj/kern/kernel.asm	/^f010439c:	c9                   	leave  $/;"	l
f010439d	obj/kern/kernel.asm	/^f010439d:	c3                   	ret    $/;"	l
f010439e	obj/kern/kernel.asm	/^f010439e <cprintf>:$/;"	l
f010439e	obj/kern/kernel.asm	/^f010439e:	55                   	push   %ebp$/;"	l
f010439f	obj/kern/kernel.asm	/^f010439f:	89 e5                	mov    %esp,%ebp$/;"	l
f01043a1	obj/kern/kernel.asm	/^f01043a1:	83 ec 18             	sub    $0x18,%esp$/;"	l
f01043a4	obj/kern/kernel.asm	/^f01043a4:	8d 45 0c             	lea    0xc(%ebp),%eax$/;"	l
f01043a7	obj/kern/kernel.asm	/^f01043a7:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01043ab	obj/kern/kernel.asm	/^f01043ab:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01043ae	obj/kern/kernel.asm	/^f01043ae:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01043b1	obj/kern/kernel.asm	/^f01043b1:	e8 b5 ff ff ff       	call   f010436b <vcprintf>$/;"	l
f01043b6	obj/kern/kernel.asm	/^f01043b6:	c9                   	leave  $/;"	l
f01043b7	obj/kern/kernel.asm	/^f01043b7:	c3                   	ret    $/;"	l
f01043b8	obj/kern/kernel.asm	/^f01043b8:	66 90                	xchg   %ax,%ax$/;"	l
f01043ba	obj/kern/kernel.asm	/^f01043ba:	66 90                	xchg   %ax,%ax$/;"	l
f01043bc	obj/kern/kernel.asm	/^f01043bc:	66 90                	xchg   %ax,%ax$/;"	l
f01043be	obj/kern/kernel.asm	/^f01043be:	66 90                	xchg   %ax,%ax$/;"	l
f01043c0	obj/kern/kernel.asm	/^f01043c0 <trap_init_percpu>:$/;"	l
f01043c0	obj/kern/kernel.asm	/^f01043c0:	55                   	push   %ebp$/;"	l
f01043c1	obj/kern/kernel.asm	/^f01043c1:	89 e5                	mov    %esp,%ebp$/;"	l
f01043c3	obj/kern/kernel.asm	/^f01043c3:	57                   	push   %edi$/;"	l
f01043c4	obj/kern/kernel.asm	/^f01043c4:	56                   	push   %esi$/;"	l
f01043c5	obj/kern/kernel.asm	/^f01043c5:	53                   	push   %ebx$/;"	l
f01043c6	obj/kern/kernel.asm	/^f01043c6:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01043c9	obj/kern/kernel.asm	/^f01043c9:	e8 1e 2c 00 00       	call   f0106fec <cpunum>$/;"	l
f01043ce	obj/kern/kernel.asm	/^f01043ce:	89 c3                	mov    %eax,%ebx$/;"	l
f01043d0	obj/kern/kernel.asm	/^f01043d0:	e8 17 2c 00 00       	call   f0106fec <cpunum>$/;"	l
f01043d5	obj/kern/kernel.asm	/^f01043d5:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01043d8	obj/kern/kernel.asm	/^f01043d8:	89 da                	mov    %ebx,%edx$/;"	l
f01043da	obj/kern/kernel.asm	/^f01043da:	f7 da                	neg    %edx$/;"	l
f01043dc	obj/kern/kernel.asm	/^f01043dc:	c1 e2 10             	shl    $0x10,%edx$/;"	l
f01043df	obj/kern/kernel.asm	/^f01043df:	81 ea 00 00 00 10    	sub    $0x10000000,%edx$/;"	l
f01043e5	obj/kern/kernel.asm	/^f01043e5:	89 90 30 e0 20 f0    	mov    %edx,-0xfdf1fd0(%eax)$/;"	l
f01043eb	obj/kern/kernel.asm	/^f01043eb:	e8 fc 2b 00 00       	call   f0106fec <cpunum>$/;"	l
f01043f0	obj/kern/kernel.asm	/^f01043f0:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01043f3	obj/kern/kernel.asm	/^f01043f3:	66 c7 80 34 e0 20 f0 	movw   $0x10,-0xfdf1fcc(%eax)$/;"	l
f01043fa	obj/kern/kernel.asm	/^f01043fa:	10 00 $/;"	l
f01043fc	obj/kern/kernel.asm	/^f01043fc:	83 c3 05             	add    $0x5,%ebx$/;"	l
f01043ff	obj/kern/kernel.asm	/^f01043ff:	e8 e8 2b 00 00       	call   f0106fec <cpunum>$/;"	l
f0104404	obj/kern/kernel.asm	/^f0104404:	89 c7                	mov    %eax,%edi$/;"	l
f0104406	obj/kern/kernel.asm	/^f0104406:	e8 e1 2b 00 00       	call   f0106fec <cpunum>$/;"	l
f010440b	obj/kern/kernel.asm	/^f010440b:	89 c6                	mov    %eax,%esi$/;"	l
f010440d	obj/kern/kernel.asm	/^f010440d:	e8 da 2b 00 00       	call   f0106fec <cpunum>$/;"	l
f0104412	obj/kern/kernel.asm	/^f0104412:	66 c7 04 dd 40 33 12 	movw   $0x67,-0xfedccc0(,%ebx,8)$/;"	l
f0104419	obj/kern/kernel.asm	/^f0104419:	f0 67 00 $/;"	l
f010441c	obj/kern/kernel.asm	/^f010441c:	6b ff 74             	imul   $0x74,%edi,%edi$/;"	l
f010441f	obj/kern/kernel.asm	/^f010441f:	81 c7 2c e0 20 f0    	add    $0xf020e02c,%edi$/;"	l
f0104425	obj/kern/kernel.asm	/^f0104425:	66 89 3c dd 42 33 12 	mov    %di,-0xfedccbe(,%ebx,8)$/;"	l
f010442c	obj/kern/kernel.asm	/^f010442c:	f0 $/;"	l
f010442d	obj/kern/kernel.asm	/^f010442d:	6b d6 74             	imul   $0x74,%esi,%edx$/;"	l
f0104430	obj/kern/kernel.asm	/^f0104430:	81 c2 2c e0 20 f0    	add    $0xf020e02c,%edx$/;"	l
f0104436	obj/kern/kernel.asm	/^f0104436:	c1 ea 10             	shr    $0x10,%edx$/;"	l
f0104439	obj/kern/kernel.asm	/^f0104439:	88 14 dd 44 33 12 f0 	mov    %dl,-0xfedccbc(,%ebx,8)$/;"	l
f0104440	obj/kern/kernel.asm	/^f0104440:	c6 04 dd 46 33 12 f0 	movb   $0x40,-0xfedccba(,%ebx,8)$/;"	l
f0104447	obj/kern/kernel.asm	/^f0104447:	40 $/;"	l
f0104448	obj/kern/kernel.asm	/^f0104448:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010444b	obj/kern/kernel.asm	/^f010444b:	05 2c e0 20 f0       	add    $0xf020e02c,%eax$/;"	l
f0104450	obj/kern/kernel.asm	/^f0104450:	c1 e8 18             	shr    $0x18,%eax$/;"	l
f0104453	obj/kern/kernel.asm	/^f0104453:	88 04 dd 47 33 12 f0 	mov    %al,-0xfedccb9(,%ebx,8)$/;"	l
f010445a	obj/kern/kernel.asm	/^f010445a:	c6 04 dd 45 33 12 f0 	movb   $0x89,-0xfedccbb(,%ebx,8)$/;"	l
f0104461	obj/kern/kernel.asm	/^f0104461:	89 $/;"	l
f0104462	obj/kern/kernel.asm	/^f0104462:	c1 e3 03             	shl    $0x3,%ebx$/;"	l
f0104465	obj/kern/kernel.asm	/^f0104465:	0f 00 db             	ltr    %bx$/;"	l
f0104468	obj/kern/kernel.asm	/^f0104468:	b8 ac 33 12 f0       	mov    $0xf01233ac,%eax$/;"	l
f010446d	obj/kern/kernel.asm	/^f010446d:	0f 01 18             	lidtl  (%eax)$/;"	l
f0104470	obj/kern/kernel.asm	/^f0104470:	83 c4 0c             	add    $0xc,%esp$/;"	l
f0104473	obj/kern/kernel.asm	/^f0104473:	5b                   	pop    %ebx$/;"	l
f0104474	obj/kern/kernel.asm	/^f0104474:	5e                   	pop    %esi$/;"	l
f0104475	obj/kern/kernel.asm	/^f0104475:	5f                   	pop    %edi$/;"	l
f0104476	obj/kern/kernel.asm	/^f0104476:	5d                   	pop    %ebp$/;"	l
f0104477	obj/kern/kernel.asm	/^f0104477:	c3                   	ret    $/;"	l
f0104478	obj/kern/kernel.asm	/^f0104478 <trap_init>:$/;"	l
f0104478	obj/kern/kernel.asm	/^f0104478:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010447d	obj/kern/kernel.asm	/^f010447d:	8b 14 85 b4 33 12 f0 	mov    -0xfedcc4c(,%eax,4),%edx$/;"	l
f0104484	obj/kern/kernel.asm	/^f0104484:	66 89 14 c5 60 d2 20 	mov    %dx,-0xfdf2da0(,%eax,8)$/;"	l
f010448b	obj/kern/kernel.asm	/^f010448b:	f0 $/;"	l
f010448c	obj/kern/kernel.asm	/^f010448c:	66 c7 04 c5 62 d2 20 	movw   $0x8,-0xfdf2d9e(,%eax,8)$/;"	l
f0104493	obj/kern/kernel.asm	/^f0104493:	f0 08 00 $/;"	l
f0104496	obj/kern/kernel.asm	/^f0104496:	c6 04 c5 64 d2 20 f0 	movb   $0x0,-0xfdf2d9c(,%eax,8)$/;"	l
f010449d	obj/kern/kernel.asm	/^f010449d:	00 $/;"	l
f010449e	obj/kern/kernel.asm	/^f010449e:	c6 04 c5 65 d2 20 f0 	movb   $0x8e,-0xfdf2d9b(,%eax,8)$/;"	l
f01044a5	obj/kern/kernel.asm	/^f01044a5:	8e $/;"	l
f01044a6	obj/kern/kernel.asm	/^f01044a6:	c1 ea 10             	shr    $0x10,%edx$/;"	l
f01044a9	obj/kern/kernel.asm	/^f01044a9:	66 89 14 c5 66 d2 20 	mov    %dx,-0xfdf2d9a(,%eax,8)$/;"	l
f01044b0	obj/kern/kernel.asm	/^f01044b0:	f0 $/;"	l
f01044b1	obj/kern/kernel.asm	/^f01044b1:	83 c0 01             	add    $0x1,%eax$/;"	l
f01044b4	obj/kern/kernel.asm	/^f01044b4:	3d 00 01 00 00       	cmp    $0x100,%eax$/;"	l
f01044b9	obj/kern/kernel.asm	/^f01044b9:	75 c2                	jne    f010447d <trap_init+0x5>$/;"	l
f01044bb	obj/kern/kernel.asm	/^f01044bb:	55                   	push   %ebp$/;"	l
f01044bc	obj/kern/kernel.asm	/^f01044bc:	89 e5                	mov    %esp,%ebp$/;"	l
f01044be	obj/kern/kernel.asm	/^f01044be:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01044c1	obj/kern/kernel.asm	/^f01044c1:	a1 c0 33 12 f0       	mov    0xf01233c0,%eax$/;"	l
f01044c6	obj/kern/kernel.asm	/^f01044c6:	66 a3 78 d2 20 f0    	mov    %ax,0xf020d278$/;"	l
f01044cc	obj/kern/kernel.asm	/^f01044cc:	66 c7 05 7a d2 20 f0 	movw   $0x8,0xf020d27a$/;"	l
f01044d3	obj/kern/kernel.asm	/^f01044d3:	08 00 $/;"	l
f01044d5	obj/kern/kernel.asm	/^f01044d5:	c6 05 7c d2 20 f0 00 	movb   $0x0,0xf020d27c$/;"	l
f01044dc	obj/kern/kernel.asm	/^f01044dc:	c6 05 7d d2 20 f0 ee 	movb   $0xee,0xf020d27d$/;"	l
f01044e3	obj/kern/kernel.asm	/^f01044e3:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01044e6	obj/kern/kernel.asm	/^f01044e6:	66 a3 7e d2 20 f0    	mov    %ax,0xf020d27e$/;"	l
f01044ec	obj/kern/kernel.asm	/^f01044ec:	a1 74 34 12 f0       	mov    0xf0123474,%eax$/;"	l
f01044f1	obj/kern/kernel.asm	/^f01044f1:	66 a3 e0 d3 20 f0    	mov    %ax,0xf020d3e0$/;"	l
f01044f7	obj/kern/kernel.asm	/^f01044f7:	66 c7 05 e2 d3 20 f0 	movw   $0x8,0xf020d3e2$/;"	l
f01044fe	obj/kern/kernel.asm	/^f01044fe:	08 00 $/;"	l
f0104500	obj/kern/kernel.asm	/^f0104500:	c6 05 e4 d3 20 f0 00 	movb   $0x0,0xf020d3e4$/;"	l
f0104507	obj/kern/kernel.asm	/^f0104507:	c6 05 e5 d3 20 f0 ee 	movb   $0xee,0xf020d3e5$/;"	l
f010450e	obj/kern/kernel.asm	/^f010450e:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0104511	obj/kern/kernel.asm	/^f0104511:	66 a3 e6 d3 20 f0    	mov    %ax,0xf020d3e6$/;"	l
f0104517	obj/kern/kernel.asm	/^f0104517:	e8 a4 fe ff ff       	call   f01043c0 <trap_init_percpu>$/;"	l
f010451c	obj/kern/kernel.asm	/^f010451c:	c9                   	leave  $/;"	l
f010451d	obj/kern/kernel.asm	/^f010451d:	c3                   	ret    $/;"	l
f010451e	obj/kern/kernel.asm	/^f010451e <print_regs>:$/;"	l
f010451e	obj/kern/kernel.asm	/^f010451e:	55                   	push   %ebp$/;"	l
f010451f	obj/kern/kernel.asm	/^f010451f:	89 e5                	mov    %esp,%ebp$/;"	l
f0104521	obj/kern/kernel.asm	/^f0104521:	53                   	push   %ebx$/;"	l
f0104522	obj/kern/kernel.asm	/^f0104522:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0104525	obj/kern/kernel.asm	/^f0104525:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0104528	obj/kern/kernel.asm	/^f0104528:	8b 03                	mov    (%ebx),%eax$/;"	l
f010452a	obj/kern/kernel.asm	/^f010452a:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010452e	obj/kern/kernel.asm	/^f010452e:	c7 04 24 db 8b 10 f0 	movl   $0xf0108bdb,(%esp)$/;"	l
f0104535	obj/kern/kernel.asm	/^f0104535:	e8 64 fe ff ff       	call   f010439e <cprintf>$/;"	l
f010453a	obj/kern/kernel.asm	/^f010453a:	8b 43 04             	mov    0x4(%ebx),%eax$/;"	l
f010453d	obj/kern/kernel.asm	/^f010453d:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104541	obj/kern/kernel.asm	/^f0104541:	c7 04 24 ea 8b 10 f0 	movl   $0xf0108bea,(%esp)$/;"	l
f0104548	obj/kern/kernel.asm	/^f0104548:	e8 51 fe ff ff       	call   f010439e <cprintf>$/;"	l
f010454d	obj/kern/kernel.asm	/^f010454d:	8b 43 08             	mov    0x8(%ebx),%eax$/;"	l
f0104550	obj/kern/kernel.asm	/^f0104550:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104554	obj/kern/kernel.asm	/^f0104554:	c7 04 24 f9 8b 10 f0 	movl   $0xf0108bf9,(%esp)$/;"	l
f010455b	obj/kern/kernel.asm	/^f010455b:	e8 3e fe ff ff       	call   f010439e <cprintf>$/;"	l
f0104560	obj/kern/kernel.asm	/^f0104560:	8b 43 0c             	mov    0xc(%ebx),%eax$/;"	l
f0104563	obj/kern/kernel.asm	/^f0104563:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104567	obj/kern/kernel.asm	/^f0104567:	c7 04 24 08 8c 10 f0 	movl   $0xf0108c08,(%esp)$/;"	l
f010456e	obj/kern/kernel.asm	/^f010456e:	e8 2b fe ff ff       	call   f010439e <cprintf>$/;"	l
f0104573	obj/kern/kernel.asm	/^f0104573:	8b 43 10             	mov    0x10(%ebx),%eax$/;"	l
f0104576	obj/kern/kernel.asm	/^f0104576:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010457a	obj/kern/kernel.asm	/^f010457a:	c7 04 24 17 8c 10 f0 	movl   $0xf0108c17,(%esp)$/;"	l
f0104581	obj/kern/kernel.asm	/^f0104581:	e8 18 fe ff ff       	call   f010439e <cprintf>$/;"	l
f0104586	obj/kern/kernel.asm	/^f0104586:	8b 43 14             	mov    0x14(%ebx),%eax$/;"	l
f0104589	obj/kern/kernel.asm	/^f0104589:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010458d	obj/kern/kernel.asm	/^f010458d:	c7 04 24 26 8c 10 f0 	movl   $0xf0108c26,(%esp)$/;"	l
f0104594	obj/kern/kernel.asm	/^f0104594:	e8 05 fe ff ff       	call   f010439e <cprintf>$/;"	l
f0104599	obj/kern/kernel.asm	/^f0104599:	8b 43 18             	mov    0x18(%ebx),%eax$/;"	l
f010459c	obj/kern/kernel.asm	/^f010459c:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01045a0	obj/kern/kernel.asm	/^f01045a0:	c7 04 24 35 8c 10 f0 	movl   $0xf0108c35,(%esp)$/;"	l
f01045a7	obj/kern/kernel.asm	/^f01045a7:	e8 f2 fd ff ff       	call   f010439e <cprintf>$/;"	l
f01045ac	obj/kern/kernel.asm	/^f01045ac:	8b 43 1c             	mov    0x1c(%ebx),%eax$/;"	l
f01045af	obj/kern/kernel.asm	/^f01045af:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01045b3	obj/kern/kernel.asm	/^f01045b3:	c7 04 24 44 8c 10 f0 	movl   $0xf0108c44,(%esp)$/;"	l
f01045ba	obj/kern/kernel.asm	/^f01045ba:	e8 df fd ff ff       	call   f010439e <cprintf>$/;"	l
f01045bf	obj/kern/kernel.asm	/^f01045bf:	83 c4 14             	add    $0x14,%esp$/;"	l
f01045c2	obj/kern/kernel.asm	/^f01045c2:	5b                   	pop    %ebx$/;"	l
f01045c3	obj/kern/kernel.asm	/^f01045c3:	5d                   	pop    %ebp$/;"	l
f01045c4	obj/kern/kernel.asm	/^f01045c4:	c3                   	ret    $/;"	l
f01045c5	obj/kern/kernel.asm	/^f01045c5 <print_trapframe>:$/;"	l
f01045c5	obj/kern/kernel.asm	/^f01045c5:	55                   	push   %ebp$/;"	l
f01045c6	obj/kern/kernel.asm	/^f01045c6:	89 e5                	mov    %esp,%ebp$/;"	l
f01045c8	obj/kern/kernel.asm	/^f01045c8:	56                   	push   %esi$/;"	l
f01045c9	obj/kern/kernel.asm	/^f01045c9:	53                   	push   %ebx$/;"	l
f01045ca	obj/kern/kernel.asm	/^f01045ca:	83 ec 10             	sub    $0x10,%esp$/;"	l
f01045cd	obj/kern/kernel.asm	/^f01045cd:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f01045d0	obj/kern/kernel.asm	/^f01045d0:	e8 17 2a 00 00       	call   f0106fec <cpunum>$/;"	l
f01045d5	obj/kern/kernel.asm	/^f01045d5:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f01045d9	obj/kern/kernel.asm	/^f01045d9:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f01045dd	obj/kern/kernel.asm	/^f01045dd:	c7 04 24 a8 8c 10 f0 	movl   $0xf0108ca8,(%esp)$/;"	l
f01045e4	obj/kern/kernel.asm	/^f01045e4:	e8 b5 fd ff ff       	call   f010439e <cprintf>$/;"	l
f01045e9	obj/kern/kernel.asm	/^f01045e9:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f01045ec	obj/kern/kernel.asm	/^f01045ec:	e8 2d ff ff ff       	call   f010451e <print_regs>$/;"	l
f01045f1	obj/kern/kernel.asm	/^f01045f1:	0f b7 43 20          	movzwl 0x20(%ebx),%eax$/;"	l
f01045f5	obj/kern/kernel.asm	/^f01045f5:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01045f9	obj/kern/kernel.asm	/^f01045f9:	c7 04 24 c6 8c 10 f0 	movl   $0xf0108cc6,(%esp)$/;"	l
f0104600	obj/kern/kernel.asm	/^f0104600:	e8 99 fd ff ff       	call   f010439e <cprintf>$/;"	l
f0104605	obj/kern/kernel.asm	/^f0104605:	0f b7 43 24          	movzwl 0x24(%ebx),%eax$/;"	l
f0104609	obj/kern/kernel.asm	/^f0104609:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010460d	obj/kern/kernel.asm	/^f010460d:	c7 04 24 d9 8c 10 f0 	movl   $0xf0108cd9,(%esp)$/;"	l
f0104614	obj/kern/kernel.asm	/^f0104614:	e8 85 fd ff ff       	call   f010439e <cprintf>$/;"	l
f0104619	obj/kern/kernel.asm	/^f0104619:	8b 43 28             	mov    0x28(%ebx),%eax$/;"	l
f010461c	obj/kern/kernel.asm	/^f010461c:	83 f8 13             	cmp    $0x13,%eax$/;"	l
f010461f	obj/kern/kernel.asm	/^f010461f:	77 09                	ja     f010462a <print_trapframe+0x65>$/;"	l
f0104621	obj/kern/kernel.asm	/^f0104621:	8b 14 85 80 8f 10 f0 	mov    -0xfef7080(,%eax,4),%edx$/;"	l
f0104628	obj/kern/kernel.asm	/^f0104628:	eb 1f                	jmp    f0104649 <print_trapframe+0x84>$/;"	l
f010462a	obj/kern/kernel.asm	/^f010462a:	83 f8 30             	cmp    $0x30,%eax$/;"	l
f010462d	obj/kern/kernel.asm	/^f010462d:	74 15                	je     f0104644 <print_trapframe+0x7f>$/;"	l
f010462f	obj/kern/kernel.asm	/^f010462f:	8d 50 e0             	lea    -0x20(%eax),%edx$/;"	l
f0104632	obj/kern/kernel.asm	/^f0104632:	83 fa 0f             	cmp    $0xf,%edx$/;"	l
f0104635	obj/kern/kernel.asm	/^f0104635:	ba 5f 8c 10 f0       	mov    $0xf0108c5f,%edx$/;"	l
f010463a	obj/kern/kernel.asm	/^f010463a:	b9 72 8c 10 f0       	mov    $0xf0108c72,%ecx$/;"	l
f010463f	obj/kern/kernel.asm	/^f010463f:	0f 47 d1             	cmova  %ecx,%edx$/;"	l
f0104642	obj/kern/kernel.asm	/^f0104642:	eb 05                	jmp    f0104649 <print_trapframe+0x84>$/;"	l
f0104644	obj/kern/kernel.asm	/^f0104644:	ba 53 8c 10 f0       	mov    $0xf0108c53,%edx$/;"	l
f0104649	obj/kern/kernel.asm	/^f0104649:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f010464d	obj/kern/kernel.asm	/^f010464d:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104651	obj/kern/kernel.asm	/^f0104651:	c7 04 24 ec 8c 10 f0 	movl   $0xf0108cec,(%esp)$/;"	l
f0104658	obj/kern/kernel.asm	/^f0104658:	e8 41 fd ff ff       	call   f010439e <cprintf>$/;"	l
f010465d	obj/kern/kernel.asm	/^f010465d:	3b 1d 60 da 20 f0    	cmp    0xf020da60,%ebx$/;"	l
f0104663	obj/kern/kernel.asm	/^f0104663:	75 19                	jne    f010467e <print_trapframe+0xb9>$/;"	l
f0104665	obj/kern/kernel.asm	/^f0104665:	83 7b 28 0e          	cmpl   $0xe,0x28(%ebx)$/;"	l
f0104669	obj/kern/kernel.asm	/^f0104669:	75 13                	jne    f010467e <print_trapframe+0xb9>$/;"	l
f010466b	obj/kern/kernel.asm	/^f010466b:	0f 20 d0             	mov    %cr2,%eax$/;"	l
f010466e	obj/kern/kernel.asm	/^f010466e:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104672	obj/kern/kernel.asm	/^f0104672:	c7 04 24 fe 8c 10 f0 	movl   $0xf0108cfe,(%esp)$/;"	l
f0104679	obj/kern/kernel.asm	/^f0104679:	e8 20 fd ff ff       	call   f010439e <cprintf>$/;"	l
f010467e	obj/kern/kernel.asm	/^f010467e:	8b 43 2c             	mov    0x2c(%ebx),%eax$/;"	l
f0104681	obj/kern/kernel.asm	/^f0104681:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104685	obj/kern/kernel.asm	/^f0104685:	c7 04 24 0d 8d 10 f0 	movl   $0xf0108d0d,(%esp)$/;"	l
f010468c	obj/kern/kernel.asm	/^f010468c:	e8 0d fd ff ff       	call   f010439e <cprintf>$/;"	l
f0104691	obj/kern/kernel.asm	/^f0104691:	83 7b 28 0e          	cmpl   $0xe,0x28(%ebx)$/;"	l
f0104695	obj/kern/kernel.asm	/^f0104695:	75 51                	jne    f01046e8 <print_trapframe+0x123>$/;"	l
f0104697	obj/kern/kernel.asm	/^f0104697:	8b 43 2c             	mov    0x2c(%ebx),%eax$/;"	l
f010469a	obj/kern/kernel.asm	/^f010469a:	89 c2                	mov    %eax,%edx$/;"	l
f010469c	obj/kern/kernel.asm	/^f010469c:	83 e2 01             	and    $0x1,%edx$/;"	l
f010469f	obj/kern/kernel.asm	/^f010469f:	ba 81 8c 10 f0       	mov    $0xf0108c81,%edx$/;"	l
f01046a4	obj/kern/kernel.asm	/^f01046a4:	b9 8c 8c 10 f0       	mov    $0xf0108c8c,%ecx$/;"	l
f01046a9	obj/kern/kernel.asm	/^f01046a9:	0f 45 ca             	cmovne %edx,%ecx$/;"	l
f01046ac	obj/kern/kernel.asm	/^f01046ac:	89 c2                	mov    %eax,%edx$/;"	l
f01046ae	obj/kern/kernel.asm	/^f01046ae:	83 e2 02             	and    $0x2,%edx$/;"	l
f01046b1	obj/kern/kernel.asm	/^f01046b1:	ba 98 8c 10 f0       	mov    $0xf0108c98,%edx$/;"	l
f01046b6	obj/kern/kernel.asm	/^f01046b6:	be 9e 8c 10 f0       	mov    $0xf0108c9e,%esi$/;"	l
f01046bb	obj/kern/kernel.asm	/^f01046bb:	0f 44 d6             	cmove  %esi,%edx$/;"	l
f01046be	obj/kern/kernel.asm	/^f01046be:	83 e0 04             	and    $0x4,%eax$/;"	l
f01046c1	obj/kern/kernel.asm	/^f01046c1:	b8 a3 8c 10 f0       	mov    $0xf0108ca3,%eax$/;"	l
f01046c6	obj/kern/kernel.asm	/^f01046c6:	be d8 8d 10 f0       	mov    $0xf0108dd8,%esi$/;"	l
f01046cb	obj/kern/kernel.asm	/^f01046cb:	0f 44 c6             	cmove  %esi,%eax$/;"	l
f01046ce	obj/kern/kernel.asm	/^f01046ce:	89 4c 24 0c          	mov    %ecx,0xc(%esp)$/;"	l
f01046d2	obj/kern/kernel.asm	/^f01046d2:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f01046d6	obj/kern/kernel.asm	/^f01046d6:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01046da	obj/kern/kernel.asm	/^f01046da:	c7 04 24 1b 8d 10 f0 	movl   $0xf0108d1b,(%esp)$/;"	l
f01046e1	obj/kern/kernel.asm	/^f01046e1:	e8 b8 fc ff ff       	call   f010439e <cprintf>$/;"	l
f01046e6	obj/kern/kernel.asm	/^f01046e6:	eb 0c                	jmp    f01046f4 <print_trapframe+0x12f>$/;"	l
f01046e8	obj/kern/kernel.asm	/^f01046e8:	c7 04 24 88 8a 10 f0 	movl   $0xf0108a88,(%esp)$/;"	l
f01046ef	obj/kern/kernel.asm	/^f01046ef:	e8 aa fc ff ff       	call   f010439e <cprintf>$/;"	l
f01046f4	obj/kern/kernel.asm	/^f01046f4:	8b 43 30             	mov    0x30(%ebx),%eax$/;"	l
f01046f7	obj/kern/kernel.asm	/^f01046f7:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01046fb	obj/kern/kernel.asm	/^f01046fb:	c7 04 24 2a 8d 10 f0 	movl   $0xf0108d2a,(%esp)$/;"	l
f0104702	obj/kern/kernel.asm	/^f0104702:	e8 97 fc ff ff       	call   f010439e <cprintf>$/;"	l
f0104707	obj/kern/kernel.asm	/^f0104707:	0f b7 43 34          	movzwl 0x34(%ebx),%eax$/;"	l
f010470b	obj/kern/kernel.asm	/^f010470b:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010470f	obj/kern/kernel.asm	/^f010470f:	c7 04 24 39 8d 10 f0 	movl   $0xf0108d39,(%esp)$/;"	l
f0104716	obj/kern/kernel.asm	/^f0104716:	e8 83 fc ff ff       	call   f010439e <cprintf>$/;"	l
f010471b	obj/kern/kernel.asm	/^f010471b:	8b 43 38             	mov    0x38(%ebx),%eax$/;"	l
f010471e	obj/kern/kernel.asm	/^f010471e:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104722	obj/kern/kernel.asm	/^f0104722:	c7 04 24 4c 8d 10 f0 	movl   $0xf0108d4c,(%esp)$/;"	l
f0104729	obj/kern/kernel.asm	/^f0104729:	e8 70 fc ff ff       	call   f010439e <cprintf>$/;"	l
f010472e	obj/kern/kernel.asm	/^f010472e:	f6 43 34 03          	testb  $0x3,0x34(%ebx)$/;"	l
f0104732	obj/kern/kernel.asm	/^f0104732:	74 27                	je     f010475b <print_trapframe+0x196>$/;"	l
f0104734	obj/kern/kernel.asm	/^f0104734:	8b 43 3c             	mov    0x3c(%ebx),%eax$/;"	l
f0104737	obj/kern/kernel.asm	/^f0104737:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010473b	obj/kern/kernel.asm	/^f010473b:	c7 04 24 5b 8d 10 f0 	movl   $0xf0108d5b,(%esp)$/;"	l
f0104742	obj/kern/kernel.asm	/^f0104742:	e8 57 fc ff ff       	call   f010439e <cprintf>$/;"	l
f0104747	obj/kern/kernel.asm	/^f0104747:	0f b7 43 40          	movzwl 0x40(%ebx),%eax$/;"	l
f010474b	obj/kern/kernel.asm	/^f010474b:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010474f	obj/kern/kernel.asm	/^f010474f:	c7 04 24 6a 8d 10 f0 	movl   $0xf0108d6a,(%esp)$/;"	l
f0104756	obj/kern/kernel.asm	/^f0104756:	e8 43 fc ff ff       	call   f010439e <cprintf>$/;"	l
f010475b	obj/kern/kernel.asm	/^f010475b:	83 c4 10             	add    $0x10,%esp$/;"	l
f010475e	obj/kern/kernel.asm	/^f010475e:	5b                   	pop    %ebx$/;"	l
f010475f	obj/kern/kernel.asm	/^f010475f:	5e                   	pop    %esi$/;"	l
f0104760	obj/kern/kernel.asm	/^f0104760:	5d                   	pop    %ebp$/;"	l
f0104761	obj/kern/kernel.asm	/^f0104761:	c3                   	ret    $/;"	l
f0104762	obj/kern/kernel.asm	/^f0104762 <page_fault_handler>:$/;"	l
f0104762	obj/kern/kernel.asm	/^f0104762:	55                   	push   %ebp$/;"	l
f0104763	obj/kern/kernel.asm	/^f0104763:	89 e5                	mov    %esp,%ebp$/;"	l
f0104765	obj/kern/kernel.asm	/^f0104765:	57                   	push   %edi$/;"	l
f0104766	obj/kern/kernel.asm	/^f0104766:	56                   	push   %esi$/;"	l
f0104767	obj/kern/kernel.asm	/^f0104767:	53                   	push   %ebx$/;"	l
f0104768	obj/kern/kernel.asm	/^f0104768:	83 ec 4c             	sub    $0x4c,%esp$/;"	l
f010476b	obj/kern/kernel.asm	/^f010476b:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f010476e	obj/kern/kernel.asm	/^f010476e:	0f 20 d6             	mov    %cr2,%esi$/;"	l
f0104771	obj/kern/kernel.asm	/^f0104771:	f6 43 34 03          	testb  $0x3,0x34(%ebx)$/;"	l
f0104775	obj/kern/kernel.asm	/^f0104775:	75 1c                	jne    f0104793 <page_fault_handler+0x31>$/;"	l
f0104777	obj/kern/kernel.asm	/^f0104777:	c7 44 24 08 24 8f 10 	movl   $0xf0108f24,0x8(%esp)$/;"	l
f010477e	obj/kern/kernel.asm	/^f010477e:	f0 $/;"	l
f010477f	obj/kern/kernel.asm	/^f010477f:	c7 44 24 04 34 01 00 	movl   $0x134,0x4(%esp)$/;"	l
f0104786	obj/kern/kernel.asm	/^f0104786:	00 $/;"	l
f0104787	obj/kern/kernel.asm	/^f0104787:	c7 04 24 7d 8d 10 f0 	movl   $0xf0108d7d,(%esp)$/;"	l
f010478e	obj/kern/kernel.asm	/^f010478e:	e8 ad b8 ff ff       	call   f0100040 <_panic>$/;"	l
f0104793	obj/kern/kernel.asm	/^f0104793:	e8 54 28 00 00       	call   f0106fec <cpunum>$/;"	l
f0104798	obj/kern/kernel.asm	/^f0104798:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010479b	obj/kern/kernel.asm	/^f010479b:	8b 80 28 e0 20 f0    	mov    -0xfdf1fd8(%eax),%eax$/;"	l
f01047a1	obj/kern/kernel.asm	/^f01047a1:	83 78 64 00          	cmpl   $0x0,0x64(%eax)$/;"	l
f01047a5	obj/kern/kernel.asm	/^f01047a5:	0f 84 0d 01 00 00    	je     f01048b8 <page_fault_handler+0x156>$/;"	l
f01047ab	obj/kern/kernel.asm	/^f01047ab:	8b 43 2c             	mov    0x2c(%ebx),%eax$/;"	l
f01047ae	obj/kern/kernel.asm	/^f01047ae:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f01047b1	obj/kern/kernel.asm	/^f01047b1:	8b 03                	mov    (%ebx),%eax$/;"	l
f01047b3	obj/kern/kernel.asm	/^f01047b3:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
f01047b6	obj/kern/kernel.asm	/^f01047b6:	8b 43 04             	mov    0x4(%ebx),%eax$/;"	l
f01047b9	obj/kern/kernel.asm	/^f01047b9:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f01047bc	obj/kern/kernel.asm	/^f01047bc:	8b 43 08             	mov    0x8(%ebx),%eax$/;"	l
f01047bf	obj/kern/kernel.asm	/^f01047bf:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f01047c2	obj/kern/kernel.asm	/^f01047c2:	8b 43 0c             	mov    0xc(%ebx),%eax$/;"	l
f01047c5	obj/kern/kernel.asm	/^f01047c5:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f01047c8	obj/kern/kernel.asm	/^f01047c8:	8b 43 10             	mov    0x10(%ebx),%eax$/;"	l
f01047cb	obj/kern/kernel.asm	/^f01047cb:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f01047ce	obj/kern/kernel.asm	/^f01047ce:	8b 43 14             	mov    0x14(%ebx),%eax$/;"	l
f01047d1	obj/kern/kernel.asm	/^f01047d1:	89 45 c0             	mov    %eax,-0x40(%ebp)$/;"	l
f01047d4	obj/kern/kernel.asm	/^f01047d4:	8b 43 18             	mov    0x18(%ebx),%eax$/;"	l
f01047d7	obj/kern/kernel.asm	/^f01047d7:	89 45 bc             	mov    %eax,-0x44(%ebp)$/;"	l
f01047da	obj/kern/kernel.asm	/^f01047da:	8b 43 1c             	mov    0x1c(%ebx),%eax$/;"	l
f01047dd	obj/kern/kernel.asm	/^f01047dd:	89 45 b8             	mov    %eax,-0x48(%ebp)$/;"	l
f01047e0	obj/kern/kernel.asm	/^f01047e0:	8b 43 30             	mov    0x30(%ebx),%eax$/;"	l
f01047e3	obj/kern/kernel.asm	/^f01047e3:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f01047e6	obj/kern/kernel.asm	/^f01047e6:	8b 43 38             	mov    0x38(%ebx),%eax$/;"	l
f01047e9	obj/kern/kernel.asm	/^f01047e9:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
f01047ec	obj/kern/kernel.asm	/^f01047ec:	8b 7b 3c             	mov    0x3c(%ebx),%edi$/;"	l
f01047ef	obj/kern/kernel.asm	/^f01047ef:	8d 87 00 10 40 11    	lea    0x11401000(%edi),%eax$/;"	l
f01047f5	obj/kern/kernel.asm	/^f01047f5:	3d ff 0f 00 00       	cmp    $0xfff,%eax$/;"	l
f01047fa	obj/kern/kernel.asm	/^f01047fa:	77 08                	ja     f0104804 <page_fault_handler+0xa2>$/;"	l
f01047fc	obj/kern/kernel.asm	/^f01047fc:	8d 47 fc             	lea    -0x4(%edi),%eax$/;"	l
f01047ff	obj/kern/kernel.asm	/^f01047ff:	89 43 3c             	mov    %eax,0x3c(%ebx)$/;"	l
f0104802	obj/kern/kernel.asm	/^f0104802:	eb 07                	jmp    f010480b <page_fault_handler+0xa9>$/;"	l
f0104804	obj/kern/kernel.asm	/^f0104804:	c7 43 3c 00 00 c0 ee 	movl   $0xeec00000,0x3c(%ebx)$/;"	l
f010480b	obj/kern/kernel.asm	/^f010480b:	8b 43 3c             	mov    0x3c(%ebx),%eax$/;"	l
f010480e	obj/kern/kernel.asm	/^f010480e:	83 e8 34             	sub    $0x34,%eax$/;"	l
f0104811	obj/kern/kernel.asm	/^f0104811:	89 45 c4             	mov    %eax,-0x3c(%ebp)$/;"	l
f0104814	obj/kern/kernel.asm	/^f0104814:	89 43 3c             	mov    %eax,0x3c(%ebx)$/;"	l
f0104817	obj/kern/kernel.asm	/^f0104817:	e8 d0 27 00 00       	call   f0106fec <cpunum>$/;"	l
f010481c	obj/kern/kernel.asm	/^f010481c:	c7 44 24 0c 07 00 00 	movl   $0x7,0xc(%esp)$/;"	l
f0104823	obj/kern/kernel.asm	/^f0104823:	00 $/;"	l
f0104824	obj/kern/kernel.asm	/^f0104824:	c7 44 24 08 34 00 00 	movl   $0x34,0x8(%esp)$/;"	l
f010482b	obj/kern/kernel.asm	/^f010482b:	00 $/;"	l
f010482c	obj/kern/kernel.asm	/^f010482c:	8b 55 c4             	mov    -0x3c(%ebp),%edx$/;"	l
f010482f	obj/kern/kernel.asm	/^f010482f:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f0104833	obj/kern/kernel.asm	/^f0104833:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104836	obj/kern/kernel.asm	/^f0104836:	8b 80 28 e0 20 f0    	mov    -0xfdf1fd8(%eax),%eax$/;"	l
f010483c	obj/kern/kernel.asm	/^f010483c:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010483f	obj/kern/kernel.asm	/^f010483f:	e8 6c f1 ff ff       	call   f01039b0 <user_mem_assert>$/;"	l
f0104844	obj/kern/kernel.asm	/^f0104844:	8b 43 3c             	mov    0x3c(%ebx),%eax$/;"	l
f0104847	obj/kern/kernel.asm	/^f0104847:	89 30                	mov    %esi,(%eax)$/;"	l
f0104849	obj/kern/kernel.asm	/^f0104849:	8b 4d dc             	mov    -0x24(%ebp),%ecx$/;"	l
f010484c	obj/kern/kernel.asm	/^f010484c:	89 48 04             	mov    %ecx,0x4(%eax)$/;"	l
f010484f	obj/kern/kernel.asm	/^f010484f:	8b 55 c8             	mov    -0x38(%ebp),%edx$/;"	l
f0104852	obj/kern/kernel.asm	/^f0104852:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
f0104855	obj/kern/kernel.asm	/^f0104855:	8b 4d d0             	mov    -0x30(%ebp),%ecx$/;"	l
f0104858	obj/kern/kernel.asm	/^f0104858:	89 48 0c             	mov    %ecx,0xc(%eax)$/;"	l
f010485b	obj/kern/kernel.asm	/^f010485b:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
f010485e	obj/kern/kernel.asm	/^f010485e:	89 50 10             	mov    %edx,0x10(%eax)$/;"	l
f0104861	obj/kern/kernel.asm	/^f0104861:	8b 4d e0             	mov    -0x20(%ebp),%ecx$/;"	l
f0104864	obj/kern/kernel.asm	/^f0104864:	89 48 14             	mov    %ecx,0x14(%eax)$/;"	l
f0104867	obj/kern/kernel.asm	/^f0104867:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
f010486a	obj/kern/kernel.asm	/^f010486a:	89 50 18             	mov    %edx,0x18(%eax)$/;"	l
f010486d	obj/kern/kernel.asm	/^f010486d:	8b 4d c0             	mov    -0x40(%ebp),%ecx$/;"	l
f0104870	obj/kern/kernel.asm	/^f0104870:	89 48 1c             	mov    %ecx,0x1c(%eax)$/;"	l
f0104873	obj/kern/kernel.asm	/^f0104873:	8b 55 bc             	mov    -0x44(%ebp),%edx$/;"	l
f0104876	obj/kern/kernel.asm	/^f0104876:	89 50 20             	mov    %edx,0x20(%eax)$/;"	l
f0104879	obj/kern/kernel.asm	/^f0104879:	8b 4d b8             	mov    -0x48(%ebp),%ecx$/;"	l
f010487c	obj/kern/kernel.asm	/^f010487c:	89 48 24             	mov    %ecx,0x24(%eax)$/;"	l
f010487f	obj/kern/kernel.asm	/^f010487f:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
f0104882	obj/kern/kernel.asm	/^f0104882:	89 50 28             	mov    %edx,0x28(%eax)$/;"	l
f0104885	obj/kern/kernel.asm	/^f0104885:	8b 4d cc             	mov    -0x34(%ebp),%ecx$/;"	l
f0104888	obj/kern/kernel.asm	/^f0104888:	89 48 2c             	mov    %ecx,0x2c(%eax)$/;"	l
f010488b	obj/kern/kernel.asm	/^f010488b:	89 78 30             	mov    %edi,0x30(%eax)$/;"	l
f010488e	obj/kern/kernel.asm	/^f010488e:	e8 59 27 00 00       	call   f0106fec <cpunum>$/;"	l
f0104893	obj/kern/kernel.asm	/^f0104893:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104896	obj/kern/kernel.asm	/^f0104896:	8b 80 28 e0 20 f0    	mov    -0xfdf1fd8(%eax),%eax$/;"	l
f010489c	obj/kern/kernel.asm	/^f010489c:	8b 40 64             	mov    0x64(%eax),%eax$/;"	l
f010489f	obj/kern/kernel.asm	/^f010489f:	89 43 30             	mov    %eax,0x30(%ebx)$/;"	l
f01048a2	obj/kern/kernel.asm	/^f01048a2:	e8 45 27 00 00       	call   f0106fec <cpunum>$/;"	l
f01048a7	obj/kern/kernel.asm	/^f01048a7:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01048aa	obj/kern/kernel.asm	/^f01048aa:	8b 80 28 e0 20 f0    	mov    -0xfdf1fd8(%eax),%eax$/;"	l
f01048b0	obj/kern/kernel.asm	/^f01048b0:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01048b3	obj/kern/kernel.asm	/^f01048b3:	e8 9c f8 ff ff       	call   f0104154 <env_run>$/;"	l
f01048b8	obj/kern/kernel.asm	/^f01048b8:	8b 7b 30             	mov    0x30(%ebx),%edi$/;"	l
f01048bb	obj/kern/kernel.asm	/^f01048bb:	e8 2c 27 00 00       	call   f0106fec <cpunum>$/;"	l
f01048c0	obj/kern/kernel.asm	/^f01048c0:	89 7c 24 0c          	mov    %edi,0xc(%esp)$/;"	l
f01048c4	obj/kern/kernel.asm	/^f01048c4:	89 74 24 08          	mov    %esi,0x8(%esp)$/;"	l
f01048c8	obj/kern/kernel.asm	/^f01048c8:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01048cb	obj/kern/kernel.asm	/^f01048cb:	8b 80 28 e0 20 f0    	mov    -0xfdf1fd8(%eax),%eax$/;"	l
f01048d1	obj/kern/kernel.asm	/^f01048d1:	8b 40 48             	mov    0x48(%eax),%eax$/;"	l
f01048d4	obj/kern/kernel.asm	/^f01048d4:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01048d8	obj/kern/kernel.asm	/^f01048d8:	c7 04 24 54 8f 10 f0 	movl   $0xf0108f54,(%esp)$/;"	l
f01048df	obj/kern/kernel.asm	/^f01048df:	e8 ba fa ff ff       	call   f010439e <cprintf>$/;"	l
f01048e4	obj/kern/kernel.asm	/^f01048e4:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f01048e7	obj/kern/kernel.asm	/^f01048e7:	e8 d9 fc ff ff       	call   f01045c5 <print_trapframe>$/;"	l
f01048ec	obj/kern/kernel.asm	/^f01048ec:	e8 fb 26 00 00       	call   f0106fec <cpunum>$/;"	l
f01048f1	obj/kern/kernel.asm	/^f01048f1:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01048f4	obj/kern/kernel.asm	/^f01048f4:	8b 80 28 e0 20 f0    	mov    -0xfdf1fd8(%eax),%eax$/;"	l
f01048fa	obj/kern/kernel.asm	/^f01048fa:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01048fd	obj/kern/kernel.asm	/^f01048fd:	e8 b1 f7 ff ff       	call   f01040b3 <env_destroy>$/;"	l
f0104902	obj/kern/kernel.asm	/^f0104902:	83 c4 4c             	add    $0x4c,%esp$/;"	l
f0104905	obj/kern/kernel.asm	/^f0104905:	5b                   	pop    %ebx$/;"	l
f0104906	obj/kern/kernel.asm	/^f0104906:	5e                   	pop    %esi$/;"	l
f0104907	obj/kern/kernel.asm	/^f0104907:	5f                   	pop    %edi$/;"	l
f0104908	obj/kern/kernel.asm	/^f0104908:	5d                   	pop    %ebp$/;"	l
f0104909	obj/kern/kernel.asm	/^f0104909:	c3                   	ret    $/;"	l
f010490a	obj/kern/kernel.asm	/^f010490a <trap>:$/;"	l
f010490a	obj/kern/kernel.asm	/^f010490a:	55                   	push   %ebp$/;"	l
f010490b	obj/kern/kernel.asm	/^f010490b:	89 e5                	mov    %esp,%ebp$/;"	l
f010490d	obj/kern/kernel.asm	/^f010490d:	57                   	push   %edi$/;"	l
f010490e	obj/kern/kernel.asm	/^f010490e:	56                   	push   %esi$/;"	l
f010490f	obj/kern/kernel.asm	/^f010490f:	83 ec 20             	sub    $0x20,%esp$/;"	l
f0104912	obj/kern/kernel.asm	/^f0104912:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0104915	obj/kern/kernel.asm	/^f0104915:	fc                   	cld    $/;"	l
f0104916	obj/kern/kernel.asm	/^f0104916:	83 3d 80 de 20 f0 00 	cmpl   $0x0,0xf020de80$/;"	l
f010491d	obj/kern/kernel.asm	/^f010491d:	74 01                	je     f0104920 <trap+0x16>$/;"	l
f010491f	obj/kern/kernel.asm	/^f010491f:	f4                   	hlt    $/;"	l
f0104920	obj/kern/kernel.asm	/^f0104920:	e8 c7 26 00 00       	call   f0106fec <cpunum>$/;"	l
f0104925	obj/kern/kernel.asm	/^f0104925:	6b d0 74             	imul   $0x74,%eax,%edx$/;"	l
f0104928	obj/kern/kernel.asm	/^f0104928:	81 c2 20 e0 20 f0    	add    $0xf020e020,%edx$/;"	l
f010492e	obj/kern/kernel.asm	/^f010492e:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0104933	obj/kern/kernel.asm	/^f0104933:	f0 87 42 04          	lock xchg %eax,0x4(%edx)$/;"	l
f0104937	obj/kern/kernel.asm	/^f0104937:	83 f8 02             	cmp    $0x2,%eax$/;"	l
f010493a	obj/kern/kernel.asm	/^f010493a:	75 0c                	jne    f0104948 <trap+0x3e>$/;"	l
f010493c	obj/kern/kernel.asm	/^f010493c:	c7 04 24 c0 37 12 f0 	movl   $0xf01237c0,(%esp)$/;"	l
f0104943	obj/kern/kernel.asm	/^f0104943:	e8 23 29 00 00       	call   f010726b <spin_lock>$/;"	l
f0104948	obj/kern/kernel.asm	/^f0104948:	9c                   	pushf  $/;"	l
f0104949	obj/kern/kernel.asm	/^f0104949:	58                   	pop    %eax$/;"	l
f010494a	obj/kern/kernel.asm	/^f010494a:	f6 c4 02             	test   $0x2,%ah$/;"	l
f010494d	obj/kern/kernel.asm	/^f010494d:	74 24                	je     f0104973 <trap+0x69>$/;"	l
f010494f	obj/kern/kernel.asm	/^f010494f:	c7 44 24 0c 89 8d 10 	movl   $0xf0108d89,0xc(%esp)$/;"	l
f0104956	obj/kern/kernel.asm	/^f0104956:	f0 $/;"	l
f0104957	obj/kern/kernel.asm	/^f0104957:	c7 44 24 08 9f 87 10 	movl   $0xf010879f,0x8(%esp)$/;"	l
f010495e	obj/kern/kernel.asm	/^f010495e:	f0 $/;"	l
f010495f	obj/kern/kernel.asm	/^f010495f:	c7 44 24 04 00 01 00 	movl   $0x100,0x4(%esp)$/;"	l
f0104966	obj/kern/kernel.asm	/^f0104966:	00 $/;"	l
f0104967	obj/kern/kernel.asm	/^f0104967:	c7 04 24 7d 8d 10 f0 	movl   $0xf0108d7d,(%esp)$/;"	l
f010496e	obj/kern/kernel.asm	/^f010496e:	e8 cd b6 ff ff       	call   f0100040 <_panic>$/;"	l
f0104973	obj/kern/kernel.asm	/^f0104973:	0f b7 46 34          	movzwl 0x34(%esi),%eax$/;"	l
f0104977	obj/kern/kernel.asm	/^f0104977:	83 e0 03             	and    $0x3,%eax$/;"	l
f010497a	obj/kern/kernel.asm	/^f010497a:	66 83 f8 03          	cmp    $0x3,%ax$/;"	l
f010497e	obj/kern/kernel.asm	/^f010497e:	0f 85 a7 00 00 00    	jne    f0104a2b <trap+0x121>$/;"	l
f0104984	obj/kern/kernel.asm	/^f0104984:	c7 04 24 c0 37 12 f0 	movl   $0xf01237c0,(%esp)$/;"	l
f010498b	obj/kern/kernel.asm	/^f010498b:	e8 db 28 00 00       	call   f010726b <spin_lock>$/;"	l
f0104990	obj/kern/kernel.asm	/^f0104990:	e8 57 26 00 00       	call   f0106fec <cpunum>$/;"	l
f0104995	obj/kern/kernel.asm	/^f0104995:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104998	obj/kern/kernel.asm	/^f0104998:	83 b8 28 e0 20 f0 00 	cmpl   $0x0,-0xfdf1fd8(%eax)$/;"	l
f010499f	obj/kern/kernel.asm	/^f010499f:	75 24                	jne    f01049c5 <trap+0xbb>$/;"	l
f01049a1	obj/kern/kernel.asm	/^f01049a1:	c7 44 24 0c a2 8d 10 	movl   $0xf0108da2,0xc(%esp)$/;"	l
f01049a8	obj/kern/kernel.asm	/^f01049a8:	f0 $/;"	l
f01049a9	obj/kern/kernel.asm	/^f01049a9:	c7 44 24 08 9f 87 10 	movl   $0xf010879f,0x8(%esp)$/;"	l
f01049b0	obj/kern/kernel.asm	/^f01049b0:	f0 $/;"	l
f01049b1	obj/kern/kernel.asm	/^f01049b1:	c7 44 24 04 08 01 00 	movl   $0x108,0x4(%esp)$/;"	l
f01049b8	obj/kern/kernel.asm	/^f01049b8:	00 $/;"	l
f01049b9	obj/kern/kernel.asm	/^f01049b9:	c7 04 24 7d 8d 10 f0 	movl   $0xf0108d7d,(%esp)$/;"	l
f01049c0	obj/kern/kernel.asm	/^f01049c0:	e8 7b b6 ff ff       	call   f0100040 <_panic>$/;"	l
f01049c5	obj/kern/kernel.asm	/^f01049c5:	e8 22 26 00 00       	call   f0106fec <cpunum>$/;"	l
f01049ca	obj/kern/kernel.asm	/^f01049ca:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01049cd	obj/kern/kernel.asm	/^f01049cd:	8b 80 28 e0 20 f0    	mov    -0xfdf1fd8(%eax),%eax$/;"	l
f01049d3	obj/kern/kernel.asm	/^f01049d3:	83 78 54 01          	cmpl   $0x1,0x54(%eax)$/;"	l
f01049d7	obj/kern/kernel.asm	/^f01049d7:	75 2d                	jne    f0104a06 <trap+0xfc>$/;"	l
f01049d9	obj/kern/kernel.asm	/^f01049d9:	e8 0e 26 00 00       	call   f0106fec <cpunum>$/;"	l
f01049de	obj/kern/kernel.asm	/^f01049de:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01049e1	obj/kern/kernel.asm	/^f01049e1:	8b 80 28 e0 20 f0    	mov    -0xfdf1fd8(%eax),%eax$/;"	l
f01049e7	obj/kern/kernel.asm	/^f01049e7:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01049ea	obj/kern/kernel.asm	/^f01049ea:	e8 f9 f4 ff ff       	call   f0103ee8 <env_free>$/;"	l
f01049ef	obj/kern/kernel.asm	/^f01049ef:	e8 f8 25 00 00       	call   f0106fec <cpunum>$/;"	l
f01049f4	obj/kern/kernel.asm	/^f01049f4:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01049f7	obj/kern/kernel.asm	/^f01049f7:	c7 80 28 e0 20 f0 00 	movl   $0x0,-0xfdf1fd8(%eax)$/;"	l
f01049fe	obj/kern/kernel.asm	/^f01049fe:	00 00 00 $/;"	l
f0104a01	obj/kern/kernel.asm	/^f0104a01:	e8 3c 0d 00 00       	call   f0105742 <sched_yield>$/;"	l
f0104a06	obj/kern/kernel.asm	/^f0104a06:	e8 e1 25 00 00       	call   f0106fec <cpunum>$/;"	l
f0104a0b	obj/kern/kernel.asm	/^f0104a0b:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104a0e	obj/kern/kernel.asm	/^f0104a0e:	8b 80 28 e0 20 f0    	mov    -0xfdf1fd8(%eax),%eax$/;"	l
f0104a14	obj/kern/kernel.asm	/^f0104a14:	b9 11 00 00 00       	mov    $0x11,%ecx$/;"	l
f0104a19	obj/kern/kernel.asm	/^f0104a19:	89 c7                	mov    %eax,%edi$/;"	l
f0104a1b	obj/kern/kernel.asm	/^f0104a1b:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f0104a1d	obj/kern/kernel.asm	/^f0104a1d:	e8 ca 25 00 00       	call   f0106fec <cpunum>$/;"	l
f0104a22	obj/kern/kernel.asm	/^f0104a22:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104a25	obj/kern/kernel.asm	/^f0104a25:	8b b0 28 e0 20 f0    	mov    -0xfdf1fd8(%eax),%esi$/;"	l
f0104a2b	obj/kern/kernel.asm	/^f0104a2b:	89 35 60 da 20 f0    	mov    %esi,0xf020da60$/;"	l
f0104a31	obj/kern/kernel.asm	/^f0104a31:	8b 46 28             	mov    0x28(%esi),%eax$/;"	l
f0104a34	obj/kern/kernel.asm	/^f0104a34:	83 f8 03             	cmp    $0x3,%eax$/;"	l
f0104a37	obj/kern/kernel.asm	/^f0104a37:	74 2c                	je     f0104a65 <trap+0x15b>$/;"	l
f0104a39	obj/kern/kernel.asm	/^f0104a39:	83 f8 03             	cmp    $0x3,%eax$/;"	l
f0104a3c	obj/kern/kernel.asm	/^f0104a3c:	77 07                	ja     f0104a45 <trap+0x13b>$/;"	l
f0104a3e	obj/kern/kernel.asm	/^f0104a3e:	83 f8 01             	cmp    $0x1,%eax$/;"	l
f0104a41	obj/kern/kernel.asm	/^f0104a41:	74 32                	je     f0104a75 <trap+0x16b>$/;"	l
f0104a43	obj/kern/kernel.asm	/^f0104a43:	eb 72                	jmp    f0104ab7 <trap+0x1ad>$/;"	l
f0104a45	obj/kern/kernel.asm	/^f0104a45:	83 f8 0e             	cmp    $0xe,%eax$/;"	l
f0104a48	obj/kern/kernel.asm	/^f0104a48:	74 0a                	je     f0104a54 <trap+0x14a>$/;"	l
f0104a4a	obj/kern/kernel.asm	/^f0104a4a:	83 f8 30             	cmp    $0x30,%eax$/;"	l
f0104a4d	obj/kern/kernel.asm	/^f0104a4d:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
f0104a50	obj/kern/kernel.asm	/^f0104a50:	74 33                	je     f0104a85 <trap+0x17b>$/;"	l
f0104a52	obj/kern/kernel.asm	/^f0104a52:	eb 63                	jmp    f0104ab7 <trap+0x1ad>$/;"	l
f0104a54	obj/kern/kernel.asm	/^f0104a54:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0104a57	obj/kern/kernel.asm	/^f0104a57:	e8 06 fd ff ff       	call   f0104762 <page_fault_handler>$/;"	l
f0104a5c	obj/kern/kernel.asm	/^f0104a5c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f0104a60	obj/kern/kernel.asm	/^f0104a60:	e9 c1 00 00 00       	jmp    f0104b26 <trap+0x21c>$/;"	l
f0104a65	obj/kern/kernel.asm	/^f0104a65:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0104a68	obj/kern/kernel.asm	/^f0104a68:	e8 9e c3 ff ff       	call   f0100e0b <monitor>$/;"	l
f0104a6d	obj/kern/kernel.asm	/^f0104a6d:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
f0104a70	obj/kern/kernel.asm	/^f0104a70:	e9 b1 00 00 00       	jmp    f0104b26 <trap+0x21c>$/;"	l
f0104a75	obj/kern/kernel.asm	/^f0104a75:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0104a78	obj/kern/kernel.asm	/^f0104a78:	e8 8e c3 ff ff       	call   f0100e0b <monitor>$/;"	l
f0104a7d	obj/kern/kernel.asm	/^f0104a7d:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
f0104a80	obj/kern/kernel.asm	/^f0104a80:	e9 a1 00 00 00       	jmp    f0104b26 <trap+0x21c>$/;"	l
f0104a85	obj/kern/kernel.asm	/^f0104a85:	8b 46 04             	mov    0x4(%esi),%eax$/;"	l
f0104a88	obj/kern/kernel.asm	/^f0104a88:	89 44 24 14          	mov    %eax,0x14(%esp)$/;"	l
f0104a8c	obj/kern/kernel.asm	/^f0104a8c:	8b 06                	mov    (%esi),%eax$/;"	l
f0104a8e	obj/kern/kernel.asm	/^f0104a8e:	89 44 24 10          	mov    %eax,0x10(%esp)$/;"	l
f0104a92	obj/kern/kernel.asm	/^f0104a92:	8b 46 10             	mov    0x10(%esi),%eax$/;"	l
f0104a95	obj/kern/kernel.asm	/^f0104a95:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0104a99	obj/kern/kernel.asm	/^f0104a99:	8b 46 18             	mov    0x18(%esi),%eax$/;"	l
f0104a9c	obj/kern/kernel.asm	/^f0104a9c:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0104aa0	obj/kern/kernel.asm	/^f0104aa0:	8b 46 14             	mov    0x14(%esi),%eax$/;"	l
f0104aa3	obj/kern/kernel.asm	/^f0104aa3:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0104aa7	obj/kern/kernel.asm	/^f0104aa7:	8b 46 1c             	mov    0x1c(%esi),%eax$/;"	l
f0104aaa	obj/kern/kernel.asm	/^f0104aaa:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104aad	obj/kern/kernel.asm	/^f0104aad:	e8 4e 0d 00 00       	call   f0105800 <syscall>$/;"	l
f0104ab2	obj/kern/kernel.asm	/^f0104ab2:	89 46 1c             	mov    %eax,0x1c(%esi)$/;"	l
f0104ab5	obj/kern/kernel.asm	/^f0104ab5:	eb 6f                	jmp    f0104b26 <trap+0x21c>$/;"	l
f0104ab7	obj/kern/kernel.asm	/^f0104ab7:	83 f8 27             	cmp    $0x27,%eax$/;"	l
f0104aba	obj/kern/kernel.asm	/^f0104aba:	75 16                	jne    f0104ad2 <trap+0x1c8>$/;"	l
f0104abc	obj/kern/kernel.asm	/^f0104abc:	c7 04 24 a9 8d 10 f0 	movl   $0xf0108da9,(%esp)$/;"	l
f0104ac3	obj/kern/kernel.asm	/^f0104ac3:	e8 d6 f8 ff ff       	call   f010439e <cprintf>$/;"	l
f0104ac8	obj/kern/kernel.asm	/^f0104ac8:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0104acb	obj/kern/kernel.asm	/^f0104acb:	e8 f5 fa ff ff       	call   f01045c5 <print_trapframe>$/;"	l
f0104ad0	obj/kern/kernel.asm	/^f0104ad0:	eb 54                	jmp    f0104b26 <trap+0x21c>$/;"	l
f0104ad2	obj/kern/kernel.asm	/^f0104ad2:	83 f8 20             	cmp    $0x20,%eax$/;"	l
f0104ad5	obj/kern/kernel.asm	/^f0104ad5:	75 0e                	jne    f0104ae5 <trap+0x1db>$/;"	l
f0104ad7	obj/kern/kernel.asm	/^f0104ad7:	e8 5d 26 00 00       	call   f0107139 <lapic_eoi>$/;"	l
f0104adc	obj/kern/kernel.asm	/^f0104adc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f0104ae0	obj/kern/kernel.asm	/^f0104ae0:	e8 5d 0c 00 00       	call   f0105742 <sched_yield>$/;"	l
f0104ae5	obj/kern/kernel.asm	/^f0104ae5:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0104ae8	obj/kern/kernel.asm	/^f0104ae8:	e8 d8 fa ff ff       	call   f01045c5 <print_trapframe>$/;"	l
f0104aed	obj/kern/kernel.asm	/^f0104aed:	66 83 7e 34 08       	cmpw   $0x8,0x34(%esi)$/;"	l
f0104af2	obj/kern/kernel.asm	/^f0104af2:	75 1c                	jne    f0104b10 <trap+0x206>$/;"	l
f0104af4	obj/kern/kernel.asm	/^f0104af4:	c7 44 24 08 c6 8d 10 	movl   $0xf0108dc6,0x8(%esp)$/;"	l
f0104afb	obj/kern/kernel.asm	/^f0104afb:	f0 $/;"	l
f0104afc	obj/kern/kernel.asm	/^f0104afc:	c7 44 24 04 e6 00 00 	movl   $0xe6,0x4(%esp)$/;"	l
f0104b03	obj/kern/kernel.asm	/^f0104b03:	00 $/;"	l
f0104b04	obj/kern/kernel.asm	/^f0104b04:	c7 04 24 7d 8d 10 f0 	movl   $0xf0108d7d,(%esp)$/;"	l
f0104b0b	obj/kern/kernel.asm	/^f0104b0b:	e8 30 b5 ff ff       	call   f0100040 <_panic>$/;"	l
f0104b10	obj/kern/kernel.asm	/^f0104b10:	e8 d7 24 00 00       	call   f0106fec <cpunum>$/;"	l
f0104b15	obj/kern/kernel.asm	/^f0104b15:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104b18	obj/kern/kernel.asm	/^f0104b18:	8b 80 28 e0 20 f0    	mov    -0xfdf1fd8(%eax),%eax$/;"	l
f0104b1e	obj/kern/kernel.asm	/^f0104b1e:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104b21	obj/kern/kernel.asm	/^f0104b21:	e8 8d f5 ff ff       	call   f01040b3 <env_destroy>$/;"	l
f0104b26	obj/kern/kernel.asm	/^f0104b26:	e8 c1 24 00 00       	call   f0106fec <cpunum>$/;"	l
f0104b2b	obj/kern/kernel.asm	/^f0104b2b:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104b2e	obj/kern/kernel.asm	/^f0104b2e:	83 b8 28 e0 20 f0 00 	cmpl   $0x0,-0xfdf1fd8(%eax)$/;"	l
f0104b35	obj/kern/kernel.asm	/^f0104b35:	74 2a                	je     f0104b61 <trap+0x257>$/;"	l
f0104b37	obj/kern/kernel.asm	/^f0104b37:	e8 b0 24 00 00       	call   f0106fec <cpunum>$/;"	l
f0104b3c	obj/kern/kernel.asm	/^f0104b3c:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104b3f	obj/kern/kernel.asm	/^f0104b3f:	8b 80 28 e0 20 f0    	mov    -0xfdf1fd8(%eax),%eax$/;"	l
f0104b45	obj/kern/kernel.asm	/^f0104b45:	83 78 54 03          	cmpl   $0x3,0x54(%eax)$/;"	l
f0104b49	obj/kern/kernel.asm	/^f0104b49:	75 16                	jne    f0104b61 <trap+0x257>$/;"	l
f0104b4b	obj/kern/kernel.asm	/^f0104b4b:	e8 9c 24 00 00       	call   f0106fec <cpunum>$/;"	l
f0104b50	obj/kern/kernel.asm	/^f0104b50:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104b53	obj/kern/kernel.asm	/^f0104b53:	8b 80 28 e0 20 f0    	mov    -0xfdf1fd8(%eax),%eax$/;"	l
f0104b59	obj/kern/kernel.asm	/^f0104b59:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0104b5c	obj/kern/kernel.asm	/^f0104b5c:	e8 f3 f5 ff ff       	call   f0104154 <env_run>$/;"	l
f0104b61	obj/kern/kernel.asm	/^f0104b61:	e8 dc 0b 00 00       	call   f0105742 <sched_yield>$/;"	l
f0104b66	obj/kern/kernel.asm	/^f0104b66:	66 90                	xchg   %ax,%ax$/;"	l
f0104b68	obj/kern/kernel.asm	/^f0104b68 <vector0>:$/;"	l
f0104b68	obj/kern/kernel.asm	/^f0104b68:	6a 00                	push   $0x0$/;"	l
f0104b6a	obj/kern/kernel.asm	/^f0104b6a:	6a 00                	push   $0x0$/;"	l
f0104b6c	obj/kern/kernel.asm	/^f0104b6c:	e9 e9 0a 00 00       	jmp    f010565a <_alltraps>$/;"	l
f0104b71	obj/kern/kernel.asm	/^f0104b71:	90                   	nop$/;"	l
f0104b72	obj/kern/kernel.asm	/^f0104b72 <vector1>:$/;"	l
f0104b72	obj/kern/kernel.asm	/^f0104b72:	6a 00                	push   $0x0$/;"	l
f0104b74	obj/kern/kernel.asm	/^f0104b74:	6a 01                	push   $0x1$/;"	l
f0104b76	obj/kern/kernel.asm	/^f0104b76:	e9 df 0a 00 00       	jmp    f010565a <_alltraps>$/;"	l
f0104b7b	obj/kern/kernel.asm	/^f0104b7b:	90                   	nop$/;"	l
f0104b7c	obj/kern/kernel.asm	/^f0104b7c <vector2>:$/;"	l
f0104b7c	obj/kern/kernel.asm	/^f0104b7c:	6a 00                	push   $0x0$/;"	l
f0104b7e	obj/kern/kernel.asm	/^f0104b7e:	6a 02                	push   $0x2$/;"	l
f0104b80	obj/kern/kernel.asm	/^f0104b80:	e9 d5 0a 00 00       	jmp    f010565a <_alltraps>$/;"	l
f0104b85	obj/kern/kernel.asm	/^f0104b85:	90                   	nop$/;"	l
f0104b86	obj/kern/kernel.asm	/^f0104b86 <vector3>:$/;"	l
f0104b86	obj/kern/kernel.asm	/^f0104b86:	6a 00                	push   $0x0$/;"	l
f0104b88	obj/kern/kernel.asm	/^f0104b88:	6a 03                	push   $0x3$/;"	l
f0104b8a	obj/kern/kernel.asm	/^f0104b8a:	e9 cb 0a 00 00       	jmp    f010565a <_alltraps>$/;"	l
f0104b8f	obj/kern/kernel.asm	/^f0104b8f:	90                   	nop$/;"	l
f0104b90	obj/kern/kernel.asm	/^f0104b90 <vector4>:$/;"	l
f0104b90	obj/kern/kernel.asm	/^f0104b90:	6a 00                	push   $0x0$/;"	l
f0104b92	obj/kern/kernel.asm	/^f0104b92:	6a 04                	push   $0x4$/;"	l
f0104b94	obj/kern/kernel.asm	/^f0104b94:	e9 c1 0a 00 00       	jmp    f010565a <_alltraps>$/;"	l
f0104b99	obj/kern/kernel.asm	/^f0104b99:	90                   	nop$/;"	l
f0104b9a	obj/kern/kernel.asm	/^f0104b9a <vector5>:$/;"	l
f0104b9a	obj/kern/kernel.asm	/^f0104b9a:	6a 00                	push   $0x0$/;"	l
f0104b9c	obj/kern/kernel.asm	/^f0104b9c:	6a 05                	push   $0x5$/;"	l
f0104b9e	obj/kern/kernel.asm	/^f0104b9e:	e9 b7 0a 00 00       	jmp    f010565a <_alltraps>$/;"	l
f0104ba3	obj/kern/kernel.asm	/^f0104ba3:	90                   	nop$/;"	l
f0104ba4	obj/kern/kernel.asm	/^f0104ba4 <vector6>:$/;"	l
f0104ba4	obj/kern/kernel.asm	/^f0104ba4:	6a 00                	push   $0x0$/;"	l
f0104ba6	obj/kern/kernel.asm	/^f0104ba6:	6a 06                	push   $0x6$/;"	l
f0104ba8	obj/kern/kernel.asm	/^f0104ba8:	e9 ad 0a 00 00       	jmp    f010565a <_alltraps>$/;"	l
f0104bad	obj/kern/kernel.asm	/^f0104bad:	90                   	nop$/;"	l
f0104bae	obj/kern/kernel.asm	/^f0104bae <vector7>:$/;"	l
f0104bae	obj/kern/kernel.asm	/^f0104bae:	6a 00                	push   $0x0$/;"	l
f0104bb0	obj/kern/kernel.asm	/^f0104bb0:	6a 07                	push   $0x7$/;"	l
f0104bb2	obj/kern/kernel.asm	/^f0104bb2:	e9 a3 0a 00 00       	jmp    f010565a <_alltraps>$/;"	l
f0104bb7	obj/kern/kernel.asm	/^f0104bb7:	90                   	nop$/;"	l
f0104bb8	obj/kern/kernel.asm	/^f0104bb8 <vector8>:$/;"	l
f0104bb8	obj/kern/kernel.asm	/^f0104bb8:	6a 08                	push   $0x8$/;"	l
f0104bba	obj/kern/kernel.asm	/^f0104bba:	e9 9b 0a 00 00       	jmp    f010565a <_alltraps>$/;"	l
f0104bbf	obj/kern/kernel.asm	/^f0104bbf:	90                   	nop$/;"	l
f0104bc0	obj/kern/kernel.asm	/^f0104bc0 <vector9>:$/;"	l
f0104bc0	obj/kern/kernel.asm	/^f0104bc0:	6a 00                	push   $0x0$/;"	l
f0104bc2	obj/kern/kernel.asm	/^f0104bc2:	6a 09                	push   $0x9$/;"	l
f0104bc4	obj/kern/kernel.asm	/^f0104bc4:	e9 91 0a 00 00       	jmp    f010565a <_alltraps>$/;"	l
f0104bc9	obj/kern/kernel.asm	/^f0104bc9:	90                   	nop$/;"	l
f0104bca	obj/kern/kernel.asm	/^f0104bca <vector10>:$/;"	l
f0104bca	obj/kern/kernel.asm	/^f0104bca:	6a 0a                	push   $0xa$/;"	l
f0104bcc	obj/kern/kernel.asm	/^f0104bcc:	e9 89 0a 00 00       	jmp    f010565a <_alltraps>$/;"	l
f0104bd1	obj/kern/kernel.asm	/^f0104bd1:	90                   	nop$/;"	l
f0104bd2	obj/kern/kernel.asm	/^f0104bd2 <vector11>:$/;"	l
f0104bd2	obj/kern/kernel.asm	/^f0104bd2:	6a 0b                	push   $0xb$/;"	l
f0104bd4	obj/kern/kernel.asm	/^f0104bd4:	e9 81 0a 00 00       	jmp    f010565a <_alltraps>$/;"	l
f0104bd9	obj/kern/kernel.asm	/^f0104bd9:	90                   	nop$/;"	l
f0104bda	obj/kern/kernel.asm	/^f0104bda <vector12>:$/;"	l
f0104bda	obj/kern/kernel.asm	/^f0104bda:	6a 0c                	push   $0xc$/;"	l
f0104bdc	obj/kern/kernel.asm	/^f0104bdc:	e9 79 0a 00 00       	jmp    f010565a <_alltraps>$/;"	l
f0104be1	obj/kern/kernel.asm	/^f0104be1:	90                   	nop$/;"	l
f0104be2	obj/kern/kernel.asm	/^f0104be2 <vector13>:$/;"	l
f0104be2	obj/kern/kernel.asm	/^f0104be2:	6a 0d                	push   $0xd$/;"	l
f0104be4	obj/kern/kernel.asm	/^f0104be4:	e9 71 0a 00 00       	jmp    f010565a <_alltraps>$/;"	l
f0104be9	obj/kern/kernel.asm	/^f0104be9:	90                   	nop$/;"	l
f0104bea	obj/kern/kernel.asm	/^f0104bea <vector14>:$/;"	l
f0104bea	obj/kern/kernel.asm	/^f0104bea:	6a 0e                	push   $0xe$/;"	l
f0104bec	obj/kern/kernel.asm	/^f0104bec:	e9 69 0a 00 00       	jmp    f010565a <_alltraps>$/;"	l
f0104bf1	obj/kern/kernel.asm	/^f0104bf1:	90                   	nop$/;"	l
f0104bf2	obj/kern/kernel.asm	/^f0104bf2 <vector15>:$/;"	l
f0104bf2	obj/kern/kernel.asm	/^f0104bf2:	6a 00                	push   $0x0$/;"	l
f0104bf4	obj/kern/kernel.asm	/^f0104bf4:	6a 0f                	push   $0xf$/;"	l
f0104bf6	obj/kern/kernel.asm	/^f0104bf6:	e9 5f 0a 00 00       	jmp    f010565a <_alltraps>$/;"	l
f0104bfb	obj/kern/kernel.asm	/^f0104bfb:	90                   	nop$/;"	l
f0104bfc	obj/kern/kernel.asm	/^f0104bfc <vector16>:$/;"	l
f0104bfc	obj/kern/kernel.asm	/^f0104bfc:	6a 00                	push   $0x0$/;"	l
f0104bfe	obj/kern/kernel.asm	/^f0104bfe:	6a 10                	push   $0x10$/;"	l
f0104c00	obj/kern/kernel.asm	/^f0104c00:	e9 55 0a 00 00       	jmp    f010565a <_alltraps>$/;"	l
f0104c05	obj/kern/kernel.asm	/^f0104c05:	90                   	nop$/;"	l
f0104c06	obj/kern/kernel.asm	/^f0104c06 <vector17>:$/;"	l
f0104c06	obj/kern/kernel.asm	/^f0104c06:	6a 11                	push   $0x11$/;"	l
f0104c08	obj/kern/kernel.asm	/^f0104c08:	e9 4d 0a 00 00       	jmp    f010565a <_alltraps>$/;"	l
f0104c0d	obj/kern/kernel.asm	/^f0104c0d:	90                   	nop$/;"	l
f0104c0e	obj/kern/kernel.asm	/^f0104c0e <vector18>:$/;"	l
f0104c0e	obj/kern/kernel.asm	/^f0104c0e:	6a 00                	push   $0x0$/;"	l
f0104c10	obj/kern/kernel.asm	/^f0104c10:	6a 12                	push   $0x12$/;"	l
f0104c12	obj/kern/kernel.asm	/^f0104c12:	e9 43 0a 00 00       	jmp    f010565a <_alltraps>$/;"	l
f0104c17	obj/kern/kernel.asm	/^f0104c17:	90                   	nop$/;"	l
f0104c18	obj/kern/kernel.asm	/^f0104c18 <vector19>:$/;"	l
f0104c18	obj/kern/kernel.asm	/^f0104c18:	6a 00                	push   $0x0$/;"	l
f0104c1a	obj/kern/kernel.asm	/^f0104c1a:	6a 13                	push   $0x13$/;"	l
f0104c1c	obj/kern/kernel.asm	/^f0104c1c:	e9 39 0a 00 00       	jmp    f010565a <_alltraps>$/;"	l
f0104c21	obj/kern/kernel.asm	/^f0104c21:	90                   	nop$/;"	l
f0104c22	obj/kern/kernel.asm	/^f0104c22 <vector20>:$/;"	l
f0104c22	obj/kern/kernel.asm	/^f0104c22:	6a 00                	push   $0x0$/;"	l
f0104c24	obj/kern/kernel.asm	/^f0104c24:	6a 14                	push   $0x14$/;"	l
f0104c26	obj/kern/kernel.asm	/^f0104c26:	e9 2f 0a 00 00       	jmp    f010565a <_alltraps>$/;"	l
f0104c2b	obj/kern/kernel.asm	/^f0104c2b:	90                   	nop$/;"	l
f0104c2c	obj/kern/kernel.asm	/^f0104c2c <vector21>:$/;"	l
f0104c2c	obj/kern/kernel.asm	/^f0104c2c:	6a 00                	push   $0x0$/;"	l
f0104c2e	obj/kern/kernel.asm	/^f0104c2e:	6a 15                	push   $0x15$/;"	l
f0104c30	obj/kern/kernel.asm	/^f0104c30:	e9 25 0a 00 00       	jmp    f010565a <_alltraps>$/;"	l
f0104c35	obj/kern/kernel.asm	/^f0104c35:	90                   	nop$/;"	l
f0104c36	obj/kern/kernel.asm	/^f0104c36 <vector22>:$/;"	l
f0104c36	obj/kern/kernel.asm	/^f0104c36:	6a 00                	push   $0x0$/;"	l
f0104c38	obj/kern/kernel.asm	/^f0104c38:	6a 16                	push   $0x16$/;"	l
f0104c3a	obj/kern/kernel.asm	/^f0104c3a:	e9 1b 0a 00 00       	jmp    f010565a <_alltraps>$/;"	l
f0104c3f	obj/kern/kernel.asm	/^f0104c3f:	90                   	nop$/;"	l
f0104c40	obj/kern/kernel.asm	/^f0104c40 <vector23>:$/;"	l
f0104c40	obj/kern/kernel.asm	/^f0104c40:	6a 00                	push   $0x0$/;"	l
f0104c42	obj/kern/kernel.asm	/^f0104c42:	6a 17                	push   $0x17$/;"	l
f0104c44	obj/kern/kernel.asm	/^f0104c44:	e9 11 0a 00 00       	jmp    f010565a <_alltraps>$/;"	l
f0104c49	obj/kern/kernel.asm	/^f0104c49:	90                   	nop$/;"	l
f0104c4a	obj/kern/kernel.asm	/^f0104c4a <vector24>:$/;"	l
f0104c4a	obj/kern/kernel.asm	/^f0104c4a:	6a 00                	push   $0x0$/;"	l
f0104c4c	obj/kern/kernel.asm	/^f0104c4c:	6a 18                	push   $0x18$/;"	l
f0104c4e	obj/kern/kernel.asm	/^f0104c4e:	e9 07 0a 00 00       	jmp    f010565a <_alltraps>$/;"	l
f0104c53	obj/kern/kernel.asm	/^f0104c53:	90                   	nop$/;"	l
f0104c54	obj/kern/kernel.asm	/^f0104c54 <vector25>:$/;"	l
f0104c54	obj/kern/kernel.asm	/^f0104c54:	6a 00                	push   $0x0$/;"	l
f0104c56	obj/kern/kernel.asm	/^f0104c56:	6a 19                	push   $0x19$/;"	l
f0104c58	obj/kern/kernel.asm	/^f0104c58:	e9 fd 09 00 00       	jmp    f010565a <_alltraps>$/;"	l
f0104c5d	obj/kern/kernel.asm	/^f0104c5d:	90                   	nop$/;"	l
f0104c5e	obj/kern/kernel.asm	/^f0104c5e <vector26>:$/;"	l
f0104c5e	obj/kern/kernel.asm	/^f0104c5e:	6a 00                	push   $0x0$/;"	l
f0104c60	obj/kern/kernel.asm	/^f0104c60:	6a 1a                	push   $0x1a$/;"	l
f0104c62	obj/kern/kernel.asm	/^f0104c62:	e9 f3 09 00 00       	jmp    f010565a <_alltraps>$/;"	l
f0104c67	obj/kern/kernel.asm	/^f0104c67:	90                   	nop$/;"	l
f0104c68	obj/kern/kernel.asm	/^f0104c68 <vector27>:$/;"	l
f0104c68	obj/kern/kernel.asm	/^f0104c68:	6a 00                	push   $0x0$/;"	l
f0104c6a	obj/kern/kernel.asm	/^f0104c6a:	6a 1b                	push   $0x1b$/;"	l
f0104c6c	obj/kern/kernel.asm	/^f0104c6c:	e9 e9 09 00 00       	jmp    f010565a <_alltraps>$/;"	l
f0104c71	obj/kern/kernel.asm	/^f0104c71:	90                   	nop$/;"	l
f0104c72	obj/kern/kernel.asm	/^f0104c72 <vector28>:$/;"	l
f0104c72	obj/kern/kernel.asm	/^f0104c72:	6a 00                	push   $0x0$/;"	l
f0104c74	obj/kern/kernel.asm	/^f0104c74:	6a 1c                	push   $0x1c$/;"	l
f0104c76	obj/kern/kernel.asm	/^f0104c76:	e9 df 09 00 00       	jmp    f010565a <_alltraps>$/;"	l
f0104c7b	obj/kern/kernel.asm	/^f0104c7b:	90                   	nop$/;"	l
f0104c7c	obj/kern/kernel.asm	/^f0104c7c <vector29>:$/;"	l
f0104c7c	obj/kern/kernel.asm	/^f0104c7c:	6a 00                	push   $0x0$/;"	l
f0104c7e	obj/kern/kernel.asm	/^f0104c7e:	6a 1d                	push   $0x1d$/;"	l
f0104c80	obj/kern/kernel.asm	/^f0104c80:	e9 d5 09 00 00       	jmp    f010565a <_alltraps>$/;"	l
f0104c85	obj/kern/kernel.asm	/^f0104c85:	90                   	nop$/;"	l
f0104c86	obj/kern/kernel.asm	/^f0104c86 <vector30>:$/;"	l
f0104c86	obj/kern/kernel.asm	/^f0104c86:	6a 00                	push   $0x0$/;"	l
f0104c88	obj/kern/kernel.asm	/^f0104c88:	6a 1e                	push   $0x1e$/;"	l
f0104c8a	obj/kern/kernel.asm	/^f0104c8a:	e9 cb 09 00 00       	jmp    f010565a <_alltraps>$/;"	l
f0104c8f	obj/kern/kernel.asm	/^f0104c8f:	90                   	nop$/;"	l
f0104c90	obj/kern/kernel.asm	/^f0104c90 <vector31>:$/;"	l
f0104c90	obj/kern/kernel.asm	/^f0104c90:	6a 00                	push   $0x0$/;"	l
f0104c92	obj/kern/kernel.asm	/^f0104c92:	6a 1f                	push   $0x1f$/;"	l
f0104c94	obj/kern/kernel.asm	/^f0104c94:	e9 c1 09 00 00       	jmp    f010565a <_alltraps>$/;"	l
f0104c99	obj/kern/kernel.asm	/^f0104c99:	90                   	nop$/;"	l
f0104c9a	obj/kern/kernel.asm	/^f0104c9a <vector32>:$/;"	l
f0104c9a	obj/kern/kernel.asm	/^f0104c9a:	6a 00                	push   $0x0$/;"	l
f0104c9c	obj/kern/kernel.asm	/^f0104c9c:	6a 20                	push   $0x20$/;"	l
f0104c9e	obj/kern/kernel.asm	/^f0104c9e:	e9 b7 09 00 00       	jmp    f010565a <_alltraps>$/;"	l
f0104ca3	obj/kern/kernel.asm	/^f0104ca3:	90                   	nop$/;"	l
f0104ca4	obj/kern/kernel.asm	/^f0104ca4 <vector33>:$/;"	l
f0104ca4	obj/kern/kernel.asm	/^f0104ca4:	6a 00                	push   $0x0$/;"	l
f0104ca6	obj/kern/kernel.asm	/^f0104ca6:	6a 21                	push   $0x21$/;"	l
f0104ca8	obj/kern/kernel.asm	/^f0104ca8:	e9 ad 09 00 00       	jmp    f010565a <_alltraps>$/;"	l
f0104cad	obj/kern/kernel.asm	/^f0104cad:	90                   	nop$/;"	l
f0104cae	obj/kern/kernel.asm	/^f0104cae <vector34>:$/;"	l
f0104cae	obj/kern/kernel.asm	/^f0104cae:	6a 00                	push   $0x0$/;"	l
f0104cb0	obj/kern/kernel.asm	/^f0104cb0:	6a 22                	push   $0x22$/;"	l
f0104cb2	obj/kern/kernel.asm	/^f0104cb2:	e9 a3 09 00 00       	jmp    f010565a <_alltraps>$/;"	l
f0104cb7	obj/kern/kernel.asm	/^f0104cb7:	90                   	nop$/;"	l
f0104cb8	obj/kern/kernel.asm	/^f0104cb8 <vector35>:$/;"	l
f0104cb8	obj/kern/kernel.asm	/^f0104cb8:	6a 00                	push   $0x0$/;"	l
f0104cba	obj/kern/kernel.asm	/^f0104cba:	6a 23                	push   $0x23$/;"	l
f0104cbc	obj/kern/kernel.asm	/^f0104cbc:	e9 99 09 00 00       	jmp    f010565a <_alltraps>$/;"	l
f0104cc1	obj/kern/kernel.asm	/^f0104cc1:	90                   	nop$/;"	l
f0104cc2	obj/kern/kernel.asm	/^f0104cc2 <vector36>:$/;"	l
f0104cc2	obj/kern/kernel.asm	/^f0104cc2:	6a 00                	push   $0x0$/;"	l
f0104cc4	obj/kern/kernel.asm	/^f0104cc4:	6a 24                	push   $0x24$/;"	l
f0104cc6	obj/kern/kernel.asm	/^f0104cc6:	e9 8f 09 00 00       	jmp    f010565a <_alltraps>$/;"	l
f0104ccb	obj/kern/kernel.asm	/^f0104ccb:	90                   	nop$/;"	l
f0104ccc	obj/kern/kernel.asm	/^f0104ccc <vector37>:$/;"	l
f0104ccc	obj/kern/kernel.asm	/^f0104ccc:	6a 00                	push   $0x0$/;"	l
f0104cce	obj/kern/kernel.asm	/^f0104cce:	6a 25                	push   $0x25$/;"	l
f0104cd0	obj/kern/kernel.asm	/^f0104cd0:	e9 85 09 00 00       	jmp    f010565a <_alltraps>$/;"	l
f0104cd5	obj/kern/kernel.asm	/^f0104cd5:	90                   	nop$/;"	l
f0104cd6	obj/kern/kernel.asm	/^f0104cd6 <vector38>:$/;"	l
f0104cd6	obj/kern/kernel.asm	/^f0104cd6:	6a 00                	push   $0x0$/;"	l
f0104cd8	obj/kern/kernel.asm	/^f0104cd8:	6a 26                	push   $0x26$/;"	l
f0104cda	obj/kern/kernel.asm	/^f0104cda:	e9 7b 09 00 00       	jmp    f010565a <_alltraps>$/;"	l
f0104cdf	obj/kern/kernel.asm	/^f0104cdf:	90                   	nop$/;"	l
f0104ce0	obj/kern/kernel.asm	/^f0104ce0 <vector39>:$/;"	l
f0104ce0	obj/kern/kernel.asm	/^f0104ce0:	6a 00                	push   $0x0$/;"	l
f0104ce2	obj/kern/kernel.asm	/^f0104ce2:	6a 27                	push   $0x27$/;"	l
f0104ce4	obj/kern/kernel.asm	/^f0104ce4:	e9 71 09 00 00       	jmp    f010565a <_alltraps>$/;"	l
f0104ce9	obj/kern/kernel.asm	/^f0104ce9:	90                   	nop$/;"	l
f0104cea	obj/kern/kernel.asm	/^f0104cea <vector40>:$/;"	l
f0104cea	obj/kern/kernel.asm	/^f0104cea:	6a 00                	push   $0x0$/;"	l
f0104cec	obj/kern/kernel.asm	/^f0104cec:	6a 28                	push   $0x28$/;"	l
f0104cee	obj/kern/kernel.asm	/^f0104cee:	e9 67 09 00 00       	jmp    f010565a <_alltraps>$/;"	l
f0104cf3	obj/kern/kernel.asm	/^f0104cf3:	90                   	nop$/;"	l
f0104cf4	obj/kern/kernel.asm	/^f0104cf4 <vector41>:$/;"	l
f0104cf4	obj/kern/kernel.asm	/^f0104cf4:	6a 00                	push   $0x0$/;"	l
f0104cf6	obj/kern/kernel.asm	/^f0104cf6:	6a 29                	push   $0x29$/;"	l
f0104cf8	obj/kern/kernel.asm	/^f0104cf8:	e9 5d 09 00 00       	jmp    f010565a <_alltraps>$/;"	l
f0104cfd	obj/kern/kernel.asm	/^f0104cfd:	90                   	nop$/;"	l
f0104cfe	obj/kern/kernel.asm	/^f0104cfe <vector42>:$/;"	l
f0104cfe	obj/kern/kernel.asm	/^f0104cfe:	6a 00                	push   $0x0$/;"	l
f0104d00	obj/kern/kernel.asm	/^f0104d00:	6a 2a                	push   $0x2a$/;"	l
f0104d02	obj/kern/kernel.asm	/^f0104d02:	e9 53 09 00 00       	jmp    f010565a <_alltraps>$/;"	l
f0104d07	obj/kern/kernel.asm	/^f0104d07:	90                   	nop$/;"	l
f0104d08	obj/kern/kernel.asm	/^f0104d08 <vector43>:$/;"	l
f0104d08	obj/kern/kernel.asm	/^f0104d08:	6a 00                	push   $0x0$/;"	l
f0104d0a	obj/kern/kernel.asm	/^f0104d0a:	6a 2b                	push   $0x2b$/;"	l
f0104d0c	obj/kern/kernel.asm	/^f0104d0c:	e9 49 09 00 00       	jmp    f010565a <_alltraps>$/;"	l
f0104d11	obj/kern/kernel.asm	/^f0104d11:	90                   	nop$/;"	l
f0104d12	obj/kern/kernel.asm	/^f0104d12 <vector44>:$/;"	l
f0104d12	obj/kern/kernel.asm	/^f0104d12:	6a 00                	push   $0x0$/;"	l
f0104d14	obj/kern/kernel.asm	/^f0104d14:	6a 2c                	push   $0x2c$/;"	l
f0104d16	obj/kern/kernel.asm	/^f0104d16:	e9 3f 09 00 00       	jmp    f010565a <_alltraps>$/;"	l
f0104d1b	obj/kern/kernel.asm	/^f0104d1b:	90                   	nop$/;"	l
f0104d1c	obj/kern/kernel.asm	/^f0104d1c <vector45>:$/;"	l
f0104d1c	obj/kern/kernel.asm	/^f0104d1c:	6a 00                	push   $0x0$/;"	l
f0104d1e	obj/kern/kernel.asm	/^f0104d1e:	6a 2d                	push   $0x2d$/;"	l
f0104d20	obj/kern/kernel.asm	/^f0104d20:	e9 35 09 00 00       	jmp    f010565a <_alltraps>$/;"	l
f0104d25	obj/kern/kernel.asm	/^f0104d25:	90                   	nop$/;"	l
f0104d26	obj/kern/kernel.asm	/^f0104d26 <vector46>:$/;"	l
f0104d26	obj/kern/kernel.asm	/^f0104d26:	6a 00                	push   $0x0$/;"	l
f0104d28	obj/kern/kernel.asm	/^f0104d28:	6a 2e                	push   $0x2e$/;"	l
f0104d2a	obj/kern/kernel.asm	/^f0104d2a:	e9 2b 09 00 00       	jmp    f010565a <_alltraps>$/;"	l
f0104d2f	obj/kern/kernel.asm	/^f0104d2f:	90                   	nop$/;"	l
f0104d30	obj/kern/kernel.asm	/^f0104d30 <vector47>:$/;"	l
f0104d30	obj/kern/kernel.asm	/^f0104d30:	6a 00                	push   $0x0$/;"	l
f0104d32	obj/kern/kernel.asm	/^f0104d32:	6a 2f                	push   $0x2f$/;"	l
f0104d34	obj/kern/kernel.asm	/^f0104d34:	e9 21 09 00 00       	jmp    f010565a <_alltraps>$/;"	l
f0104d39	obj/kern/kernel.asm	/^f0104d39:	90                   	nop$/;"	l
f0104d3a	obj/kern/kernel.asm	/^f0104d3a <vector48>:$/;"	l
f0104d3a	obj/kern/kernel.asm	/^f0104d3a:	6a 00                	push   $0x0$/;"	l
f0104d3c	obj/kern/kernel.asm	/^f0104d3c:	6a 30                	push   $0x30$/;"	l
f0104d3e	obj/kern/kernel.asm	/^f0104d3e:	e9 17 09 00 00       	jmp    f010565a <_alltraps>$/;"	l
f0104d43	obj/kern/kernel.asm	/^f0104d43:	90                   	nop$/;"	l
f0104d44	obj/kern/kernel.asm	/^f0104d44 <vector49>:$/;"	l
f0104d44	obj/kern/kernel.asm	/^f0104d44:	6a 00                	push   $0x0$/;"	l
f0104d46	obj/kern/kernel.asm	/^f0104d46:	6a 31                	push   $0x31$/;"	l
f0104d48	obj/kern/kernel.asm	/^f0104d48:	e9 0d 09 00 00       	jmp    f010565a <_alltraps>$/;"	l
f0104d4d	obj/kern/kernel.asm	/^f0104d4d:	90                   	nop$/;"	l
f0104d4e	obj/kern/kernel.asm	/^f0104d4e <vector50>:$/;"	l
f0104d4e	obj/kern/kernel.asm	/^f0104d4e:	6a 00                	push   $0x0$/;"	l
f0104d50	obj/kern/kernel.asm	/^f0104d50:	6a 32                	push   $0x32$/;"	l
f0104d52	obj/kern/kernel.asm	/^f0104d52:	e9 03 09 00 00       	jmp    f010565a <_alltraps>$/;"	l
f0104d57	obj/kern/kernel.asm	/^f0104d57:	90                   	nop$/;"	l
f0104d58	obj/kern/kernel.asm	/^f0104d58 <vector51>:$/;"	l
f0104d58	obj/kern/kernel.asm	/^f0104d58:	6a 00                	push   $0x0$/;"	l
f0104d5a	obj/kern/kernel.asm	/^f0104d5a:	6a 33                	push   $0x33$/;"	l
f0104d5c	obj/kern/kernel.asm	/^f0104d5c:	e9 f9 08 00 00       	jmp    f010565a <_alltraps>$/;"	l
f0104d61	obj/kern/kernel.asm	/^f0104d61:	90                   	nop$/;"	l
f0104d62	obj/kern/kernel.asm	/^f0104d62 <vector52>:$/;"	l
f0104d62	obj/kern/kernel.asm	/^f0104d62:	6a 00                	push   $0x0$/;"	l
f0104d64	obj/kern/kernel.asm	/^f0104d64:	6a 34                	push   $0x34$/;"	l
f0104d66	obj/kern/kernel.asm	/^f0104d66:	e9 ef 08 00 00       	jmp    f010565a <_alltraps>$/;"	l
f0104d6b	obj/kern/kernel.asm	/^f0104d6b:	90                   	nop$/;"	l
f0104d6c	obj/kern/kernel.asm	/^f0104d6c <vector53>:$/;"	l
f0104d6c	obj/kern/kernel.asm	/^f0104d6c:	6a 00                	push   $0x0$/;"	l
f0104d6e	obj/kern/kernel.asm	/^f0104d6e:	6a 35                	push   $0x35$/;"	l
f0104d70	obj/kern/kernel.asm	/^f0104d70:	e9 e5 08 00 00       	jmp    f010565a <_alltraps>$/;"	l
f0104d75	obj/kern/kernel.asm	/^f0104d75:	90                   	nop$/;"	l
f0104d76	obj/kern/kernel.asm	/^f0104d76 <vector54>:$/;"	l
f0104d76	obj/kern/kernel.asm	/^f0104d76:	6a 00                	push   $0x0$/;"	l
f0104d78	obj/kern/kernel.asm	/^f0104d78:	6a 36                	push   $0x36$/;"	l
f0104d7a	obj/kern/kernel.asm	/^f0104d7a:	e9 db 08 00 00       	jmp    f010565a <_alltraps>$/;"	l
f0104d7f	obj/kern/kernel.asm	/^f0104d7f:	90                   	nop$/;"	l
f0104d80	obj/kern/kernel.asm	/^f0104d80 <vector55>:$/;"	l
f0104d80	obj/kern/kernel.asm	/^f0104d80:	6a 00                	push   $0x0$/;"	l
f0104d82	obj/kern/kernel.asm	/^f0104d82:	6a 37                	push   $0x37$/;"	l
f0104d84	obj/kern/kernel.asm	/^f0104d84:	e9 d1 08 00 00       	jmp    f010565a <_alltraps>$/;"	l
f0104d89	obj/kern/kernel.asm	/^f0104d89:	90                   	nop$/;"	l
f0104d8a	obj/kern/kernel.asm	/^f0104d8a <vector56>:$/;"	l
f0104d8a	obj/kern/kernel.asm	/^f0104d8a:	6a 00                	push   $0x0$/;"	l
f0104d8c	obj/kern/kernel.asm	/^f0104d8c:	6a 38                	push   $0x38$/;"	l
f0104d8e	obj/kern/kernel.asm	/^f0104d8e:	e9 c7 08 00 00       	jmp    f010565a <_alltraps>$/;"	l
f0104d93	obj/kern/kernel.asm	/^f0104d93:	90                   	nop$/;"	l
f0104d94	obj/kern/kernel.asm	/^f0104d94 <vector57>:$/;"	l
f0104d94	obj/kern/kernel.asm	/^f0104d94:	6a 00                	push   $0x0$/;"	l
f0104d96	obj/kern/kernel.asm	/^f0104d96:	6a 39                	push   $0x39$/;"	l
f0104d98	obj/kern/kernel.asm	/^f0104d98:	e9 bd 08 00 00       	jmp    f010565a <_alltraps>$/;"	l
f0104d9d	obj/kern/kernel.asm	/^f0104d9d:	90                   	nop$/;"	l
f0104d9e	obj/kern/kernel.asm	/^f0104d9e <vector58>:$/;"	l
f0104d9e	obj/kern/kernel.asm	/^f0104d9e:	6a 00                	push   $0x0$/;"	l
f0104da0	obj/kern/kernel.asm	/^f0104da0:	6a 3a                	push   $0x3a$/;"	l
f0104da2	obj/kern/kernel.asm	/^f0104da2:	e9 b3 08 00 00       	jmp    f010565a <_alltraps>$/;"	l
f0104da7	obj/kern/kernel.asm	/^f0104da7:	90                   	nop$/;"	l
f0104da8	obj/kern/kernel.asm	/^f0104da8 <vector59>:$/;"	l
f0104da8	obj/kern/kernel.asm	/^f0104da8:	6a 00                	push   $0x0$/;"	l
f0104daa	obj/kern/kernel.asm	/^f0104daa:	6a 3b                	push   $0x3b$/;"	l
f0104dac	obj/kern/kernel.asm	/^f0104dac:	e9 a9 08 00 00       	jmp    f010565a <_alltraps>$/;"	l
f0104db1	obj/kern/kernel.asm	/^f0104db1:	90                   	nop$/;"	l
f0104db2	obj/kern/kernel.asm	/^f0104db2 <vector60>:$/;"	l
f0104db2	obj/kern/kernel.asm	/^f0104db2:	6a 00                	push   $0x0$/;"	l
f0104db4	obj/kern/kernel.asm	/^f0104db4:	6a 3c                	push   $0x3c$/;"	l
f0104db6	obj/kern/kernel.asm	/^f0104db6:	e9 9f 08 00 00       	jmp    f010565a <_alltraps>$/;"	l
f0104dbb	obj/kern/kernel.asm	/^f0104dbb:	90                   	nop$/;"	l
f0104dbc	obj/kern/kernel.asm	/^f0104dbc <vector61>:$/;"	l
f0104dbc	obj/kern/kernel.asm	/^f0104dbc:	6a 00                	push   $0x0$/;"	l
f0104dbe	obj/kern/kernel.asm	/^f0104dbe:	6a 3d                	push   $0x3d$/;"	l
f0104dc0	obj/kern/kernel.asm	/^f0104dc0:	e9 95 08 00 00       	jmp    f010565a <_alltraps>$/;"	l
f0104dc5	obj/kern/kernel.asm	/^f0104dc5:	90                   	nop$/;"	l
f0104dc6	obj/kern/kernel.asm	/^f0104dc6 <vector62>:$/;"	l
f0104dc6	obj/kern/kernel.asm	/^f0104dc6:	6a 00                	push   $0x0$/;"	l
f0104dc8	obj/kern/kernel.asm	/^f0104dc8:	6a 3e                	push   $0x3e$/;"	l
f0104dca	obj/kern/kernel.asm	/^f0104dca:	e9 8b 08 00 00       	jmp    f010565a <_alltraps>$/;"	l
f0104dcf	obj/kern/kernel.asm	/^f0104dcf:	90                   	nop$/;"	l
f0104dd0	obj/kern/kernel.asm	/^f0104dd0 <vector63>:$/;"	l
f0104dd0	obj/kern/kernel.asm	/^f0104dd0:	6a 00                	push   $0x0$/;"	l
f0104dd2	obj/kern/kernel.asm	/^f0104dd2:	6a 3f                	push   $0x3f$/;"	l
f0104dd4	obj/kern/kernel.asm	/^f0104dd4:	e9 81 08 00 00       	jmp    f010565a <_alltraps>$/;"	l
f0104dd9	obj/kern/kernel.asm	/^f0104dd9:	90                   	nop$/;"	l
f0104dda	obj/kern/kernel.asm	/^f0104dda <vector64>:$/;"	l
f0104dda	obj/kern/kernel.asm	/^f0104dda:	6a 00                	push   $0x0$/;"	l
f0104ddc	obj/kern/kernel.asm	/^f0104ddc:	6a 40                	push   $0x40$/;"	l
f0104dde	obj/kern/kernel.asm	/^f0104dde:	e9 77 08 00 00       	jmp    f010565a <_alltraps>$/;"	l
f0104de3	obj/kern/kernel.asm	/^f0104de3:	90                   	nop$/;"	l
f0104de4	obj/kern/kernel.asm	/^f0104de4 <vector65>:$/;"	l
f0104de4	obj/kern/kernel.asm	/^f0104de4:	6a 00                	push   $0x0$/;"	l
f0104de6	obj/kern/kernel.asm	/^f0104de6:	6a 41                	push   $0x41$/;"	l
f0104de8	obj/kern/kernel.asm	/^f0104de8:	e9 6d 08 00 00       	jmp    f010565a <_alltraps>$/;"	l
f0104ded	obj/kern/kernel.asm	/^f0104ded:	90                   	nop$/;"	l
f0104dee	obj/kern/kernel.asm	/^f0104dee <vector66>:$/;"	l
f0104dee	obj/kern/kernel.asm	/^f0104dee:	6a 00                	push   $0x0$/;"	l
f0104df0	obj/kern/kernel.asm	/^f0104df0:	6a 42                	push   $0x42$/;"	l
f0104df2	obj/kern/kernel.asm	/^f0104df2:	e9 63 08 00 00       	jmp    f010565a <_alltraps>$/;"	l
f0104df7	obj/kern/kernel.asm	/^f0104df7:	90                   	nop$/;"	l
f0104df8	obj/kern/kernel.asm	/^f0104df8 <vector67>:$/;"	l
f0104df8	obj/kern/kernel.asm	/^f0104df8:	6a 00                	push   $0x0$/;"	l
f0104dfa	obj/kern/kernel.asm	/^f0104dfa:	6a 43                	push   $0x43$/;"	l
f0104dfc	obj/kern/kernel.asm	/^f0104dfc:	e9 59 08 00 00       	jmp    f010565a <_alltraps>$/;"	l
f0104e01	obj/kern/kernel.asm	/^f0104e01:	90                   	nop$/;"	l
f0104e02	obj/kern/kernel.asm	/^f0104e02 <vector68>:$/;"	l
f0104e02	obj/kern/kernel.asm	/^f0104e02:	6a 00                	push   $0x0$/;"	l
f0104e04	obj/kern/kernel.asm	/^f0104e04:	6a 44                	push   $0x44$/;"	l
f0104e06	obj/kern/kernel.asm	/^f0104e06:	e9 4f 08 00 00       	jmp    f010565a <_alltraps>$/;"	l
f0104e0b	obj/kern/kernel.asm	/^f0104e0b:	90                   	nop$/;"	l
f0104e0c	obj/kern/kernel.asm	/^f0104e0c <vector69>:$/;"	l
f0104e0c	obj/kern/kernel.asm	/^f0104e0c:	6a 00                	push   $0x0$/;"	l
f0104e0e	obj/kern/kernel.asm	/^f0104e0e:	6a 45                	push   $0x45$/;"	l
f0104e10	obj/kern/kernel.asm	/^f0104e10:	e9 45 08 00 00       	jmp    f010565a <_alltraps>$/;"	l
f0104e15	obj/kern/kernel.asm	/^f0104e15:	90                   	nop$/;"	l
f0104e16	obj/kern/kernel.asm	/^f0104e16 <vector70>:$/;"	l
f0104e16	obj/kern/kernel.asm	/^f0104e16:	6a 00                	push   $0x0$/;"	l
f0104e18	obj/kern/kernel.asm	/^f0104e18:	6a 46                	push   $0x46$/;"	l
f0104e1a	obj/kern/kernel.asm	/^f0104e1a:	e9 3b 08 00 00       	jmp    f010565a <_alltraps>$/;"	l
f0104e1f	obj/kern/kernel.asm	/^f0104e1f:	90                   	nop$/;"	l
f0104e20	obj/kern/kernel.asm	/^f0104e20 <vector71>:$/;"	l
f0104e20	obj/kern/kernel.asm	/^f0104e20:	6a 00                	push   $0x0$/;"	l
f0104e22	obj/kern/kernel.asm	/^f0104e22:	6a 47                	push   $0x47$/;"	l
f0104e24	obj/kern/kernel.asm	/^f0104e24:	e9 31 08 00 00       	jmp    f010565a <_alltraps>$/;"	l
f0104e29	obj/kern/kernel.asm	/^f0104e29:	90                   	nop$/;"	l
f0104e2a	obj/kern/kernel.asm	/^f0104e2a <vector72>:$/;"	l
f0104e2a	obj/kern/kernel.asm	/^f0104e2a:	6a 00                	push   $0x0$/;"	l
f0104e2c	obj/kern/kernel.asm	/^f0104e2c:	6a 48                	push   $0x48$/;"	l
f0104e2e	obj/kern/kernel.asm	/^f0104e2e:	e9 27 08 00 00       	jmp    f010565a <_alltraps>$/;"	l
f0104e33	obj/kern/kernel.asm	/^f0104e33:	90                   	nop$/;"	l
f0104e34	obj/kern/kernel.asm	/^f0104e34 <vector73>:$/;"	l
f0104e34	obj/kern/kernel.asm	/^f0104e34:	6a 00                	push   $0x0$/;"	l
f0104e36	obj/kern/kernel.asm	/^f0104e36:	6a 49                	push   $0x49$/;"	l
f0104e38	obj/kern/kernel.asm	/^f0104e38:	e9 1d 08 00 00       	jmp    f010565a <_alltraps>$/;"	l
f0104e3d	obj/kern/kernel.asm	/^f0104e3d:	90                   	nop$/;"	l
f0104e3e	obj/kern/kernel.asm	/^f0104e3e <vector74>:$/;"	l
f0104e3e	obj/kern/kernel.asm	/^f0104e3e:	6a 00                	push   $0x0$/;"	l
f0104e40	obj/kern/kernel.asm	/^f0104e40:	6a 4a                	push   $0x4a$/;"	l
f0104e42	obj/kern/kernel.asm	/^f0104e42:	e9 13 08 00 00       	jmp    f010565a <_alltraps>$/;"	l
f0104e47	obj/kern/kernel.asm	/^f0104e47:	90                   	nop$/;"	l
f0104e48	obj/kern/kernel.asm	/^f0104e48 <vector75>:$/;"	l
f0104e48	obj/kern/kernel.asm	/^f0104e48:	6a 00                	push   $0x0$/;"	l
f0104e4a	obj/kern/kernel.asm	/^f0104e4a:	6a 4b                	push   $0x4b$/;"	l
f0104e4c	obj/kern/kernel.asm	/^f0104e4c:	e9 09 08 00 00       	jmp    f010565a <_alltraps>$/;"	l
f0104e51	obj/kern/kernel.asm	/^f0104e51:	90                   	nop$/;"	l
f0104e52	obj/kern/kernel.asm	/^f0104e52 <vector76>:$/;"	l
f0104e52	obj/kern/kernel.asm	/^f0104e52:	6a 00                	push   $0x0$/;"	l
f0104e54	obj/kern/kernel.asm	/^f0104e54:	6a 4c                	push   $0x4c$/;"	l
f0104e56	obj/kern/kernel.asm	/^f0104e56:	e9 ff 07 00 00       	jmp    f010565a <_alltraps>$/;"	l
f0104e5b	obj/kern/kernel.asm	/^f0104e5b:	90                   	nop$/;"	l
f0104e5c	obj/kern/kernel.asm	/^f0104e5c <vector77>:$/;"	l
f0104e5c	obj/kern/kernel.asm	/^f0104e5c:	6a 00                	push   $0x0$/;"	l
f0104e5e	obj/kern/kernel.asm	/^f0104e5e:	6a 4d                	push   $0x4d$/;"	l
f0104e60	obj/kern/kernel.asm	/^f0104e60:	e9 f5 07 00 00       	jmp    f010565a <_alltraps>$/;"	l
f0104e65	obj/kern/kernel.asm	/^f0104e65:	90                   	nop$/;"	l
f0104e66	obj/kern/kernel.asm	/^f0104e66 <vector78>:$/;"	l
f0104e66	obj/kern/kernel.asm	/^f0104e66:	6a 00                	push   $0x0$/;"	l
f0104e68	obj/kern/kernel.asm	/^f0104e68:	6a 4e                	push   $0x4e$/;"	l
f0104e6a	obj/kern/kernel.asm	/^f0104e6a:	e9 eb 07 00 00       	jmp    f010565a <_alltraps>$/;"	l
f0104e6f	obj/kern/kernel.asm	/^f0104e6f:	90                   	nop$/;"	l
f0104e70	obj/kern/kernel.asm	/^f0104e70 <vector79>:$/;"	l
f0104e70	obj/kern/kernel.asm	/^f0104e70:	6a 00                	push   $0x0$/;"	l
f0104e72	obj/kern/kernel.asm	/^f0104e72:	6a 4f                	push   $0x4f$/;"	l
f0104e74	obj/kern/kernel.asm	/^f0104e74:	e9 e1 07 00 00       	jmp    f010565a <_alltraps>$/;"	l
f0104e79	obj/kern/kernel.asm	/^f0104e79:	90                   	nop$/;"	l
f0104e7a	obj/kern/kernel.asm	/^f0104e7a <vector80>:$/;"	l
f0104e7a	obj/kern/kernel.asm	/^f0104e7a:	6a 00                	push   $0x0$/;"	l
f0104e7c	obj/kern/kernel.asm	/^f0104e7c:	6a 50                	push   $0x50$/;"	l
f0104e7e	obj/kern/kernel.asm	/^f0104e7e:	e9 d7 07 00 00       	jmp    f010565a <_alltraps>$/;"	l
f0104e83	obj/kern/kernel.asm	/^f0104e83:	90                   	nop$/;"	l
f0104e84	obj/kern/kernel.asm	/^f0104e84 <vector81>:$/;"	l
f0104e84	obj/kern/kernel.asm	/^f0104e84:	6a 00                	push   $0x0$/;"	l
f0104e86	obj/kern/kernel.asm	/^f0104e86:	6a 51                	push   $0x51$/;"	l
f0104e88	obj/kern/kernel.asm	/^f0104e88:	e9 cd 07 00 00       	jmp    f010565a <_alltraps>$/;"	l
f0104e8d	obj/kern/kernel.asm	/^f0104e8d:	90                   	nop$/;"	l
f0104e8e	obj/kern/kernel.asm	/^f0104e8e <vector82>:$/;"	l
f0104e8e	obj/kern/kernel.asm	/^f0104e8e:	6a 00                	push   $0x0$/;"	l
f0104e90	obj/kern/kernel.asm	/^f0104e90:	6a 52                	push   $0x52$/;"	l
f0104e92	obj/kern/kernel.asm	/^f0104e92:	e9 c3 07 00 00       	jmp    f010565a <_alltraps>$/;"	l
f0104e97	obj/kern/kernel.asm	/^f0104e97:	90                   	nop$/;"	l
f0104e98	obj/kern/kernel.asm	/^f0104e98 <vector83>:$/;"	l
f0104e98	obj/kern/kernel.asm	/^f0104e98:	6a 00                	push   $0x0$/;"	l
f0104e9a	obj/kern/kernel.asm	/^f0104e9a:	6a 53                	push   $0x53$/;"	l
f0104e9c	obj/kern/kernel.asm	/^f0104e9c:	e9 b9 07 00 00       	jmp    f010565a <_alltraps>$/;"	l
f0104ea1	obj/kern/kernel.asm	/^f0104ea1:	90                   	nop$/;"	l
f0104ea2	obj/kern/kernel.asm	/^f0104ea2 <vector84>:$/;"	l
f0104ea2	obj/kern/kernel.asm	/^f0104ea2:	6a 00                	push   $0x0$/;"	l
f0104ea4	obj/kern/kernel.asm	/^f0104ea4:	6a 54                	push   $0x54$/;"	l
f0104ea6	obj/kern/kernel.asm	/^f0104ea6:	e9 af 07 00 00       	jmp    f010565a <_alltraps>$/;"	l
f0104eab	obj/kern/kernel.asm	/^f0104eab:	90                   	nop$/;"	l
f0104eac	obj/kern/kernel.asm	/^f0104eac <vector85>:$/;"	l
f0104eac	obj/kern/kernel.asm	/^f0104eac:	6a 00                	push   $0x0$/;"	l
f0104eae	obj/kern/kernel.asm	/^f0104eae:	6a 55                	push   $0x55$/;"	l
f0104eb0	obj/kern/kernel.asm	/^f0104eb0:	e9 a5 07 00 00       	jmp    f010565a <_alltraps>$/;"	l
f0104eb5	obj/kern/kernel.asm	/^f0104eb5:	90                   	nop$/;"	l
f0104eb6	obj/kern/kernel.asm	/^f0104eb6 <vector86>:$/;"	l
f0104eb6	obj/kern/kernel.asm	/^f0104eb6:	6a 00                	push   $0x0$/;"	l
f0104eb8	obj/kern/kernel.asm	/^f0104eb8:	6a 56                	push   $0x56$/;"	l
f0104eba	obj/kern/kernel.asm	/^f0104eba:	e9 9b 07 00 00       	jmp    f010565a <_alltraps>$/;"	l
f0104ebf	obj/kern/kernel.asm	/^f0104ebf:	90                   	nop$/;"	l
f0104ec0	obj/kern/kernel.asm	/^f0104ec0 <vector87>:$/;"	l
f0104ec0	obj/kern/kernel.asm	/^f0104ec0:	6a 00                	push   $0x0$/;"	l
f0104ec2	obj/kern/kernel.asm	/^f0104ec2:	6a 57                	push   $0x57$/;"	l
f0104ec4	obj/kern/kernel.asm	/^f0104ec4:	e9 91 07 00 00       	jmp    f010565a <_alltraps>$/;"	l
f0104ec9	obj/kern/kernel.asm	/^f0104ec9:	90                   	nop$/;"	l
f0104eca	obj/kern/kernel.asm	/^f0104eca <vector88>:$/;"	l
f0104eca	obj/kern/kernel.asm	/^f0104eca:	6a 00                	push   $0x0$/;"	l
f0104ecc	obj/kern/kernel.asm	/^f0104ecc:	6a 58                	push   $0x58$/;"	l
f0104ece	obj/kern/kernel.asm	/^f0104ece:	e9 87 07 00 00       	jmp    f010565a <_alltraps>$/;"	l
f0104ed3	obj/kern/kernel.asm	/^f0104ed3:	90                   	nop$/;"	l
f0104ed4	obj/kern/kernel.asm	/^f0104ed4 <vector89>:$/;"	l
f0104ed4	obj/kern/kernel.asm	/^f0104ed4:	6a 00                	push   $0x0$/;"	l
f0104ed6	obj/kern/kernel.asm	/^f0104ed6:	6a 59                	push   $0x59$/;"	l
f0104ed8	obj/kern/kernel.asm	/^f0104ed8:	e9 7d 07 00 00       	jmp    f010565a <_alltraps>$/;"	l
f0104edd	obj/kern/kernel.asm	/^f0104edd:	90                   	nop$/;"	l
f0104ede	obj/kern/kernel.asm	/^f0104ede <vector90>:$/;"	l
f0104ede	obj/kern/kernel.asm	/^f0104ede:	6a 00                	push   $0x0$/;"	l
f0104ee0	obj/kern/kernel.asm	/^f0104ee0:	6a 5a                	push   $0x5a$/;"	l
f0104ee2	obj/kern/kernel.asm	/^f0104ee2:	e9 73 07 00 00       	jmp    f010565a <_alltraps>$/;"	l
f0104ee7	obj/kern/kernel.asm	/^f0104ee7:	90                   	nop$/;"	l
f0104ee8	obj/kern/kernel.asm	/^f0104ee8 <vector91>:$/;"	l
f0104ee8	obj/kern/kernel.asm	/^f0104ee8:	6a 00                	push   $0x0$/;"	l
f0104eea	obj/kern/kernel.asm	/^f0104eea:	6a 5b                	push   $0x5b$/;"	l
f0104eec	obj/kern/kernel.asm	/^f0104eec:	e9 69 07 00 00       	jmp    f010565a <_alltraps>$/;"	l
f0104ef1	obj/kern/kernel.asm	/^f0104ef1:	90                   	nop$/;"	l
f0104ef2	obj/kern/kernel.asm	/^f0104ef2 <vector92>:$/;"	l
f0104ef2	obj/kern/kernel.asm	/^f0104ef2:	6a 00                	push   $0x0$/;"	l
f0104ef4	obj/kern/kernel.asm	/^f0104ef4:	6a 5c                	push   $0x5c$/;"	l
f0104ef6	obj/kern/kernel.asm	/^f0104ef6:	e9 5f 07 00 00       	jmp    f010565a <_alltraps>$/;"	l
f0104efb	obj/kern/kernel.asm	/^f0104efb:	90                   	nop$/;"	l
f0104efc	obj/kern/kernel.asm	/^f0104efc <vector93>:$/;"	l
f0104efc	obj/kern/kernel.asm	/^f0104efc:	6a 00                	push   $0x0$/;"	l
f0104efe	obj/kern/kernel.asm	/^f0104efe:	6a 5d                	push   $0x5d$/;"	l
f0104f00	obj/kern/kernel.asm	/^f0104f00:	e9 55 07 00 00       	jmp    f010565a <_alltraps>$/;"	l
f0104f05	obj/kern/kernel.asm	/^f0104f05:	90                   	nop$/;"	l
f0104f06	obj/kern/kernel.asm	/^f0104f06 <vector94>:$/;"	l
f0104f06	obj/kern/kernel.asm	/^f0104f06:	6a 00                	push   $0x0$/;"	l
f0104f08	obj/kern/kernel.asm	/^f0104f08:	6a 5e                	push   $0x5e$/;"	l
f0104f0a	obj/kern/kernel.asm	/^f0104f0a:	e9 4b 07 00 00       	jmp    f010565a <_alltraps>$/;"	l
f0104f0f	obj/kern/kernel.asm	/^f0104f0f:	90                   	nop$/;"	l
f0104f10	obj/kern/kernel.asm	/^f0104f10 <vector95>:$/;"	l
f0104f10	obj/kern/kernel.asm	/^f0104f10:	6a 00                	push   $0x0$/;"	l
f0104f12	obj/kern/kernel.asm	/^f0104f12:	6a 5f                	push   $0x5f$/;"	l
f0104f14	obj/kern/kernel.asm	/^f0104f14:	e9 41 07 00 00       	jmp    f010565a <_alltraps>$/;"	l
f0104f19	obj/kern/kernel.asm	/^f0104f19:	90                   	nop$/;"	l
f0104f1a	obj/kern/kernel.asm	/^f0104f1a <vector96>:$/;"	l
f0104f1a	obj/kern/kernel.asm	/^f0104f1a:	6a 00                	push   $0x0$/;"	l
f0104f1c	obj/kern/kernel.asm	/^f0104f1c:	6a 60                	push   $0x60$/;"	l
f0104f1e	obj/kern/kernel.asm	/^f0104f1e:	e9 37 07 00 00       	jmp    f010565a <_alltraps>$/;"	l
f0104f23	obj/kern/kernel.asm	/^f0104f23:	90                   	nop$/;"	l
f0104f24	obj/kern/kernel.asm	/^f0104f24 <vector97>:$/;"	l
f0104f24	obj/kern/kernel.asm	/^f0104f24:	6a 00                	push   $0x0$/;"	l
f0104f26	obj/kern/kernel.asm	/^f0104f26:	6a 61                	push   $0x61$/;"	l
f0104f28	obj/kern/kernel.asm	/^f0104f28:	e9 2d 07 00 00       	jmp    f010565a <_alltraps>$/;"	l
f0104f2d	obj/kern/kernel.asm	/^f0104f2d:	90                   	nop$/;"	l
f0104f2e	obj/kern/kernel.asm	/^f0104f2e <vector98>:$/;"	l
f0104f2e	obj/kern/kernel.asm	/^f0104f2e:	6a 00                	push   $0x0$/;"	l
f0104f30	obj/kern/kernel.asm	/^f0104f30:	6a 62                	push   $0x62$/;"	l
f0104f32	obj/kern/kernel.asm	/^f0104f32:	e9 23 07 00 00       	jmp    f010565a <_alltraps>$/;"	l
f0104f37	obj/kern/kernel.asm	/^f0104f37:	90                   	nop$/;"	l
f0104f38	obj/kern/kernel.asm	/^f0104f38 <vector99>:$/;"	l
f0104f38	obj/kern/kernel.asm	/^f0104f38:	6a 00                	push   $0x0$/;"	l
f0104f3a	obj/kern/kernel.asm	/^f0104f3a:	6a 63                	push   $0x63$/;"	l
f0104f3c	obj/kern/kernel.asm	/^f0104f3c:	e9 19 07 00 00       	jmp    f010565a <_alltraps>$/;"	l
f0104f41	obj/kern/kernel.asm	/^f0104f41:	90                   	nop$/;"	l
f0104f42	obj/kern/kernel.asm	/^f0104f42 <vector100>:$/;"	l
f0104f42	obj/kern/kernel.asm	/^f0104f42:	6a 00                	push   $0x0$/;"	l
f0104f44	obj/kern/kernel.asm	/^f0104f44:	6a 64                	push   $0x64$/;"	l
f0104f46	obj/kern/kernel.asm	/^f0104f46:	e9 0f 07 00 00       	jmp    f010565a <_alltraps>$/;"	l
f0104f4b	obj/kern/kernel.asm	/^f0104f4b:	90                   	nop$/;"	l
f0104f4c	obj/kern/kernel.asm	/^f0104f4c <vector101>:$/;"	l
f0104f4c	obj/kern/kernel.asm	/^f0104f4c:	6a 00                	push   $0x0$/;"	l
f0104f4e	obj/kern/kernel.asm	/^f0104f4e:	6a 65                	push   $0x65$/;"	l
f0104f50	obj/kern/kernel.asm	/^f0104f50:	e9 05 07 00 00       	jmp    f010565a <_alltraps>$/;"	l
f0104f55	obj/kern/kernel.asm	/^f0104f55:	90                   	nop$/;"	l
f0104f56	obj/kern/kernel.asm	/^f0104f56 <vector102>:$/;"	l
f0104f56	obj/kern/kernel.asm	/^f0104f56:	6a 00                	push   $0x0$/;"	l
f0104f58	obj/kern/kernel.asm	/^f0104f58:	6a 66                	push   $0x66$/;"	l
f0104f5a	obj/kern/kernel.asm	/^f0104f5a:	e9 fb 06 00 00       	jmp    f010565a <_alltraps>$/;"	l
f0104f5f	obj/kern/kernel.asm	/^f0104f5f:	90                   	nop$/;"	l
f0104f60	obj/kern/kernel.asm	/^f0104f60 <vector103>:$/;"	l
f0104f60	obj/kern/kernel.asm	/^f0104f60:	6a 00                	push   $0x0$/;"	l
f0104f62	obj/kern/kernel.asm	/^f0104f62:	6a 67                	push   $0x67$/;"	l
f0104f64	obj/kern/kernel.asm	/^f0104f64:	e9 f1 06 00 00       	jmp    f010565a <_alltraps>$/;"	l
f0104f69	obj/kern/kernel.asm	/^f0104f69:	90                   	nop$/;"	l
f0104f6a	obj/kern/kernel.asm	/^f0104f6a <vector104>:$/;"	l
f0104f6a	obj/kern/kernel.asm	/^f0104f6a:	6a 00                	push   $0x0$/;"	l
f0104f6c	obj/kern/kernel.asm	/^f0104f6c:	6a 68                	push   $0x68$/;"	l
f0104f6e	obj/kern/kernel.asm	/^f0104f6e:	e9 e7 06 00 00       	jmp    f010565a <_alltraps>$/;"	l
f0104f73	obj/kern/kernel.asm	/^f0104f73:	90                   	nop$/;"	l
f0104f74	obj/kern/kernel.asm	/^f0104f74 <vector105>:$/;"	l
f0104f74	obj/kern/kernel.asm	/^f0104f74:	6a 00                	push   $0x0$/;"	l
f0104f76	obj/kern/kernel.asm	/^f0104f76:	6a 69                	push   $0x69$/;"	l
f0104f78	obj/kern/kernel.asm	/^f0104f78:	e9 dd 06 00 00       	jmp    f010565a <_alltraps>$/;"	l
f0104f7d	obj/kern/kernel.asm	/^f0104f7d:	90                   	nop$/;"	l
f0104f7e	obj/kern/kernel.asm	/^f0104f7e <vector106>:$/;"	l
f0104f7e	obj/kern/kernel.asm	/^f0104f7e:	6a 00                	push   $0x0$/;"	l
f0104f80	obj/kern/kernel.asm	/^f0104f80:	6a 6a                	push   $0x6a$/;"	l
f0104f82	obj/kern/kernel.asm	/^f0104f82:	e9 d3 06 00 00       	jmp    f010565a <_alltraps>$/;"	l
f0104f87	obj/kern/kernel.asm	/^f0104f87:	90                   	nop$/;"	l
f0104f88	obj/kern/kernel.asm	/^f0104f88 <vector107>:$/;"	l
f0104f88	obj/kern/kernel.asm	/^f0104f88:	6a 00                	push   $0x0$/;"	l
f0104f8a	obj/kern/kernel.asm	/^f0104f8a:	6a 6b                	push   $0x6b$/;"	l
f0104f8c	obj/kern/kernel.asm	/^f0104f8c:	e9 c9 06 00 00       	jmp    f010565a <_alltraps>$/;"	l
f0104f91	obj/kern/kernel.asm	/^f0104f91:	90                   	nop$/;"	l
f0104f92	obj/kern/kernel.asm	/^f0104f92 <vector108>:$/;"	l
f0104f92	obj/kern/kernel.asm	/^f0104f92:	6a 00                	push   $0x0$/;"	l
f0104f94	obj/kern/kernel.asm	/^f0104f94:	6a 6c                	push   $0x6c$/;"	l
f0104f96	obj/kern/kernel.asm	/^f0104f96:	e9 bf 06 00 00       	jmp    f010565a <_alltraps>$/;"	l
f0104f9b	obj/kern/kernel.asm	/^f0104f9b:	90                   	nop$/;"	l
f0104f9c	obj/kern/kernel.asm	/^f0104f9c <vector109>:$/;"	l
f0104f9c	obj/kern/kernel.asm	/^f0104f9c:	6a 00                	push   $0x0$/;"	l
f0104f9e	obj/kern/kernel.asm	/^f0104f9e:	6a 6d                	push   $0x6d$/;"	l
f0104fa0	obj/kern/kernel.asm	/^f0104fa0:	e9 b5 06 00 00       	jmp    f010565a <_alltraps>$/;"	l
f0104fa5	obj/kern/kernel.asm	/^f0104fa5:	90                   	nop$/;"	l
f0104fa6	obj/kern/kernel.asm	/^f0104fa6 <vector110>:$/;"	l
f0104fa6	obj/kern/kernel.asm	/^f0104fa6:	6a 00                	push   $0x0$/;"	l
f0104fa8	obj/kern/kernel.asm	/^f0104fa8:	6a 6e                	push   $0x6e$/;"	l
f0104faa	obj/kern/kernel.asm	/^f0104faa:	e9 ab 06 00 00       	jmp    f010565a <_alltraps>$/;"	l
f0104faf	obj/kern/kernel.asm	/^f0104faf:	90                   	nop$/;"	l
f0104fb0	obj/kern/kernel.asm	/^f0104fb0 <vector111>:$/;"	l
f0104fb0	obj/kern/kernel.asm	/^f0104fb0:	6a 00                	push   $0x0$/;"	l
f0104fb2	obj/kern/kernel.asm	/^f0104fb2:	6a 6f                	push   $0x6f$/;"	l
f0104fb4	obj/kern/kernel.asm	/^f0104fb4:	e9 a1 06 00 00       	jmp    f010565a <_alltraps>$/;"	l
f0104fb9	obj/kern/kernel.asm	/^f0104fb9:	90                   	nop$/;"	l
f0104fba	obj/kern/kernel.asm	/^f0104fba <vector112>:$/;"	l
f0104fba	obj/kern/kernel.asm	/^f0104fba:	6a 00                	push   $0x0$/;"	l
f0104fbc	obj/kern/kernel.asm	/^f0104fbc:	6a 70                	push   $0x70$/;"	l
f0104fbe	obj/kern/kernel.asm	/^f0104fbe:	e9 97 06 00 00       	jmp    f010565a <_alltraps>$/;"	l
f0104fc3	obj/kern/kernel.asm	/^f0104fc3:	90                   	nop$/;"	l
f0104fc4	obj/kern/kernel.asm	/^f0104fc4 <vector113>:$/;"	l
f0104fc4	obj/kern/kernel.asm	/^f0104fc4:	6a 00                	push   $0x0$/;"	l
f0104fc6	obj/kern/kernel.asm	/^f0104fc6:	6a 71                	push   $0x71$/;"	l
f0104fc8	obj/kern/kernel.asm	/^f0104fc8:	e9 8d 06 00 00       	jmp    f010565a <_alltraps>$/;"	l
f0104fcd	obj/kern/kernel.asm	/^f0104fcd:	90                   	nop$/;"	l
f0104fce	obj/kern/kernel.asm	/^f0104fce <vector114>:$/;"	l
f0104fce	obj/kern/kernel.asm	/^f0104fce:	6a 00                	push   $0x0$/;"	l
f0104fd0	obj/kern/kernel.asm	/^f0104fd0:	6a 72                	push   $0x72$/;"	l
f0104fd2	obj/kern/kernel.asm	/^f0104fd2:	e9 83 06 00 00       	jmp    f010565a <_alltraps>$/;"	l
f0104fd7	obj/kern/kernel.asm	/^f0104fd7:	90                   	nop$/;"	l
f0104fd8	obj/kern/kernel.asm	/^f0104fd8 <vector115>:$/;"	l
f0104fd8	obj/kern/kernel.asm	/^f0104fd8:	6a 00                	push   $0x0$/;"	l
f0104fda	obj/kern/kernel.asm	/^f0104fda:	6a 73                	push   $0x73$/;"	l
f0104fdc	obj/kern/kernel.asm	/^f0104fdc:	e9 79 06 00 00       	jmp    f010565a <_alltraps>$/;"	l
f0104fe1	obj/kern/kernel.asm	/^f0104fe1:	90                   	nop$/;"	l
f0104fe2	obj/kern/kernel.asm	/^f0104fe2 <vector116>:$/;"	l
f0104fe2	obj/kern/kernel.asm	/^f0104fe2:	6a 00                	push   $0x0$/;"	l
f0104fe4	obj/kern/kernel.asm	/^f0104fe4:	6a 74                	push   $0x74$/;"	l
f0104fe6	obj/kern/kernel.asm	/^f0104fe6:	e9 6f 06 00 00       	jmp    f010565a <_alltraps>$/;"	l
f0104feb	obj/kern/kernel.asm	/^f0104feb:	90                   	nop$/;"	l
f0104fec	obj/kern/kernel.asm	/^f0104fec <vector117>:$/;"	l
f0104fec	obj/kern/kernel.asm	/^f0104fec:	6a 00                	push   $0x0$/;"	l
f0104fee	obj/kern/kernel.asm	/^f0104fee:	6a 75                	push   $0x75$/;"	l
f0104ff0	obj/kern/kernel.asm	/^f0104ff0:	e9 65 06 00 00       	jmp    f010565a <_alltraps>$/;"	l
f0104ff5	obj/kern/kernel.asm	/^f0104ff5:	90                   	nop$/;"	l
f0104ff6	obj/kern/kernel.asm	/^f0104ff6 <vector118>:$/;"	l
f0104ff6	obj/kern/kernel.asm	/^f0104ff6:	6a 00                	push   $0x0$/;"	l
f0104ff8	obj/kern/kernel.asm	/^f0104ff8:	6a 76                	push   $0x76$/;"	l
f0104ffa	obj/kern/kernel.asm	/^f0104ffa:	e9 5b 06 00 00       	jmp    f010565a <_alltraps>$/;"	l
f0104fff	obj/kern/kernel.asm	/^f0104fff:	90                   	nop$/;"	l
f0105000	obj/kern/kernel.asm	/^f0105000 <vector119>:$/;"	l
f0105000	obj/kern/kernel.asm	/^f0105000:	6a 00                	push   $0x0$/;"	l
f0105002	obj/kern/kernel.asm	/^f0105002:	6a 77                	push   $0x77$/;"	l
f0105004	obj/kern/kernel.asm	/^f0105004:	e9 51 06 00 00       	jmp    f010565a <_alltraps>$/;"	l
f0105009	obj/kern/kernel.asm	/^f0105009:	90                   	nop$/;"	l
f010500a	obj/kern/kernel.asm	/^f010500a <vector120>:$/;"	l
f010500a	obj/kern/kernel.asm	/^f010500a:	6a 00                	push   $0x0$/;"	l
f010500c	obj/kern/kernel.asm	/^f010500c:	6a 78                	push   $0x78$/;"	l
f010500e	obj/kern/kernel.asm	/^f010500e:	e9 47 06 00 00       	jmp    f010565a <_alltraps>$/;"	l
f0105013	obj/kern/kernel.asm	/^f0105013:	90                   	nop$/;"	l
f0105014	obj/kern/kernel.asm	/^f0105014 <vector121>:$/;"	l
f0105014	obj/kern/kernel.asm	/^f0105014:	6a 00                	push   $0x0$/;"	l
f0105016	obj/kern/kernel.asm	/^f0105016:	6a 79                	push   $0x79$/;"	l
f0105018	obj/kern/kernel.asm	/^f0105018:	e9 3d 06 00 00       	jmp    f010565a <_alltraps>$/;"	l
f010501d	obj/kern/kernel.asm	/^f010501d:	90                   	nop$/;"	l
f010501e	obj/kern/kernel.asm	/^f010501e <vector122>:$/;"	l
f010501e	obj/kern/kernel.asm	/^f010501e:	6a 00                	push   $0x0$/;"	l
f0105020	obj/kern/kernel.asm	/^f0105020:	6a 7a                	push   $0x7a$/;"	l
f0105022	obj/kern/kernel.asm	/^f0105022:	e9 33 06 00 00       	jmp    f010565a <_alltraps>$/;"	l
f0105027	obj/kern/kernel.asm	/^f0105027:	90                   	nop$/;"	l
f0105028	obj/kern/kernel.asm	/^f0105028 <vector123>:$/;"	l
f0105028	obj/kern/kernel.asm	/^f0105028:	6a 00                	push   $0x0$/;"	l
f010502a	obj/kern/kernel.asm	/^f010502a:	6a 7b                	push   $0x7b$/;"	l
f010502c	obj/kern/kernel.asm	/^f010502c:	e9 29 06 00 00       	jmp    f010565a <_alltraps>$/;"	l
f0105031	obj/kern/kernel.asm	/^f0105031:	90                   	nop$/;"	l
f0105032	obj/kern/kernel.asm	/^f0105032 <vector124>:$/;"	l
f0105032	obj/kern/kernel.asm	/^f0105032:	6a 00                	push   $0x0$/;"	l
f0105034	obj/kern/kernel.asm	/^f0105034:	6a 7c                	push   $0x7c$/;"	l
f0105036	obj/kern/kernel.asm	/^f0105036:	e9 1f 06 00 00       	jmp    f010565a <_alltraps>$/;"	l
f010503b	obj/kern/kernel.asm	/^f010503b:	90                   	nop$/;"	l
f010503c	obj/kern/kernel.asm	/^f010503c <vector125>:$/;"	l
f010503c	obj/kern/kernel.asm	/^f010503c:	6a 00                	push   $0x0$/;"	l
f010503e	obj/kern/kernel.asm	/^f010503e:	6a 7d                	push   $0x7d$/;"	l
f0105040	obj/kern/kernel.asm	/^f0105040:	e9 15 06 00 00       	jmp    f010565a <_alltraps>$/;"	l
f0105045	obj/kern/kernel.asm	/^f0105045:	90                   	nop$/;"	l
f0105046	obj/kern/kernel.asm	/^f0105046 <vector126>:$/;"	l
f0105046	obj/kern/kernel.asm	/^f0105046:	6a 00                	push   $0x0$/;"	l
f0105048	obj/kern/kernel.asm	/^f0105048:	6a 7e                	push   $0x7e$/;"	l
f010504a	obj/kern/kernel.asm	/^f010504a:	e9 0b 06 00 00       	jmp    f010565a <_alltraps>$/;"	l
f010504f	obj/kern/kernel.asm	/^f010504f:	90                   	nop$/;"	l
f0105050	obj/kern/kernel.asm	/^f0105050 <vector127>:$/;"	l
f0105050	obj/kern/kernel.asm	/^f0105050:	6a 00                	push   $0x0$/;"	l
f0105052	obj/kern/kernel.asm	/^f0105052:	6a 7f                	push   $0x7f$/;"	l
f0105054	obj/kern/kernel.asm	/^f0105054:	e9 01 06 00 00       	jmp    f010565a <_alltraps>$/;"	l
f0105059	obj/kern/kernel.asm	/^f0105059:	90                   	nop$/;"	l
f010505a	obj/kern/kernel.asm	/^f010505a <vector128>:$/;"	l
f010505a	obj/kern/kernel.asm	/^f010505a:	6a 00                	push   $0x0$/;"	l
f010505c	obj/kern/kernel.asm	/^f010505c:	68 80 00 00 00       	push   $0x80$/;"	l
f0105061	obj/kern/kernel.asm	/^f0105061:	e9 f4 05 00 00       	jmp    f010565a <_alltraps>$/;"	l
f0105066	obj/kern/kernel.asm	/^f0105066 <vector129>:$/;"	l
f0105066	obj/kern/kernel.asm	/^f0105066:	6a 00                	push   $0x0$/;"	l
f0105068	obj/kern/kernel.asm	/^f0105068:	68 81 00 00 00       	push   $0x81$/;"	l
f010506d	obj/kern/kernel.asm	/^f010506d:	e9 e8 05 00 00       	jmp    f010565a <_alltraps>$/;"	l
f0105072	obj/kern/kernel.asm	/^f0105072 <vector130>:$/;"	l
f0105072	obj/kern/kernel.asm	/^f0105072:	6a 00                	push   $0x0$/;"	l
f0105074	obj/kern/kernel.asm	/^f0105074:	68 82 00 00 00       	push   $0x82$/;"	l
f0105079	obj/kern/kernel.asm	/^f0105079:	e9 dc 05 00 00       	jmp    f010565a <_alltraps>$/;"	l
f010507e	obj/kern/kernel.asm	/^f010507e <vector131>:$/;"	l
f010507e	obj/kern/kernel.asm	/^f010507e:	6a 00                	push   $0x0$/;"	l
f0105080	obj/kern/kernel.asm	/^f0105080:	68 83 00 00 00       	push   $0x83$/;"	l
f0105085	obj/kern/kernel.asm	/^f0105085:	e9 d0 05 00 00       	jmp    f010565a <_alltraps>$/;"	l
f010508a	obj/kern/kernel.asm	/^f010508a <vector132>:$/;"	l
f010508a	obj/kern/kernel.asm	/^f010508a:	6a 00                	push   $0x0$/;"	l
f010508c	obj/kern/kernel.asm	/^f010508c:	68 84 00 00 00       	push   $0x84$/;"	l
f0105091	obj/kern/kernel.asm	/^f0105091:	e9 c4 05 00 00       	jmp    f010565a <_alltraps>$/;"	l
f0105096	obj/kern/kernel.asm	/^f0105096 <vector133>:$/;"	l
f0105096	obj/kern/kernel.asm	/^f0105096:	6a 00                	push   $0x0$/;"	l
f0105098	obj/kern/kernel.asm	/^f0105098:	68 85 00 00 00       	push   $0x85$/;"	l
f010509d	obj/kern/kernel.asm	/^f010509d:	e9 b8 05 00 00       	jmp    f010565a <_alltraps>$/;"	l
f01050a2	obj/kern/kernel.asm	/^f01050a2 <vector134>:$/;"	l
f01050a2	obj/kern/kernel.asm	/^f01050a2:	6a 00                	push   $0x0$/;"	l
f01050a4	obj/kern/kernel.asm	/^f01050a4:	68 86 00 00 00       	push   $0x86$/;"	l
f01050a9	obj/kern/kernel.asm	/^f01050a9:	e9 ac 05 00 00       	jmp    f010565a <_alltraps>$/;"	l
f01050ae	obj/kern/kernel.asm	/^f01050ae <vector135>:$/;"	l
f01050ae	obj/kern/kernel.asm	/^f01050ae:	6a 00                	push   $0x0$/;"	l
f01050b0	obj/kern/kernel.asm	/^f01050b0:	68 87 00 00 00       	push   $0x87$/;"	l
f01050b5	obj/kern/kernel.asm	/^f01050b5:	e9 a0 05 00 00       	jmp    f010565a <_alltraps>$/;"	l
f01050ba	obj/kern/kernel.asm	/^f01050ba <vector136>:$/;"	l
f01050ba	obj/kern/kernel.asm	/^f01050ba:	6a 00                	push   $0x0$/;"	l
f01050bc	obj/kern/kernel.asm	/^f01050bc:	68 88 00 00 00       	push   $0x88$/;"	l
f01050c1	obj/kern/kernel.asm	/^f01050c1:	e9 94 05 00 00       	jmp    f010565a <_alltraps>$/;"	l
f01050c6	obj/kern/kernel.asm	/^f01050c6 <vector137>:$/;"	l
f01050c6	obj/kern/kernel.asm	/^f01050c6:	6a 00                	push   $0x0$/;"	l
f01050c8	obj/kern/kernel.asm	/^f01050c8:	68 89 00 00 00       	push   $0x89$/;"	l
f01050cd	obj/kern/kernel.asm	/^f01050cd:	e9 88 05 00 00       	jmp    f010565a <_alltraps>$/;"	l
f01050d2	obj/kern/kernel.asm	/^f01050d2 <vector138>:$/;"	l
f01050d2	obj/kern/kernel.asm	/^f01050d2:	6a 00                	push   $0x0$/;"	l
f01050d4	obj/kern/kernel.asm	/^f01050d4:	68 8a 00 00 00       	push   $0x8a$/;"	l
f01050d9	obj/kern/kernel.asm	/^f01050d9:	e9 7c 05 00 00       	jmp    f010565a <_alltraps>$/;"	l
f01050de	obj/kern/kernel.asm	/^f01050de <vector139>:$/;"	l
f01050de	obj/kern/kernel.asm	/^f01050de:	6a 00                	push   $0x0$/;"	l
f01050e0	obj/kern/kernel.asm	/^f01050e0:	68 8b 00 00 00       	push   $0x8b$/;"	l
f01050e5	obj/kern/kernel.asm	/^f01050e5:	e9 70 05 00 00       	jmp    f010565a <_alltraps>$/;"	l
f01050ea	obj/kern/kernel.asm	/^f01050ea <vector140>:$/;"	l
f01050ea	obj/kern/kernel.asm	/^f01050ea:	6a 00                	push   $0x0$/;"	l
f01050ec	obj/kern/kernel.asm	/^f01050ec:	68 8c 00 00 00       	push   $0x8c$/;"	l
f01050f1	obj/kern/kernel.asm	/^f01050f1:	e9 64 05 00 00       	jmp    f010565a <_alltraps>$/;"	l
f01050f6	obj/kern/kernel.asm	/^f01050f6 <vector141>:$/;"	l
f01050f6	obj/kern/kernel.asm	/^f01050f6:	6a 00                	push   $0x0$/;"	l
f01050f8	obj/kern/kernel.asm	/^f01050f8:	68 8d 00 00 00       	push   $0x8d$/;"	l
f01050fd	obj/kern/kernel.asm	/^f01050fd:	e9 58 05 00 00       	jmp    f010565a <_alltraps>$/;"	l
f0105102	obj/kern/kernel.asm	/^f0105102 <vector142>:$/;"	l
f0105102	obj/kern/kernel.asm	/^f0105102:	6a 00                	push   $0x0$/;"	l
f0105104	obj/kern/kernel.asm	/^f0105104:	68 8e 00 00 00       	push   $0x8e$/;"	l
f0105109	obj/kern/kernel.asm	/^f0105109:	e9 4c 05 00 00       	jmp    f010565a <_alltraps>$/;"	l
f010510e	obj/kern/kernel.asm	/^f010510e <vector143>:$/;"	l
f010510e	obj/kern/kernel.asm	/^f010510e:	6a 00                	push   $0x0$/;"	l
f0105110	obj/kern/kernel.asm	/^f0105110:	68 8f 00 00 00       	push   $0x8f$/;"	l
f0105115	obj/kern/kernel.asm	/^f0105115:	e9 40 05 00 00       	jmp    f010565a <_alltraps>$/;"	l
f010511a	obj/kern/kernel.asm	/^f010511a <vector144>:$/;"	l
f010511a	obj/kern/kernel.asm	/^f010511a:	6a 00                	push   $0x0$/;"	l
f010511c	obj/kern/kernel.asm	/^f010511c:	68 90 00 00 00       	push   $0x90$/;"	l
f0105121	obj/kern/kernel.asm	/^f0105121:	e9 34 05 00 00       	jmp    f010565a <_alltraps>$/;"	l
f0105126	obj/kern/kernel.asm	/^f0105126 <vector145>:$/;"	l
f0105126	obj/kern/kernel.asm	/^f0105126:	6a 00                	push   $0x0$/;"	l
f0105128	obj/kern/kernel.asm	/^f0105128:	68 91 00 00 00       	push   $0x91$/;"	l
f010512d	obj/kern/kernel.asm	/^f010512d:	e9 28 05 00 00       	jmp    f010565a <_alltraps>$/;"	l
f0105132	obj/kern/kernel.asm	/^f0105132 <vector146>:$/;"	l
f0105132	obj/kern/kernel.asm	/^f0105132:	6a 00                	push   $0x0$/;"	l
f0105134	obj/kern/kernel.asm	/^f0105134:	68 92 00 00 00       	push   $0x92$/;"	l
f0105139	obj/kern/kernel.asm	/^f0105139:	e9 1c 05 00 00       	jmp    f010565a <_alltraps>$/;"	l
f010513e	obj/kern/kernel.asm	/^f010513e <vector147>:$/;"	l
f010513e	obj/kern/kernel.asm	/^f010513e:	6a 00                	push   $0x0$/;"	l
f0105140	obj/kern/kernel.asm	/^f0105140:	68 93 00 00 00       	push   $0x93$/;"	l
f0105145	obj/kern/kernel.asm	/^f0105145:	e9 10 05 00 00       	jmp    f010565a <_alltraps>$/;"	l
f010514a	obj/kern/kernel.asm	/^f010514a <vector148>:$/;"	l
f010514a	obj/kern/kernel.asm	/^f010514a:	6a 00                	push   $0x0$/;"	l
f010514c	obj/kern/kernel.asm	/^f010514c:	68 94 00 00 00       	push   $0x94$/;"	l
f0105151	obj/kern/kernel.asm	/^f0105151:	e9 04 05 00 00       	jmp    f010565a <_alltraps>$/;"	l
f0105156	obj/kern/kernel.asm	/^f0105156 <vector149>:$/;"	l
f0105156	obj/kern/kernel.asm	/^f0105156:	6a 00                	push   $0x0$/;"	l
f0105158	obj/kern/kernel.asm	/^f0105158:	68 95 00 00 00       	push   $0x95$/;"	l
f010515d	obj/kern/kernel.asm	/^f010515d:	e9 f8 04 00 00       	jmp    f010565a <_alltraps>$/;"	l
f0105162	obj/kern/kernel.asm	/^f0105162 <vector150>:$/;"	l
f0105162	obj/kern/kernel.asm	/^f0105162:	6a 00                	push   $0x0$/;"	l
f0105164	obj/kern/kernel.asm	/^f0105164:	68 96 00 00 00       	push   $0x96$/;"	l
f0105169	obj/kern/kernel.asm	/^f0105169:	e9 ec 04 00 00       	jmp    f010565a <_alltraps>$/;"	l
f010516e	obj/kern/kernel.asm	/^f010516e <vector151>:$/;"	l
f010516e	obj/kern/kernel.asm	/^f010516e:	6a 00                	push   $0x0$/;"	l
f0105170	obj/kern/kernel.asm	/^f0105170:	68 97 00 00 00       	push   $0x97$/;"	l
f0105175	obj/kern/kernel.asm	/^f0105175:	e9 e0 04 00 00       	jmp    f010565a <_alltraps>$/;"	l
f010517a	obj/kern/kernel.asm	/^f010517a <vector152>:$/;"	l
f010517a	obj/kern/kernel.asm	/^f010517a:	6a 00                	push   $0x0$/;"	l
f010517c	obj/kern/kernel.asm	/^f010517c:	68 98 00 00 00       	push   $0x98$/;"	l
f0105181	obj/kern/kernel.asm	/^f0105181:	e9 d4 04 00 00       	jmp    f010565a <_alltraps>$/;"	l
f0105186	obj/kern/kernel.asm	/^f0105186 <vector153>:$/;"	l
f0105186	obj/kern/kernel.asm	/^f0105186:	6a 00                	push   $0x0$/;"	l
f0105188	obj/kern/kernel.asm	/^f0105188:	68 99 00 00 00       	push   $0x99$/;"	l
f010518d	obj/kern/kernel.asm	/^f010518d:	e9 c8 04 00 00       	jmp    f010565a <_alltraps>$/;"	l
f0105192	obj/kern/kernel.asm	/^f0105192 <vector154>:$/;"	l
f0105192	obj/kern/kernel.asm	/^f0105192:	6a 00                	push   $0x0$/;"	l
f0105194	obj/kern/kernel.asm	/^f0105194:	68 9a 00 00 00       	push   $0x9a$/;"	l
f0105199	obj/kern/kernel.asm	/^f0105199:	e9 bc 04 00 00       	jmp    f010565a <_alltraps>$/;"	l
f010519e	obj/kern/kernel.asm	/^f010519e <vector155>:$/;"	l
f010519e	obj/kern/kernel.asm	/^f010519e:	6a 00                	push   $0x0$/;"	l
f01051a0	obj/kern/kernel.asm	/^f01051a0:	68 9b 00 00 00       	push   $0x9b$/;"	l
f01051a5	obj/kern/kernel.asm	/^f01051a5:	e9 b0 04 00 00       	jmp    f010565a <_alltraps>$/;"	l
f01051aa	obj/kern/kernel.asm	/^f01051aa <vector156>:$/;"	l
f01051aa	obj/kern/kernel.asm	/^f01051aa:	6a 00                	push   $0x0$/;"	l
f01051ac	obj/kern/kernel.asm	/^f01051ac:	68 9c 00 00 00       	push   $0x9c$/;"	l
f01051b1	obj/kern/kernel.asm	/^f01051b1:	e9 a4 04 00 00       	jmp    f010565a <_alltraps>$/;"	l
f01051b6	obj/kern/kernel.asm	/^f01051b6 <vector157>:$/;"	l
f01051b6	obj/kern/kernel.asm	/^f01051b6:	6a 00                	push   $0x0$/;"	l
f01051b8	obj/kern/kernel.asm	/^f01051b8:	68 9d 00 00 00       	push   $0x9d$/;"	l
f01051bd	obj/kern/kernel.asm	/^f01051bd:	e9 98 04 00 00       	jmp    f010565a <_alltraps>$/;"	l
f01051c2	obj/kern/kernel.asm	/^f01051c2 <vector158>:$/;"	l
f01051c2	obj/kern/kernel.asm	/^f01051c2:	6a 00                	push   $0x0$/;"	l
f01051c4	obj/kern/kernel.asm	/^f01051c4:	68 9e 00 00 00       	push   $0x9e$/;"	l
f01051c9	obj/kern/kernel.asm	/^f01051c9:	e9 8c 04 00 00       	jmp    f010565a <_alltraps>$/;"	l
f01051ce	obj/kern/kernel.asm	/^f01051ce <vector159>:$/;"	l
f01051ce	obj/kern/kernel.asm	/^f01051ce:	6a 00                	push   $0x0$/;"	l
f01051d0	obj/kern/kernel.asm	/^f01051d0:	68 9f 00 00 00       	push   $0x9f$/;"	l
f01051d5	obj/kern/kernel.asm	/^f01051d5:	e9 80 04 00 00       	jmp    f010565a <_alltraps>$/;"	l
f01051da	obj/kern/kernel.asm	/^f01051da <vector160>:$/;"	l
f01051da	obj/kern/kernel.asm	/^f01051da:	6a 00                	push   $0x0$/;"	l
f01051dc	obj/kern/kernel.asm	/^f01051dc:	68 a0 00 00 00       	push   $0xa0$/;"	l
f01051e1	obj/kern/kernel.asm	/^f01051e1:	e9 74 04 00 00       	jmp    f010565a <_alltraps>$/;"	l
f01051e6	obj/kern/kernel.asm	/^f01051e6 <vector161>:$/;"	l
f01051e6	obj/kern/kernel.asm	/^f01051e6:	6a 00                	push   $0x0$/;"	l
f01051e8	obj/kern/kernel.asm	/^f01051e8:	68 a1 00 00 00       	push   $0xa1$/;"	l
f01051ed	obj/kern/kernel.asm	/^f01051ed:	e9 68 04 00 00       	jmp    f010565a <_alltraps>$/;"	l
f01051f2	obj/kern/kernel.asm	/^f01051f2 <vector162>:$/;"	l
f01051f2	obj/kern/kernel.asm	/^f01051f2:	6a 00                	push   $0x0$/;"	l
f01051f4	obj/kern/kernel.asm	/^f01051f4:	68 a2 00 00 00       	push   $0xa2$/;"	l
f01051f9	obj/kern/kernel.asm	/^f01051f9:	e9 5c 04 00 00       	jmp    f010565a <_alltraps>$/;"	l
f01051fe	obj/kern/kernel.asm	/^f01051fe <vector163>:$/;"	l
f01051fe	obj/kern/kernel.asm	/^f01051fe:	6a 00                	push   $0x0$/;"	l
f0105200	obj/kern/kernel.asm	/^f0105200:	68 a3 00 00 00       	push   $0xa3$/;"	l
f0105205	obj/kern/kernel.asm	/^f0105205:	e9 50 04 00 00       	jmp    f010565a <_alltraps>$/;"	l
f010520a	obj/kern/kernel.asm	/^f010520a <vector164>:$/;"	l
f010520a	obj/kern/kernel.asm	/^f010520a:	6a 00                	push   $0x0$/;"	l
f010520c	obj/kern/kernel.asm	/^f010520c:	68 a4 00 00 00       	push   $0xa4$/;"	l
f0105211	obj/kern/kernel.asm	/^f0105211:	e9 44 04 00 00       	jmp    f010565a <_alltraps>$/;"	l
f0105216	obj/kern/kernel.asm	/^f0105216 <vector165>:$/;"	l
f0105216	obj/kern/kernel.asm	/^f0105216:	6a 00                	push   $0x0$/;"	l
f0105218	obj/kern/kernel.asm	/^f0105218:	68 a5 00 00 00       	push   $0xa5$/;"	l
f010521d	obj/kern/kernel.asm	/^f010521d:	e9 38 04 00 00       	jmp    f010565a <_alltraps>$/;"	l
f0105222	obj/kern/kernel.asm	/^f0105222 <vector166>:$/;"	l
f0105222	obj/kern/kernel.asm	/^f0105222:	6a 00                	push   $0x0$/;"	l
f0105224	obj/kern/kernel.asm	/^f0105224:	68 a6 00 00 00       	push   $0xa6$/;"	l
f0105229	obj/kern/kernel.asm	/^f0105229:	e9 2c 04 00 00       	jmp    f010565a <_alltraps>$/;"	l
f010522e	obj/kern/kernel.asm	/^f010522e <vector167>:$/;"	l
f010522e	obj/kern/kernel.asm	/^f010522e:	6a 00                	push   $0x0$/;"	l
f0105230	obj/kern/kernel.asm	/^f0105230:	68 a7 00 00 00       	push   $0xa7$/;"	l
f0105235	obj/kern/kernel.asm	/^f0105235:	e9 20 04 00 00       	jmp    f010565a <_alltraps>$/;"	l
f010523a	obj/kern/kernel.asm	/^f010523a <vector168>:$/;"	l
f010523a	obj/kern/kernel.asm	/^f010523a:	6a 00                	push   $0x0$/;"	l
f010523c	obj/kern/kernel.asm	/^f010523c:	68 a8 00 00 00       	push   $0xa8$/;"	l
f0105241	obj/kern/kernel.asm	/^f0105241:	e9 14 04 00 00       	jmp    f010565a <_alltraps>$/;"	l
f0105246	obj/kern/kernel.asm	/^f0105246 <vector169>:$/;"	l
f0105246	obj/kern/kernel.asm	/^f0105246:	6a 00                	push   $0x0$/;"	l
f0105248	obj/kern/kernel.asm	/^f0105248:	68 a9 00 00 00       	push   $0xa9$/;"	l
f010524d	obj/kern/kernel.asm	/^f010524d:	e9 08 04 00 00       	jmp    f010565a <_alltraps>$/;"	l
f0105252	obj/kern/kernel.asm	/^f0105252 <vector170>:$/;"	l
f0105252	obj/kern/kernel.asm	/^f0105252:	6a 00                	push   $0x0$/;"	l
f0105254	obj/kern/kernel.asm	/^f0105254:	68 aa 00 00 00       	push   $0xaa$/;"	l
f0105259	obj/kern/kernel.asm	/^f0105259:	e9 fc 03 00 00       	jmp    f010565a <_alltraps>$/;"	l
f010525e	obj/kern/kernel.asm	/^f010525e <vector171>:$/;"	l
f010525e	obj/kern/kernel.asm	/^f010525e:	6a 00                	push   $0x0$/;"	l
f0105260	obj/kern/kernel.asm	/^f0105260:	68 ab 00 00 00       	push   $0xab$/;"	l
f0105265	obj/kern/kernel.asm	/^f0105265:	e9 f0 03 00 00       	jmp    f010565a <_alltraps>$/;"	l
f010526a	obj/kern/kernel.asm	/^f010526a <vector172>:$/;"	l
f010526a	obj/kern/kernel.asm	/^f010526a:	6a 00                	push   $0x0$/;"	l
f010526c	obj/kern/kernel.asm	/^f010526c:	68 ac 00 00 00       	push   $0xac$/;"	l
f0105271	obj/kern/kernel.asm	/^f0105271:	e9 e4 03 00 00       	jmp    f010565a <_alltraps>$/;"	l
f0105276	obj/kern/kernel.asm	/^f0105276 <vector173>:$/;"	l
f0105276	obj/kern/kernel.asm	/^f0105276:	6a 00                	push   $0x0$/;"	l
f0105278	obj/kern/kernel.asm	/^f0105278:	68 ad 00 00 00       	push   $0xad$/;"	l
f010527d	obj/kern/kernel.asm	/^f010527d:	e9 d8 03 00 00       	jmp    f010565a <_alltraps>$/;"	l
f0105282	obj/kern/kernel.asm	/^f0105282 <vector174>:$/;"	l
f0105282	obj/kern/kernel.asm	/^f0105282:	6a 00                	push   $0x0$/;"	l
f0105284	obj/kern/kernel.asm	/^f0105284:	68 ae 00 00 00       	push   $0xae$/;"	l
f0105289	obj/kern/kernel.asm	/^f0105289:	e9 cc 03 00 00       	jmp    f010565a <_alltraps>$/;"	l
f010528e	obj/kern/kernel.asm	/^f010528e <vector175>:$/;"	l
f010528e	obj/kern/kernel.asm	/^f010528e:	6a 00                	push   $0x0$/;"	l
f0105290	obj/kern/kernel.asm	/^f0105290:	68 af 00 00 00       	push   $0xaf$/;"	l
f0105295	obj/kern/kernel.asm	/^f0105295:	e9 c0 03 00 00       	jmp    f010565a <_alltraps>$/;"	l
f010529a	obj/kern/kernel.asm	/^f010529a <vector176>:$/;"	l
f010529a	obj/kern/kernel.asm	/^f010529a:	6a 00                	push   $0x0$/;"	l
f010529c	obj/kern/kernel.asm	/^f010529c:	68 b0 00 00 00       	push   $0xb0$/;"	l
f01052a1	obj/kern/kernel.asm	/^f01052a1:	e9 b4 03 00 00       	jmp    f010565a <_alltraps>$/;"	l
f01052a6	obj/kern/kernel.asm	/^f01052a6 <vector177>:$/;"	l
f01052a6	obj/kern/kernel.asm	/^f01052a6:	6a 00                	push   $0x0$/;"	l
f01052a8	obj/kern/kernel.asm	/^f01052a8:	68 b1 00 00 00       	push   $0xb1$/;"	l
f01052ad	obj/kern/kernel.asm	/^f01052ad:	e9 a8 03 00 00       	jmp    f010565a <_alltraps>$/;"	l
f01052b2	obj/kern/kernel.asm	/^f01052b2 <vector178>:$/;"	l
f01052b2	obj/kern/kernel.asm	/^f01052b2:	6a 00                	push   $0x0$/;"	l
f01052b4	obj/kern/kernel.asm	/^f01052b4:	68 b2 00 00 00       	push   $0xb2$/;"	l
f01052b9	obj/kern/kernel.asm	/^f01052b9:	e9 9c 03 00 00       	jmp    f010565a <_alltraps>$/;"	l
f01052be	obj/kern/kernel.asm	/^f01052be <vector179>:$/;"	l
f01052be	obj/kern/kernel.asm	/^f01052be:	6a 00                	push   $0x0$/;"	l
f01052c0	obj/kern/kernel.asm	/^f01052c0:	68 b3 00 00 00       	push   $0xb3$/;"	l
f01052c5	obj/kern/kernel.asm	/^f01052c5:	e9 90 03 00 00       	jmp    f010565a <_alltraps>$/;"	l
f01052ca	obj/kern/kernel.asm	/^f01052ca <vector180>:$/;"	l
f01052ca	obj/kern/kernel.asm	/^f01052ca:	6a 00                	push   $0x0$/;"	l
f01052cc	obj/kern/kernel.asm	/^f01052cc:	68 b4 00 00 00       	push   $0xb4$/;"	l
f01052d1	obj/kern/kernel.asm	/^f01052d1:	e9 84 03 00 00       	jmp    f010565a <_alltraps>$/;"	l
f01052d6	obj/kern/kernel.asm	/^f01052d6 <vector181>:$/;"	l
f01052d6	obj/kern/kernel.asm	/^f01052d6:	6a 00                	push   $0x0$/;"	l
f01052d8	obj/kern/kernel.asm	/^f01052d8:	68 b5 00 00 00       	push   $0xb5$/;"	l
f01052dd	obj/kern/kernel.asm	/^f01052dd:	e9 78 03 00 00       	jmp    f010565a <_alltraps>$/;"	l
f01052e2	obj/kern/kernel.asm	/^f01052e2 <vector182>:$/;"	l
f01052e2	obj/kern/kernel.asm	/^f01052e2:	6a 00                	push   $0x0$/;"	l
f01052e4	obj/kern/kernel.asm	/^f01052e4:	68 b6 00 00 00       	push   $0xb6$/;"	l
f01052e9	obj/kern/kernel.asm	/^f01052e9:	e9 6c 03 00 00       	jmp    f010565a <_alltraps>$/;"	l
f01052ee	obj/kern/kernel.asm	/^f01052ee <vector183>:$/;"	l
f01052ee	obj/kern/kernel.asm	/^f01052ee:	6a 00                	push   $0x0$/;"	l
f01052f0	obj/kern/kernel.asm	/^f01052f0:	68 b7 00 00 00       	push   $0xb7$/;"	l
f01052f5	obj/kern/kernel.asm	/^f01052f5:	e9 60 03 00 00       	jmp    f010565a <_alltraps>$/;"	l
f01052fa	obj/kern/kernel.asm	/^f01052fa <vector184>:$/;"	l
f01052fa	obj/kern/kernel.asm	/^f01052fa:	6a 00                	push   $0x0$/;"	l
f01052fc	obj/kern/kernel.asm	/^f01052fc:	68 b8 00 00 00       	push   $0xb8$/;"	l
f0105301	obj/kern/kernel.asm	/^f0105301:	e9 54 03 00 00       	jmp    f010565a <_alltraps>$/;"	l
f0105306	obj/kern/kernel.asm	/^f0105306 <vector185>:$/;"	l
f0105306	obj/kern/kernel.asm	/^f0105306:	6a 00                	push   $0x0$/;"	l
f0105308	obj/kern/kernel.asm	/^f0105308:	68 b9 00 00 00       	push   $0xb9$/;"	l
f010530d	obj/kern/kernel.asm	/^f010530d:	e9 48 03 00 00       	jmp    f010565a <_alltraps>$/;"	l
f0105312	obj/kern/kernel.asm	/^f0105312 <vector186>:$/;"	l
f0105312	obj/kern/kernel.asm	/^f0105312:	6a 00                	push   $0x0$/;"	l
f0105314	obj/kern/kernel.asm	/^f0105314:	68 ba 00 00 00       	push   $0xba$/;"	l
f0105319	obj/kern/kernel.asm	/^f0105319:	e9 3c 03 00 00       	jmp    f010565a <_alltraps>$/;"	l
f010531e	obj/kern/kernel.asm	/^f010531e <vector187>:$/;"	l
f010531e	obj/kern/kernel.asm	/^f010531e:	6a 00                	push   $0x0$/;"	l
f0105320	obj/kern/kernel.asm	/^f0105320:	68 bb 00 00 00       	push   $0xbb$/;"	l
f0105325	obj/kern/kernel.asm	/^f0105325:	e9 30 03 00 00       	jmp    f010565a <_alltraps>$/;"	l
f010532a	obj/kern/kernel.asm	/^f010532a <vector188>:$/;"	l
f010532a	obj/kern/kernel.asm	/^f010532a:	6a 00                	push   $0x0$/;"	l
f010532c	obj/kern/kernel.asm	/^f010532c:	68 bc 00 00 00       	push   $0xbc$/;"	l
f0105331	obj/kern/kernel.asm	/^f0105331:	e9 24 03 00 00       	jmp    f010565a <_alltraps>$/;"	l
f0105336	obj/kern/kernel.asm	/^f0105336 <vector189>:$/;"	l
f0105336	obj/kern/kernel.asm	/^f0105336:	6a 00                	push   $0x0$/;"	l
f0105338	obj/kern/kernel.asm	/^f0105338:	68 bd 00 00 00       	push   $0xbd$/;"	l
f010533d	obj/kern/kernel.asm	/^f010533d:	e9 18 03 00 00       	jmp    f010565a <_alltraps>$/;"	l
f0105342	obj/kern/kernel.asm	/^f0105342 <vector190>:$/;"	l
f0105342	obj/kern/kernel.asm	/^f0105342:	6a 00                	push   $0x0$/;"	l
f0105344	obj/kern/kernel.asm	/^f0105344:	68 be 00 00 00       	push   $0xbe$/;"	l
f0105349	obj/kern/kernel.asm	/^f0105349:	e9 0c 03 00 00       	jmp    f010565a <_alltraps>$/;"	l
f010534e	obj/kern/kernel.asm	/^f010534e <vector191>:$/;"	l
f010534e	obj/kern/kernel.asm	/^f010534e:	6a 00                	push   $0x0$/;"	l
f0105350	obj/kern/kernel.asm	/^f0105350:	68 bf 00 00 00       	push   $0xbf$/;"	l
f0105355	obj/kern/kernel.asm	/^f0105355:	e9 00 03 00 00       	jmp    f010565a <_alltraps>$/;"	l
f010535a	obj/kern/kernel.asm	/^f010535a <vector192>:$/;"	l
f010535a	obj/kern/kernel.asm	/^f010535a:	6a 00                	push   $0x0$/;"	l
f010535c	obj/kern/kernel.asm	/^f010535c:	68 c0 00 00 00       	push   $0xc0$/;"	l
f0105361	obj/kern/kernel.asm	/^f0105361:	e9 f4 02 00 00       	jmp    f010565a <_alltraps>$/;"	l
f0105366	obj/kern/kernel.asm	/^f0105366 <vector193>:$/;"	l
f0105366	obj/kern/kernel.asm	/^f0105366:	6a 00                	push   $0x0$/;"	l
f0105368	obj/kern/kernel.asm	/^f0105368:	68 c1 00 00 00       	push   $0xc1$/;"	l
f010536d	obj/kern/kernel.asm	/^f010536d:	e9 e8 02 00 00       	jmp    f010565a <_alltraps>$/;"	l
f0105372	obj/kern/kernel.asm	/^f0105372 <vector194>:$/;"	l
f0105372	obj/kern/kernel.asm	/^f0105372:	6a 00                	push   $0x0$/;"	l
f0105374	obj/kern/kernel.asm	/^f0105374:	68 c2 00 00 00       	push   $0xc2$/;"	l
f0105379	obj/kern/kernel.asm	/^f0105379:	e9 dc 02 00 00       	jmp    f010565a <_alltraps>$/;"	l
f010537e	obj/kern/kernel.asm	/^f010537e <vector195>:$/;"	l
f010537e	obj/kern/kernel.asm	/^f010537e:	6a 00                	push   $0x0$/;"	l
f0105380	obj/kern/kernel.asm	/^f0105380:	68 c3 00 00 00       	push   $0xc3$/;"	l
f0105385	obj/kern/kernel.asm	/^f0105385:	e9 d0 02 00 00       	jmp    f010565a <_alltraps>$/;"	l
f010538a	obj/kern/kernel.asm	/^f010538a <vector196>:$/;"	l
f010538a	obj/kern/kernel.asm	/^f010538a:	6a 00                	push   $0x0$/;"	l
f010538c	obj/kern/kernel.asm	/^f010538c:	68 c4 00 00 00       	push   $0xc4$/;"	l
f0105391	obj/kern/kernel.asm	/^f0105391:	e9 c4 02 00 00       	jmp    f010565a <_alltraps>$/;"	l
f0105396	obj/kern/kernel.asm	/^f0105396 <vector197>:$/;"	l
f0105396	obj/kern/kernel.asm	/^f0105396:	6a 00                	push   $0x0$/;"	l
f0105398	obj/kern/kernel.asm	/^f0105398:	68 c5 00 00 00       	push   $0xc5$/;"	l
f010539d	obj/kern/kernel.asm	/^f010539d:	e9 b8 02 00 00       	jmp    f010565a <_alltraps>$/;"	l
f01053a2	obj/kern/kernel.asm	/^f01053a2 <vector198>:$/;"	l
f01053a2	obj/kern/kernel.asm	/^f01053a2:	6a 00                	push   $0x0$/;"	l
f01053a4	obj/kern/kernel.asm	/^f01053a4:	68 c6 00 00 00       	push   $0xc6$/;"	l
f01053a9	obj/kern/kernel.asm	/^f01053a9:	e9 ac 02 00 00       	jmp    f010565a <_alltraps>$/;"	l
f01053ae	obj/kern/kernel.asm	/^f01053ae <vector199>:$/;"	l
f01053ae	obj/kern/kernel.asm	/^f01053ae:	6a 00                	push   $0x0$/;"	l
f01053b0	obj/kern/kernel.asm	/^f01053b0:	68 c7 00 00 00       	push   $0xc7$/;"	l
f01053b5	obj/kern/kernel.asm	/^f01053b5:	e9 a0 02 00 00       	jmp    f010565a <_alltraps>$/;"	l
f01053ba	obj/kern/kernel.asm	/^f01053ba <vector200>:$/;"	l
f01053ba	obj/kern/kernel.asm	/^f01053ba:	6a 00                	push   $0x0$/;"	l
f01053bc	obj/kern/kernel.asm	/^f01053bc:	68 c8 00 00 00       	push   $0xc8$/;"	l
f01053c1	obj/kern/kernel.asm	/^f01053c1:	e9 94 02 00 00       	jmp    f010565a <_alltraps>$/;"	l
f01053c6	obj/kern/kernel.asm	/^f01053c6 <vector201>:$/;"	l
f01053c6	obj/kern/kernel.asm	/^f01053c6:	6a 00                	push   $0x0$/;"	l
f01053c8	obj/kern/kernel.asm	/^f01053c8:	68 c9 00 00 00       	push   $0xc9$/;"	l
f01053cd	obj/kern/kernel.asm	/^f01053cd:	e9 88 02 00 00       	jmp    f010565a <_alltraps>$/;"	l
f01053d2	obj/kern/kernel.asm	/^f01053d2 <vector202>:$/;"	l
f01053d2	obj/kern/kernel.asm	/^f01053d2:	6a 00                	push   $0x0$/;"	l
f01053d4	obj/kern/kernel.asm	/^f01053d4:	68 ca 00 00 00       	push   $0xca$/;"	l
f01053d9	obj/kern/kernel.asm	/^f01053d9:	e9 7c 02 00 00       	jmp    f010565a <_alltraps>$/;"	l
f01053de	obj/kern/kernel.asm	/^f01053de <vector203>:$/;"	l
f01053de	obj/kern/kernel.asm	/^f01053de:	6a 00                	push   $0x0$/;"	l
f01053e0	obj/kern/kernel.asm	/^f01053e0:	68 cb 00 00 00       	push   $0xcb$/;"	l
f01053e5	obj/kern/kernel.asm	/^f01053e5:	e9 70 02 00 00       	jmp    f010565a <_alltraps>$/;"	l
f01053ea	obj/kern/kernel.asm	/^f01053ea <vector204>:$/;"	l
f01053ea	obj/kern/kernel.asm	/^f01053ea:	6a 00                	push   $0x0$/;"	l
f01053ec	obj/kern/kernel.asm	/^f01053ec:	68 cc 00 00 00       	push   $0xcc$/;"	l
f01053f1	obj/kern/kernel.asm	/^f01053f1:	e9 64 02 00 00       	jmp    f010565a <_alltraps>$/;"	l
f01053f6	obj/kern/kernel.asm	/^f01053f6 <vector205>:$/;"	l
f01053f6	obj/kern/kernel.asm	/^f01053f6:	6a 00                	push   $0x0$/;"	l
f01053f8	obj/kern/kernel.asm	/^f01053f8:	68 cd 00 00 00       	push   $0xcd$/;"	l
f01053fd	obj/kern/kernel.asm	/^f01053fd:	e9 58 02 00 00       	jmp    f010565a <_alltraps>$/;"	l
f0105402	obj/kern/kernel.asm	/^f0105402 <vector206>:$/;"	l
f0105402	obj/kern/kernel.asm	/^f0105402:	6a 00                	push   $0x0$/;"	l
f0105404	obj/kern/kernel.asm	/^f0105404:	68 ce 00 00 00       	push   $0xce$/;"	l
f0105409	obj/kern/kernel.asm	/^f0105409:	e9 4c 02 00 00       	jmp    f010565a <_alltraps>$/;"	l
f010540e	obj/kern/kernel.asm	/^f010540e <vector207>:$/;"	l
f010540e	obj/kern/kernel.asm	/^f010540e:	6a 00                	push   $0x0$/;"	l
f0105410	obj/kern/kernel.asm	/^f0105410:	68 cf 00 00 00       	push   $0xcf$/;"	l
f0105415	obj/kern/kernel.asm	/^f0105415:	e9 40 02 00 00       	jmp    f010565a <_alltraps>$/;"	l
f010541a	obj/kern/kernel.asm	/^f010541a <vector208>:$/;"	l
f010541a	obj/kern/kernel.asm	/^f010541a:	6a 00                	push   $0x0$/;"	l
f010541c	obj/kern/kernel.asm	/^f010541c:	68 d0 00 00 00       	push   $0xd0$/;"	l
f0105421	obj/kern/kernel.asm	/^f0105421:	e9 34 02 00 00       	jmp    f010565a <_alltraps>$/;"	l
f0105426	obj/kern/kernel.asm	/^f0105426 <vector209>:$/;"	l
f0105426	obj/kern/kernel.asm	/^f0105426:	6a 00                	push   $0x0$/;"	l
f0105428	obj/kern/kernel.asm	/^f0105428:	68 d1 00 00 00       	push   $0xd1$/;"	l
f010542d	obj/kern/kernel.asm	/^f010542d:	e9 28 02 00 00       	jmp    f010565a <_alltraps>$/;"	l
f0105432	obj/kern/kernel.asm	/^f0105432 <vector210>:$/;"	l
f0105432	obj/kern/kernel.asm	/^f0105432:	6a 00                	push   $0x0$/;"	l
f0105434	obj/kern/kernel.asm	/^f0105434:	68 d2 00 00 00       	push   $0xd2$/;"	l
f0105439	obj/kern/kernel.asm	/^f0105439:	e9 1c 02 00 00       	jmp    f010565a <_alltraps>$/;"	l
f010543e	obj/kern/kernel.asm	/^f010543e <vector211>:$/;"	l
f010543e	obj/kern/kernel.asm	/^f010543e:	6a 00                	push   $0x0$/;"	l
f0105440	obj/kern/kernel.asm	/^f0105440:	68 d3 00 00 00       	push   $0xd3$/;"	l
f0105445	obj/kern/kernel.asm	/^f0105445:	e9 10 02 00 00       	jmp    f010565a <_alltraps>$/;"	l
f010544a	obj/kern/kernel.asm	/^f010544a <vector212>:$/;"	l
f010544a	obj/kern/kernel.asm	/^f010544a:	6a 00                	push   $0x0$/;"	l
f010544c	obj/kern/kernel.asm	/^f010544c:	68 d4 00 00 00       	push   $0xd4$/;"	l
f0105451	obj/kern/kernel.asm	/^f0105451:	e9 04 02 00 00       	jmp    f010565a <_alltraps>$/;"	l
f0105456	obj/kern/kernel.asm	/^f0105456 <vector213>:$/;"	l
f0105456	obj/kern/kernel.asm	/^f0105456:	6a 00                	push   $0x0$/;"	l
f0105458	obj/kern/kernel.asm	/^f0105458:	68 d5 00 00 00       	push   $0xd5$/;"	l
f010545d	obj/kern/kernel.asm	/^f010545d:	e9 f8 01 00 00       	jmp    f010565a <_alltraps>$/;"	l
f0105462	obj/kern/kernel.asm	/^f0105462 <vector214>:$/;"	l
f0105462	obj/kern/kernel.asm	/^f0105462:	6a 00                	push   $0x0$/;"	l
f0105464	obj/kern/kernel.asm	/^f0105464:	68 d6 00 00 00       	push   $0xd6$/;"	l
f0105469	obj/kern/kernel.asm	/^f0105469:	e9 ec 01 00 00       	jmp    f010565a <_alltraps>$/;"	l
f010546e	obj/kern/kernel.asm	/^f010546e <vector215>:$/;"	l
f010546e	obj/kern/kernel.asm	/^f010546e:	6a 00                	push   $0x0$/;"	l
f0105470	obj/kern/kernel.asm	/^f0105470:	68 d7 00 00 00       	push   $0xd7$/;"	l
f0105475	obj/kern/kernel.asm	/^f0105475:	e9 e0 01 00 00       	jmp    f010565a <_alltraps>$/;"	l
f010547a	obj/kern/kernel.asm	/^f010547a <vector216>:$/;"	l
f010547a	obj/kern/kernel.asm	/^f010547a:	6a 00                	push   $0x0$/;"	l
f010547c	obj/kern/kernel.asm	/^f010547c:	68 d8 00 00 00       	push   $0xd8$/;"	l
f0105481	obj/kern/kernel.asm	/^f0105481:	e9 d4 01 00 00       	jmp    f010565a <_alltraps>$/;"	l
f0105486	obj/kern/kernel.asm	/^f0105486 <vector217>:$/;"	l
f0105486	obj/kern/kernel.asm	/^f0105486:	6a 00                	push   $0x0$/;"	l
f0105488	obj/kern/kernel.asm	/^f0105488:	68 d9 00 00 00       	push   $0xd9$/;"	l
f010548d	obj/kern/kernel.asm	/^f010548d:	e9 c8 01 00 00       	jmp    f010565a <_alltraps>$/;"	l
f0105492	obj/kern/kernel.asm	/^f0105492 <vector218>:$/;"	l
f0105492	obj/kern/kernel.asm	/^f0105492:	6a 00                	push   $0x0$/;"	l
f0105494	obj/kern/kernel.asm	/^f0105494:	68 da 00 00 00       	push   $0xda$/;"	l
f0105499	obj/kern/kernel.asm	/^f0105499:	e9 bc 01 00 00       	jmp    f010565a <_alltraps>$/;"	l
f010549e	obj/kern/kernel.asm	/^f010549e <vector219>:$/;"	l
f010549e	obj/kern/kernel.asm	/^f010549e:	6a 00                	push   $0x0$/;"	l
f01054a0	obj/kern/kernel.asm	/^f01054a0:	68 db 00 00 00       	push   $0xdb$/;"	l
f01054a5	obj/kern/kernel.asm	/^f01054a5:	e9 b0 01 00 00       	jmp    f010565a <_alltraps>$/;"	l
f01054aa	obj/kern/kernel.asm	/^f01054aa <vector220>:$/;"	l
f01054aa	obj/kern/kernel.asm	/^f01054aa:	6a 00                	push   $0x0$/;"	l
f01054ac	obj/kern/kernel.asm	/^f01054ac:	68 dc 00 00 00       	push   $0xdc$/;"	l
f01054b1	obj/kern/kernel.asm	/^f01054b1:	e9 a4 01 00 00       	jmp    f010565a <_alltraps>$/;"	l
f01054b6	obj/kern/kernel.asm	/^f01054b6 <vector221>:$/;"	l
f01054b6	obj/kern/kernel.asm	/^f01054b6:	6a 00                	push   $0x0$/;"	l
f01054b8	obj/kern/kernel.asm	/^f01054b8:	68 dd 00 00 00       	push   $0xdd$/;"	l
f01054bd	obj/kern/kernel.asm	/^f01054bd:	e9 98 01 00 00       	jmp    f010565a <_alltraps>$/;"	l
f01054c2	obj/kern/kernel.asm	/^f01054c2 <vector222>:$/;"	l
f01054c2	obj/kern/kernel.asm	/^f01054c2:	6a 00                	push   $0x0$/;"	l
f01054c4	obj/kern/kernel.asm	/^f01054c4:	68 de 00 00 00       	push   $0xde$/;"	l
f01054c9	obj/kern/kernel.asm	/^f01054c9:	e9 8c 01 00 00       	jmp    f010565a <_alltraps>$/;"	l
f01054ce	obj/kern/kernel.asm	/^f01054ce <vector223>:$/;"	l
f01054ce	obj/kern/kernel.asm	/^f01054ce:	6a 00                	push   $0x0$/;"	l
f01054d0	obj/kern/kernel.asm	/^f01054d0:	68 df 00 00 00       	push   $0xdf$/;"	l
f01054d5	obj/kern/kernel.asm	/^f01054d5:	e9 80 01 00 00       	jmp    f010565a <_alltraps>$/;"	l
f01054da	obj/kern/kernel.asm	/^f01054da <vector224>:$/;"	l
f01054da	obj/kern/kernel.asm	/^f01054da:	6a 00                	push   $0x0$/;"	l
f01054dc	obj/kern/kernel.asm	/^f01054dc:	68 e0 00 00 00       	push   $0xe0$/;"	l
f01054e1	obj/kern/kernel.asm	/^f01054e1:	e9 74 01 00 00       	jmp    f010565a <_alltraps>$/;"	l
f01054e6	obj/kern/kernel.asm	/^f01054e6 <vector225>:$/;"	l
f01054e6	obj/kern/kernel.asm	/^f01054e6:	6a 00                	push   $0x0$/;"	l
f01054e8	obj/kern/kernel.asm	/^f01054e8:	68 e1 00 00 00       	push   $0xe1$/;"	l
f01054ed	obj/kern/kernel.asm	/^f01054ed:	e9 68 01 00 00       	jmp    f010565a <_alltraps>$/;"	l
f01054f2	obj/kern/kernel.asm	/^f01054f2 <vector226>:$/;"	l
f01054f2	obj/kern/kernel.asm	/^f01054f2:	6a 00                	push   $0x0$/;"	l
f01054f4	obj/kern/kernel.asm	/^f01054f4:	68 e2 00 00 00       	push   $0xe2$/;"	l
f01054f9	obj/kern/kernel.asm	/^f01054f9:	e9 5c 01 00 00       	jmp    f010565a <_alltraps>$/;"	l
f01054fe	obj/kern/kernel.asm	/^f01054fe <vector227>:$/;"	l
f01054fe	obj/kern/kernel.asm	/^f01054fe:	6a 00                	push   $0x0$/;"	l
f0105500	obj/kern/kernel.asm	/^f0105500:	68 e3 00 00 00       	push   $0xe3$/;"	l
f0105505	obj/kern/kernel.asm	/^f0105505:	e9 50 01 00 00       	jmp    f010565a <_alltraps>$/;"	l
f010550a	obj/kern/kernel.asm	/^f010550a <vector228>:$/;"	l
f010550a	obj/kern/kernel.asm	/^f010550a:	6a 00                	push   $0x0$/;"	l
f010550c	obj/kern/kernel.asm	/^f010550c:	68 e4 00 00 00       	push   $0xe4$/;"	l
f0105511	obj/kern/kernel.asm	/^f0105511:	e9 44 01 00 00       	jmp    f010565a <_alltraps>$/;"	l
f0105516	obj/kern/kernel.asm	/^f0105516 <vector229>:$/;"	l
f0105516	obj/kern/kernel.asm	/^f0105516:	6a 00                	push   $0x0$/;"	l
f0105518	obj/kern/kernel.asm	/^f0105518:	68 e5 00 00 00       	push   $0xe5$/;"	l
f010551d	obj/kern/kernel.asm	/^f010551d:	e9 38 01 00 00       	jmp    f010565a <_alltraps>$/;"	l
f0105522	obj/kern/kernel.asm	/^f0105522 <vector230>:$/;"	l
f0105522	obj/kern/kernel.asm	/^f0105522:	6a 00                	push   $0x0$/;"	l
f0105524	obj/kern/kernel.asm	/^f0105524:	68 e6 00 00 00       	push   $0xe6$/;"	l
f0105529	obj/kern/kernel.asm	/^f0105529:	e9 2c 01 00 00       	jmp    f010565a <_alltraps>$/;"	l
f010552e	obj/kern/kernel.asm	/^f010552e <vector231>:$/;"	l
f010552e	obj/kern/kernel.asm	/^f010552e:	6a 00                	push   $0x0$/;"	l
f0105530	obj/kern/kernel.asm	/^f0105530:	68 e7 00 00 00       	push   $0xe7$/;"	l
f0105535	obj/kern/kernel.asm	/^f0105535:	e9 20 01 00 00       	jmp    f010565a <_alltraps>$/;"	l
f010553a	obj/kern/kernel.asm	/^f010553a <vector232>:$/;"	l
f010553a	obj/kern/kernel.asm	/^f010553a:	6a 00                	push   $0x0$/;"	l
f010553c	obj/kern/kernel.asm	/^f010553c:	68 e8 00 00 00       	push   $0xe8$/;"	l
f0105541	obj/kern/kernel.asm	/^f0105541:	e9 14 01 00 00       	jmp    f010565a <_alltraps>$/;"	l
f0105546	obj/kern/kernel.asm	/^f0105546 <vector233>:$/;"	l
f0105546	obj/kern/kernel.asm	/^f0105546:	6a 00                	push   $0x0$/;"	l
f0105548	obj/kern/kernel.asm	/^f0105548:	68 e9 00 00 00       	push   $0xe9$/;"	l
f010554d	obj/kern/kernel.asm	/^f010554d:	e9 08 01 00 00       	jmp    f010565a <_alltraps>$/;"	l
f0105552	obj/kern/kernel.asm	/^f0105552 <vector234>:$/;"	l
f0105552	obj/kern/kernel.asm	/^f0105552:	6a 00                	push   $0x0$/;"	l
f0105554	obj/kern/kernel.asm	/^f0105554:	68 ea 00 00 00       	push   $0xea$/;"	l
f0105559	obj/kern/kernel.asm	/^f0105559:	e9 fc 00 00 00       	jmp    f010565a <_alltraps>$/;"	l
f010555e	obj/kern/kernel.asm	/^f010555e <vector235>:$/;"	l
f010555e	obj/kern/kernel.asm	/^f010555e:	6a 00                	push   $0x0$/;"	l
f0105560	obj/kern/kernel.asm	/^f0105560:	68 eb 00 00 00       	push   $0xeb$/;"	l
f0105565	obj/kern/kernel.asm	/^f0105565:	e9 f0 00 00 00       	jmp    f010565a <_alltraps>$/;"	l
f010556a	obj/kern/kernel.asm	/^f010556a <vector236>:$/;"	l
f010556a	obj/kern/kernel.asm	/^f010556a:	6a 00                	push   $0x0$/;"	l
f010556c	obj/kern/kernel.asm	/^f010556c:	68 ec 00 00 00       	push   $0xec$/;"	l
f0105571	obj/kern/kernel.asm	/^f0105571:	e9 e4 00 00 00       	jmp    f010565a <_alltraps>$/;"	l
f0105576	obj/kern/kernel.asm	/^f0105576 <vector237>:$/;"	l
f0105576	obj/kern/kernel.asm	/^f0105576:	6a 00                	push   $0x0$/;"	l
f0105578	obj/kern/kernel.asm	/^f0105578:	68 ed 00 00 00       	push   $0xed$/;"	l
f010557d	obj/kern/kernel.asm	/^f010557d:	e9 d8 00 00 00       	jmp    f010565a <_alltraps>$/;"	l
f0105582	obj/kern/kernel.asm	/^f0105582 <vector238>:$/;"	l
f0105582	obj/kern/kernel.asm	/^f0105582:	6a 00                	push   $0x0$/;"	l
f0105584	obj/kern/kernel.asm	/^f0105584:	68 ee 00 00 00       	push   $0xee$/;"	l
f0105589	obj/kern/kernel.asm	/^f0105589:	e9 cc 00 00 00       	jmp    f010565a <_alltraps>$/;"	l
f010558e	obj/kern/kernel.asm	/^f010558e <vector239>:$/;"	l
f010558e	obj/kern/kernel.asm	/^f010558e:	6a 00                	push   $0x0$/;"	l
f0105590	obj/kern/kernel.asm	/^f0105590:	68 ef 00 00 00       	push   $0xef$/;"	l
f0105595	obj/kern/kernel.asm	/^f0105595:	e9 c0 00 00 00       	jmp    f010565a <_alltraps>$/;"	l
f010559a	obj/kern/kernel.asm	/^f010559a <vector240>:$/;"	l
f010559a	obj/kern/kernel.asm	/^f010559a:	6a 00                	push   $0x0$/;"	l
f010559c	obj/kern/kernel.asm	/^f010559c:	68 f0 00 00 00       	push   $0xf0$/;"	l
f01055a1	obj/kern/kernel.asm	/^f01055a1:	e9 b4 00 00 00       	jmp    f010565a <_alltraps>$/;"	l
f01055a6	obj/kern/kernel.asm	/^f01055a6 <vector241>:$/;"	l
f01055a6	obj/kern/kernel.asm	/^f01055a6:	6a 00                	push   $0x0$/;"	l
f01055a8	obj/kern/kernel.asm	/^f01055a8:	68 f1 00 00 00       	push   $0xf1$/;"	l
f01055ad	obj/kern/kernel.asm	/^f01055ad:	e9 a8 00 00 00       	jmp    f010565a <_alltraps>$/;"	l
f01055b2	obj/kern/kernel.asm	/^f01055b2 <vector242>:$/;"	l
f01055b2	obj/kern/kernel.asm	/^f01055b2:	6a 00                	push   $0x0$/;"	l
f01055b4	obj/kern/kernel.asm	/^f01055b4:	68 f2 00 00 00       	push   $0xf2$/;"	l
f01055b9	obj/kern/kernel.asm	/^f01055b9:	e9 9c 00 00 00       	jmp    f010565a <_alltraps>$/;"	l
f01055be	obj/kern/kernel.asm	/^f01055be <vector243>:$/;"	l
f01055be	obj/kern/kernel.asm	/^f01055be:	6a 00                	push   $0x0$/;"	l
f01055c0	obj/kern/kernel.asm	/^f01055c0:	68 f3 00 00 00       	push   $0xf3$/;"	l
f01055c5	obj/kern/kernel.asm	/^f01055c5:	e9 90 00 00 00       	jmp    f010565a <_alltraps>$/;"	l
f01055ca	obj/kern/kernel.asm	/^f01055ca <vector244>:$/;"	l
f01055ca	obj/kern/kernel.asm	/^f01055ca:	6a 00                	push   $0x0$/;"	l
f01055cc	obj/kern/kernel.asm	/^f01055cc:	68 f4 00 00 00       	push   $0xf4$/;"	l
f01055d1	obj/kern/kernel.asm	/^f01055d1:	e9 84 00 00 00       	jmp    f010565a <_alltraps>$/;"	l
f01055d6	obj/kern/kernel.asm	/^f01055d6 <vector245>:$/;"	l
f01055d6	obj/kern/kernel.asm	/^f01055d6:	6a 00                	push   $0x0$/;"	l
f01055d8	obj/kern/kernel.asm	/^f01055d8:	68 f5 00 00 00       	push   $0xf5$/;"	l
f01055dd	obj/kern/kernel.asm	/^f01055dd:	e9 78 00 00 00       	jmp    f010565a <_alltraps>$/;"	l
f01055e2	obj/kern/kernel.asm	/^f01055e2 <vector246>:$/;"	l
f01055e2	obj/kern/kernel.asm	/^f01055e2:	6a 00                	push   $0x0$/;"	l
f01055e4	obj/kern/kernel.asm	/^f01055e4:	68 f6 00 00 00       	push   $0xf6$/;"	l
f01055e9	obj/kern/kernel.asm	/^f01055e9:	e9 6c 00 00 00       	jmp    f010565a <_alltraps>$/;"	l
f01055ee	obj/kern/kernel.asm	/^f01055ee <vector247>:$/;"	l
f01055ee	obj/kern/kernel.asm	/^f01055ee:	6a 00                	push   $0x0$/;"	l
f01055f0	obj/kern/kernel.asm	/^f01055f0:	68 f7 00 00 00       	push   $0xf7$/;"	l
f01055f5	obj/kern/kernel.asm	/^f01055f5:	e9 60 00 00 00       	jmp    f010565a <_alltraps>$/;"	l
f01055fa	obj/kern/kernel.asm	/^f01055fa <vector248>:$/;"	l
f01055fa	obj/kern/kernel.asm	/^f01055fa:	6a 00                	push   $0x0$/;"	l
f01055fc	obj/kern/kernel.asm	/^f01055fc:	68 f8 00 00 00       	push   $0xf8$/;"	l
f0105601	obj/kern/kernel.asm	/^f0105601:	e9 54 00 00 00       	jmp    f010565a <_alltraps>$/;"	l
f0105606	obj/kern/kernel.asm	/^f0105606 <vector249>:$/;"	l
f0105606	obj/kern/kernel.asm	/^f0105606:	6a 00                	push   $0x0$/;"	l
f0105608	obj/kern/kernel.asm	/^f0105608:	68 f9 00 00 00       	push   $0xf9$/;"	l
f010560d	obj/kern/kernel.asm	/^f010560d:	e9 48 00 00 00       	jmp    f010565a <_alltraps>$/;"	l
f0105612	obj/kern/kernel.asm	/^f0105612 <vector250>:$/;"	l
f0105612	obj/kern/kernel.asm	/^f0105612:	6a 00                	push   $0x0$/;"	l
f0105614	obj/kern/kernel.asm	/^f0105614:	68 fa 00 00 00       	push   $0xfa$/;"	l
f0105619	obj/kern/kernel.asm	/^f0105619:	e9 3c 00 00 00       	jmp    f010565a <_alltraps>$/;"	l
f010561e	obj/kern/kernel.asm	/^f010561e <vector251>:$/;"	l
f010561e	obj/kern/kernel.asm	/^f010561e:	6a 00                	push   $0x0$/;"	l
f0105620	obj/kern/kernel.asm	/^f0105620:	68 fb 00 00 00       	push   $0xfb$/;"	l
f0105625	obj/kern/kernel.asm	/^f0105625:	e9 30 00 00 00       	jmp    f010565a <_alltraps>$/;"	l
f010562a	obj/kern/kernel.asm	/^f010562a <vector252>:$/;"	l
f010562a	obj/kern/kernel.asm	/^f010562a:	6a 00                	push   $0x0$/;"	l
f010562c	obj/kern/kernel.asm	/^f010562c:	68 fc 00 00 00       	push   $0xfc$/;"	l
f0105631	obj/kern/kernel.asm	/^f0105631:	e9 24 00 00 00       	jmp    f010565a <_alltraps>$/;"	l
f0105636	obj/kern/kernel.asm	/^f0105636 <vector253>:$/;"	l
f0105636	obj/kern/kernel.asm	/^f0105636:	6a 00                	push   $0x0$/;"	l
f0105638	obj/kern/kernel.asm	/^f0105638:	68 fd 00 00 00       	push   $0xfd$/;"	l
f010563d	obj/kern/kernel.asm	/^f010563d:	e9 18 00 00 00       	jmp    f010565a <_alltraps>$/;"	l
f0105642	obj/kern/kernel.asm	/^f0105642 <vector254>:$/;"	l
f0105642	obj/kern/kernel.asm	/^f0105642:	6a 00                	push   $0x0$/;"	l
f0105644	obj/kern/kernel.asm	/^f0105644:	68 fe 00 00 00       	push   $0xfe$/;"	l
f0105649	obj/kern/kernel.asm	/^f0105649:	e9 0c 00 00 00       	jmp    f010565a <_alltraps>$/;"	l
f010564e	obj/kern/kernel.asm	/^f010564e <vector255>:$/;"	l
f010564e	obj/kern/kernel.asm	/^f010564e:	6a 00                	push   $0x0$/;"	l
f0105650	obj/kern/kernel.asm	/^f0105650:	68 ff 00 00 00       	push   $0xff$/;"	l
f0105655	obj/kern/kernel.asm	/^f0105655:	e9 00 00 00 00       	jmp    f010565a <_alltraps>$/;"	l
f010565a	obj/kern/kernel.asm	/^f010565a <_alltraps>:$/;"	l
f010565a	obj/kern/kernel.asm	/^f010565a:	1e                   	push   %ds$/;"	l
f010565b	obj/kern/kernel.asm	/^f010565b:	06                   	push   %es$/;"	l
f010565c	obj/kern/kernel.asm	/^f010565c:	60                   	pusha  $/;"	l
f010565d	obj/kern/kernel.asm	/^f010565d:	66 b8 10 00          	mov    $0x10,%ax$/;"	l
f0105661	obj/kern/kernel.asm	/^f0105661:	8e d8                	mov    %eax,%ds$/;"	l
f0105663	obj/kern/kernel.asm	/^f0105663:	8e c0                	mov    %eax,%es$/;"	l
f0105665	obj/kern/kernel.asm	/^f0105665:	54                   	push   %esp$/;"	l
f0105666	obj/kern/kernel.asm	/^f0105666:	e8 9f f2 ff ff       	call   f010490a <trap>$/;"	l
f010566b	obj/kern/kernel.asm	/^f010566b:	90                   	nop$/;"	l
f010566c	obj/kern/kernel.asm	/^f010566c <sched_halt>:$/;"	l
f010566c	obj/kern/kernel.asm	/^f010566c:	55                   	push   %ebp$/;"	l
f010566d	obj/kern/kernel.asm	/^f010566d:	89 e5                	mov    %esp,%ebp$/;"	l
f010566f	obj/kern/kernel.asm	/^f010566f:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0105672	obj/kern/kernel.asm	/^f0105672:	8b 15 48 d2 20 f0    	mov    0xf020d248,%edx$/;"	l
f0105678	obj/kern/kernel.asm	/^f0105678:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010567d	obj/kern/kernel.asm	/^f010567d:	8b 4a 54             	mov    0x54(%edx),%ecx$/;"	l
f0105680	obj/kern/kernel.asm	/^f0105680:	83 e9 01             	sub    $0x1,%ecx$/;"	l
f0105683	obj/kern/kernel.asm	/^f0105683:	83 f9 02             	cmp    $0x2,%ecx$/;"	l
f0105686	obj/kern/kernel.asm	/^f0105686:	76 0f                	jbe    f0105697 <sched_halt+0x2b>$/;"	l
f0105688	obj/kern/kernel.asm	/^f0105688:	83 c0 01             	add    $0x1,%eax$/;"	l
f010568b	obj/kern/kernel.asm	/^f010568b:	83 c2 7c             	add    $0x7c,%edx$/;"	l
f010568e	obj/kern/kernel.asm	/^f010568e:	3d 00 04 00 00       	cmp    $0x400,%eax$/;"	l
f0105693	obj/kern/kernel.asm	/^f0105693:	75 e8                	jne    f010567d <sched_halt+0x11>$/;"	l
f0105695	obj/kern/kernel.asm	/^f0105695:	eb 07                	jmp    f010569e <sched_halt+0x32>$/;"	l
f0105697	obj/kern/kernel.asm	/^f0105697:	3d 00 04 00 00       	cmp    $0x400,%eax$/;"	l
f010569c	obj/kern/kernel.asm	/^f010569c:	75 1a                	jne    f01056b8 <sched_halt+0x4c>$/;"	l
f010569e	obj/kern/kernel.asm	/^f010569e:	c7 04 24 d0 8f 10 f0 	movl   $0xf0108fd0,(%esp)$/;"	l
f01056a5	obj/kern/kernel.asm	/^f01056a5:	e8 f4 ec ff ff       	call   f010439e <cprintf>$/;"	l
f01056aa	obj/kern/kernel.asm	/^f01056aa:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f01056b1	obj/kern/kernel.asm	/^f01056b1:	e8 55 b7 ff ff       	call   f0100e0b <monitor>$/;"	l
f01056b6	obj/kern/kernel.asm	/^f01056b6:	eb f2                	jmp    f01056aa <sched_halt+0x3e>$/;"	l
f01056b8	obj/kern/kernel.asm	/^f01056b8:	e8 2f 19 00 00       	call   f0106fec <cpunum>$/;"	l
f01056bd	obj/kern/kernel.asm	/^f01056bd:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01056c0	obj/kern/kernel.asm	/^f01056c0:	c7 80 28 e0 20 f0 00 	movl   $0x0,-0xfdf1fd8(%eax)$/;"	l
f01056c7	obj/kern/kernel.asm	/^f01056c7:	00 00 00 $/;"	l
f01056ca	obj/kern/kernel.asm	/^f01056ca:	a1 8c de 20 f0       	mov    0xf020de8c,%eax$/;"	l
f01056cf	obj/kern/kernel.asm	/^f01056cf:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f01056d4	obj/kern/kernel.asm	/^f01056d4:	77 20                	ja     f01056f6 <sched_halt+0x8a>$/;"	l
f01056d6	obj/kern/kernel.asm	/^f01056d6:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01056da	obj/kern/kernel.asm	/^f01056da:	c7 44 24 08 08 77 10 	movl   $0xf0107708,0x8(%esp)$/;"	l
f01056e1	obj/kern/kernel.asm	/^f01056e1:	f0 $/;"	l
f01056e2	obj/kern/kernel.asm	/^f01056e2:	c7 44 24 04 47 00 00 	movl   $0x47,0x4(%esp)$/;"	l
f01056e9	obj/kern/kernel.asm	/^f01056e9:	00 $/;"	l
f01056ea	obj/kern/kernel.asm	/^f01056ea:	c7 04 24 f9 8f 10 f0 	movl   $0xf0108ff9,(%esp)$/;"	l
f01056f1	obj/kern/kernel.asm	/^f01056f1:	e8 4a a9 ff ff       	call   f0100040 <_panic>$/;"	l
f01056f6	obj/kern/kernel.asm	/^f01056f6:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f01056fb	obj/kern/kernel.asm	/^f01056fb:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f01056fe	obj/kern/kernel.asm	/^f01056fe:	e8 e9 18 00 00       	call   f0106fec <cpunum>$/;"	l
f0105703	obj/kern/kernel.asm	/^f0105703:	6b d0 74             	imul   $0x74,%eax,%edx$/;"	l
f0105706	obj/kern/kernel.asm	/^f0105706:	81 c2 20 e0 20 f0    	add    $0xf020e020,%edx$/;"	l
f010570c	obj/kern/kernel.asm	/^f010570c:	b8 02 00 00 00       	mov    $0x2,%eax$/;"	l
f0105711	obj/kern/kernel.asm	/^f0105711:	f0 87 42 04          	lock xchg %eax,0x4(%edx)$/;"	l
f0105715	obj/kern/kernel.asm	/^f0105715:	c7 04 24 c0 37 12 f0 	movl   $0xf01237c0,(%esp)$/;"	l
f010571c	obj/kern/kernel.asm	/^f010571c:	e8 f6 1b 00 00       	call   f0107317 <spin_unlock>$/;"	l
f0105721	obj/kern/kernel.asm	/^f0105721:	f3 90                	pause  $/;"	l
f0105723	obj/kern/kernel.asm	/^f0105723:	e8 c4 18 00 00       	call   f0106fec <cpunum>$/;"	l
f0105728	obj/kern/kernel.asm	/^f0105728:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010572b	obj/kern/kernel.asm	/^f010572b:	8b 80 30 e0 20 f0    	mov    -0xfdf1fd0(%eax),%eax$/;"	l
f0105731	obj/kern/kernel.asm	/^f0105731:	bd 00 00 00 00       	mov    $0x0,%ebp$/;"	l
f0105736	obj/kern/kernel.asm	/^f0105736:	89 c4                	mov    %eax,%esp$/;"	l
f0105738	obj/kern/kernel.asm	/^f0105738:	6a 00                	push   $0x0$/;"	l
f010573a	obj/kern/kernel.asm	/^f010573a:	6a 00                	push   $0x0$/;"	l
f010573c	obj/kern/kernel.asm	/^f010573c:	fb                   	sti    $/;"	l
f010573d	obj/kern/kernel.asm	/^f010573d:	f4                   	hlt    $/;"	l
f010573e	obj/kern/kernel.asm	/^f010573e:	eb fd                	jmp    f010573d <sched_halt+0xd1>$/;"	l
f0105740	obj/kern/kernel.asm	/^f0105740:	c9                   	leave  $/;"	l
f0105741	obj/kern/kernel.asm	/^f0105741:	c3                   	ret    $/;"	l
f0105742	obj/kern/kernel.asm	/^f0105742 <sched_yield>:$/;"	l
f0105742	obj/kern/kernel.asm	/^f0105742:	55                   	push   %ebp$/;"	l
f0105743	obj/kern/kernel.asm	/^f0105743:	89 e5                	mov    %esp,%ebp$/;"	l
f0105745	obj/kern/kernel.asm	/^f0105745:	53                   	push   %ebx$/;"	l
f0105746	obj/kern/kernel.asm	/^f0105746:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0105749	obj/kern/kernel.asm	/^f0105749:	e8 9e 18 00 00       	call   f0106fec <cpunum>$/;"	l
f010574e	obj/kern/kernel.asm	/^f010574e:	6b d0 74             	imul   $0x74,%eax,%edx$/;"	l
f0105751	obj/kern/kernel.asm	/^f0105751:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105756	obj/kern/kernel.asm	/^f0105756:	83 ba 28 e0 20 f0 00 	cmpl   $0x0,-0xfdf1fd8(%edx)$/;"	l
f010575d	obj/kern/kernel.asm	/^f010575d:	74 19                	je     f0105778 <sched_yield+0x36>$/;"	l
f010575f	obj/kern/kernel.asm	/^f010575f:	e8 88 18 00 00       	call   f0106fec <cpunum>$/;"	l
f0105764	obj/kern/kernel.asm	/^f0105764:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0105767	obj/kern/kernel.asm	/^f0105767:	8b 80 28 e0 20 f0    	mov    -0xfdf1fd8(%eax),%eax$/;"	l
f010576d	obj/kern/kernel.asm	/^f010576d:	8b 40 48             	mov    0x48(%eax),%eax$/;"	l
f0105770	obj/kern/kernel.asm	/^f0105770:	8d 40 01             	lea    0x1(%eax),%eax$/;"	l
f0105773	obj/kern/kernel.asm	/^f0105773:	25 ff 03 00 00       	and    $0x3ff,%eax$/;"	l
f0105778	obj/kern/kernel.asm	/^f0105778:	8b 1d 48 d2 20 f0    	mov    0xf020d248,%ebx$/;"	l
f010577e	obj/kern/kernel.asm	/^f010577e:	ba 00 04 00 00       	mov    $0x400,%edx$/;"	l
f0105783	obj/kern/kernel.asm	/^f0105783:	6b c8 7c             	imul   $0x7c,%eax,%ecx$/;"	l
f0105786	obj/kern/kernel.asm	/^f0105786:	01 d9                	add    %ebx,%ecx$/;"	l
f0105788	obj/kern/kernel.asm	/^f0105788:	83 79 54 02          	cmpl   $0x2,0x54(%ecx)$/;"	l
f010578c	obj/kern/kernel.asm	/^f010578c:	75 08                	jne    f0105796 <sched_yield+0x54>$/;"	l
f010578e	obj/kern/kernel.asm	/^f010578e:	89 0c 24             	mov    %ecx,(%esp)$/;"	l
f0105791	obj/kern/kernel.asm	/^f0105791:	e8 be e9 ff ff       	call   f0104154 <env_run>$/;"	l
f0105796	obj/kern/kernel.asm	/^f0105796:	83 c0 01             	add    $0x1,%eax$/;"	l
f0105799	obj/kern/kernel.asm	/^f0105799:	89 c1                	mov    %eax,%ecx$/;"	l
f010579b	obj/kern/kernel.asm	/^f010579b:	c1 f9 1f             	sar    $0x1f,%ecx$/;"	l
f010579e	obj/kern/kernel.asm	/^f010579e:	c1 e9 16             	shr    $0x16,%ecx$/;"	l
f01057a1	obj/kern/kernel.asm	/^f01057a1:	01 c8                	add    %ecx,%eax$/;"	l
f01057a3	obj/kern/kernel.asm	/^f01057a3:	25 ff 03 00 00       	and    $0x3ff,%eax$/;"	l
f01057a8	obj/kern/kernel.asm	/^f01057a8:	29 c8                	sub    %ecx,%eax$/;"	l
f01057aa	obj/kern/kernel.asm	/^f01057aa:	83 ea 01             	sub    $0x1,%edx$/;"	l
f01057ad	obj/kern/kernel.asm	/^f01057ad:	75 d4                	jne    f0105783 <sched_yield+0x41>$/;"	l
f01057af	obj/kern/kernel.asm	/^f01057af:	e8 38 18 00 00       	call   f0106fec <cpunum>$/;"	l
f01057b4	obj/kern/kernel.asm	/^f01057b4:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01057b7	obj/kern/kernel.asm	/^f01057b7:	83 b8 28 e0 20 f0 00 	cmpl   $0x0,-0xfdf1fd8(%eax)$/;"	l
f01057be	obj/kern/kernel.asm	/^f01057be:	74 2a                	je     f01057ea <sched_yield+0xa8>$/;"	l
f01057c0	obj/kern/kernel.asm	/^f01057c0:	e8 27 18 00 00       	call   f0106fec <cpunum>$/;"	l
f01057c5	obj/kern/kernel.asm	/^f01057c5:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01057c8	obj/kern/kernel.asm	/^f01057c8:	8b 80 28 e0 20 f0    	mov    -0xfdf1fd8(%eax),%eax$/;"	l
f01057ce	obj/kern/kernel.asm	/^f01057ce:	83 78 54 03          	cmpl   $0x3,0x54(%eax)$/;"	l
f01057d2	obj/kern/kernel.asm	/^f01057d2:	75 16                	jne    f01057ea <sched_yield+0xa8>$/;"	l
f01057d4	obj/kern/kernel.asm	/^f01057d4:	e8 13 18 00 00       	call   f0106fec <cpunum>$/;"	l
f01057d9	obj/kern/kernel.asm	/^f01057d9:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01057dc	obj/kern/kernel.asm	/^f01057dc:	8b 80 28 e0 20 f0    	mov    -0xfdf1fd8(%eax),%eax$/;"	l
f01057e2	obj/kern/kernel.asm	/^f01057e2:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01057e5	obj/kern/kernel.asm	/^f01057e5:	e8 6a e9 ff ff       	call   f0104154 <env_run>$/;"	l
f01057ea	obj/kern/kernel.asm	/^f01057ea:	e8 7d fe ff ff       	call   f010566c <sched_halt>$/;"	l
f01057ef	obj/kern/kernel.asm	/^f01057ef:	83 c4 14             	add    $0x14,%esp$/;"	l
f01057f2	obj/kern/kernel.asm	/^f01057f2:	5b                   	pop    %ebx$/;"	l
f01057f3	obj/kern/kernel.asm	/^f01057f3:	5d                   	pop    %ebp$/;"	l
f01057f4	obj/kern/kernel.asm	/^f01057f4:	c3                   	ret    $/;"	l
f01057f5	obj/kern/kernel.asm	/^f01057f5:	66 90                	xchg   %ax,%ax$/;"	l
f01057f7	obj/kern/kernel.asm	/^f01057f7:	66 90                	xchg   %ax,%ax$/;"	l
f01057f9	obj/kern/kernel.asm	/^f01057f9:	66 90                	xchg   %ax,%ax$/;"	l
f01057fb	obj/kern/kernel.asm	/^f01057fb:	66 90                	xchg   %ax,%ax$/;"	l
f01057fd	obj/kern/kernel.asm	/^f01057fd:	66 90                	xchg   %ax,%ax$/;"	l
f01057ff	obj/kern/kernel.asm	/^f01057ff:	90                   	nop$/;"	l
f0105800	obj/kern/kernel.asm	/^f0105800 <syscall>:$/;"	l
f0105800	obj/kern/kernel.asm	/^f0105800:	55                   	push   %ebp$/;"	l
f0105801	obj/kern/kernel.asm	/^f0105801:	89 e5                	mov    %esp,%ebp$/;"	l
f0105803	obj/kern/kernel.asm	/^f0105803:	57                   	push   %edi$/;"	l
f0105804	obj/kern/kernel.asm	/^f0105804:	56                   	push   %esi$/;"	l
f0105805	obj/kern/kernel.asm	/^f0105805:	53                   	push   %ebx$/;"	l
f0105806	obj/kern/kernel.asm	/^f0105806:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f0105809	obj/kern/kernel.asm	/^f0105809:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010580c	obj/kern/kernel.asm	/^f010580c:	83 f8 0d             	cmp    $0xd,%eax$/;"	l
f010580f	obj/kern/kernel.asm	/^f010580f:	0f 87 25 05 00 00    	ja     f0105d3a <syscall+0x53a>$/;"	l
f0105815	obj/kern/kernel.asm	/^f0105815:	ff 24 85 0c 90 10 f0 	jmp    *-0xfef6ff4(,%eax,4)$/;"	l
f010581c	obj/kern/kernel.asm	/^f010581c:	e8 cb 17 00 00       	call   f0106fec <cpunum>$/;"	l
f0105821	obj/kern/kernel.asm	/^f0105821:	c7 44 24 0c 05 00 00 	movl   $0x5,0xc(%esp)$/;"	l
f0105828	obj/kern/kernel.asm	/^f0105828:	00 $/;"	l
f0105829	obj/kern/kernel.asm	/^f0105829:	8b 7d 10             	mov    0x10(%ebp),%edi$/;"	l
f010582c	obj/kern/kernel.asm	/^f010582c:	89 7c 24 08          	mov    %edi,0x8(%esp)$/;"	l
f0105830	obj/kern/kernel.asm	/^f0105830:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f0105833	obj/kern/kernel.asm	/^f0105833:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
f0105837	obj/kern/kernel.asm	/^f0105837:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010583a	obj/kern/kernel.asm	/^f010583a:	8b 80 28 e0 20 f0    	mov    -0xfdf1fd8(%eax),%eax$/;"	l
f0105840	obj/kern/kernel.asm	/^f0105840:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105843	obj/kern/kernel.asm	/^f0105843:	e8 68 e1 ff ff       	call   f01039b0 <user_mem_assert>$/;"	l
f0105848	obj/kern/kernel.asm	/^f0105848:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f010584b	obj/kern/kernel.asm	/^f010584b:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f010584f	obj/kern/kernel.asm	/^f010584f:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0105852	obj/kern/kernel.asm	/^f0105852:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105856	obj/kern/kernel.asm	/^f0105856:	c7 04 24 06 90 10 f0 	movl   $0xf0109006,(%esp)$/;"	l
f010585d	obj/kern/kernel.asm	/^f010585d:	e8 3c eb ff ff       	call   f010439e <cprintf>$/;"	l
f0105862	obj/kern/kernel.asm	/^f0105862:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105867	obj/kern/kernel.asm	/^f0105867:	e9 da 04 00 00       	jmp    f0105d46 <syscall+0x546>$/;"	l
f010586c	obj/kern/kernel.asm	/^f010586c:	e8 d4 ad ff ff       	call   f0100645 <cons_getc>$/;"	l
f0105871	obj/kern/kernel.asm	/^f0105871:	e9 d0 04 00 00       	jmp    f0105d46 <syscall+0x546>$/;"	l
f0105876	obj/kern/kernel.asm	/^f0105876:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f010587d	obj/kern/kernel.asm	/^f010587d:	00 $/;"	l
f010587e	obj/kern/kernel.asm	/^f010587e:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f0105881	obj/kern/kernel.asm	/^f0105881:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105885	obj/kern/kernel.asm	/^f0105885:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0105888	obj/kern/kernel.asm	/^f0105888:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010588b	obj/kern/kernel.asm	/^f010588b:	e8 5a e2 ff ff       	call   f0103aea <envid2env>$/;"	l
f0105890	obj/kern/kernel.asm	/^f0105890:	89 c2                	mov    %eax,%edx$/;"	l
f0105892	obj/kern/kernel.asm	/^f0105892:	85 c0                	test   %eax,%eax$/;"	l
f0105894	obj/kern/kernel.asm	/^f0105894:	78 10                	js     f01058a6 <syscall+0xa6>$/;"	l
f0105896	obj/kern/kernel.asm	/^f0105896:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0105899	obj/kern/kernel.asm	/^f0105899:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010589c	obj/kern/kernel.asm	/^f010589c:	e8 12 e8 ff ff       	call   f01040b3 <env_destroy>$/;"	l
f01058a1	obj/kern/kernel.asm	/^f01058a1:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01058a6	obj/kern/kernel.asm	/^f01058a6:	89 d0                	mov    %edx,%eax$/;"	l
f01058a8	obj/kern/kernel.asm	/^f01058a8:	e9 99 04 00 00       	jmp    f0105d46 <syscall+0x546>$/;"	l
f01058ad	obj/kern/kernel.asm	/^f01058ad:	e8 3a 17 00 00       	call   f0106fec <cpunum>$/;"	l
f01058b2	obj/kern/kernel.asm	/^f01058b2:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01058b5	obj/kern/kernel.asm	/^f01058b5:	8b 80 28 e0 20 f0    	mov    -0xfdf1fd8(%eax),%eax$/;"	l
f01058bb	obj/kern/kernel.asm	/^f01058bb:	8b 40 48             	mov    0x48(%eax),%eax$/;"	l
f01058be	obj/kern/kernel.asm	/^f01058be:	e9 83 04 00 00       	jmp    f0105d46 <syscall+0x546>$/;"	l
f01058c3	obj/kern/kernel.asm	/^f01058c3:	e8 7a fe ff ff       	call   f0105742 <sched_yield>$/;"	l
f01058c8	obj/kern/kernel.asm	/^f01058c8:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f01058cf	obj/kern/kernel.asm	/^f01058cf:	00 $/;"	l
f01058d0	obj/kern/kernel.asm	/^f01058d0:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f01058d3	obj/kern/kernel.asm	/^f01058d3:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01058d7	obj/kern/kernel.asm	/^f01058d7:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01058da	obj/kern/kernel.asm	/^f01058da:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01058dd	obj/kern/kernel.asm	/^f01058dd:	e8 08 e2 ff ff       	call   f0103aea <envid2env>$/;"	l
f01058e2	obj/kern/kernel.asm	/^f01058e2:	85 c0                	test   %eax,%eax$/;"	l
f01058e4	obj/kern/kernel.asm	/^f01058e4:	78 68                	js     f010594e <syscall+0x14e>$/;"	l
f01058e6	obj/kern/kernel.asm	/^f01058e6:	81 7d 10 ff ff bf ee 	cmpl   $0xeebfffff,0x10(%ebp)$/;"	l
f01058ed	obj/kern/kernel.asm	/^f01058ed:	77 63                	ja     f0105952 <syscall+0x152>$/;"	l
f01058ef	obj/kern/kernel.asm	/^f01058ef:	f7 45 10 ff 0f 00 00 	testl  $0xfff,0x10(%ebp)$/;"	l
f01058f6	obj/kern/kernel.asm	/^f01058f6:	75 61                	jne    f0105959 <syscall+0x159>$/;"	l
f01058f8	obj/kern/kernel.asm	/^f01058f8:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f01058fb	obj/kern/kernel.asm	/^f01058fb:	25 fd f1 ff ff       	and    $0xfffff1fd,%eax$/;"	l
f0105900	obj/kern/kernel.asm	/^f0105900:	83 f8 05             	cmp    $0x5,%eax$/;"	l
f0105903	obj/kern/kernel.asm	/^f0105903:	75 5b                	jne    f0105960 <syscall+0x160>$/;"	l
f0105905	obj/kern/kernel.asm	/^f0105905:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
f010590c	obj/kern/kernel.asm	/^f010590c:	e8 cc bb ff ff       	call   f01014dd <page_alloc>$/;"	l
f0105911	obj/kern/kernel.asm	/^f0105911:	89 c3                	mov    %eax,%ebx$/;"	l
f0105913	obj/kern/kernel.asm	/^f0105913:	85 c0                	test   %eax,%eax$/;"	l
f0105915	obj/kern/kernel.asm	/^f0105915:	74 50                	je     f0105967 <syscall+0x167>$/;"	l
f0105917	obj/kern/kernel.asm	/^f0105917:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f010591a	obj/kern/kernel.asm	/^f010591a:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f010591e	obj/kern/kernel.asm	/^f010591e:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0105921	obj/kern/kernel.asm	/^f0105921:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0105925	obj/kern/kernel.asm	/^f0105925:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0105929	obj/kern/kernel.asm	/^f0105929:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f010592c	obj/kern/kernel.asm	/^f010592c:	8b 40 60             	mov    0x60(%eax),%eax$/;"	l
f010592f	obj/kern/kernel.asm	/^f010592f:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105932	obj/kern/kernel.asm	/^f0105932:	e8 d6 be ff ff       	call   f010180d <page_insert>$/;"	l
f0105937	obj/kern/kernel.asm	/^f0105937:	89 c6                	mov    %eax,%esi$/;"	l
f0105939	obj/kern/kernel.asm	/^f0105939:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f010593e	obj/kern/kernel.asm	/^f010593e:	85 c0                	test   %eax,%eax$/;"	l
f0105940	obj/kern/kernel.asm	/^f0105940:	79 2a                	jns    f010596c <syscall+0x16c>$/;"	l
f0105942	obj/kern/kernel.asm	/^f0105942:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0105945	obj/kern/kernel.asm	/^f0105945:	e8 17 bc ff ff       	call   f0101561 <page_free>$/;"	l
f010594a	obj/kern/kernel.asm	/^f010594a:	89 f2                	mov    %esi,%edx$/;"	l
f010594c	obj/kern/kernel.asm	/^f010594c:	eb 1e                	jmp    f010596c <syscall+0x16c>$/;"	l
f010594e	obj/kern/kernel.asm	/^f010594e:	89 c2                	mov    %eax,%edx$/;"	l
f0105950	obj/kern/kernel.asm	/^f0105950:	eb 1a                	jmp    f010596c <syscall+0x16c>$/;"	l
f0105952	obj/kern/kernel.asm	/^f0105952:	ba fd ff ff ff       	mov    $0xfffffffd,%edx$/;"	l
f0105957	obj/kern/kernel.asm	/^f0105957:	eb 13                	jmp    f010596c <syscall+0x16c>$/;"	l
f0105959	obj/kern/kernel.asm	/^f0105959:	ba fd ff ff ff       	mov    $0xfffffffd,%edx$/;"	l
f010595e	obj/kern/kernel.asm	/^f010595e:	eb 0c                	jmp    f010596c <syscall+0x16c>$/;"	l
f0105960	obj/kern/kernel.asm	/^f0105960:	ba fd ff ff ff       	mov    $0xfffffffd,%edx$/;"	l
f0105965	obj/kern/kernel.asm	/^f0105965:	eb 05                	jmp    f010596c <syscall+0x16c>$/;"	l
f0105967	obj/kern/kernel.asm	/^f0105967:	ba fc ff ff ff       	mov    $0xfffffffc,%edx$/;"	l
f010596c	obj/kern/kernel.asm	/^f010596c:	89 d0                	mov    %edx,%eax$/;"	l
f010596e	obj/kern/kernel.asm	/^f010596e:	e9 d3 03 00 00       	jmp    f0105d46 <syscall+0x546>$/;"	l
f0105973	obj/kern/kernel.asm	/^f0105973:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f010597a	obj/kern/kernel.asm	/^f010597a:	00 $/;"	l
f010597b	obj/kern/kernel.asm	/^f010597b:	8d 45 dc             	lea    -0x24(%ebp),%eax$/;"	l
f010597e	obj/kern/kernel.asm	/^f010597e:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105982	obj/kern/kernel.asm	/^f0105982:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0105985	obj/kern/kernel.asm	/^f0105985:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105988	obj/kern/kernel.asm	/^f0105988:	e8 5d e1 ff ff       	call   f0103aea <envid2env>$/;"	l
f010598d	obj/kern/kernel.asm	/^f010598d:	89 c2                	mov    %eax,%edx$/;"	l
f010598f	obj/kern/kernel.asm	/^f010598f:	85 c0                	test   %eax,%eax$/;"	l
f0105991	obj/kern/kernel.asm	/^f0105991:	0f 88 e6 00 00 00    	js     f0105a7d <syscall+0x27d>$/;"	l
f0105997	obj/kern/kernel.asm	/^f0105997:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f010599e	obj/kern/kernel.asm	/^f010599e:	00 $/;"	l
f010599f	obj/kern/kernel.asm	/^f010599f:	8d 45 e0             	lea    -0x20(%ebp),%eax$/;"	l
f01059a2	obj/kern/kernel.asm	/^f01059a2:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01059a6	obj/kern/kernel.asm	/^f01059a6:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f01059a9	obj/kern/kernel.asm	/^f01059a9:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01059ac	obj/kern/kernel.asm	/^f01059ac:	e8 39 e1 ff ff       	call   f0103aea <envid2env>$/;"	l
f01059b1	obj/kern/kernel.asm	/^f01059b1:	85 c0                	test   %eax,%eax$/;"	l
f01059b3	obj/kern/kernel.asm	/^f01059b3:	0f 88 91 00 00 00    	js     f0105a4a <syscall+0x24a>$/;"	l
f01059b9	obj/kern/kernel.asm	/^f01059b9:	81 7d 10 ff ff bf ee 	cmpl   $0xeebfffff,0x10(%ebp)$/;"	l
f01059c0	obj/kern/kernel.asm	/^f01059c0:	0f 87 88 00 00 00    	ja     f0105a4e <syscall+0x24e>$/;"	l
f01059c6	obj/kern/kernel.asm	/^f01059c6:	f7 45 10 ff 0f 00 00 	testl  $0xfff,0x10(%ebp)$/;"	l
f01059cd	obj/kern/kernel.asm	/^f01059cd:	0f 85 82 00 00 00    	jne    f0105a55 <syscall+0x255>$/;"	l
f01059d3	obj/kern/kernel.asm	/^f01059d3:	8b 5d 18             	mov    0x18(%ebp),%ebx$/;"	l
f01059d6	obj/kern/kernel.asm	/^f01059d6:	81 fb ff ff bf ee    	cmp    $0xeebfffff,%ebx$/;"	l
f01059dc	obj/kern/kernel.asm	/^f01059dc:	77 7e                	ja     f0105a5c <syscall+0x25c>$/;"	l
f01059de	obj/kern/kernel.asm	/^f01059de:	f7 c3 ff 0f 00 00    	test   $0xfff,%ebx$/;"	l
f01059e4	obj/kern/kernel.asm	/^f01059e4:	75 7d                	jne    f0105a63 <syscall+0x263>$/;"	l
f01059e6	obj/kern/kernel.asm	/^f01059e6:	8b 45 1c             	mov    0x1c(%ebp),%eax$/;"	l
f01059e9	obj/kern/kernel.asm	/^f01059e9:	25 fd f1 ff ff       	and    $0xfffff1fd,%eax$/;"	l
f01059ee	obj/kern/kernel.asm	/^f01059ee:	83 f8 05             	cmp    $0x5,%eax$/;"	l
f01059f1	obj/kern/kernel.asm	/^f01059f1:	75 77                	jne    f0105a6a <syscall+0x26a>$/;"	l
f01059f3	obj/kern/kernel.asm	/^f01059f3:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f01059f6	obj/kern/kernel.asm	/^f01059f6:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f01059fa	obj/kern/kernel.asm	/^f01059fa:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f01059fd	obj/kern/kernel.asm	/^f01059fd:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105a01	obj/kern/kernel.asm	/^f0105a01:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f0105a04	obj/kern/kernel.asm	/^f0105a04:	8b 40 60             	mov    0x60(%eax),%eax$/;"	l
f0105a07	obj/kern/kernel.asm	/^f0105a07:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105a0a	obj/kern/kernel.asm	/^f0105a0a:	e8 fd bc ff ff       	call   f010170c <page_lookup>$/;"	l
f0105a0f	obj/kern/kernel.asm	/^f0105a0f:	85 c0                	test   %eax,%eax$/;"	l
f0105a11	obj/kern/kernel.asm	/^f0105a11:	74 5e                	je     f0105a71 <syscall+0x271>$/;"	l
f0105a13	obj/kern/kernel.asm	/^f0105a13:	f6 45 1c 02          	testb  $0x2,0x1c(%ebp)$/;"	l
f0105a17	obj/kern/kernel.asm	/^f0105a17:	74 08                	je     f0105a21 <syscall+0x221>$/;"	l
f0105a19	obj/kern/kernel.asm	/^f0105a19:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
f0105a1c	obj/kern/kernel.asm	/^f0105a1c:	f6 02 02             	testb  $0x2,(%edx)$/;"	l
f0105a1f	obj/kern/kernel.asm	/^f0105a1f:	74 57                	je     f0105a78 <syscall+0x278>$/;"	l
f0105a21	obj/kern/kernel.asm	/^f0105a21:	8b 7d 1c             	mov    0x1c(%ebp),%edi$/;"	l
f0105a24	obj/kern/kernel.asm	/^f0105a24:	89 7c 24 0c          	mov    %edi,0xc(%esp)$/;"	l
f0105a28	obj/kern/kernel.asm	/^f0105a28:	89 5c 24 08          	mov    %ebx,0x8(%esp)$/;"	l
f0105a2c	obj/kern/kernel.asm	/^f0105a2c:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105a30	obj/kern/kernel.asm	/^f0105a30:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0105a33	obj/kern/kernel.asm	/^f0105a33:	8b 40 60             	mov    0x60(%eax),%eax$/;"	l
f0105a36	obj/kern/kernel.asm	/^f0105a36:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105a39	obj/kern/kernel.asm	/^f0105a39:	e8 cf bd ff ff       	call   f010180d <page_insert>$/;"	l
f0105a3e	obj/kern/kernel.asm	/^f0105a3e:	85 c0                	test   %eax,%eax$/;"	l
f0105a40	obj/kern/kernel.asm	/^f0105a40:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0105a45	obj/kern/kernel.asm	/^f0105a45:	0f 4e d0             	cmovle %eax,%edx$/;"	l
f0105a48	obj/kern/kernel.asm	/^f0105a48:	eb 33                	jmp    f0105a7d <syscall+0x27d>$/;"	l
f0105a4a	obj/kern/kernel.asm	/^f0105a4a:	89 c2                	mov    %eax,%edx$/;"	l
f0105a4c	obj/kern/kernel.asm	/^f0105a4c:	eb 2f                	jmp    f0105a7d <syscall+0x27d>$/;"	l
f0105a4e	obj/kern/kernel.asm	/^f0105a4e:	ba fd ff ff ff       	mov    $0xfffffffd,%edx$/;"	l
f0105a53	obj/kern/kernel.asm	/^f0105a53:	eb 28                	jmp    f0105a7d <syscall+0x27d>$/;"	l
f0105a55	obj/kern/kernel.asm	/^f0105a55:	ba fd ff ff ff       	mov    $0xfffffffd,%edx$/;"	l
f0105a5a	obj/kern/kernel.asm	/^f0105a5a:	eb 21                	jmp    f0105a7d <syscall+0x27d>$/;"	l
f0105a5c	obj/kern/kernel.asm	/^f0105a5c:	ba fd ff ff ff       	mov    $0xfffffffd,%edx$/;"	l
f0105a61	obj/kern/kernel.asm	/^f0105a61:	eb 1a                	jmp    f0105a7d <syscall+0x27d>$/;"	l
f0105a63	obj/kern/kernel.asm	/^f0105a63:	ba fd ff ff ff       	mov    $0xfffffffd,%edx$/;"	l
f0105a68	obj/kern/kernel.asm	/^f0105a68:	eb 13                	jmp    f0105a7d <syscall+0x27d>$/;"	l
f0105a6a	obj/kern/kernel.asm	/^f0105a6a:	ba fd ff ff ff       	mov    $0xfffffffd,%edx$/;"	l
f0105a6f	obj/kern/kernel.asm	/^f0105a6f:	eb 0c                	jmp    f0105a7d <syscall+0x27d>$/;"	l
f0105a71	obj/kern/kernel.asm	/^f0105a71:	ba fd ff ff ff       	mov    $0xfffffffd,%edx$/;"	l
f0105a76	obj/kern/kernel.asm	/^f0105a76:	eb 05                	jmp    f0105a7d <syscall+0x27d>$/;"	l
f0105a78	obj/kern/kernel.asm	/^f0105a78:	ba fd ff ff ff       	mov    $0xfffffffd,%edx$/;"	l
f0105a7d	obj/kern/kernel.asm	/^f0105a7d:	89 d0                	mov    %edx,%eax$/;"	l
f0105a7f	obj/kern/kernel.asm	/^f0105a7f:	e9 c2 02 00 00       	jmp    f0105d46 <syscall+0x546>$/;"	l
f0105a84	obj/kern/kernel.asm	/^f0105a84:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f0105a8b	obj/kern/kernel.asm	/^f0105a8b:	00 $/;"	l
f0105a8c	obj/kern/kernel.asm	/^f0105a8c:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f0105a8f	obj/kern/kernel.asm	/^f0105a8f:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105a93	obj/kern/kernel.asm	/^f0105a93:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0105a96	obj/kern/kernel.asm	/^f0105a96:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105a99	obj/kern/kernel.asm	/^f0105a99:	e8 4c e0 ff ff       	call   f0103aea <envid2env>$/;"	l
f0105a9e	obj/kern/kernel.asm	/^f0105a9e:	85 c0                	test   %eax,%eax$/;"	l
f0105aa0	obj/kern/kernel.asm	/^f0105aa0:	0f 88 a0 02 00 00    	js     f0105d46 <syscall+0x546>$/;"	l
f0105aa6	obj/kern/kernel.asm	/^f0105aa6:	81 7d 10 ff ff bf ee 	cmpl   $0xeebfffff,0x10(%ebp)$/;"	l
f0105aad	obj/kern/kernel.asm	/^f0105aad:	77 28                	ja     f0105ad7 <syscall+0x2d7>$/;"	l
f0105aaf	obj/kern/kernel.asm	/^f0105aaf:	f7 45 10 ff 0f 00 00 	testl  $0xfff,0x10(%ebp)$/;"	l
f0105ab6	obj/kern/kernel.asm	/^f0105ab6:	75 29                	jne    f0105ae1 <syscall+0x2e1>$/;"	l
f0105ab8	obj/kern/kernel.asm	/^f0105ab8:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0105abb	obj/kern/kernel.asm	/^f0105abb:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105abf	obj/kern/kernel.asm	/^f0105abf:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0105ac2	obj/kern/kernel.asm	/^f0105ac2:	8b 40 60             	mov    0x60(%eax),%eax$/;"	l
f0105ac5	obj/kern/kernel.asm	/^f0105ac5:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105ac8	obj/kern/kernel.asm	/^f0105ac8:	e8 ec bc ff ff       	call   f01017b9 <page_remove>$/;"	l
f0105acd	obj/kern/kernel.asm	/^f0105acd:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105ad2	obj/kern/kernel.asm	/^f0105ad2:	e9 6f 02 00 00       	jmp    f0105d46 <syscall+0x546>$/;"	l
f0105ad7	obj/kern/kernel.asm	/^f0105ad7:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0105adc	obj/kern/kernel.asm	/^f0105adc:	e9 65 02 00 00       	jmp    f0105d46 <syscall+0x546>$/;"	l
f0105ae1	obj/kern/kernel.asm	/^f0105ae1:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0105ae6	obj/kern/kernel.asm	/^f0105ae6:	e9 5b 02 00 00       	jmp    f0105d46 <syscall+0x546>$/;"	l
f0105aeb	obj/kern/kernel.asm	/^f0105aeb:	e8 fc 14 00 00       	call   f0106fec <cpunum>$/;"	l
f0105af0	obj/kern/kernel.asm	/^f0105af0:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0105af3	obj/kern/kernel.asm	/^f0105af3:	8b 80 28 e0 20 f0    	mov    -0xfdf1fd8(%eax),%eax$/;"	l
f0105af9	obj/kern/kernel.asm	/^f0105af9:	8b 40 48             	mov    0x48(%eax),%eax$/;"	l
f0105afc	obj/kern/kernel.asm	/^f0105afc:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105b00	obj/kern/kernel.asm	/^f0105b00:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f0105b03	obj/kern/kernel.asm	/^f0105b03:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105b06	obj/kern/kernel.asm	/^f0105b06:	e8 f0 e0 ff ff       	call   f0103bfb <env_alloc>$/;"	l
f0105b0b	obj/kern/kernel.asm	/^f0105b0b:	89 c2                	mov    %eax,%edx$/;"	l
f0105b0d	obj/kern/kernel.asm	/^f0105b0d:	85 c0                	test   %eax,%eax$/;"	l
f0105b0f	obj/kern/kernel.asm	/^f0105b0f:	78 2e                	js     f0105b3f <syscall+0x33f>$/;"	l
f0105b11	obj/kern/kernel.asm	/^f0105b11:	8b 5d e4             	mov    -0x1c(%ebp),%ebx$/;"	l
f0105b14	obj/kern/kernel.asm	/^f0105b14:	c7 43 54 04 00 00 00 	movl   $0x4,0x54(%ebx)$/;"	l
f0105b1b	obj/kern/kernel.asm	/^f0105b1b:	e8 cc 14 00 00       	call   f0106fec <cpunum>$/;"	l
f0105b20	obj/kern/kernel.asm	/^f0105b20:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0105b23	obj/kern/kernel.asm	/^f0105b23:	8b b0 28 e0 20 f0    	mov    -0xfdf1fd8(%eax),%esi$/;"	l
f0105b29	obj/kern/kernel.asm	/^f0105b29:	b9 11 00 00 00       	mov    $0x11,%ecx$/;"	l
f0105b2e	obj/kern/kernel.asm	/^f0105b2e:	89 df                	mov    %ebx,%edi$/;"	l
f0105b30	obj/kern/kernel.asm	/^f0105b30:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f0105b32	obj/kern/kernel.asm	/^f0105b32:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0105b35	obj/kern/kernel.asm	/^f0105b35:	c7 40 1c 00 00 00 00 	movl   $0x0,0x1c(%eax)$/;"	l
f0105b3c	obj/kern/kernel.asm	/^f0105b3c:	8b 50 48             	mov    0x48(%eax),%edx$/;"	l
f0105b3f	obj/kern/kernel.asm	/^f0105b3f:	89 d0                	mov    %edx,%eax$/;"	l
f0105b41	obj/kern/kernel.asm	/^f0105b41:	e9 00 02 00 00       	jmp    f0105d46 <syscall+0x546>$/;"	l
f0105b46	obj/kern/kernel.asm	/^f0105b46:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f0105b4d	obj/kern/kernel.asm	/^f0105b4d:	00 $/;"	l
f0105b4e	obj/kern/kernel.asm	/^f0105b4e:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f0105b51	obj/kern/kernel.asm	/^f0105b51:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105b55	obj/kern/kernel.asm	/^f0105b55:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0105b58	obj/kern/kernel.asm	/^f0105b58:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105b5b	obj/kern/kernel.asm	/^f0105b5b:	e8 8a df ff ff       	call   f0103aea <envid2env>$/;"	l
f0105b60	obj/kern/kernel.asm	/^f0105b60:	85 c0                	test   %eax,%eax$/;"	l
f0105b62	obj/kern/kernel.asm	/^f0105b62:	0f 88 de 01 00 00    	js     f0105d46 <syscall+0x546>$/;"	l
f0105b68	obj/kern/kernel.asm	/^f0105b68:	83 7d 10 04          	cmpl   $0x4,0x10(%ebp)$/;"	l
f0105b6c	obj/kern/kernel.asm	/^f0105b6c:	74 06                	je     f0105b74 <syscall+0x374>$/;"	l
f0105b6e	obj/kern/kernel.asm	/^f0105b6e:	83 7d 10 02          	cmpl   $0x2,0x10(%ebp)$/;"	l
f0105b72	obj/kern/kernel.asm	/^f0105b72:	75 13                	jne    f0105b87 <syscall+0x387>$/;"	l
f0105b74	obj/kern/kernel.asm	/^f0105b74:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0105b77	obj/kern/kernel.asm	/^f0105b77:	8b 7d 10             	mov    0x10(%ebp),%edi$/;"	l
f0105b7a	obj/kern/kernel.asm	/^f0105b7a:	89 78 54             	mov    %edi,0x54(%eax)$/;"	l
f0105b7d	obj/kern/kernel.asm	/^f0105b7d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105b82	obj/kern/kernel.asm	/^f0105b82:	e9 bf 01 00 00       	jmp    f0105d46 <syscall+0x546>$/;"	l
f0105b87	obj/kern/kernel.asm	/^f0105b87:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0105b8c	obj/kern/kernel.asm	/^f0105b8c:	e9 b5 01 00 00       	jmp    f0105d46 <syscall+0x546>$/;"	l
f0105b91	obj/kern/kernel.asm	/^f0105b91:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
f0105b98	obj/kern/kernel.asm	/^f0105b98:	00 $/;"	l
f0105b99	obj/kern/kernel.asm	/^f0105b99:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f0105b9c	obj/kern/kernel.asm	/^f0105b9c:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105ba0	obj/kern/kernel.asm	/^f0105ba0:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0105ba3	obj/kern/kernel.asm	/^f0105ba3:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105ba6	obj/kern/kernel.asm	/^f0105ba6:	e8 3f df ff ff       	call   f0103aea <envid2env>$/;"	l
f0105bab	obj/kern/kernel.asm	/^f0105bab:	85 c0                	test   %eax,%eax$/;"	l
f0105bad	obj/kern/kernel.asm	/^f0105bad:	0f 88 93 01 00 00    	js     f0105d46 <syscall+0x546>$/;"	l
f0105bb3	obj/kern/kernel.asm	/^f0105bb3:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0105bb6	obj/kern/kernel.asm	/^f0105bb6:	8b 75 10             	mov    0x10(%ebp),%esi$/;"	l
f0105bb9	obj/kern/kernel.asm	/^f0105bb9:	89 70 64             	mov    %esi,0x64(%eax)$/;"	l
f0105bbc	obj/kern/kernel.asm	/^f0105bbc:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105bc1	obj/kern/kernel.asm	/^f0105bc1:	e9 80 01 00 00       	jmp    f0105d46 <syscall+0x546>$/;"	l
f0105bc6	obj/kern/kernel.asm	/^f0105bc6:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
f0105bcd	obj/kern/kernel.asm	/^f0105bcd:	00 $/;"	l
f0105bce	obj/kern/kernel.asm	/^f0105bce:	8d 45 e0             	lea    -0x20(%ebp),%eax$/;"	l
f0105bd1	obj/kern/kernel.asm	/^f0105bd1:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105bd5	obj/kern/kernel.asm	/^f0105bd5:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0105bd8	obj/kern/kernel.asm	/^f0105bd8:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105bdb	obj/kern/kernel.asm	/^f0105bdb:	e8 0a df ff ff       	call   f0103aea <envid2env>$/;"	l
f0105be0	obj/kern/kernel.asm	/^f0105be0:	85 c0                	test   %eax,%eax$/;"	l
f0105be2	obj/kern/kernel.asm	/^f0105be2:	0f 88 5e 01 00 00    	js     f0105d46 <syscall+0x546>$/;"	l
f0105be8	obj/kern/kernel.asm	/^f0105be8:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0105beb	obj/kern/kernel.asm	/^f0105beb:	80 78 68 00          	cmpb   $0x0,0x68(%eax)$/;"	l
f0105bef	obj/kern/kernel.asm	/^f0105bef:	0f 84 d7 00 00 00    	je     f0105ccc <syscall+0x4cc>$/;"	l
f0105bf5	obj/kern/kernel.asm	/^f0105bf5:	81 78 6c ff ff bf ee 	cmpl   $0xeebfffff,0x6c(%eax)$/;"	l
f0105bfc	obj/kern/kernel.asm	/^f0105bfc:	77 7f                	ja     f0105c7d <syscall+0x47d>$/;"	l
f0105bfe	obj/kern/kernel.asm	/^f0105bfe:	81 7d 14 ff ff bf ee 	cmpl   $0xeebfffff,0x14(%ebp)$/;"	l
f0105c05	obj/kern/kernel.asm	/^f0105c05:	77 7f                	ja     f0105c86 <syscall+0x486>$/;"	l
f0105c07	obj/kern/kernel.asm	/^f0105c07:	f7 45 14 ff 0f 00 00 	testl  $0xfff,0x14(%ebp)$/;"	l
f0105c0e	obj/kern/kernel.asm	/^f0105c0e:	0f 85 bf 00 00 00    	jne    f0105cd3 <syscall+0x4d3>$/;"	l
f0105c14	obj/kern/kernel.asm	/^f0105c14:	8b 45 18             	mov    0x18(%ebp),%eax$/;"	l
f0105c17	obj/kern/kernel.asm	/^f0105c17:	25 fd f1 ff ff       	and    $0xfffff1fd,%eax$/;"	l
f0105c1c	obj/kern/kernel.asm	/^f0105c1c:	83 f8 05             	cmp    $0x5,%eax$/;"	l
f0105c1f	obj/kern/kernel.asm	/^f0105c1f:	0f 85 b5 00 00 00    	jne    f0105cda <syscall+0x4da>$/;"	l
f0105c25	obj/kern/kernel.asm	/^f0105c25:	e8 c2 13 00 00       	call   f0106fec <cpunum>$/;"	l
f0105c2a	obj/kern/kernel.asm	/^f0105c2a:	8d 55 e4             	lea    -0x1c(%ebp),%edx$/;"	l
f0105c2d	obj/kern/kernel.asm	/^f0105c2d:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f0105c31	obj/kern/kernel.asm	/^f0105c31:	8b 4d 14             	mov    0x14(%ebp),%ecx$/;"	l
f0105c34	obj/kern/kernel.asm	/^f0105c34:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
f0105c38	obj/kern/kernel.asm	/^f0105c38:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0105c3b	obj/kern/kernel.asm	/^f0105c3b:	8b 80 28 e0 20 f0    	mov    -0xfdf1fd8(%eax),%eax$/;"	l
f0105c41	obj/kern/kernel.asm	/^f0105c41:	8b 40 60             	mov    0x60(%eax),%eax$/;"	l
f0105c44	obj/kern/kernel.asm	/^f0105c44:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105c47	obj/kern/kernel.asm	/^f0105c47:	e8 c0 ba ff ff       	call   f010170c <page_lookup>$/;"	l
f0105c4c	obj/kern/kernel.asm	/^f0105c4c:	85 c0                	test   %eax,%eax$/;"	l
f0105c4e	obj/kern/kernel.asm	/^f0105c4e:	0f 84 8d 00 00 00    	je     f0105ce1 <syscall+0x4e1>$/;"	l
f0105c54	obj/kern/kernel.asm	/^f0105c54:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
f0105c57	obj/kern/kernel.asm	/^f0105c57:	8b 4d 18             	mov    0x18(%ebp),%ecx$/;"	l
f0105c5a	obj/kern/kernel.asm	/^f0105c5a:	89 4c 24 0c          	mov    %ecx,0xc(%esp)$/;"	l
f0105c5e	obj/kern/kernel.asm	/^f0105c5e:	8b 4a 6c             	mov    0x6c(%edx),%ecx$/;"	l
f0105c61	obj/kern/kernel.asm	/^f0105c61:	89 4c 24 08          	mov    %ecx,0x8(%esp)$/;"	l
f0105c65	obj/kern/kernel.asm	/^f0105c65:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0105c69	obj/kern/kernel.asm	/^f0105c69:	8b 42 60             	mov    0x60(%edx),%eax$/;"	l
f0105c6c	obj/kern/kernel.asm	/^f0105c6c:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105c6f	obj/kern/kernel.asm	/^f0105c6f:	e8 99 bb ff ff       	call   f010180d <page_insert>$/;"	l
f0105c74	obj/kern/kernel.asm	/^f0105c74:	85 c0                	test   %eax,%eax$/;"	l
f0105c76	obj/kern/kernel.asm	/^f0105c76:	79 15                	jns    f0105c8d <syscall+0x48d>$/;"	l
f0105c78	obj/kern/kernel.asm	/^f0105c78:	e9 c9 00 00 00       	jmp    f0105d46 <syscall+0x546>$/;"	l
f0105c7d	obj/kern/kernel.asm	/^f0105c7d:	c7 45 18 00 00 00 00 	movl   $0x0,0x18(%ebp)$/;"	l
f0105c84	obj/kern/kernel.asm	/^f0105c84:	eb 07                	jmp    f0105c8d <syscall+0x48d>$/;"	l
f0105c86	obj/kern/kernel.asm	/^f0105c86:	c7 45 18 00 00 00 00 	movl   $0x0,0x18(%ebp)$/;"	l
f0105c8d	obj/kern/kernel.asm	/^f0105c8d:	8b 5d e0             	mov    -0x20(%ebp),%ebx$/;"	l
f0105c90	obj/kern/kernel.asm	/^f0105c90:	c6 43 68 00          	movb   $0x0,0x68(%ebx)$/;"	l
f0105c94	obj/kern/kernel.asm	/^f0105c94:	e8 53 13 00 00       	call   f0106fec <cpunum>$/;"	l
f0105c99	obj/kern/kernel.asm	/^f0105c99:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0105c9c	obj/kern/kernel.asm	/^f0105c9c:	8b 80 28 e0 20 f0    	mov    -0xfdf1fd8(%eax),%eax$/;"	l
f0105ca2	obj/kern/kernel.asm	/^f0105ca2:	8b 40 48             	mov    0x48(%eax),%eax$/;"	l
f0105ca5	obj/kern/kernel.asm	/^f0105ca5:	89 43 74             	mov    %eax,0x74(%ebx)$/;"	l
f0105ca8	obj/kern/kernel.asm	/^f0105ca8:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0105cab	obj/kern/kernel.asm	/^f0105cab:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
f0105cae	obj/kern/kernel.asm	/^f0105cae:	89 48 70             	mov    %ecx,0x70(%eax)$/;"	l
f0105cb1	obj/kern/kernel.asm	/^f0105cb1:	8b 75 18             	mov    0x18(%ebp),%esi$/;"	l
f0105cb4	obj/kern/kernel.asm	/^f0105cb4:	89 70 78             	mov    %esi,0x78(%eax)$/;"	l
f0105cb7	obj/kern/kernel.asm	/^f0105cb7:	c7 40 54 02 00 00 00 	movl   $0x2,0x54(%eax)$/;"	l
f0105cbe	obj/kern/kernel.asm	/^f0105cbe:	c7 40 1c 00 00 00 00 	movl   $0x0,0x1c(%eax)$/;"	l
f0105cc5	obj/kern/kernel.asm	/^f0105cc5:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105cca	obj/kern/kernel.asm	/^f0105cca:	eb 7a                	jmp    f0105d46 <syscall+0x546>$/;"	l
f0105ccc	obj/kern/kernel.asm	/^f0105ccc:	b8 f9 ff ff ff       	mov    $0xfffffff9,%eax$/;"	l
f0105cd1	obj/kern/kernel.asm	/^f0105cd1:	eb 73                	jmp    f0105d46 <syscall+0x546>$/;"	l
f0105cd3	obj/kern/kernel.asm	/^f0105cd3:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0105cd8	obj/kern/kernel.asm	/^f0105cd8:	eb 6c                	jmp    f0105d46 <syscall+0x546>$/;"	l
f0105cda	obj/kern/kernel.asm	/^f0105cda:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0105cdf	obj/kern/kernel.asm	/^f0105cdf:	eb 65                	jmp    f0105d46 <syscall+0x546>$/;"	l
f0105ce1	obj/kern/kernel.asm	/^f0105ce1:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0105ce6	obj/kern/kernel.asm	/^f0105ce6:	eb 5e                	jmp    f0105d46 <syscall+0x546>$/;"	l
f0105ce8	obj/kern/kernel.asm	/^f0105ce8:	81 7d 0c ff ff bf ee 	cmpl   $0xeebfffff,0xc(%ebp)$/;"	l
f0105cef	obj/kern/kernel.asm	/^f0105cef:	77 09                	ja     f0105cfa <syscall+0x4fa>$/;"	l
f0105cf1	obj/kern/kernel.asm	/^f0105cf1:	f7 45 0c ff 0f 00 00 	testl  $0xfff,0xc(%ebp)$/;"	l
f0105cf8	obj/kern/kernel.asm	/^f0105cf8:	75 47                	jne    f0105d41 <syscall+0x541>$/;"	l
f0105cfa	obj/kern/kernel.asm	/^f0105cfa:	e8 ed 12 00 00       	call   f0106fec <cpunum>$/;"	l
f0105cff	obj/kern/kernel.asm	/^f0105cff:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0105d02	obj/kern/kernel.asm	/^f0105d02:	8b 80 28 e0 20 f0    	mov    -0xfdf1fd8(%eax),%eax$/;"	l
f0105d08	obj/kern/kernel.asm	/^f0105d08:	c6 40 68 01          	movb   $0x1,0x68(%eax)$/;"	l
f0105d0c	obj/kern/kernel.asm	/^f0105d0c:	e8 db 12 00 00       	call   f0106fec <cpunum>$/;"	l
f0105d11	obj/kern/kernel.asm	/^f0105d11:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0105d14	obj/kern/kernel.asm	/^f0105d14:	8b 80 28 e0 20 f0    	mov    -0xfdf1fd8(%eax),%eax$/;"	l
f0105d1a	obj/kern/kernel.asm	/^f0105d1a:	8b 7d 0c             	mov    0xc(%ebp),%edi$/;"	l
f0105d1d	obj/kern/kernel.asm	/^f0105d1d:	89 78 6c             	mov    %edi,0x6c(%eax)$/;"	l
f0105d20	obj/kern/kernel.asm	/^f0105d20:	e8 c7 12 00 00       	call   f0106fec <cpunum>$/;"	l
f0105d25	obj/kern/kernel.asm	/^f0105d25:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0105d28	obj/kern/kernel.asm	/^f0105d28:	8b 80 28 e0 20 f0    	mov    -0xfdf1fd8(%eax),%eax$/;"	l
f0105d2e	obj/kern/kernel.asm	/^f0105d2e:	c7 40 54 04 00 00 00 	movl   $0x4,0x54(%eax)$/;"	l
f0105d35	obj/kern/kernel.asm	/^f0105d35:	e8 08 fa ff ff       	call   f0105742 <sched_yield>$/;"	l
f0105d3a	obj/kern/kernel.asm	/^f0105d3a:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0105d3f	obj/kern/kernel.asm	/^f0105d3f:	eb 05                	jmp    f0105d46 <syscall+0x546>$/;"	l
f0105d41	obj/kern/kernel.asm	/^f0105d41:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0105d46	obj/kern/kernel.asm	/^f0105d46:	83 c4 2c             	add    $0x2c,%esp$/;"	l
f0105d49	obj/kern/kernel.asm	/^f0105d49:	5b                   	pop    %ebx$/;"	l
f0105d4a	obj/kern/kernel.asm	/^f0105d4a:	5e                   	pop    %esi$/;"	l
f0105d4b	obj/kern/kernel.asm	/^f0105d4b:	5f                   	pop    %edi$/;"	l
f0105d4c	obj/kern/kernel.asm	/^f0105d4c:	5d                   	pop    %ebp$/;"	l
f0105d4d	obj/kern/kernel.asm	/^f0105d4d:	c3                   	ret    $/;"	l
f0105d4e	obj/kern/kernel.asm	/^f0105d4e:	66 90                	xchg   %ax,%ax$/;"	l
f0105d50	obj/kern/kernel.asm	/^f0105d50 <stab_binsearch>:$/;"	l
f0105d50	obj/kern/kernel.asm	/^f0105d50:	55                   	push   %ebp$/;"	l
f0105d51	obj/kern/kernel.asm	/^f0105d51:	89 e5                	mov    %esp,%ebp$/;"	l
f0105d53	obj/kern/kernel.asm	/^f0105d53:	57                   	push   %edi$/;"	l
f0105d54	obj/kern/kernel.asm	/^f0105d54:	56                   	push   %esi$/;"	l
f0105d55	obj/kern/kernel.asm	/^f0105d55:	53                   	push   %ebx$/;"	l
f0105d56	obj/kern/kernel.asm	/^f0105d56:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0105d59	obj/kern/kernel.asm	/^f0105d59:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
f0105d5c	obj/kern/kernel.asm	/^f0105d5c:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
f0105d5f	obj/kern/kernel.asm	/^f0105d5f:	89 4d e0             	mov    %ecx,-0x20(%ebp)$/;"	l
f0105d62	obj/kern/kernel.asm	/^f0105d62:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0105d65	obj/kern/kernel.asm	/^f0105d65:	8b 1a                	mov    (%edx),%ebx$/;"	l
f0105d67	obj/kern/kernel.asm	/^f0105d67:	8b 01                	mov    (%ecx),%eax$/;"	l
f0105d69	obj/kern/kernel.asm	/^f0105d69:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
f0105d6c	obj/kern/kernel.asm	/^f0105d6c:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)$/;"	l
f0105d73	obj/kern/kernel.asm	/^f0105d73:	e9 88 00 00 00       	jmp    f0105e00 <stab_binsearch+0xb0>$/;"	l
f0105d78	obj/kern/kernel.asm	/^f0105d78:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f0105d7b	obj/kern/kernel.asm	/^f0105d7b:	01 d8                	add    %ebx,%eax$/;"	l
f0105d7d	obj/kern/kernel.asm	/^f0105d7d:	89 c7                	mov    %eax,%edi$/;"	l
f0105d7f	obj/kern/kernel.asm	/^f0105d7f:	c1 ef 1f             	shr    $0x1f,%edi$/;"	l
f0105d82	obj/kern/kernel.asm	/^f0105d82:	01 c7                	add    %eax,%edi$/;"	l
f0105d84	obj/kern/kernel.asm	/^f0105d84:	d1 ff                	sar    %edi$/;"	d
f0105d86	obj/kern/kernel.asm	/^f0105d86:	8d 04 7f             	lea    (%edi,%edi,2),%eax$/;"	l
f0105d89	obj/kern/kernel.asm	/^f0105d89:	8b 4d ec             	mov    -0x14(%ebp),%ecx$/;"	l
f0105d8c	obj/kern/kernel.asm	/^f0105d8c:	8d 14 81             	lea    (%ecx,%eax,4),%edx$/;"	l
f0105d8f	obj/kern/kernel.asm	/^f0105d8f:	89 f8                	mov    %edi,%eax$/;"	l
f0105d91	obj/kern/kernel.asm	/^f0105d91:	eb 03                	jmp    f0105d96 <stab_binsearch+0x46>$/;"	l
f0105d93	obj/kern/kernel.asm	/^f0105d93:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0105d96	obj/kern/kernel.asm	/^f0105d96:	39 c3                	cmp    %eax,%ebx$/;"	l
f0105d98	obj/kern/kernel.asm	/^f0105d98:	7f 1f                	jg     f0105db9 <stab_binsearch+0x69>$/;"	l
f0105d9a	obj/kern/kernel.asm	/^f0105d9a:	0f b6 4a 04          	movzbl 0x4(%edx),%ecx$/;"	l
f0105d9e	obj/kern/kernel.asm	/^f0105d9e:	83 ea 0c             	sub    $0xc,%edx$/;"	l
f0105da1	obj/kern/kernel.asm	/^f0105da1:	39 f1                	cmp    %esi,%ecx$/;"	l
f0105da3	obj/kern/kernel.asm	/^f0105da3:	75 ee                	jne    f0105d93 <stab_binsearch+0x43>$/;"	l
f0105da5	obj/kern/kernel.asm	/^f0105da5:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
f0105da8	obj/kern/kernel.asm	/^f0105da8:	8d 14 40             	lea    (%eax,%eax,2),%edx$/;"	l
f0105dab	obj/kern/kernel.asm	/^f0105dab:	8b 4d ec             	mov    -0x14(%ebp),%ecx$/;"	l
f0105dae	obj/kern/kernel.asm	/^f0105dae:	8b 54 91 08          	mov    0x8(%ecx,%edx,4),%edx$/;"	l
f0105db2	obj/kern/kernel.asm	/^f0105db2:	39 55 0c             	cmp    %edx,0xc(%ebp)$/;"	l
f0105db5	obj/kern/kernel.asm	/^f0105db5:	76 18                	jbe    f0105dcf <stab_binsearch+0x7f>$/;"	l
f0105db7	obj/kern/kernel.asm	/^f0105db7:	eb 05                	jmp    f0105dbe <stab_binsearch+0x6e>$/;"	l
f0105db9	obj/kern/kernel.asm	/^f0105db9:	8d 5f 01             	lea    0x1(%edi),%ebx$/;"	l
f0105dbc	obj/kern/kernel.asm	/^f0105dbc:	eb 42                	jmp    f0105e00 <stab_binsearch+0xb0>$/;"	l
f0105dbe	obj/kern/kernel.asm	/^f0105dbe:	8b 5d e4             	mov    -0x1c(%ebp),%ebx$/;"	l
f0105dc1	obj/kern/kernel.asm	/^f0105dc1:	89 03                	mov    %eax,(%ebx)$/;"	l
f0105dc3	obj/kern/kernel.asm	/^f0105dc3:	8d 5f 01             	lea    0x1(%edi),%ebx$/;"	l
f0105dc6	obj/kern/kernel.asm	/^f0105dc6:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)$/;"	l
f0105dcd	obj/kern/kernel.asm	/^f0105dcd:	eb 31                	jmp    f0105e00 <stab_binsearch+0xb0>$/;"	l
f0105dcf	obj/kern/kernel.asm	/^f0105dcf:	39 55 0c             	cmp    %edx,0xc(%ebp)$/;"	l
f0105dd2	obj/kern/kernel.asm	/^f0105dd2:	73 17                	jae    f0105deb <stab_binsearch+0x9b>$/;"	l
f0105dd4	obj/kern/kernel.asm	/^f0105dd4:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
f0105dd7	obj/kern/kernel.asm	/^f0105dd7:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0105dda	obj/kern/kernel.asm	/^f0105dda:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
f0105ddd	obj/kern/kernel.asm	/^f0105ddd:	8b 7d e0             	mov    -0x20(%ebp),%edi$/;"	l
f0105de0	obj/kern/kernel.asm	/^f0105de0:	89 07                	mov    %eax,(%edi)$/;"	l
f0105de2	obj/kern/kernel.asm	/^f0105de2:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)$/;"	l
f0105de9	obj/kern/kernel.asm	/^f0105de9:	eb 15                	jmp    f0105e00 <stab_binsearch+0xb0>$/;"	l
f0105deb	obj/kern/kernel.asm	/^f0105deb:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f0105dee	obj/kern/kernel.asm	/^f0105dee:	8b 5d e8             	mov    -0x18(%ebp),%ebx$/;"	l
f0105df1	obj/kern/kernel.asm	/^f0105df1:	89 1f                	mov    %ebx,(%edi)$/;"	l
f0105df3	obj/kern/kernel.asm	/^f0105df3:	83 45 0c 01          	addl   $0x1,0xc(%ebp)$/;"	l
f0105df7	obj/kern/kernel.asm	/^f0105df7:	89 c3                	mov    %eax,%ebx$/;"	l
f0105df9	obj/kern/kernel.asm	/^f0105df9:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)$/;"	l
f0105e00	obj/kern/kernel.asm	/^f0105e00:	3b 5d f0             	cmp    -0x10(%ebp),%ebx$/;"	l
f0105e03	obj/kern/kernel.asm	/^f0105e03:	0f 8e 6f ff ff ff    	jle    f0105d78 <stab_binsearch+0x28>$/;"	l
f0105e09	obj/kern/kernel.asm	/^f0105e09:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
f0105e0d	obj/kern/kernel.asm	/^f0105e0d:	75 0f                	jne    f0105e1e <stab_binsearch+0xce>$/;"	l
f0105e0f	obj/kern/kernel.asm	/^f0105e0f:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0105e12	obj/kern/kernel.asm	/^f0105e12:	8b 00                	mov    (%eax),%eax$/;"	l
f0105e14	obj/kern/kernel.asm	/^f0105e14:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0105e17	obj/kern/kernel.asm	/^f0105e17:	8b 7d e0             	mov    -0x20(%ebp),%edi$/;"	l
f0105e1a	obj/kern/kernel.asm	/^f0105e1a:	89 07                	mov    %eax,(%edi)$/;"	l
f0105e1c	obj/kern/kernel.asm	/^f0105e1c:	eb 2c                	jmp    f0105e4a <stab_binsearch+0xfa>$/;"	l
f0105e1e	obj/kern/kernel.asm	/^f0105e1e:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0105e21	obj/kern/kernel.asm	/^f0105e21:	8b 00                	mov    (%eax),%eax$/;"	l
f0105e23	obj/kern/kernel.asm	/^f0105e23:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f0105e26	obj/kern/kernel.asm	/^f0105e26:	8b 0f                	mov    (%edi),%ecx$/;"	l
f0105e28	obj/kern/kernel.asm	/^f0105e28:	8d 14 40             	lea    (%eax,%eax,2),%edx$/;"	l
f0105e2b	obj/kern/kernel.asm	/^f0105e2b:	8b 7d ec             	mov    -0x14(%ebp),%edi$/;"	l
f0105e2e	obj/kern/kernel.asm	/^f0105e2e:	8d 14 97             	lea    (%edi,%edx,4),%edx$/;"	l
f0105e31	obj/kern/kernel.asm	/^f0105e31:	eb 03                	jmp    f0105e36 <stab_binsearch+0xe6>$/;"	l
f0105e33	obj/kern/kernel.asm	/^f0105e33:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0105e36	obj/kern/kernel.asm	/^f0105e36:	39 c8                	cmp    %ecx,%eax$/;"	l
f0105e38	obj/kern/kernel.asm	/^f0105e38:	7e 0b                	jle    f0105e45 <stab_binsearch+0xf5>$/;"	l
f0105e3a	obj/kern/kernel.asm	/^f0105e3a:	0f b6 5a 04          	movzbl 0x4(%edx),%ebx$/;"	l
f0105e3e	obj/kern/kernel.asm	/^f0105e3e:	83 ea 0c             	sub    $0xc,%edx$/;"	l
f0105e41	obj/kern/kernel.asm	/^f0105e41:	39 f3                	cmp    %esi,%ebx$/;"	l
f0105e43	obj/kern/kernel.asm	/^f0105e43:	75 ee                	jne    f0105e33 <stab_binsearch+0xe3>$/;"	l
f0105e45	obj/kern/kernel.asm	/^f0105e45:	8b 7d e4             	mov    -0x1c(%ebp),%edi$/;"	l
f0105e48	obj/kern/kernel.asm	/^f0105e48:	89 07                	mov    %eax,(%edi)$/;"	l
f0105e4a	obj/kern/kernel.asm	/^f0105e4a:	83 c4 14             	add    $0x14,%esp$/;"	l
f0105e4d	obj/kern/kernel.asm	/^f0105e4d:	5b                   	pop    %ebx$/;"	l
f0105e4e	obj/kern/kernel.asm	/^f0105e4e:	5e                   	pop    %esi$/;"	l
f0105e4f	obj/kern/kernel.asm	/^f0105e4f:	5f                   	pop    %edi$/;"	l
f0105e50	obj/kern/kernel.asm	/^f0105e50:	5d                   	pop    %ebp$/;"	l
f0105e51	obj/kern/kernel.asm	/^f0105e51:	c3                   	ret    $/;"	l
f0105e52	obj/kern/kernel.asm	/^f0105e52 <debuginfo_eip>:$/;"	l
f0105e52	obj/kern/kernel.asm	/^f0105e52:	55                   	push   %ebp$/;"	l
f0105e53	obj/kern/kernel.asm	/^f0105e53:	89 e5                	mov    %esp,%ebp$/;"	l
f0105e55	obj/kern/kernel.asm	/^f0105e55:	57                   	push   %edi$/;"	l
f0105e56	obj/kern/kernel.asm	/^f0105e56:	56                   	push   %esi$/;"	l
f0105e57	obj/kern/kernel.asm	/^f0105e57:	53                   	push   %ebx$/;"	l
f0105e58	obj/kern/kernel.asm	/^f0105e58:	83 ec 4c             	sub    $0x4c,%esp$/;"	l
f0105e5b	obj/kern/kernel.asm	/^f0105e5b:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0105e5e	obj/kern/kernel.asm	/^f0105e5e:	8b 7d 0c             	mov    0xc(%ebp),%edi$/;"	l
f0105e61	obj/kern/kernel.asm	/^f0105e61:	c7 07 44 90 10 f0    	movl   $0xf0109044,(%edi)$/;"	l
f0105e67	obj/kern/kernel.asm	/^f0105e67:	c7 47 04 00 00 00 00 	movl   $0x0,0x4(%edi)$/;"	l
f0105e6e	obj/kern/kernel.asm	/^f0105e6e:	c7 47 08 44 90 10 f0 	movl   $0xf0109044,0x8(%edi)$/;"	l
f0105e75	obj/kern/kernel.asm	/^f0105e75:	c7 47 0c 09 00 00 00 	movl   $0x9,0xc(%edi)$/;"	l
f0105e7c	obj/kern/kernel.asm	/^f0105e7c:	89 77 10             	mov    %esi,0x10(%edi)$/;"	l
f0105e7f	obj/kern/kernel.asm	/^f0105e7f:	c7 47 14 00 00 00 00 	movl   $0x0,0x14(%edi)$/;"	l
f0105e86	obj/kern/kernel.asm	/^f0105e86:	81 fe ff ff 7f ef    	cmp    $0xef7fffff,%esi$/;"	l
f0105e8c	obj/kern/kernel.asm	/^f0105e8c:	0f 87 c1 00 00 00    	ja     f0105f53 <debuginfo_eip+0x101>$/;"	l
f0105e92	obj/kern/kernel.asm	/^f0105e92:	e8 55 11 00 00       	call   f0106fec <cpunum>$/;"	l
f0105e97	obj/kern/kernel.asm	/^f0105e97:	c7 44 24 0c 05 00 00 	movl   $0x5,0xc(%esp)$/;"	l
f0105e9e	obj/kern/kernel.asm	/^f0105e9e:	00 $/;"	l
f0105e9f	obj/kern/kernel.asm	/^f0105e9f:	c7 44 24 08 10 00 00 	movl   $0x10,0x8(%esp)$/;"	l
f0105ea6	obj/kern/kernel.asm	/^f0105ea6:	00 $/;"	l
f0105ea7	obj/kern/kernel.asm	/^f0105ea7:	c7 44 24 04 00 00 20 	movl   $0x200000,0x4(%esp)$/;"	l
f0105eae	obj/kern/kernel.asm	/^f0105eae:	00 $/;"	l
f0105eaf	obj/kern/kernel.asm	/^f0105eaf:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0105eb2	obj/kern/kernel.asm	/^f0105eb2:	8b 80 28 e0 20 f0    	mov    -0xfdf1fd8(%eax),%eax$/;"	l
f0105eb8	obj/kern/kernel.asm	/^f0105eb8:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105ebb	obj/kern/kernel.asm	/^f0105ebb:	e8 43 da ff ff       	call   f0103903 <user_mem_check>$/;"	l
f0105ec0	obj/kern/kernel.asm	/^f0105ec0:	85 c0                	test   %eax,%eax$/;"	l
f0105ec2	obj/kern/kernel.asm	/^f0105ec2:	0f 88 51 02 00 00    	js     f0106119 <debuginfo_eip+0x2c7>$/;"	l
f0105ec8	obj/kern/kernel.asm	/^f0105ec8:	a1 00 00 20 00       	mov    0x200000,%eax$/;"	l
f0105ecd	obj/kern/kernel.asm	/^f0105ecd:	89 45 c4             	mov    %eax,-0x3c(%ebp)$/;"	l
f0105ed0	obj/kern/kernel.asm	/^f0105ed0:	8b 1d 04 00 20 00    	mov    0x200004,%ebx$/;"	l
f0105ed6	obj/kern/kernel.asm	/^f0105ed6:	8b 15 08 00 20 00    	mov    0x200008,%edx$/;"	l
f0105edc	obj/kern/kernel.asm	/^f0105edc:	89 55 c0             	mov    %edx,-0x40(%ebp)$/;"	l
f0105edf	obj/kern/kernel.asm	/^f0105edf:	a1 0c 00 20 00       	mov    0x20000c,%eax$/;"	l
f0105ee4	obj/kern/kernel.asm	/^f0105ee4:	89 45 bc             	mov    %eax,-0x44(%ebp)$/;"	l
f0105ee7	obj/kern/kernel.asm	/^f0105ee7:	e8 00 11 00 00       	call   f0106fec <cpunum>$/;"	l
f0105eec	obj/kern/kernel.asm	/^f0105eec:	c7 44 24 0c 05 00 00 	movl   $0x5,0xc(%esp)$/;"	l
f0105ef3	obj/kern/kernel.asm	/^f0105ef3:	00 $/;"	l
f0105ef4	obj/kern/kernel.asm	/^f0105ef4:	89 da                	mov    %ebx,%edx$/;"	l
f0105ef6	obj/kern/kernel.asm	/^f0105ef6:	8b 4d c4             	mov    -0x3c(%ebp),%ecx$/;"	l
f0105ef9	obj/kern/kernel.asm	/^f0105ef9:	29 ca                	sub    %ecx,%edx$/;"	l
f0105efb	obj/kern/kernel.asm	/^f0105efb:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f0105eff	obj/kern/kernel.asm	/^f0105eff:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
f0105f03	obj/kern/kernel.asm	/^f0105f03:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0105f06	obj/kern/kernel.asm	/^f0105f06:	8b 80 28 e0 20 f0    	mov    -0xfdf1fd8(%eax),%eax$/;"	l
f0105f0c	obj/kern/kernel.asm	/^f0105f0c:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105f0f	obj/kern/kernel.asm	/^f0105f0f:	e8 ef d9 ff ff       	call   f0103903 <user_mem_check>$/;"	l
f0105f14	obj/kern/kernel.asm	/^f0105f14:	85 c0                	test   %eax,%eax$/;"	l
f0105f16	obj/kern/kernel.asm	/^f0105f16:	0f 88 04 02 00 00    	js     f0106120 <debuginfo_eip+0x2ce>$/;"	l
f0105f1c	obj/kern/kernel.asm	/^f0105f1c:	e8 cb 10 00 00       	call   f0106fec <cpunum>$/;"	l
f0105f21	obj/kern/kernel.asm	/^f0105f21:	c7 44 24 0c 05 00 00 	movl   $0x5,0xc(%esp)$/;"	l
f0105f28	obj/kern/kernel.asm	/^f0105f28:	00 $/;"	l
f0105f29	obj/kern/kernel.asm	/^f0105f29:	8b 55 bc             	mov    -0x44(%ebp),%edx$/;"	l
f0105f2c	obj/kern/kernel.asm	/^f0105f2c:	8b 4d c0             	mov    -0x40(%ebp),%ecx$/;"	l
f0105f2f	obj/kern/kernel.asm	/^f0105f2f:	29 ca                	sub    %ecx,%edx$/;"	l
f0105f31	obj/kern/kernel.asm	/^f0105f31:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f0105f35	obj/kern/kernel.asm	/^f0105f35:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
f0105f39	obj/kern/kernel.asm	/^f0105f39:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0105f3c	obj/kern/kernel.asm	/^f0105f3c:	8b 80 28 e0 20 f0    	mov    -0xfdf1fd8(%eax),%eax$/;"	l
f0105f42	obj/kern/kernel.asm	/^f0105f42:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0105f45	obj/kern/kernel.asm	/^f0105f45:	e8 b9 d9 ff ff       	call   f0103903 <user_mem_check>$/;"	l
f0105f4a	obj/kern/kernel.asm	/^f0105f4a:	85 c0                	test   %eax,%eax$/;"	l
f0105f4c	obj/kern/kernel.asm	/^f0105f4c:	79 1f                	jns    f0105f6d <debuginfo_eip+0x11b>$/;"	l
f0105f4e	obj/kern/kernel.asm	/^f0105f4e:	e9 d4 01 00 00       	jmp    f0106127 <debuginfo_eip+0x2d5>$/;"	l
f0105f53	obj/kern/kernel.asm	/^f0105f53:	c7 45 bc b2 84 11 f0 	movl   $0xf01184b2,-0x44(%ebp)$/;"	l
f0105f5a	obj/kern/kernel.asm	/^f0105f5a:	c7 45 c0 25 4c 11 f0 	movl   $0xf0114c25,-0x40(%ebp)$/;"	l
f0105f61	obj/kern/kernel.asm	/^f0105f61:	bb 24 4c 11 f0       	mov    $0xf0114c24,%ebx$/;"	l
f0105f66	obj/kern/kernel.asm	/^f0105f66:	c7 45 c4 f0 95 10 f0 	movl   $0xf01095f0,-0x3c(%ebp)$/;"	l
f0105f6d	obj/kern/kernel.asm	/^f0105f6d:	8b 45 bc             	mov    -0x44(%ebp),%eax$/;"	l
f0105f70	obj/kern/kernel.asm	/^f0105f70:	39 45 c0             	cmp    %eax,-0x40(%ebp)$/;"	l
f0105f73	obj/kern/kernel.asm	/^f0105f73:	0f 83 b5 01 00 00    	jae    f010612e <debuginfo_eip+0x2dc>$/;"	l
f0105f79	obj/kern/kernel.asm	/^f0105f79:	80 78 ff 00          	cmpb   $0x0,-0x1(%eax)$/;"	l
f0105f7d	obj/kern/kernel.asm	/^f0105f7d:	0f 85 b2 01 00 00    	jne    f0106135 <debuginfo_eip+0x2e3>$/;"	l
f0105f83	obj/kern/kernel.asm	/^f0105f83:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
f0105f8a	obj/kern/kernel.asm	/^f0105f8a:	2b 5d c4             	sub    -0x3c(%ebp),%ebx$/;"	l
f0105f8d	obj/kern/kernel.asm	/^f0105f8d:	c1 fb 02             	sar    $0x2,%ebx$/;"	l
f0105f90	obj/kern/kernel.asm	/^f0105f90:	69 c3 ab aa aa aa    	imul   $0xaaaaaaab,%ebx,%eax$/;"	l
f0105f96	obj/kern/kernel.asm	/^f0105f96:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0105f99	obj/kern/kernel.asm	/^f0105f99:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f0105f9c	obj/kern/kernel.asm	/^f0105f9c:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0105fa0	obj/kern/kernel.asm	/^f0105fa0:	c7 04 24 64 00 00 00 	movl   $0x64,(%esp)$/;"	l
f0105fa7	obj/kern/kernel.asm	/^f0105fa7:	8d 4d e0             	lea    -0x20(%ebp),%ecx$/;"	l
f0105faa	obj/kern/kernel.asm	/^f0105faa:	8d 55 e4             	lea    -0x1c(%ebp),%edx$/;"	l
f0105fad	obj/kern/kernel.asm	/^f0105fad:	8b 5d c4             	mov    -0x3c(%ebp),%ebx$/;"	l
f0105fb0	obj/kern/kernel.asm	/^f0105fb0:	89 d8                	mov    %ebx,%eax$/;"	l
f0105fb2	obj/kern/kernel.asm	/^f0105fb2:	e8 99 fd ff ff       	call   f0105d50 <stab_binsearch>$/;"	l
f0105fb7	obj/kern/kernel.asm	/^f0105fb7:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0105fba	obj/kern/kernel.asm	/^f0105fba:	85 c0                	test   %eax,%eax$/;"	l
f0105fbc	obj/kern/kernel.asm	/^f0105fbc:	0f 84 7a 01 00 00    	je     f010613c <debuginfo_eip+0x2ea>$/;"	l
f0105fc2	obj/kern/kernel.asm	/^f0105fc2:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f0105fc5	obj/kern/kernel.asm	/^f0105fc5:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0105fc8	obj/kern/kernel.asm	/^f0105fc8:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f0105fcb	obj/kern/kernel.asm	/^f0105fcb:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0105fcf	obj/kern/kernel.asm	/^f0105fcf:	c7 04 24 24 00 00 00 	movl   $0x24,(%esp)$/;"	l
f0105fd6	obj/kern/kernel.asm	/^f0105fd6:	8d 4d d8             	lea    -0x28(%ebp),%ecx$/;"	l
f0105fd9	obj/kern/kernel.asm	/^f0105fd9:	8d 55 dc             	lea    -0x24(%ebp),%edx$/;"	l
f0105fdc	obj/kern/kernel.asm	/^f0105fdc:	89 d8                	mov    %ebx,%eax$/;"	l
f0105fde	obj/kern/kernel.asm	/^f0105fde:	e8 6d fd ff ff       	call   f0105d50 <stab_binsearch>$/;"	l
f0105fe3	obj/kern/kernel.asm	/^f0105fe3:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f0105fe6	obj/kern/kernel.asm	/^f0105fe6:	8b 5d d8             	mov    -0x28(%ebp),%ebx$/;"	l
f0105fe9	obj/kern/kernel.asm	/^f0105fe9:	39 d8                	cmp    %ebx,%eax$/;"	l
f0105feb	obj/kern/kernel.asm	/^f0105feb:	7f 32                	jg     f010601f <debuginfo_eip+0x1cd>$/;"	l
f0105fed	obj/kern/kernel.asm	/^f0105fed:	8d 14 40             	lea    (%eax,%eax,2),%edx$/;"	l
f0105ff0	obj/kern/kernel.asm	/^f0105ff0:	8b 4d c4             	mov    -0x3c(%ebp),%ecx$/;"	l
f0105ff3	obj/kern/kernel.asm	/^f0105ff3:	8d 14 91             	lea    (%ecx,%edx,4),%edx$/;"	l
f0105ff6	obj/kern/kernel.asm	/^f0105ff6:	8b 0a                	mov    (%edx),%ecx$/;"	l
f0105ff8	obj/kern/kernel.asm	/^f0105ff8:	89 4d b8             	mov    %ecx,-0x48(%ebp)$/;"	l
f0105ffb	obj/kern/kernel.asm	/^f0105ffb:	8b 4d bc             	mov    -0x44(%ebp),%ecx$/;"	l
f0105ffe	obj/kern/kernel.asm	/^f0105ffe:	2b 4d c0             	sub    -0x40(%ebp),%ecx$/;"	l
f0106001	obj/kern/kernel.asm	/^f0106001:	39 4d b8             	cmp    %ecx,-0x48(%ebp)$/;"	l
f0106004	obj/kern/kernel.asm	/^f0106004:	73 09                	jae    f010600f <debuginfo_eip+0x1bd>$/;"	l
f0106006	obj/kern/kernel.asm	/^f0106006:	8b 4d b8             	mov    -0x48(%ebp),%ecx$/;"	l
f0106009	obj/kern/kernel.asm	/^f0106009:	03 4d c0             	add    -0x40(%ebp),%ecx$/;"	l
f010600c	obj/kern/kernel.asm	/^f010600c:	89 4f 08             	mov    %ecx,0x8(%edi)$/;"	l
f010600f	obj/kern/kernel.asm	/^f010600f:	8b 52 08             	mov    0x8(%edx),%edx$/;"	l
f0106012	obj/kern/kernel.asm	/^f0106012:	89 57 10             	mov    %edx,0x10(%edi)$/;"	l
f0106015	obj/kern/kernel.asm	/^f0106015:	29 d6                	sub    %edx,%esi$/;"	l
f0106017	obj/kern/kernel.asm	/^f0106017:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f010601a	obj/kern/kernel.asm	/^f010601a:	89 5d d0             	mov    %ebx,-0x30(%ebp)$/;"	l
f010601d	obj/kern/kernel.asm	/^f010601d:	eb 0f                	jmp    f010602e <debuginfo_eip+0x1dc>$/;"	l
f010601f	obj/kern/kernel.asm	/^f010601f:	89 77 10             	mov    %esi,0x10(%edi)$/;"	l
f0106022	obj/kern/kernel.asm	/^f0106022:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0106025	obj/kern/kernel.asm	/^f0106025:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0106028	obj/kern/kernel.asm	/^f0106028:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f010602b	obj/kern/kernel.asm	/^f010602b:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f010602e	obj/kern/kernel.asm	/^f010602e:	c7 44 24 04 3a 00 00 	movl   $0x3a,0x4(%esp)$/;"	l
f0106035	obj/kern/kernel.asm	/^f0106035:	00 $/;"	l
f0106036	obj/kern/kernel.asm	/^f0106036:	8b 47 08             	mov    0x8(%edi),%eax$/;"	l
f0106039	obj/kern/kernel.asm	/^f0106039:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010603c	obj/kern/kernel.asm	/^f010603c:	e8 3a 09 00 00       	call   f010697b <strfind>$/;"	l
f0106041	obj/kern/kernel.asm	/^f0106041:	2b 47 08             	sub    0x8(%edi),%eax$/;"	l
f0106044	obj/kern/kernel.asm	/^f0106044:	89 47 0c             	mov    %eax,0xc(%edi)$/;"	l
f0106047	obj/kern/kernel.asm	/^f0106047:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f010604b	obj/kern/kernel.asm	/^f010604b:	c7 04 24 44 00 00 00 	movl   $0x44,(%esp)$/;"	l
f0106052	obj/kern/kernel.asm	/^f0106052:	8d 4d d0             	lea    -0x30(%ebp),%ecx$/;"	l
f0106055	obj/kern/kernel.asm	/^f0106055:	8d 55 d4             	lea    -0x2c(%ebp),%edx$/;"	l
f0106058	obj/kern/kernel.asm	/^f0106058:	8b 75 c4             	mov    -0x3c(%ebp),%esi$/;"	l
f010605b	obj/kern/kernel.asm	/^f010605b:	89 f0                	mov    %esi,%eax$/;"	l
f010605d	obj/kern/kernel.asm	/^f010605d:	e8 ee fc ff ff       	call   f0105d50 <stab_binsearch>$/;"	l
f0106062	obj/kern/kernel.asm	/^f0106062:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0106065	obj/kern/kernel.asm	/^f0106065:	3b 45 d0             	cmp    -0x30(%ebp),%eax$/;"	l
f0106068	obj/kern/kernel.asm	/^f0106068:	0f 8f d5 00 00 00    	jg     f0106143 <debuginfo_eip+0x2f1>$/;"	l
f010606e	obj/kern/kernel.asm	/^f010606e:	8d 04 40             	lea    (%eax,%eax,2),%eax$/;"	l
f0106071	obj/kern/kernel.asm	/^f0106071:	0f b7 44 86 06       	movzwl 0x6(%esi,%eax,4),%eax$/;"	l
f0106076	obj/kern/kernel.asm	/^f0106076:	89 47 04             	mov    %eax,0x4(%edi)$/;"	l
f0106079	obj/kern/kernel.asm	/^f0106079:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f010607c	obj/kern/kernel.asm	/^f010607c:	89 c3                	mov    %eax,%ebx$/;"	l
f010607e	obj/kern/kernel.asm	/^f010607e:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0106081	obj/kern/kernel.asm	/^f0106081:	8d 14 40             	lea    (%eax,%eax,2),%edx$/;"	l
f0106084	obj/kern/kernel.asm	/^f0106084:	8d 14 96             	lea    (%esi,%edx,4),%edx$/;"	l
f0106087	obj/kern/kernel.asm	/^f0106087:	89 7d 0c             	mov    %edi,0xc(%ebp)$/;"	l
f010608a	obj/kern/kernel.asm	/^f010608a:	89 df                	mov    %ebx,%edi$/;"	l
f010608c	obj/kern/kernel.asm	/^f010608c:	eb 06                	jmp    f0106094 <debuginfo_eip+0x242>$/;"	l
f010608e	obj/kern/kernel.asm	/^f010608e:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0106091	obj/kern/kernel.asm	/^f0106091:	83 ea 0c             	sub    $0xc,%edx$/;"	l
f0106094	obj/kern/kernel.asm	/^f0106094:	89 c6                	mov    %eax,%esi$/;"	l
f0106096	obj/kern/kernel.asm	/^f0106096:	39 c7                	cmp    %eax,%edi$/;"	l
f0106098	obj/kern/kernel.asm	/^f0106098:	7f 3c                	jg     f01060d6 <debuginfo_eip+0x284>$/;"	l
f010609a	obj/kern/kernel.asm	/^f010609a:	0f b6 4a 04          	movzbl 0x4(%edx),%ecx$/;"	l
f010609e	obj/kern/kernel.asm	/^f010609e:	80 f9 84             	cmp    $0x84,%cl$/;"	l
f01060a1	obj/kern/kernel.asm	/^f01060a1:	75 08                	jne    f01060ab <debuginfo_eip+0x259>$/;"	l
f01060a3	obj/kern/kernel.asm	/^f01060a3:	8b 7d 0c             	mov    0xc(%ebp),%edi$/;"	l
f01060a6	obj/kern/kernel.asm	/^f01060a6:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f01060a9	obj/kern/kernel.asm	/^f01060a9:	eb 11                	jmp    f01060bc <debuginfo_eip+0x26a>$/;"	l
f01060ab	obj/kern/kernel.asm	/^f01060ab:	80 f9 64             	cmp    $0x64,%cl$/;"	l
f01060ae	obj/kern/kernel.asm	/^f01060ae:	75 de                	jne    f010608e <debuginfo_eip+0x23c>$/;"	l
f01060b0	obj/kern/kernel.asm	/^f01060b0:	83 7a 08 00          	cmpl   $0x0,0x8(%edx)$/;"	l
f01060b4	obj/kern/kernel.asm	/^f01060b4:	74 d8                	je     f010608e <debuginfo_eip+0x23c>$/;"	l
f01060b6	obj/kern/kernel.asm	/^f01060b6:	8b 7d 0c             	mov    0xc(%ebp),%edi$/;"	l
f01060b9	obj/kern/kernel.asm	/^f01060b9:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f01060bc	obj/kern/kernel.asm	/^f01060bc:	8d 04 76             	lea    (%esi,%esi,2),%eax$/;"	l
f01060bf	obj/kern/kernel.asm	/^f01060bf:	8b 75 c4             	mov    -0x3c(%ebp),%esi$/;"	l
f01060c2	obj/kern/kernel.asm	/^f01060c2:	8b 04 86             	mov    (%esi,%eax,4),%eax$/;"	l
f01060c5	obj/kern/kernel.asm	/^f01060c5:	8b 55 bc             	mov    -0x44(%ebp),%edx$/;"	l
f01060c8	obj/kern/kernel.asm	/^f01060c8:	2b 55 c0             	sub    -0x40(%ebp),%edx$/;"	l
f01060cb	obj/kern/kernel.asm	/^f01060cb:	39 d0                	cmp    %edx,%eax$/;"	l
f01060cd	obj/kern/kernel.asm	/^f01060cd:	73 0a                	jae    f01060d9 <debuginfo_eip+0x287>$/;"	l
f01060cf	obj/kern/kernel.asm	/^f01060cf:	03 45 c0             	add    -0x40(%ebp),%eax$/;"	l
f01060d2	obj/kern/kernel.asm	/^f01060d2:	89 07                	mov    %eax,(%edi)$/;"	l
f01060d4	obj/kern/kernel.asm	/^f01060d4:	eb 03                	jmp    f01060d9 <debuginfo_eip+0x287>$/;"	l
f01060d6	obj/kern/kernel.asm	/^f01060d6:	8b 7d 0c             	mov    0xc(%ebp),%edi$/;"	l
f01060d9	obj/kern/kernel.asm	/^f01060d9:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f01060dc	obj/kern/kernel.asm	/^f01060dc:	8b 5d d8             	mov    -0x28(%ebp),%ebx$/;"	l
f01060df	obj/kern/kernel.asm	/^f01060df:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01060e4	obj/kern/kernel.asm	/^f01060e4:	39 da                	cmp    %ebx,%edx$/;"	l
f01060e6	obj/kern/kernel.asm	/^f01060e6:	7d 67                	jge    f010614f <debuginfo_eip+0x2fd>$/;"	l
f01060e8	obj/kern/kernel.asm	/^f01060e8:	83 c2 01             	add    $0x1,%edx$/;"	l
f01060eb	obj/kern/kernel.asm	/^f01060eb:	89 55 d4             	mov    %edx,-0x2c(%ebp)$/;"	l
f01060ee	obj/kern/kernel.asm	/^f01060ee:	89 d0                	mov    %edx,%eax$/;"	l
f01060f0	obj/kern/kernel.asm	/^f01060f0:	8d 14 52             	lea    (%edx,%edx,2),%edx$/;"	l
f01060f3	obj/kern/kernel.asm	/^f01060f3:	8b 75 c4             	mov    -0x3c(%ebp),%esi$/;"	l
f01060f6	obj/kern/kernel.asm	/^f01060f6:	8d 14 96             	lea    (%esi,%edx,4),%edx$/;"	l
f01060f9	obj/kern/kernel.asm	/^f01060f9:	eb 04                	jmp    f01060ff <debuginfo_eip+0x2ad>$/;"	l
f01060fb	obj/kern/kernel.asm	/^f01060fb:	83 47 14 01          	addl   $0x1,0x14(%edi)$/;"	l
f01060ff	obj/kern/kernel.asm	/^f01060ff:	39 c3                	cmp    %eax,%ebx$/;"	l
f0106101	obj/kern/kernel.asm	/^f0106101:	7e 47                	jle    f010614a <debuginfo_eip+0x2f8>$/;"	l
f0106103	obj/kern/kernel.asm	/^f0106103:	0f b6 4a 04          	movzbl 0x4(%edx),%ecx$/;"	l
f0106107	obj/kern/kernel.asm	/^f0106107:	83 c0 01             	add    $0x1,%eax$/;"	l
f010610a	obj/kern/kernel.asm	/^f010610a:	83 c2 0c             	add    $0xc,%edx$/;"	l
f010610d	obj/kern/kernel.asm	/^f010610d:	80 f9 a0             	cmp    $0xa0,%cl$/;"	l
f0106110	obj/kern/kernel.asm	/^f0106110:	74 e9                	je     f01060fb <debuginfo_eip+0x2a9>$/;"	l
f0106112	obj/kern/kernel.asm	/^f0106112:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0106117	obj/kern/kernel.asm	/^f0106117:	eb 36                	jmp    f010614f <debuginfo_eip+0x2fd>$/;"	l
f0106119	obj/kern/kernel.asm	/^f0106119:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f010611e	obj/kern/kernel.asm	/^f010611e:	eb 2f                	jmp    f010614f <debuginfo_eip+0x2fd>$/;"	l
f0106120	obj/kern/kernel.asm	/^f0106120:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0106125	obj/kern/kernel.asm	/^f0106125:	eb 28                	jmp    f010614f <debuginfo_eip+0x2fd>$/;"	l
f0106127	obj/kern/kernel.asm	/^f0106127:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f010612c	obj/kern/kernel.asm	/^f010612c:	eb 21                	jmp    f010614f <debuginfo_eip+0x2fd>$/;"	l
f010612e	obj/kern/kernel.asm	/^f010612e:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0106133	obj/kern/kernel.asm	/^f0106133:	eb 1a                	jmp    f010614f <debuginfo_eip+0x2fd>$/;"	l
f0106135	obj/kern/kernel.asm	/^f0106135:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f010613a	obj/kern/kernel.asm	/^f010613a:	eb 13                	jmp    f010614f <debuginfo_eip+0x2fd>$/;"	l
f010613c	obj/kern/kernel.asm	/^f010613c:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0106141	obj/kern/kernel.asm	/^f0106141:	eb 0c                	jmp    f010614f <debuginfo_eip+0x2fd>$/;"	l
f0106143	obj/kern/kernel.asm	/^f0106143:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0106148	obj/kern/kernel.asm	/^f0106148:	eb 05                	jmp    f010614f <debuginfo_eip+0x2fd>$/;"	l
f010614a	obj/kern/kernel.asm	/^f010614a:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010614f	obj/kern/kernel.asm	/^f010614f:	83 c4 4c             	add    $0x4c,%esp$/;"	l
f0106152	obj/kern/kernel.asm	/^f0106152:	5b                   	pop    %ebx$/;"	l
f0106153	obj/kern/kernel.asm	/^f0106153:	5e                   	pop    %esi$/;"	l
f0106154	obj/kern/kernel.asm	/^f0106154:	5f                   	pop    %edi$/;"	l
f0106155	obj/kern/kernel.asm	/^f0106155:	5d                   	pop    %ebp$/;"	l
f0106156	obj/kern/kernel.asm	/^f0106156:	c3                   	ret    $/;"	l
f0106157	obj/kern/kernel.asm	/^f0106157:	66 90                	xchg   %ax,%ax$/;"	l
f0106159	obj/kern/kernel.asm	/^f0106159:	66 90                	xchg   %ax,%ax$/;"	l
f010615b	obj/kern/kernel.asm	/^f010615b:	66 90                	xchg   %ax,%ax$/;"	l
f010615d	obj/kern/kernel.asm	/^f010615d:	66 90                	xchg   %ax,%ax$/;"	l
f010615f	obj/kern/kernel.asm	/^f010615f:	90                   	nop$/;"	l
f0106160	obj/kern/kernel.asm	/^f0106160 <printnum>:$/;"	l
f0106160	obj/kern/kernel.asm	/^f0106160:	55                   	push   %ebp$/;"	l
f0106161	obj/kern/kernel.asm	/^f0106161:	89 e5                	mov    %esp,%ebp$/;"	l
f0106163	obj/kern/kernel.asm	/^f0106163:	57                   	push   %edi$/;"	l
f0106164	obj/kern/kernel.asm	/^f0106164:	56                   	push   %esi$/;"	l
f0106165	obj/kern/kernel.asm	/^f0106165:	53                   	push   %ebx$/;"	l
f0106166	obj/kern/kernel.asm	/^f0106166:	83 ec 3c             	sub    $0x3c,%esp$/;"	l
f0106169	obj/kern/kernel.asm	/^f0106169:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f010616c	obj/kern/kernel.asm	/^f010616c:	89 d7                	mov    %edx,%edi$/;"	l
f010616e	obj/kern/kernel.asm	/^f010616e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0106171	obj/kern/kernel.asm	/^f0106171:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f0106174	obj/kern/kernel.asm	/^f0106174:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0106177	obj/kern/kernel.asm	/^f0106177:	89 c3                	mov    %eax,%ebx$/;"	l
f0106179	obj/kern/kernel.asm	/^f0106179:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f010617c	obj/kern/kernel.asm	/^f010617c:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f010617f	obj/kern/kernel.asm	/^f010617f:	8b 75 14             	mov    0x14(%ebp),%esi$/;"	l
f0106182	obj/kern/kernel.asm	/^f0106182:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f0106187	obj/kern/kernel.asm	/^f0106187:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f010618a	obj/kern/kernel.asm	/^f010618a:	89 4d dc             	mov    %ecx,-0x24(%ebp)$/;"	l
f010618d	obj/kern/kernel.asm	/^f010618d:	39 d9                	cmp    %ebx,%ecx$/;"	l
f010618f	obj/kern/kernel.asm	/^f010618f:	72 05                	jb     f0106196 <printnum+0x36>$/;"	l
f0106191	obj/kern/kernel.asm	/^f0106191:	3b 45 e0             	cmp    -0x20(%ebp),%eax$/;"	l
f0106194	obj/kern/kernel.asm	/^f0106194:	77 69                	ja     f01061ff <printnum+0x9f>$/;"	l
f0106196	obj/kern/kernel.asm	/^f0106196:	8b 4d 18             	mov    0x18(%ebp),%ecx$/;"	l
f0106199	obj/kern/kernel.asm	/^f0106199:	89 4c 24 10          	mov    %ecx,0x10(%esp)$/;"	l
f010619d	obj/kern/kernel.asm	/^f010619d:	83 ee 01             	sub    $0x1,%esi$/;"	l
f01061a0	obj/kern/kernel.asm	/^f01061a0:	89 74 24 0c          	mov    %esi,0xc(%esp)$/;"	l
f01061a4	obj/kern/kernel.asm	/^f01061a4:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f01061a8	obj/kern/kernel.asm	/^f01061a8:	8b 44 24 08          	mov    0x8(%esp),%eax$/;"	l
f01061ac	obj/kern/kernel.asm	/^f01061ac:	8b 54 24 0c          	mov    0xc(%esp),%edx$/;"	l
f01061b0	obj/kern/kernel.asm	/^f01061b0:	89 c3                	mov    %eax,%ebx$/;"	l
f01061b2	obj/kern/kernel.asm	/^f01061b2:	89 d6                	mov    %edx,%esi$/;"	l
f01061b4	obj/kern/kernel.asm	/^f01061b4:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
f01061b7	obj/kern/kernel.asm	/^f01061b7:	8b 4d dc             	mov    -0x24(%ebp),%ecx$/;"	l
f01061ba	obj/kern/kernel.asm	/^f01061ba:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f01061be	obj/kern/kernel.asm	/^f01061be:	89 4c 24 0c          	mov    %ecx,0xc(%esp)$/;"	l
f01061c2	obj/kern/kernel.asm	/^f01061c2:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f01061c5	obj/kern/kernel.asm	/^f01061c5:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01061c8	obj/kern/kernel.asm	/^f01061c8:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f01061cb	obj/kern/kernel.asm	/^f01061cb:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01061cf	obj/kern/kernel.asm	/^f01061cf:	e8 5c 12 00 00       	call   f0107430 <__udivdi3>$/;"	l
f01061d4	obj/kern/kernel.asm	/^f01061d4:	89 d9                	mov    %ebx,%ecx$/;"	l
f01061d6	obj/kern/kernel.asm	/^f01061d6:	89 4c 24 08          	mov    %ecx,0x8(%esp)$/;"	l
f01061da	obj/kern/kernel.asm	/^f01061da:	89 74 24 0c          	mov    %esi,0xc(%esp)$/;"	l
f01061de	obj/kern/kernel.asm	/^f01061de:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01061e1	obj/kern/kernel.asm	/^f01061e1:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f01061e5	obj/kern/kernel.asm	/^f01061e5:	89 fa                	mov    %edi,%edx$/;"	l
f01061e7	obj/kern/kernel.asm	/^f01061e7:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f01061ea	obj/kern/kernel.asm	/^f01061ea:	e8 71 ff ff ff       	call   f0106160 <printnum>$/;"	l
f01061ef	obj/kern/kernel.asm	/^f01061ef:	eb 1b                	jmp    f010620c <printnum+0xac>$/;"	l
f01061f1	obj/kern/kernel.asm	/^f01061f1:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f01061f5	obj/kern/kernel.asm	/^f01061f5:	8b 45 18             	mov    0x18(%ebp),%eax$/;"	l
f01061f8	obj/kern/kernel.asm	/^f01061f8:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01061fb	obj/kern/kernel.asm	/^f01061fb:	ff d3                	call   *%ebx$/;"	l
f01061fd	obj/kern/kernel.asm	/^f01061fd:	eb 03                	jmp    f0106202 <printnum+0xa2>$/;"	l
f01061ff	obj/kern/kernel.asm	/^f01061ff:	8b 5d e4             	mov    -0x1c(%ebp),%ebx$/;"	l
f0106202	obj/kern/kernel.asm	/^f0106202:	83 ee 01             	sub    $0x1,%esi$/;"	l
f0106205	obj/kern/kernel.asm	/^f0106205:	85 f6                	test   %esi,%esi$/;"	l
f0106207	obj/kern/kernel.asm	/^f0106207:	7f e8                	jg     f01061f1 <printnum+0x91>$/;"	l
f0106209	obj/kern/kernel.asm	/^f0106209:	89 5d e4             	mov    %ebx,-0x1c(%ebp)$/;"	l
f010620c	obj/kern/kernel.asm	/^f010620c:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0106210	obj/kern/kernel.asm	/^f0106210:	8b 7c 24 04          	mov    0x4(%esp),%edi$/;"	l
f0106214	obj/kern/kernel.asm	/^f0106214:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
f0106217	obj/kern/kernel.asm	/^f0106217:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f010621a	obj/kern/kernel.asm	/^f010621a:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f010621e	obj/kern/kernel.asm	/^f010621e:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f0106222	obj/kern/kernel.asm	/^f0106222:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0106225	obj/kern/kernel.asm	/^f0106225:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0106228	obj/kern/kernel.asm	/^f0106228:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f010622b	obj/kern/kernel.asm	/^f010622b:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010622f	obj/kern/kernel.asm	/^f010622f:	e8 2c 13 00 00       	call   f0107560 <__umoddi3>$/;"	l
f0106234	obj/kern/kernel.asm	/^f0106234:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0106238	obj/kern/kernel.asm	/^f0106238:	0f be 80 4e 90 10 f0 	movsbl -0xfef6fb2(%eax),%eax$/;"	l
f010623f	obj/kern/kernel.asm	/^f010623f:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0106242	obj/kern/kernel.asm	/^f0106242:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0106245	obj/kern/kernel.asm	/^f0106245:	ff d0                	call   *%eax$/;"	l
f0106247	obj/kern/kernel.asm	/^f0106247:	83 c4 3c             	add    $0x3c,%esp$/;"	l
f010624a	obj/kern/kernel.asm	/^f010624a:	5b                   	pop    %ebx$/;"	l
f010624b	obj/kern/kernel.asm	/^f010624b:	5e                   	pop    %esi$/;"	l
f010624c	obj/kern/kernel.asm	/^f010624c:	5f                   	pop    %edi$/;"	l
f010624d	obj/kern/kernel.asm	/^f010624d:	5d                   	pop    %ebp$/;"	l
f010624e	obj/kern/kernel.asm	/^f010624e:	c3                   	ret    $/;"	l
f010624f	obj/kern/kernel.asm	/^f010624f <getuint>:$/;"	l
f010624f	obj/kern/kernel.asm	/^f010624f:	55                   	push   %ebp$/;"	l
f0106250	obj/kern/kernel.asm	/^f0106250:	89 e5                	mov    %esp,%ebp$/;"	l
f0106252	obj/kern/kernel.asm	/^f0106252:	83 fa 01             	cmp    $0x1,%edx$/;"	l
f0106255	obj/kern/kernel.asm	/^f0106255:	7e 0e                	jle    f0106265 <getuint+0x16>$/;"	l
f0106257	obj/kern/kernel.asm	/^f0106257:	8b 10                	mov    (%eax),%edx$/;"	l
f0106259	obj/kern/kernel.asm	/^f0106259:	8d 4a 08             	lea    0x8(%edx),%ecx$/;"	l
f010625c	obj/kern/kernel.asm	/^f010625c:	89 08                	mov    %ecx,(%eax)$/;"	l
f010625e	obj/kern/kernel.asm	/^f010625e:	8b 02                	mov    (%edx),%eax$/;"	l
f0106260	obj/kern/kernel.asm	/^f0106260:	8b 52 04             	mov    0x4(%edx),%edx$/;"	l
f0106263	obj/kern/kernel.asm	/^f0106263:	eb 22                	jmp    f0106287 <getuint+0x38>$/;"	l
f0106265	obj/kern/kernel.asm	/^f0106265:	85 d2                	test   %edx,%edx$/;"	l
f0106267	obj/kern/kernel.asm	/^f0106267:	74 10                	je     f0106279 <getuint+0x2a>$/;"	l
f0106269	obj/kern/kernel.asm	/^f0106269:	8b 10                	mov    (%eax),%edx$/;"	l
f010626b	obj/kern/kernel.asm	/^f010626b:	8d 4a 04             	lea    0x4(%edx),%ecx$/;"	l
f010626e	obj/kern/kernel.asm	/^f010626e:	89 08                	mov    %ecx,(%eax)$/;"	l
f0106270	obj/kern/kernel.asm	/^f0106270:	8b 02                	mov    (%edx),%eax$/;"	l
f0106272	obj/kern/kernel.asm	/^f0106272:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0106277	obj/kern/kernel.asm	/^f0106277:	eb 0e                	jmp    f0106287 <getuint+0x38>$/;"	l
f0106279	obj/kern/kernel.asm	/^f0106279:	8b 10                	mov    (%eax),%edx$/;"	l
f010627b	obj/kern/kernel.asm	/^f010627b:	8d 4a 04             	lea    0x4(%edx),%ecx$/;"	l
f010627e	obj/kern/kernel.asm	/^f010627e:	89 08                	mov    %ecx,(%eax)$/;"	l
f0106280	obj/kern/kernel.asm	/^f0106280:	8b 02                	mov    (%edx),%eax$/;"	l
f0106282	obj/kern/kernel.asm	/^f0106282:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0106287	obj/kern/kernel.asm	/^f0106287:	5d                   	pop    %ebp$/;"	l
f0106288	obj/kern/kernel.asm	/^f0106288:	c3                   	ret    $/;"	l
f0106289	obj/kern/kernel.asm	/^f0106289 <sprintputch>:$/;"	l
f0106289	obj/kern/kernel.asm	/^f0106289:	55                   	push   %ebp$/;"	l
f010628a	obj/kern/kernel.asm	/^f010628a:	89 e5                	mov    %esp,%ebp$/;"	l
f010628c	obj/kern/kernel.asm	/^f010628c:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f010628f	obj/kern/kernel.asm	/^f010628f:	83 40 08 01          	addl   $0x1,0x8(%eax)$/;"	l
f0106293	obj/kern/kernel.asm	/^f0106293:	8b 10                	mov    (%eax),%edx$/;"	l
f0106295	obj/kern/kernel.asm	/^f0106295:	3b 50 04             	cmp    0x4(%eax),%edx$/;"	l
f0106298	obj/kern/kernel.asm	/^f0106298:	73 0a                	jae    f01062a4 <sprintputch+0x1b>$/;"	l
f010629a	obj/kern/kernel.asm	/^f010629a:	8d 4a 01             	lea    0x1(%edx),%ecx$/;"	l
f010629d	obj/kern/kernel.asm	/^f010629d:	89 08                	mov    %ecx,(%eax)$/;"	l
f010629f	obj/kern/kernel.asm	/^f010629f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01062a2	obj/kern/kernel.asm	/^f01062a2:	88 02                	mov    %al,(%edx)$/;"	l
f01062a4	obj/kern/kernel.asm	/^f01062a4:	5d                   	pop    %ebp$/;"	l
f01062a5	obj/kern/kernel.asm	/^f01062a5:	c3                   	ret    $/;"	l
f01062a6	obj/kern/kernel.asm	/^f01062a6 <printfmt>:$/;"	l
f01062a6	obj/kern/kernel.asm	/^f01062a6:	55                   	push   %ebp$/;"	l
f01062a7	obj/kern/kernel.asm	/^f01062a7:	89 e5                	mov    %esp,%ebp$/;"	l
f01062a9	obj/kern/kernel.asm	/^f01062a9:	83 ec 18             	sub    $0x18,%esp$/;"	l
f01062ac	obj/kern/kernel.asm	/^f01062ac:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f01062af	obj/kern/kernel.asm	/^f01062af:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01062b3	obj/kern/kernel.asm	/^f01062b3:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f01062b6	obj/kern/kernel.asm	/^f01062b6:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f01062ba	obj/kern/kernel.asm	/^f01062ba:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01062bd	obj/kern/kernel.asm	/^f01062bd:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01062c1	obj/kern/kernel.asm	/^f01062c1:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01062c4	obj/kern/kernel.asm	/^f01062c4:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01062c7	obj/kern/kernel.asm	/^f01062c7:	e8 02 00 00 00       	call   f01062ce <vprintfmt>$/;"	l
f01062cc	obj/kern/kernel.asm	/^f01062cc:	c9                   	leave  $/;"	l
f01062cd	obj/kern/kernel.asm	/^f01062cd:	c3                   	ret    $/;"	l
f01062ce	obj/kern/kernel.asm	/^f01062ce <vprintfmt>:$/;"	l
f01062ce	obj/kern/kernel.asm	/^f01062ce:	55                   	push   %ebp$/;"	l
f01062cf	obj/kern/kernel.asm	/^f01062cf:	89 e5                	mov    %esp,%ebp$/;"	l
f01062d1	obj/kern/kernel.asm	/^f01062d1:	57                   	push   %edi$/;"	l
f01062d2	obj/kern/kernel.asm	/^f01062d2:	56                   	push   %esi$/;"	l
f01062d3	obj/kern/kernel.asm	/^f01062d3:	53                   	push   %ebx$/;"	l
f01062d4	obj/kern/kernel.asm	/^f01062d4:	83 ec 3c             	sub    $0x3c,%esp$/;"	l
f01062d7	obj/kern/kernel.asm	/^f01062d7:	8b 7d 0c             	mov    0xc(%ebp),%edi$/;"	l
f01062da	obj/kern/kernel.asm	/^f01062da:	8b 5d 10             	mov    0x10(%ebp),%ebx$/;"	l
f01062dd	obj/kern/kernel.asm	/^f01062dd:	eb 14                	jmp    f01062f3 <vprintfmt+0x25>$/;"	l
f01062df	obj/kern/kernel.asm	/^f01062df:	85 c0                	test   %eax,%eax$/;"	l
f01062e1	obj/kern/kernel.asm	/^f01062e1:	0f 84 b3 03 00 00    	je     f010669a <vprintfmt+0x3cc>$/;"	l
f01062e7	obj/kern/kernel.asm	/^f01062e7:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f01062eb	obj/kern/kernel.asm	/^f01062eb:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01062ee	obj/kern/kernel.asm	/^f01062ee:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f01062f1	obj/kern/kernel.asm	/^f01062f1:	89 f3                	mov    %esi,%ebx$/;"	l
f01062f3	obj/kern/kernel.asm	/^f01062f3:	8d 73 01             	lea    0x1(%ebx),%esi$/;"	l
f01062f6	obj/kern/kernel.asm	/^f01062f6:	0f b6 03             	movzbl (%ebx),%eax$/;"	l
f01062f9	obj/kern/kernel.asm	/^f01062f9:	83 f8 25             	cmp    $0x25,%eax$/;"	l
f01062fc	obj/kern/kernel.asm	/^f01062fc:	75 e1                	jne    f01062df <vprintfmt+0x11>$/;"	l
f01062fe	obj/kern/kernel.asm	/^f01062fe:	c6 45 d8 20          	movb   $0x20,-0x28(%ebp)$/;"	l
f0106302	obj/kern/kernel.asm	/^f0106302:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)$/;"	l
f0106309	obj/kern/kernel.asm	/^f0106309:	c7 45 d4 ff ff ff ff 	movl   $0xffffffff,-0x2c(%ebp)$/;"	l
f0106310	obj/kern/kernel.asm	/^f0106310:	c7 45 dc ff ff ff ff 	movl   $0xffffffff,-0x24(%ebp)$/;"	l
f0106317	obj/kern/kernel.asm	/^f0106317:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f010631c	obj/kern/kernel.asm	/^f010631c:	eb 1d                	jmp    f010633b <vprintfmt+0x6d>$/;"	l
f010631e	obj/kern/kernel.asm	/^f010631e:	89 de                	mov    %ebx,%esi$/;"	l
f0106320	obj/kern/kernel.asm	/^f0106320:	c6 45 d8 2d          	movb   $0x2d,-0x28(%ebp)$/;"	l
f0106324	obj/kern/kernel.asm	/^f0106324:	eb 15                	jmp    f010633b <vprintfmt+0x6d>$/;"	l
f0106326	obj/kern/kernel.asm	/^f0106326:	89 de                	mov    %ebx,%esi$/;"	l
f0106328	obj/kern/kernel.asm	/^f0106328:	c6 45 d8 30          	movb   $0x30,-0x28(%ebp)$/;"	l
f010632c	obj/kern/kernel.asm	/^f010632c:	eb 0d                	jmp    f010633b <vprintfmt+0x6d>$/;"	l
f010632e	obj/kern/kernel.asm	/^f010632e:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0106331	obj/kern/kernel.asm	/^f0106331:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f0106334	obj/kern/kernel.asm	/^f0106334:	c7 45 d4 ff ff ff ff 	movl   $0xffffffff,-0x2c(%ebp)$/;"	l
f010633b	obj/kern/kernel.asm	/^f010633b:	8d 5e 01             	lea    0x1(%esi),%ebx$/;"	l
f010633e	obj/kern/kernel.asm	/^f010633e:	0f b6 0e             	movzbl (%esi),%ecx$/;"	l
f0106341	obj/kern/kernel.asm	/^f0106341:	0f b6 c1             	movzbl %cl,%eax$/;"	l
f0106344	obj/kern/kernel.asm	/^f0106344:	83 e9 23             	sub    $0x23,%ecx$/;"	l
f0106347	obj/kern/kernel.asm	/^f0106347:	80 f9 55             	cmp    $0x55,%cl$/;"	l
f010634a	obj/kern/kernel.asm	/^f010634a:	0f 87 2a 03 00 00    	ja     f010667a <vprintfmt+0x3ac>$/;"	l
f0106350	obj/kern/kernel.asm	/^f0106350:	0f b6 c9             	movzbl %cl,%ecx$/;"	l
f0106353	obj/kern/kernel.asm	/^f0106353:	ff 24 8d a0 91 10 f0 	jmp    *-0xfef6e60(,%ecx,4)$/;"	l
f010635a	obj/kern/kernel.asm	/^f010635a:	89 de                	mov    %ebx,%esi$/;"	l
f010635c	obj/kern/kernel.asm	/^f010635c:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f0106361	obj/kern/kernel.asm	/^f0106361:	8d 0c 89             	lea    (%ecx,%ecx,4),%ecx$/;"	l
f0106364	obj/kern/kernel.asm	/^f0106364:	8d 4c 48 d0          	lea    -0x30(%eax,%ecx,2),%ecx$/;"	l
f0106368	obj/kern/kernel.asm	/^f0106368:	0f be 06             	movsbl (%esi),%eax$/;"	l
f010636b	obj/kern/kernel.asm	/^f010636b:	8d 58 d0             	lea    -0x30(%eax),%ebx$/;"	l
f010636e	obj/kern/kernel.asm	/^f010636e:	83 fb 09             	cmp    $0x9,%ebx$/;"	l
f0106371	obj/kern/kernel.asm	/^f0106371:	77 36                	ja     f01063a9 <vprintfmt+0xdb>$/;"	l
f0106373	obj/kern/kernel.asm	/^f0106373:	83 c6 01             	add    $0x1,%esi$/;"	l
f0106376	obj/kern/kernel.asm	/^f0106376:	eb e9                	jmp    f0106361 <vprintfmt+0x93>$/;"	l
f0106378	obj/kern/kernel.asm	/^f0106378:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f010637b	obj/kern/kernel.asm	/^f010637b:	8d 48 04             	lea    0x4(%eax),%ecx$/;"	l
f010637e	obj/kern/kernel.asm	/^f010637e:	89 4d 14             	mov    %ecx,0x14(%ebp)$/;"	l
f0106381	obj/kern/kernel.asm	/^f0106381:	8b 00                	mov    (%eax),%eax$/;"	l
f0106383	obj/kern/kernel.asm	/^f0106383:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0106386	obj/kern/kernel.asm	/^f0106386:	89 de                	mov    %ebx,%esi$/;"	l
f0106388	obj/kern/kernel.asm	/^f0106388:	eb 22                	jmp    f01063ac <vprintfmt+0xde>$/;"	l
f010638a	obj/kern/kernel.asm	/^f010638a:	8b 4d dc             	mov    -0x24(%ebp),%ecx$/;"	l
f010638d	obj/kern/kernel.asm	/^f010638d:	85 c9                	test   %ecx,%ecx$/;"	l
f010638f	obj/kern/kernel.asm	/^f010638f:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0106394	obj/kern/kernel.asm	/^f0106394:	0f 49 c1             	cmovns %ecx,%eax$/;"	l
f0106397	obj/kern/kernel.asm	/^f0106397:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f010639a	obj/kern/kernel.asm	/^f010639a:	89 de                	mov    %ebx,%esi$/;"	l
f010639c	obj/kern/kernel.asm	/^f010639c:	eb 9d                	jmp    f010633b <vprintfmt+0x6d>$/;"	l
f010639e	obj/kern/kernel.asm	/^f010639e:	89 de                	mov    %ebx,%esi$/;"	l
f01063a0	obj/kern/kernel.asm	/^f01063a0:	c7 45 e0 01 00 00 00 	movl   $0x1,-0x20(%ebp)$/;"	l
f01063a7	obj/kern/kernel.asm	/^f01063a7:	eb 92                	jmp    f010633b <vprintfmt+0x6d>$/;"	l
f01063a9	obj/kern/kernel.asm	/^f01063a9:	89 4d d4             	mov    %ecx,-0x2c(%ebp)$/;"	l
f01063ac	obj/kern/kernel.asm	/^f01063ac:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)$/;"	l
f01063b0	obj/kern/kernel.asm	/^f01063b0:	79 89                	jns    f010633b <vprintfmt+0x6d>$/;"	l
f01063b2	obj/kern/kernel.asm	/^f01063b2:	e9 77 ff ff ff       	jmp    f010632e <vprintfmt+0x60>$/;"	l
f01063b7	obj/kern/kernel.asm	/^f01063b7:	83 c2 01             	add    $0x1,%edx$/;"	l
f01063ba	obj/kern/kernel.asm	/^f01063ba:	89 de                	mov    %ebx,%esi$/;"	l
f01063bc	obj/kern/kernel.asm	/^f01063bc:	e9 7a ff ff ff       	jmp    f010633b <vprintfmt+0x6d>$/;"	l
f01063c1	obj/kern/kernel.asm	/^f01063c1:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f01063c4	obj/kern/kernel.asm	/^f01063c4:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f01063c7	obj/kern/kernel.asm	/^f01063c7:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f01063ca	obj/kern/kernel.asm	/^f01063ca:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f01063ce	obj/kern/kernel.asm	/^f01063ce:	8b 00                	mov    (%eax),%eax$/;"	l
f01063d0	obj/kern/kernel.asm	/^f01063d0:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01063d3	obj/kern/kernel.asm	/^f01063d3:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f01063d6	obj/kern/kernel.asm	/^f01063d6:	e9 18 ff ff ff       	jmp    f01062f3 <vprintfmt+0x25>$/;"	l
f01063db	obj/kern/kernel.asm	/^f01063db:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f01063de	obj/kern/kernel.asm	/^f01063de:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f01063e1	obj/kern/kernel.asm	/^f01063e1:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f01063e4	obj/kern/kernel.asm	/^f01063e4:	8b 00                	mov    (%eax),%eax$/;"	l
f01063e6	obj/kern/kernel.asm	/^f01063e6:	99                   	cltd   $/;"	l
f01063e7	obj/kern/kernel.asm	/^f01063e7:	31 d0                	xor    %edx,%eax$/;"	l
f01063e9	obj/kern/kernel.asm	/^f01063e9:	29 d0                	sub    %edx,%eax$/;"	l
f01063eb	obj/kern/kernel.asm	/^f01063eb:	83 f8 0f             	cmp    $0xf,%eax$/;"	l
f01063ee	obj/kern/kernel.asm	/^f01063ee:	7f 0b                	jg     f01063fb <vprintfmt+0x12d>$/;"	l
f01063f0	obj/kern/kernel.asm	/^f01063f0:	8b 14 85 00 93 10 f0 	mov    -0xfef6d00(,%eax,4),%edx$/;"	l
f01063f7	obj/kern/kernel.asm	/^f01063f7:	85 d2                	test   %edx,%edx$/;"	l
f01063f9	obj/kern/kernel.asm	/^f01063f9:	75 20                	jne    f010641b <vprintfmt+0x14d>$/;"	l
f01063fb	obj/kern/kernel.asm	/^f01063fb:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01063ff	obj/kern/kernel.asm	/^f01063ff:	c7 44 24 08 66 90 10 	movl   $0xf0109066,0x8(%esp)$/;"	l
f0106406	obj/kern/kernel.asm	/^f0106406:	f0 $/;"	l
f0106407	obj/kern/kernel.asm	/^f0106407:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f010640b	obj/kern/kernel.asm	/^f010640b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010640e	obj/kern/kernel.asm	/^f010640e:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0106411	obj/kern/kernel.asm	/^f0106411:	e8 90 fe ff ff       	call   f01062a6 <printfmt>$/;"	l
f0106416	obj/kern/kernel.asm	/^f0106416:	e9 d8 fe ff ff       	jmp    f01062f3 <vprintfmt+0x25>$/;"	l
f010641b	obj/kern/kernel.asm	/^f010641b:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f010641f	obj/kern/kernel.asm	/^f010641f:	c7 44 24 08 b1 87 10 	movl   $0xf01087b1,0x8(%esp)$/;"	l
f0106426	obj/kern/kernel.asm	/^f0106426:	f0 $/;"	l
f0106427	obj/kern/kernel.asm	/^f0106427:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f010642b	obj/kern/kernel.asm	/^f010642b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010642e	obj/kern/kernel.asm	/^f010642e:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0106431	obj/kern/kernel.asm	/^f0106431:	e8 70 fe ff ff       	call   f01062a6 <printfmt>$/;"	l
f0106436	obj/kern/kernel.asm	/^f0106436:	e9 b8 fe ff ff       	jmp    f01062f3 <vprintfmt+0x25>$/;"	l
f010643b	obj/kern/kernel.asm	/^f010643b:	8b 4d d4             	mov    -0x2c(%ebp),%ecx$/;"	l
f010643e	obj/kern/kernel.asm	/^f010643e:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f0106441	obj/kern/kernel.asm	/^f0106441:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f0106444	obj/kern/kernel.asm	/^f0106444:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0106447	obj/kern/kernel.asm	/^f0106447:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f010644a	obj/kern/kernel.asm	/^f010644a:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f010644d	obj/kern/kernel.asm	/^f010644d:	8b 30                	mov    (%eax),%esi$/;"	l
f010644f	obj/kern/kernel.asm	/^f010644f:	85 f6                	test   %esi,%esi$/;"	l
f0106451	obj/kern/kernel.asm	/^f0106451:	b8 5f 90 10 f0       	mov    $0xf010905f,%eax$/;"	l
f0106456	obj/kern/kernel.asm	/^f0106456:	0f 44 f0             	cmove  %eax,%esi$/;"	l
f0106459	obj/kern/kernel.asm	/^f0106459:	80 7d d8 2d          	cmpb   $0x2d,-0x28(%ebp)$/;"	l
f010645d	obj/kern/kernel.asm	/^f010645d:	0f 84 97 00 00 00    	je     f01064fa <vprintfmt+0x22c>$/;"	l
f0106463	obj/kern/kernel.asm	/^f0106463:	83 7d d0 00          	cmpl   $0x0,-0x30(%ebp)$/;"	l
f0106467	obj/kern/kernel.asm	/^f0106467:	0f 8e 9b 00 00 00    	jle    f0106508 <vprintfmt+0x23a>$/;"	l
f010646d	obj/kern/kernel.asm	/^f010646d:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
f0106471	obj/kern/kernel.asm	/^f0106471:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0106474	obj/kern/kernel.asm	/^f0106474:	e8 af 03 00 00       	call   f0106828 <strnlen>$/;"	l
f0106479	obj/kern/kernel.asm	/^f0106479:	8b 55 d0             	mov    -0x30(%ebp),%edx$/;"	l
f010647c	obj/kern/kernel.asm	/^f010647c:	29 c2                	sub    %eax,%edx$/;"	l
f010647e	obj/kern/kernel.asm	/^f010647e:	89 55 d0             	mov    %edx,-0x30(%ebp)$/;"	l
f0106481	obj/kern/kernel.asm	/^f0106481:	0f be 45 d8          	movsbl -0x28(%ebp),%eax$/;"	l
f0106485	obj/kern/kernel.asm	/^f0106485:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f0106488	obj/kern/kernel.asm	/^f0106488:	89 75 d8             	mov    %esi,-0x28(%ebp)$/;"	l
f010648b	obj/kern/kernel.asm	/^f010648b:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f010648e	obj/kern/kernel.asm	/^f010648e:	89 5d 10             	mov    %ebx,0x10(%ebp)$/;"	l
f0106491	obj/kern/kernel.asm	/^f0106491:	89 d3                	mov    %edx,%ebx$/;"	l
f0106493	obj/kern/kernel.asm	/^f0106493:	eb 0f                	jmp    f01064a4 <vprintfmt+0x1d6>$/;"	l
f0106495	obj/kern/kernel.asm	/^f0106495:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0106499	obj/kern/kernel.asm	/^f0106499:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f010649c	obj/kern/kernel.asm	/^f010649c:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010649f	obj/kern/kernel.asm	/^f010649f:	ff d6                	call   *%esi$/;"	l
f01064a1	obj/kern/kernel.asm	/^f01064a1:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f01064a4	obj/kern/kernel.asm	/^f01064a4:	85 db                	test   %ebx,%ebx$/;"	l
f01064a6	obj/kern/kernel.asm	/^f01064a6:	7f ed                	jg     f0106495 <vprintfmt+0x1c7>$/;"	l
f01064a8	obj/kern/kernel.asm	/^f01064a8:	8b 75 d8             	mov    -0x28(%ebp),%esi$/;"	l
f01064ab	obj/kern/kernel.asm	/^f01064ab:	8b 55 d0             	mov    -0x30(%ebp),%edx$/;"	l
f01064ae	obj/kern/kernel.asm	/^f01064ae:	85 d2                	test   %edx,%edx$/;"	l
f01064b0	obj/kern/kernel.asm	/^f01064b0:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01064b5	obj/kern/kernel.asm	/^f01064b5:	0f 49 c2             	cmovns %edx,%eax$/;"	l
f01064b8	obj/kern/kernel.asm	/^f01064b8:	29 c2                	sub    %eax,%edx$/;"	l
f01064ba	obj/kern/kernel.asm	/^f01064ba:	89 7d 0c             	mov    %edi,0xc(%ebp)$/;"	l
f01064bd	obj/kern/kernel.asm	/^f01064bd:	89 d7                	mov    %edx,%edi$/;"	l
f01064bf	obj/kern/kernel.asm	/^f01064bf:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f01064c2	obj/kern/kernel.asm	/^f01064c2:	eb 50                	jmp    f0106514 <vprintfmt+0x246>$/;"	l
f01064c4	obj/kern/kernel.asm	/^f01064c4:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)$/;"	l
f01064c8	obj/kern/kernel.asm	/^f01064c8:	74 1e                	je     f01064e8 <vprintfmt+0x21a>$/;"	l
f01064ca	obj/kern/kernel.asm	/^f01064ca:	0f be d2             	movsbl %dl,%edx$/;"	l
f01064cd	obj/kern/kernel.asm	/^f01064cd:	83 ea 20             	sub    $0x20,%edx$/;"	l
f01064d0	obj/kern/kernel.asm	/^f01064d0:	83 fa 5e             	cmp    $0x5e,%edx$/;"	l
f01064d3	obj/kern/kernel.asm	/^f01064d3:	76 13                	jbe    f01064e8 <vprintfmt+0x21a>$/;"	l
f01064d5	obj/kern/kernel.asm	/^f01064d5:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01064d8	obj/kern/kernel.asm	/^f01064d8:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01064dc	obj/kern/kernel.asm	/^f01064dc:	c7 04 24 3f 00 00 00 	movl   $0x3f,(%esp)$/;"	l
f01064e3	obj/kern/kernel.asm	/^f01064e3:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f01064e6	obj/kern/kernel.asm	/^f01064e6:	eb 0d                	jmp    f01064f5 <vprintfmt+0x227>$/;"	l
f01064e8	obj/kern/kernel.asm	/^f01064e8:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f01064eb	obj/kern/kernel.asm	/^f01064eb:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f01064ef	obj/kern/kernel.asm	/^f01064ef:	89 04 24             	mov    %eax,(%esp)$/;"	l
f01064f2	obj/kern/kernel.asm	/^f01064f2:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f01064f5	obj/kern/kernel.asm	/^f01064f5:	83 ef 01             	sub    $0x1,%edi$/;"	l
f01064f8	obj/kern/kernel.asm	/^f01064f8:	eb 1a                	jmp    f0106514 <vprintfmt+0x246>$/;"	l
f01064fa	obj/kern/kernel.asm	/^f01064fa:	89 7d 0c             	mov    %edi,0xc(%ebp)$/;"	l
f01064fd	obj/kern/kernel.asm	/^f01064fd:	8b 7d dc             	mov    -0x24(%ebp),%edi$/;"	l
f0106500	obj/kern/kernel.asm	/^f0106500:	89 5d 10             	mov    %ebx,0x10(%ebp)$/;"	l
f0106503	obj/kern/kernel.asm	/^f0106503:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f0106506	obj/kern/kernel.asm	/^f0106506:	eb 0c                	jmp    f0106514 <vprintfmt+0x246>$/;"	l
f0106508	obj/kern/kernel.asm	/^f0106508:	89 7d 0c             	mov    %edi,0xc(%ebp)$/;"	l
f010650b	obj/kern/kernel.asm	/^f010650b:	8b 7d dc             	mov    -0x24(%ebp),%edi$/;"	l
f010650e	obj/kern/kernel.asm	/^f010650e:	89 5d 10             	mov    %ebx,0x10(%ebp)$/;"	l
f0106511	obj/kern/kernel.asm	/^f0106511:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
f0106514	obj/kern/kernel.asm	/^f0106514:	83 c6 01             	add    $0x1,%esi$/;"	l
f0106517	obj/kern/kernel.asm	/^f0106517:	0f b6 56 ff          	movzbl -0x1(%esi),%edx$/;"	l
f010651b	obj/kern/kernel.asm	/^f010651b:	0f be c2             	movsbl %dl,%eax$/;"	l
f010651e	obj/kern/kernel.asm	/^f010651e:	85 c0                	test   %eax,%eax$/;"	l
f0106520	obj/kern/kernel.asm	/^f0106520:	74 27                	je     f0106549 <vprintfmt+0x27b>$/;"	l
f0106522	obj/kern/kernel.asm	/^f0106522:	85 db                	test   %ebx,%ebx$/;"	l
f0106524	obj/kern/kernel.asm	/^f0106524:	78 9e                	js     f01064c4 <vprintfmt+0x1f6>$/;"	l
f0106526	obj/kern/kernel.asm	/^f0106526:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f0106529	obj/kern/kernel.asm	/^f0106529:	79 99                	jns    f01064c4 <vprintfmt+0x1f6>$/;"	l
f010652b	obj/kern/kernel.asm	/^f010652b:	89 f8                	mov    %edi,%eax$/;"	l
f010652d	obj/kern/kernel.asm	/^f010652d:	8b 7d 0c             	mov    0xc(%ebp),%edi$/;"	l
f0106530	obj/kern/kernel.asm	/^f0106530:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0106533	obj/kern/kernel.asm	/^f0106533:	89 c3                	mov    %eax,%ebx$/;"	l
f0106535	obj/kern/kernel.asm	/^f0106535:	eb 1a                	jmp    f0106551 <vprintfmt+0x283>$/;"	l
f0106537	obj/kern/kernel.asm	/^f0106537:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f010653b	obj/kern/kernel.asm	/^f010653b:	c7 04 24 20 00 00 00 	movl   $0x20,(%esp)$/;"	l
f0106542	obj/kern/kernel.asm	/^f0106542:	ff d6                	call   *%esi$/;"	l
f0106544	obj/kern/kernel.asm	/^f0106544:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f0106547	obj/kern/kernel.asm	/^f0106547:	eb 08                	jmp    f0106551 <vprintfmt+0x283>$/;"	l
f0106549	obj/kern/kernel.asm	/^f0106549:	89 fb                	mov    %edi,%ebx$/;"	l
f010654b	obj/kern/kernel.asm	/^f010654b:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f010654e	obj/kern/kernel.asm	/^f010654e:	8b 7d 0c             	mov    0xc(%ebp),%edi$/;"	l
f0106551	obj/kern/kernel.asm	/^f0106551:	85 db                	test   %ebx,%ebx$/;"	l
f0106553	obj/kern/kernel.asm	/^f0106553:	7f e2                	jg     f0106537 <vprintfmt+0x269>$/;"	l
f0106555	obj/kern/kernel.asm	/^f0106555:	89 75 08             	mov    %esi,0x8(%ebp)$/;"	l
f0106558	obj/kern/kernel.asm	/^f0106558:	8b 5d 10             	mov    0x10(%ebp),%ebx$/;"	l
f010655b	obj/kern/kernel.asm	/^f010655b:	e9 93 fd ff ff       	jmp    f01062f3 <vprintfmt+0x25>$/;"	l
f0106560	obj/kern/kernel.asm	/^f0106560:	83 fa 01             	cmp    $0x1,%edx$/;"	l
f0106563	obj/kern/kernel.asm	/^f0106563:	7e 16                	jle    f010657b <vprintfmt+0x2ad>$/;"	l
f0106565	obj/kern/kernel.asm	/^f0106565:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0106568	obj/kern/kernel.asm	/^f0106568:	8d 50 08             	lea    0x8(%eax),%edx$/;"	l
f010656b	obj/kern/kernel.asm	/^f010656b:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f010656e	obj/kern/kernel.asm	/^f010656e:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
f0106571	obj/kern/kernel.asm	/^f0106571:	8b 00                	mov    (%eax),%eax$/;"	l
f0106573	obj/kern/kernel.asm	/^f0106573:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f0106576	obj/kern/kernel.asm	/^f0106576:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
f0106579	obj/kern/kernel.asm	/^f0106579:	eb 32                	jmp    f01065ad <vprintfmt+0x2df>$/;"	l
f010657b	obj/kern/kernel.asm	/^f010657b:	85 d2                	test   %edx,%edx$/;"	l
f010657d	obj/kern/kernel.asm	/^f010657d:	74 18                	je     f0106597 <vprintfmt+0x2c9>$/;"	l
f010657f	obj/kern/kernel.asm	/^f010657f:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0106582	obj/kern/kernel.asm	/^f0106582:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f0106585	obj/kern/kernel.asm	/^f0106585:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f0106588	obj/kern/kernel.asm	/^f0106588:	8b 30                	mov    (%eax),%esi$/;"	l
f010658a	obj/kern/kernel.asm	/^f010658a:	89 75 e0             	mov    %esi,-0x20(%ebp)$/;"	l
f010658d	obj/kern/kernel.asm	/^f010658d:	89 f0                	mov    %esi,%eax$/;"	l
f010658f	obj/kern/kernel.asm	/^f010658f:	c1 f8 1f             	sar    $0x1f,%eax$/;"	l
f0106592	obj/kern/kernel.asm	/^f0106592:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0106595	obj/kern/kernel.asm	/^f0106595:	eb 16                	jmp    f01065ad <vprintfmt+0x2df>$/;"	l
f0106597	obj/kern/kernel.asm	/^f0106597:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f010659a	obj/kern/kernel.asm	/^f010659a:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f010659d	obj/kern/kernel.asm	/^f010659d:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f01065a0	obj/kern/kernel.asm	/^f01065a0:	8b 30                	mov    (%eax),%esi$/;"	l
f01065a2	obj/kern/kernel.asm	/^f01065a2:	89 75 e0             	mov    %esi,-0x20(%ebp)$/;"	l
f01065a5	obj/kern/kernel.asm	/^f01065a5:	89 f0                	mov    %esi,%eax$/;"	l
f01065a7	obj/kern/kernel.asm	/^f01065a7:	c1 f8 1f             	sar    $0x1f,%eax$/;"	l
f01065aa	obj/kern/kernel.asm	/^f01065aa:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f01065ad	obj/kern/kernel.asm	/^f01065ad:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f01065b0	obj/kern/kernel.asm	/^f01065b0:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
f01065b3	obj/kern/kernel.asm	/^f01065b3:	b9 0a 00 00 00       	mov    $0xa,%ecx$/;"	l
f01065b8	obj/kern/kernel.asm	/^f01065b8:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
f01065bc	obj/kern/kernel.asm	/^f01065bc:	0f 89 80 00 00 00    	jns    f0106642 <vprintfmt+0x374>$/;"	l
f01065c2	obj/kern/kernel.asm	/^f01065c2:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f01065c6	obj/kern/kernel.asm	/^f01065c6:	c7 04 24 2d 00 00 00 	movl   $0x2d,(%esp)$/;"	l
f01065cd	obj/kern/kernel.asm	/^f01065cd:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f01065d0	obj/kern/kernel.asm	/^f01065d0:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f01065d3	obj/kern/kernel.asm	/^f01065d3:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
f01065d6	obj/kern/kernel.asm	/^f01065d6:	f7 d8                	neg    %eax$/;"	l
f01065d8	obj/kern/kernel.asm	/^f01065d8:	83 d2 00             	adc    $0x0,%edx$/;"	l
f01065db	obj/kern/kernel.asm	/^f01065db:	f7 da                	neg    %edx$/;"	l
f01065dd	obj/kern/kernel.asm	/^f01065dd:	b9 0a 00 00 00       	mov    $0xa,%ecx$/;"	l
f01065e2	obj/kern/kernel.asm	/^f01065e2:	eb 5e                	jmp    f0106642 <vprintfmt+0x374>$/;"	l
f01065e4	obj/kern/kernel.asm	/^f01065e4:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f01065e7	obj/kern/kernel.asm	/^f01065e7:	e8 63 fc ff ff       	call   f010624f <getuint>$/;"	l
f01065ec	obj/kern/kernel.asm	/^f01065ec:	b9 0a 00 00 00       	mov    $0xa,%ecx$/;"	l
f01065f1	obj/kern/kernel.asm	/^f01065f1:	eb 4f                	jmp    f0106642 <vprintfmt+0x374>$/;"	l
f01065f3	obj/kern/kernel.asm	/^f01065f3:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f01065f6	obj/kern/kernel.asm	/^f01065f6:	e8 54 fc ff ff       	call   f010624f <getuint>$/;"	l
f01065fb	obj/kern/kernel.asm	/^f01065fb:	b9 08 00 00 00       	mov    $0x8,%ecx$/;"	l
f0106600	obj/kern/kernel.asm	/^f0106600:	eb 40                	jmp    f0106642 <vprintfmt+0x374>$/;"	l
f0106602	obj/kern/kernel.asm	/^f0106602:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0106606	obj/kern/kernel.asm	/^f0106606:	c7 04 24 30 00 00 00 	movl   $0x30,(%esp)$/;"	l
f010660d	obj/kern/kernel.asm	/^f010660d:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0106610	obj/kern/kernel.asm	/^f0106610:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0106614	obj/kern/kernel.asm	/^f0106614:	c7 04 24 78 00 00 00 	movl   $0x78,(%esp)$/;"	l
f010661b	obj/kern/kernel.asm	/^f010661b:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f010661e	obj/kern/kernel.asm	/^f010661e:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0106621	obj/kern/kernel.asm	/^f0106621:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f0106624	obj/kern/kernel.asm	/^f0106624:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f0106627	obj/kern/kernel.asm	/^f0106627:	8b 00                	mov    (%eax),%eax$/;"	l
f0106629	obj/kern/kernel.asm	/^f0106629:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f010662e	obj/kern/kernel.asm	/^f010662e:	b9 10 00 00 00       	mov    $0x10,%ecx$/;"	l
f0106633	obj/kern/kernel.asm	/^f0106633:	eb 0d                	jmp    f0106642 <vprintfmt+0x374>$/;"	l
f0106635	obj/kern/kernel.asm	/^f0106635:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f0106638	obj/kern/kernel.asm	/^f0106638:	e8 12 fc ff ff       	call   f010624f <getuint>$/;"	l
f010663d	obj/kern/kernel.asm	/^f010663d:	b9 10 00 00 00       	mov    $0x10,%ecx$/;"	l
f0106642	obj/kern/kernel.asm	/^f0106642:	0f be 75 d8          	movsbl -0x28(%ebp),%esi$/;"	l
f0106646	obj/kern/kernel.asm	/^f0106646:	89 74 24 10          	mov    %esi,0x10(%esp)$/;"	l
f010664a	obj/kern/kernel.asm	/^f010664a:	8b 75 dc             	mov    -0x24(%ebp),%esi$/;"	l
f010664d	obj/kern/kernel.asm	/^f010664d:	89 74 24 0c          	mov    %esi,0xc(%esp)$/;"	l
f0106651	obj/kern/kernel.asm	/^f0106651:	89 4c 24 08          	mov    %ecx,0x8(%esp)$/;"	l
f0106655	obj/kern/kernel.asm	/^f0106655:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0106658	obj/kern/kernel.asm	/^f0106658:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f010665c	obj/kern/kernel.asm	/^f010665c:	89 fa                	mov    %edi,%edx$/;"	l
f010665e	obj/kern/kernel.asm	/^f010665e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0106661	obj/kern/kernel.asm	/^f0106661:	e8 fa fa ff ff       	call   f0106160 <printnum>$/;"	l
f0106666	obj/kern/kernel.asm	/^f0106666:	e9 88 fc ff ff       	jmp    f01062f3 <vprintfmt+0x25>$/;"	l
f010666b	obj/kern/kernel.asm	/^f010666b:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f010666f	obj/kern/kernel.asm	/^f010666f:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0106672	obj/kern/kernel.asm	/^f0106672:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0106675	obj/kern/kernel.asm	/^f0106675:	e9 79 fc ff ff       	jmp    f01062f3 <vprintfmt+0x25>$/;"	l
f010667a	obj/kern/kernel.asm	/^f010667a:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f010667e	obj/kern/kernel.asm	/^f010667e:	c7 04 24 25 00 00 00 	movl   $0x25,(%esp)$/;"	l
f0106685	obj/kern/kernel.asm	/^f0106685:	ff 55 08             	call   *0x8(%ebp)$/;"	l
f0106688	obj/kern/kernel.asm	/^f0106688:	89 f3                	mov    %esi,%ebx$/;"	l
f010668a	obj/kern/kernel.asm	/^f010668a:	eb 03                	jmp    f010668f <vprintfmt+0x3c1>$/;"	l
f010668c	obj/kern/kernel.asm	/^f010668c:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f010668f	obj/kern/kernel.asm	/^f010668f:	80 7b ff 25          	cmpb   $0x25,-0x1(%ebx)$/;"	l
f0106693	obj/kern/kernel.asm	/^f0106693:	75 f7                	jne    f010668c <vprintfmt+0x3be>$/;"	l
f0106695	obj/kern/kernel.asm	/^f0106695:	e9 59 fc ff ff       	jmp    f01062f3 <vprintfmt+0x25>$/;"	l
f010669a	obj/kern/kernel.asm	/^f010669a:	83 c4 3c             	add    $0x3c,%esp$/;"	l
f010669d	obj/kern/kernel.asm	/^f010669d:	5b                   	pop    %ebx$/;"	l
f010669e	obj/kern/kernel.asm	/^f010669e:	5e                   	pop    %esi$/;"	l
f010669f	obj/kern/kernel.asm	/^f010669f:	5f                   	pop    %edi$/;"	l
f01066a0	obj/kern/kernel.asm	/^f01066a0:	5d                   	pop    %ebp$/;"	l
f01066a1	obj/kern/kernel.asm	/^f01066a1:	c3                   	ret    $/;"	l
f01066a2	obj/kern/kernel.asm	/^f01066a2 <vsnprintf>:$/;"	l
f01066a2	obj/kern/kernel.asm	/^f01066a2:	55                   	push   %ebp$/;"	l
f01066a3	obj/kern/kernel.asm	/^f01066a3:	89 e5                	mov    %esp,%ebp$/;"	l
f01066a5	obj/kern/kernel.asm	/^f01066a5:	83 ec 28             	sub    $0x28,%esp$/;"	l
f01066a8	obj/kern/kernel.asm	/^f01066a8:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01066ab	obj/kern/kernel.asm	/^f01066ab:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f01066ae	obj/kern/kernel.asm	/^f01066ae:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
f01066b1	obj/kern/kernel.asm	/^f01066b1:	8d 4c 10 ff          	lea    -0x1(%eax,%edx,1),%ecx$/;"	l
f01066b5	obj/kern/kernel.asm	/^f01066b5:	89 4d f0             	mov    %ecx,-0x10(%ebp)$/;"	l
f01066b8	obj/kern/kernel.asm	/^f01066b8:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
f01066bf	obj/kern/kernel.asm	/^f01066bf:	85 c0                	test   %eax,%eax$/;"	l
f01066c1	obj/kern/kernel.asm	/^f01066c1:	74 30                	je     f01066f3 <vsnprintf+0x51>$/;"	l
f01066c3	obj/kern/kernel.asm	/^f01066c3:	85 d2                	test   %edx,%edx$/;"	l
f01066c5	obj/kern/kernel.asm	/^f01066c5:	7e 2c                	jle    f01066f3 <vsnprintf+0x51>$/;"	l
f01066c7	obj/kern/kernel.asm	/^f01066c7:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f01066ca	obj/kern/kernel.asm	/^f01066ca:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01066ce	obj/kern/kernel.asm	/^f01066ce:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f01066d1	obj/kern/kernel.asm	/^f01066d1:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f01066d5	obj/kern/kernel.asm	/^f01066d5:	8d 45 ec             	lea    -0x14(%ebp),%eax$/;"	l
f01066d8	obj/kern/kernel.asm	/^f01066d8:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01066dc	obj/kern/kernel.asm	/^f01066dc:	c7 04 24 89 62 10 f0 	movl   $0xf0106289,(%esp)$/;"	l
f01066e3	obj/kern/kernel.asm	/^f01066e3:	e8 e6 fb ff ff       	call   f01062ce <vprintfmt>$/;"	l
f01066e8	obj/kern/kernel.asm	/^f01066e8:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f01066eb	obj/kern/kernel.asm	/^f01066eb:	c6 00 00             	movb   $0x0,(%eax)$/;"	l
f01066ee	obj/kern/kernel.asm	/^f01066ee:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f01066f1	obj/kern/kernel.asm	/^f01066f1:	eb 05                	jmp    f01066f8 <vsnprintf+0x56>$/;"	l
f01066f3	obj/kern/kernel.asm	/^f01066f3:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f01066f8	obj/kern/kernel.asm	/^f01066f8:	c9                   	leave  $/;"	l
f01066f9	obj/kern/kernel.asm	/^f01066f9:	c3                   	ret    $/;"	l
f01066fa	obj/kern/kernel.asm	/^f01066fa <snprintf>:$/;"	l
f01066fa	obj/kern/kernel.asm	/^f01066fa:	55                   	push   %ebp$/;"	l
f01066fb	obj/kern/kernel.asm	/^f01066fb:	89 e5                	mov    %esp,%ebp$/;"	l
f01066fd	obj/kern/kernel.asm	/^f01066fd:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0106700	obj/kern/kernel.asm	/^f0106700:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f0106703	obj/kern/kernel.asm	/^f0106703:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0106707	obj/kern/kernel.asm	/^f0106707:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f010670a	obj/kern/kernel.asm	/^f010670a:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f010670e	obj/kern/kernel.asm	/^f010670e:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0106711	obj/kern/kernel.asm	/^f0106711:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0106715	obj/kern/kernel.asm	/^f0106715:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0106718	obj/kern/kernel.asm	/^f0106718:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010671b	obj/kern/kernel.asm	/^f010671b:	e8 82 ff ff ff       	call   f01066a2 <vsnprintf>$/;"	l
f0106720	obj/kern/kernel.asm	/^f0106720:	c9                   	leave  $/;"	l
f0106721	obj/kern/kernel.asm	/^f0106721:	c3                   	ret    $/;"	l
f0106722	obj/kern/kernel.asm	/^f0106722:	66 90                	xchg   %ax,%ax$/;"	l
f0106724	obj/kern/kernel.asm	/^f0106724:	66 90                	xchg   %ax,%ax$/;"	l
f0106726	obj/kern/kernel.asm	/^f0106726:	66 90                	xchg   %ax,%ax$/;"	l
f0106728	obj/kern/kernel.asm	/^f0106728:	66 90                	xchg   %ax,%ax$/;"	l
f010672a	obj/kern/kernel.asm	/^f010672a:	66 90                	xchg   %ax,%ax$/;"	l
f010672c	obj/kern/kernel.asm	/^f010672c:	66 90                	xchg   %ax,%ax$/;"	l
f010672e	obj/kern/kernel.asm	/^f010672e:	66 90                	xchg   %ax,%ax$/;"	l
f0106730	obj/kern/kernel.asm	/^f0106730 <readline>:$/;"	l
f0106730	obj/kern/kernel.asm	/^f0106730:	55                   	push   %ebp$/;"	l
f0106731	obj/kern/kernel.asm	/^f0106731:	89 e5                	mov    %esp,%ebp$/;"	l
f0106733	obj/kern/kernel.asm	/^f0106733:	57                   	push   %edi$/;"	l
f0106734	obj/kern/kernel.asm	/^f0106734:	56                   	push   %esi$/;"	l
f0106735	obj/kern/kernel.asm	/^f0106735:	53                   	push   %ebx$/;"	l
f0106736	obj/kern/kernel.asm	/^f0106736:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0106739	obj/kern/kernel.asm	/^f0106739:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010673c	obj/kern/kernel.asm	/^f010673c:	85 c0                	test   %eax,%eax$/;"	l
f010673e	obj/kern/kernel.asm	/^f010673e:	74 10                	je     f0106750 <readline+0x20>$/;"	l
f0106740	obj/kern/kernel.asm	/^f0106740:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0106744	obj/kern/kernel.asm	/^f0106744:	c7 04 24 b1 87 10 f0 	movl   $0xf01087b1,(%esp)$/;"	l
f010674b	obj/kern/kernel.asm	/^f010674b:	e8 4e dc ff ff       	call   f010439e <cprintf>$/;"	l
f0106750	obj/kern/kernel.asm	/^f0106750:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
f0106757	obj/kern/kernel.asm	/^f0106757:	e8 7c a0 ff ff       	call   f01007d8 <iscons>$/;"	l
f010675c	obj/kern/kernel.asm	/^f010675c:	89 c7                	mov    %eax,%edi$/;"	l
f010675e	obj/kern/kernel.asm	/^f010675e:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f0106763	obj/kern/kernel.asm	/^f0106763:	e8 5f a0 ff ff       	call   f01007c7 <getchar>$/;"	l
f0106768	obj/kern/kernel.asm	/^f0106768:	89 c3                	mov    %eax,%ebx$/;"	l
f010676a	obj/kern/kernel.asm	/^f010676a:	85 c0                	test   %eax,%eax$/;"	l
f010676c	obj/kern/kernel.asm	/^f010676c:	79 25                	jns    f0106793 <readline+0x63>$/;"	l
f010676e	obj/kern/kernel.asm	/^f010676e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0106773	obj/kern/kernel.asm	/^f0106773:	83 fb f8             	cmp    $0xfffffff8,%ebx$/;"	l
f0106776	obj/kern/kernel.asm	/^f0106776:	0f 84 89 00 00 00    	je     f0106805 <readline+0xd5>$/;"	l
f010677c	obj/kern/kernel.asm	/^f010677c:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
f0106780	obj/kern/kernel.asm	/^f0106780:	c7 04 24 5f 93 10 f0 	movl   $0xf010935f,(%esp)$/;"	l
f0106787	obj/kern/kernel.asm	/^f0106787:	e8 12 dc ff ff       	call   f010439e <cprintf>$/;"	l
f010678c	obj/kern/kernel.asm	/^f010678c:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0106791	obj/kern/kernel.asm	/^f0106791:	eb 72                	jmp    f0106805 <readline+0xd5>$/;"	l
f0106793	obj/kern/kernel.asm	/^f0106793:	83 f8 7f             	cmp    $0x7f,%eax$/;"	l
f0106796	obj/kern/kernel.asm	/^f0106796:	74 05                	je     f010679d <readline+0x6d>$/;"	l
f0106798	obj/kern/kernel.asm	/^f0106798:	83 f8 08             	cmp    $0x8,%eax$/;"	l
f010679b	obj/kern/kernel.asm	/^f010679b:	75 1a                	jne    f01067b7 <readline+0x87>$/;"	l
f010679d	obj/kern/kernel.asm	/^f010679d:	85 f6                	test   %esi,%esi$/;"	l
f010679f	obj/kern/kernel.asm	/^f010679f:	90                   	nop$/;"	l
f01067a0	obj/kern/kernel.asm	/^f01067a0:	7e 15                	jle    f01067b7 <readline+0x87>$/;"	l
f01067a2	obj/kern/kernel.asm	/^f01067a2:	85 ff                	test   %edi,%edi$/;"	l
f01067a4	obj/kern/kernel.asm	/^f01067a4:	74 0c                	je     f01067b2 <readline+0x82>$/;"	l
f01067a6	obj/kern/kernel.asm	/^f01067a6:	c7 04 24 08 00 00 00 	movl   $0x8,(%esp)$/;"	l
f01067ad	obj/kern/kernel.asm	/^f01067ad:	e8 05 a0 ff ff       	call   f01007b7 <cputchar>$/;"	l
f01067b2	obj/kern/kernel.asm	/^f01067b2:	83 ee 01             	sub    $0x1,%esi$/;"	l
f01067b5	obj/kern/kernel.asm	/^f01067b5:	eb ac                	jmp    f0106763 <readline+0x33>$/;"	l
f01067b7	obj/kern/kernel.asm	/^f01067b7:	81 fe fe 03 00 00    	cmp    $0x3fe,%esi$/;"	l
f01067bd	obj/kern/kernel.asm	/^f01067bd:	7f 1c                	jg     f01067db <readline+0xab>$/;"	l
f01067bf	obj/kern/kernel.asm	/^f01067bf:	83 fb 1f             	cmp    $0x1f,%ebx$/;"	l
f01067c2	obj/kern/kernel.asm	/^f01067c2:	7e 17                	jle    f01067db <readline+0xab>$/;"	l
f01067c4	obj/kern/kernel.asm	/^f01067c4:	85 ff                	test   %edi,%edi$/;"	l
f01067c6	obj/kern/kernel.asm	/^f01067c6:	74 08                	je     f01067d0 <readline+0xa0>$/;"	l
f01067c8	obj/kern/kernel.asm	/^f01067c8:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f01067cb	obj/kern/kernel.asm	/^f01067cb:	e8 e7 9f ff ff       	call   f01007b7 <cputchar>$/;"	l
f01067d0	obj/kern/kernel.asm	/^f01067d0:	88 9e 80 da 20 f0    	mov    %bl,-0xfdf2580(%esi)$/;"	l
f01067d6	obj/kern/kernel.asm	/^f01067d6:	8d 76 01             	lea    0x1(%esi),%esi$/;"	l
f01067d9	obj/kern/kernel.asm	/^f01067d9:	eb 88                	jmp    f0106763 <readline+0x33>$/;"	l
f01067db	obj/kern/kernel.asm	/^f01067db:	83 fb 0d             	cmp    $0xd,%ebx$/;"	l
f01067de	obj/kern/kernel.asm	/^f01067de:	74 09                	je     f01067e9 <readline+0xb9>$/;"	l
f01067e0	obj/kern/kernel.asm	/^f01067e0:	83 fb 0a             	cmp    $0xa,%ebx$/;"	l
f01067e3	obj/kern/kernel.asm	/^f01067e3:	0f 85 7a ff ff ff    	jne    f0106763 <readline+0x33>$/;"	l
f01067e9	obj/kern/kernel.asm	/^f01067e9:	85 ff                	test   %edi,%edi$/;"	l
f01067eb	obj/kern/kernel.asm	/^f01067eb:	74 0c                	je     f01067f9 <readline+0xc9>$/;"	l
f01067ed	obj/kern/kernel.asm	/^f01067ed:	c7 04 24 0a 00 00 00 	movl   $0xa,(%esp)$/;"	l
f01067f4	obj/kern/kernel.asm	/^f01067f4:	e8 be 9f ff ff       	call   f01007b7 <cputchar>$/;"	l
f01067f9	obj/kern/kernel.asm	/^f01067f9:	c6 86 80 da 20 f0 00 	movb   $0x0,-0xfdf2580(%esi)$/;"	l
f0106800	obj/kern/kernel.asm	/^f0106800:	b8 80 da 20 f0       	mov    $0xf020da80,%eax$/;"	l
f0106805	obj/kern/kernel.asm	/^f0106805:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0106808	obj/kern/kernel.asm	/^f0106808:	5b                   	pop    %ebx$/;"	l
f0106809	obj/kern/kernel.asm	/^f0106809:	5e                   	pop    %esi$/;"	l
f010680a	obj/kern/kernel.asm	/^f010680a:	5f                   	pop    %edi$/;"	l
f010680b	obj/kern/kernel.asm	/^f010680b:	5d                   	pop    %ebp$/;"	l
f010680c	obj/kern/kernel.asm	/^f010680c:	c3                   	ret    $/;"	l
f010680d	obj/kern/kernel.asm	/^f010680d:	66 90                	xchg   %ax,%ax$/;"	l
f010680f	obj/kern/kernel.asm	/^f010680f:	90                   	nop$/;"	l
f0106810	obj/kern/kernel.asm	/^f0106810 <strlen>:$/;"	l
f0106810	obj/kern/kernel.asm	/^f0106810:	55                   	push   %ebp$/;"	l
f0106811	obj/kern/kernel.asm	/^f0106811:	89 e5                	mov    %esp,%ebp$/;"	l
f0106813	obj/kern/kernel.asm	/^f0106813:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0106816	obj/kern/kernel.asm	/^f0106816:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010681b	obj/kern/kernel.asm	/^f010681b:	eb 03                	jmp    f0106820 <strlen+0x10>$/;"	l
f010681d	obj/kern/kernel.asm	/^f010681d:	83 c0 01             	add    $0x1,%eax$/;"	l
f0106820	obj/kern/kernel.asm	/^f0106820:	80 3c 02 00          	cmpb   $0x0,(%edx,%eax,1)$/;"	l
f0106824	obj/kern/kernel.asm	/^f0106824:	75 f7                	jne    f010681d <strlen+0xd>$/;"	l
f0106826	obj/kern/kernel.asm	/^f0106826:	5d                   	pop    %ebp$/;"	l
f0106827	obj/kern/kernel.asm	/^f0106827:	c3                   	ret    $/;"	l
f0106828	obj/kern/kernel.asm	/^f0106828 <strnlen>:$/;"	l
f0106828	obj/kern/kernel.asm	/^f0106828:	55                   	push   %ebp$/;"	l
f0106829	obj/kern/kernel.asm	/^f0106829:	89 e5                	mov    %esp,%ebp$/;"	l
f010682b	obj/kern/kernel.asm	/^f010682b:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
f010682e	obj/kern/kernel.asm	/^f010682e:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0106831	obj/kern/kernel.asm	/^f0106831:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0106836	obj/kern/kernel.asm	/^f0106836:	eb 03                	jmp    f010683b <strnlen+0x13>$/;"	l
f0106838	obj/kern/kernel.asm	/^f0106838:	83 c0 01             	add    $0x1,%eax$/;"	l
f010683b	obj/kern/kernel.asm	/^f010683b:	39 d0                	cmp    %edx,%eax$/;"	l
f010683d	obj/kern/kernel.asm	/^f010683d:	74 06                	je     f0106845 <strnlen+0x1d>$/;"	l
f010683f	obj/kern/kernel.asm	/^f010683f:	80 3c 01 00          	cmpb   $0x0,(%ecx,%eax,1)$/;"	l
f0106843	obj/kern/kernel.asm	/^f0106843:	75 f3                	jne    f0106838 <strnlen+0x10>$/;"	l
f0106845	obj/kern/kernel.asm	/^f0106845:	5d                   	pop    %ebp$/;"	l
f0106846	obj/kern/kernel.asm	/^f0106846:	c3                   	ret    $/;"	l
f0106847	obj/kern/kernel.asm	/^f0106847 <strcpy>:$/;"	l
f0106847	obj/kern/kernel.asm	/^f0106847:	55                   	push   %ebp$/;"	l
f0106848	obj/kern/kernel.asm	/^f0106848:	89 e5                	mov    %esp,%ebp$/;"	l
f010684a	obj/kern/kernel.asm	/^f010684a:	53                   	push   %ebx$/;"	l
f010684b	obj/kern/kernel.asm	/^f010684b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010684e	obj/kern/kernel.asm	/^f010684e:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f0106851	obj/kern/kernel.asm	/^f0106851:	89 c2                	mov    %eax,%edx$/;"	l
f0106853	obj/kern/kernel.asm	/^f0106853:	83 c2 01             	add    $0x1,%edx$/;"	l
f0106856	obj/kern/kernel.asm	/^f0106856:	83 c1 01             	add    $0x1,%ecx$/;"	l
f0106859	obj/kern/kernel.asm	/^f0106859:	0f b6 59 ff          	movzbl -0x1(%ecx),%ebx$/;"	l
f010685d	obj/kern/kernel.asm	/^f010685d:	88 5a ff             	mov    %bl,-0x1(%edx)$/;"	l
f0106860	obj/kern/kernel.asm	/^f0106860:	84 db                	test   %bl,%bl$/;"	l
f0106862	obj/kern/kernel.asm	/^f0106862:	75 ef                	jne    f0106853 <strcpy+0xc>$/;"	l
f0106864	obj/kern/kernel.asm	/^f0106864:	5b                   	pop    %ebx$/;"	l
f0106865	obj/kern/kernel.asm	/^f0106865:	5d                   	pop    %ebp$/;"	l
f0106866	obj/kern/kernel.asm	/^f0106866:	c3                   	ret    $/;"	l
f0106867	obj/kern/kernel.asm	/^f0106867 <strcat>:$/;"	l
f0106867	obj/kern/kernel.asm	/^f0106867:	55                   	push   %ebp$/;"	l
f0106868	obj/kern/kernel.asm	/^f0106868:	89 e5                	mov    %esp,%ebp$/;"	l
f010686a	obj/kern/kernel.asm	/^f010686a:	53                   	push   %ebx$/;"	l
f010686b	obj/kern/kernel.asm	/^f010686b:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010686e	obj/kern/kernel.asm	/^f010686e:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0106871	obj/kern/kernel.asm	/^f0106871:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0106874	obj/kern/kernel.asm	/^f0106874:	e8 97 ff ff ff       	call   f0106810 <strlen>$/;"	l
f0106879	obj/kern/kernel.asm	/^f0106879:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f010687c	obj/kern/kernel.asm	/^f010687c:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f0106880	obj/kern/kernel.asm	/^f0106880:	01 d8                	add    %ebx,%eax$/;"	l
f0106882	obj/kern/kernel.asm	/^f0106882:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0106885	obj/kern/kernel.asm	/^f0106885:	e8 bd ff ff ff       	call   f0106847 <strcpy>$/;"	l
f010688a	obj/kern/kernel.asm	/^f010688a:	89 d8                	mov    %ebx,%eax$/;"	l
f010688c	obj/kern/kernel.asm	/^f010688c:	83 c4 08             	add    $0x8,%esp$/;"	l
f010688f	obj/kern/kernel.asm	/^f010688f:	5b                   	pop    %ebx$/;"	l
f0106890	obj/kern/kernel.asm	/^f0106890:	5d                   	pop    %ebp$/;"	l
f0106891	obj/kern/kernel.asm	/^f0106891:	c3                   	ret    $/;"	l
f0106892	obj/kern/kernel.asm	/^f0106892 <strncpy>:$/;"	l
f0106892	obj/kern/kernel.asm	/^f0106892:	55                   	push   %ebp$/;"	l
f0106893	obj/kern/kernel.asm	/^f0106893:	89 e5                	mov    %esp,%ebp$/;"	l
f0106895	obj/kern/kernel.asm	/^f0106895:	56                   	push   %esi$/;"	l
f0106896	obj/kern/kernel.asm	/^f0106896:	53                   	push   %ebx$/;"	l
f0106897	obj/kern/kernel.asm	/^f0106897:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f010689a	obj/kern/kernel.asm	/^f010689a:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f010689d	obj/kern/kernel.asm	/^f010689d:	89 f3                	mov    %esi,%ebx$/;"	l
f010689f	obj/kern/kernel.asm	/^f010689f:	03 5d 10             	add    0x10(%ebp),%ebx$/;"	l
f01068a2	obj/kern/kernel.asm	/^f01068a2:	89 f2                	mov    %esi,%edx$/;"	l
f01068a4	obj/kern/kernel.asm	/^f01068a4:	eb 0f                	jmp    f01068b5 <strncpy+0x23>$/;"	l
f01068a6	obj/kern/kernel.asm	/^f01068a6:	83 c2 01             	add    $0x1,%edx$/;"	l
f01068a9	obj/kern/kernel.asm	/^f01068a9:	0f b6 01             	movzbl (%ecx),%eax$/;"	l
f01068ac	obj/kern/kernel.asm	/^f01068ac:	88 42 ff             	mov    %al,-0x1(%edx)$/;"	l
f01068af	obj/kern/kernel.asm	/^f01068af:	80 39 01             	cmpb   $0x1,(%ecx)$/;"	l
f01068b2	obj/kern/kernel.asm	/^f01068b2:	83 d9 ff             	sbb    $0xffffffff,%ecx$/;"	l
f01068b5	obj/kern/kernel.asm	/^f01068b5:	39 da                	cmp    %ebx,%edx$/;"	l
f01068b7	obj/kern/kernel.asm	/^f01068b7:	75 ed                	jne    f01068a6 <strncpy+0x14>$/;"	l
f01068b9	obj/kern/kernel.asm	/^f01068b9:	89 f0                	mov    %esi,%eax$/;"	l
f01068bb	obj/kern/kernel.asm	/^f01068bb:	5b                   	pop    %ebx$/;"	l
f01068bc	obj/kern/kernel.asm	/^f01068bc:	5e                   	pop    %esi$/;"	l
f01068bd	obj/kern/kernel.asm	/^f01068bd:	5d                   	pop    %ebp$/;"	l
f01068be	obj/kern/kernel.asm	/^f01068be:	c3                   	ret    $/;"	l
f01068bf	obj/kern/kernel.asm	/^f01068bf <strlcpy>:$/;"	l
f01068bf	obj/kern/kernel.asm	/^f01068bf:	55                   	push   %ebp$/;"	l
f01068c0	obj/kern/kernel.asm	/^f01068c0:	89 e5                	mov    %esp,%ebp$/;"	l
f01068c2	obj/kern/kernel.asm	/^f01068c2:	56                   	push   %esi$/;"	l
f01068c3	obj/kern/kernel.asm	/^f01068c3:	53                   	push   %ebx$/;"	l
f01068c4	obj/kern/kernel.asm	/^f01068c4:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f01068c7	obj/kern/kernel.asm	/^f01068c7:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f01068ca	obj/kern/kernel.asm	/^f01068ca:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
f01068cd	obj/kern/kernel.asm	/^f01068cd:	89 f0                	mov    %esi,%eax$/;"	l
f01068cf	obj/kern/kernel.asm	/^f01068cf:	8d 5c 0e ff          	lea    -0x1(%esi,%ecx,1),%ebx$/;"	l
f01068d3	obj/kern/kernel.asm	/^f01068d3:	85 c9                	test   %ecx,%ecx$/;"	l
f01068d5	obj/kern/kernel.asm	/^f01068d5:	75 0b                	jne    f01068e2 <strlcpy+0x23>$/;"	l
f01068d7	obj/kern/kernel.asm	/^f01068d7:	eb 1d                	jmp    f01068f6 <strlcpy+0x37>$/;"	l
f01068d9	obj/kern/kernel.asm	/^f01068d9:	83 c0 01             	add    $0x1,%eax$/;"	l
f01068dc	obj/kern/kernel.asm	/^f01068dc:	83 c2 01             	add    $0x1,%edx$/;"	l
f01068df	obj/kern/kernel.asm	/^f01068df:	88 48 ff             	mov    %cl,-0x1(%eax)$/;"	l
f01068e2	obj/kern/kernel.asm	/^f01068e2:	39 d8                	cmp    %ebx,%eax$/;"	l
f01068e4	obj/kern/kernel.asm	/^f01068e4:	74 0b                	je     f01068f1 <strlcpy+0x32>$/;"	l
f01068e6	obj/kern/kernel.asm	/^f01068e6:	0f b6 0a             	movzbl (%edx),%ecx$/;"	l
f01068e9	obj/kern/kernel.asm	/^f01068e9:	84 c9                	test   %cl,%cl$/;"	l
f01068eb	obj/kern/kernel.asm	/^f01068eb:	75 ec                	jne    f01068d9 <strlcpy+0x1a>$/;"	l
f01068ed	obj/kern/kernel.asm	/^f01068ed:	89 c2                	mov    %eax,%edx$/;"	l
f01068ef	obj/kern/kernel.asm	/^f01068ef:	eb 02                	jmp    f01068f3 <strlcpy+0x34>$/;"	l
f01068f1	obj/kern/kernel.asm	/^f01068f1:	89 c2                	mov    %eax,%edx$/;"	l
f01068f3	obj/kern/kernel.asm	/^f01068f3:	c6 02 00             	movb   $0x0,(%edx)$/;"	l
f01068f6	obj/kern/kernel.asm	/^f01068f6:	29 f0                	sub    %esi,%eax$/;"	l
f01068f8	obj/kern/kernel.asm	/^f01068f8:	5b                   	pop    %ebx$/;"	l
f01068f9	obj/kern/kernel.asm	/^f01068f9:	5e                   	pop    %esi$/;"	l
f01068fa	obj/kern/kernel.asm	/^f01068fa:	5d                   	pop    %ebp$/;"	l
f01068fb	obj/kern/kernel.asm	/^f01068fb:	c3                   	ret    $/;"	l
f01068fc	obj/kern/kernel.asm	/^f01068fc <strcmp>:$/;"	l
f01068fc	obj/kern/kernel.asm	/^f01068fc:	55                   	push   %ebp$/;"	l
f01068fd	obj/kern/kernel.asm	/^f01068fd:	89 e5                	mov    %esp,%ebp$/;"	l
f01068ff	obj/kern/kernel.asm	/^f01068ff:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
f0106902	obj/kern/kernel.asm	/^f0106902:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0106905	obj/kern/kernel.asm	/^f0106905:	eb 06                	jmp    f010690d <strcmp+0x11>$/;"	l
f0106907	obj/kern/kernel.asm	/^f0106907:	83 c1 01             	add    $0x1,%ecx$/;"	l
f010690a	obj/kern/kernel.asm	/^f010690a:	83 c2 01             	add    $0x1,%edx$/;"	l
f010690d	obj/kern/kernel.asm	/^f010690d:	0f b6 01             	movzbl (%ecx),%eax$/;"	l
f0106910	obj/kern/kernel.asm	/^f0106910:	84 c0                	test   %al,%al$/;"	l
f0106912	obj/kern/kernel.asm	/^f0106912:	74 04                	je     f0106918 <strcmp+0x1c>$/;"	l
f0106914	obj/kern/kernel.asm	/^f0106914:	3a 02                	cmp    (%edx),%al$/;"	l
f0106916	obj/kern/kernel.asm	/^f0106916:	74 ef                	je     f0106907 <strcmp+0xb>$/;"	l
f0106918	obj/kern/kernel.asm	/^f0106918:	0f b6 c0             	movzbl %al,%eax$/;"	l
f010691b	obj/kern/kernel.asm	/^f010691b:	0f b6 12             	movzbl (%edx),%edx$/;"	l
f010691e	obj/kern/kernel.asm	/^f010691e:	29 d0                	sub    %edx,%eax$/;"	l
f0106920	obj/kern/kernel.asm	/^f0106920:	5d                   	pop    %ebp$/;"	l
f0106921	obj/kern/kernel.asm	/^f0106921:	c3                   	ret    $/;"	l
f0106922	obj/kern/kernel.asm	/^f0106922 <strncmp>:$/;"	l
f0106922	obj/kern/kernel.asm	/^f0106922:	55                   	push   %ebp$/;"	l
f0106923	obj/kern/kernel.asm	/^f0106923:	89 e5                	mov    %esp,%ebp$/;"	l
f0106925	obj/kern/kernel.asm	/^f0106925:	53                   	push   %ebx$/;"	l
f0106926	obj/kern/kernel.asm	/^f0106926:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0106929	obj/kern/kernel.asm	/^f0106929:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f010692c	obj/kern/kernel.asm	/^f010692c:	89 c3                	mov    %eax,%ebx$/;"	l
f010692e	obj/kern/kernel.asm	/^f010692e:	03 5d 10             	add    0x10(%ebp),%ebx$/;"	l
f0106931	obj/kern/kernel.asm	/^f0106931:	eb 06                	jmp    f0106939 <strncmp+0x17>$/;"	l
f0106933	obj/kern/kernel.asm	/^f0106933:	83 c0 01             	add    $0x1,%eax$/;"	l
f0106936	obj/kern/kernel.asm	/^f0106936:	83 c2 01             	add    $0x1,%edx$/;"	l
f0106939	obj/kern/kernel.asm	/^f0106939:	39 d8                	cmp    %ebx,%eax$/;"	l
f010693b	obj/kern/kernel.asm	/^f010693b:	74 15                	je     f0106952 <strncmp+0x30>$/;"	l
f010693d	obj/kern/kernel.asm	/^f010693d:	0f b6 08             	movzbl (%eax),%ecx$/;"	l
f0106940	obj/kern/kernel.asm	/^f0106940:	84 c9                	test   %cl,%cl$/;"	l
f0106942	obj/kern/kernel.asm	/^f0106942:	74 04                	je     f0106948 <strncmp+0x26>$/;"	l
f0106944	obj/kern/kernel.asm	/^f0106944:	3a 0a                	cmp    (%edx),%cl$/;"	l
f0106946	obj/kern/kernel.asm	/^f0106946:	74 eb                	je     f0106933 <strncmp+0x11>$/;"	l
f0106948	obj/kern/kernel.asm	/^f0106948:	0f b6 00             	movzbl (%eax),%eax$/;"	l
f010694b	obj/kern/kernel.asm	/^f010694b:	0f b6 12             	movzbl (%edx),%edx$/;"	l
f010694e	obj/kern/kernel.asm	/^f010694e:	29 d0                	sub    %edx,%eax$/;"	l
f0106950	obj/kern/kernel.asm	/^f0106950:	eb 05                	jmp    f0106957 <strncmp+0x35>$/;"	l
f0106952	obj/kern/kernel.asm	/^f0106952:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0106957	obj/kern/kernel.asm	/^f0106957:	5b                   	pop    %ebx$/;"	l
f0106958	obj/kern/kernel.asm	/^f0106958:	5d                   	pop    %ebp$/;"	l
f0106959	obj/kern/kernel.asm	/^f0106959:	c3                   	ret    $/;"	l
f010695a	obj/kern/kernel.asm	/^f010695a <strchr>:$/;"	l
f010695a	obj/kern/kernel.asm	/^f010695a:	55                   	push   %ebp$/;"	l
f010695b	obj/kern/kernel.asm	/^f010695b:	89 e5                	mov    %esp,%ebp$/;"	l
f010695d	obj/kern/kernel.asm	/^f010695d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0106960	obj/kern/kernel.asm	/^f0106960:	0f b6 4d 0c          	movzbl 0xc(%ebp),%ecx$/;"	l
f0106964	obj/kern/kernel.asm	/^f0106964:	eb 07                	jmp    f010696d <strchr+0x13>$/;"	l
f0106966	obj/kern/kernel.asm	/^f0106966:	38 ca                	cmp    %cl,%dl$/;"	l
f0106968	obj/kern/kernel.asm	/^f0106968:	74 0f                	je     f0106979 <strchr+0x1f>$/;"	l
f010696a	obj/kern/kernel.asm	/^f010696a:	83 c0 01             	add    $0x1,%eax$/;"	l
f010696d	obj/kern/kernel.asm	/^f010696d:	0f b6 10             	movzbl (%eax),%edx$/;"	l
f0106970	obj/kern/kernel.asm	/^f0106970:	84 d2                	test   %dl,%dl$/;"	l
f0106972	obj/kern/kernel.asm	/^f0106972:	75 f2                	jne    f0106966 <strchr+0xc>$/;"	l
f0106974	obj/kern/kernel.asm	/^f0106974:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0106979	obj/kern/kernel.asm	/^f0106979:	5d                   	pop    %ebp$/;"	l
f010697a	obj/kern/kernel.asm	/^f010697a:	c3                   	ret    $/;"	l
f010697b	obj/kern/kernel.asm	/^f010697b <strfind>:$/;"	l
f010697b	obj/kern/kernel.asm	/^f010697b:	55                   	push   %ebp$/;"	l
f010697c	obj/kern/kernel.asm	/^f010697c:	89 e5                	mov    %esp,%ebp$/;"	l
f010697e	obj/kern/kernel.asm	/^f010697e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0106981	obj/kern/kernel.asm	/^f0106981:	0f b6 4d 0c          	movzbl 0xc(%ebp),%ecx$/;"	l
f0106985	obj/kern/kernel.asm	/^f0106985:	eb 07                	jmp    f010698e <strfind+0x13>$/;"	l
f0106987	obj/kern/kernel.asm	/^f0106987:	38 ca                	cmp    %cl,%dl$/;"	l
f0106989	obj/kern/kernel.asm	/^f0106989:	74 0a                	je     f0106995 <strfind+0x1a>$/;"	l
f010698b	obj/kern/kernel.asm	/^f010698b:	83 c0 01             	add    $0x1,%eax$/;"	l
f010698e	obj/kern/kernel.asm	/^f010698e:	0f b6 10             	movzbl (%eax),%edx$/;"	l
f0106991	obj/kern/kernel.asm	/^f0106991:	84 d2                	test   %dl,%dl$/;"	l
f0106993	obj/kern/kernel.asm	/^f0106993:	75 f2                	jne    f0106987 <strfind+0xc>$/;"	l
f0106995	obj/kern/kernel.asm	/^f0106995:	5d                   	pop    %ebp$/;"	l
f0106996	obj/kern/kernel.asm	/^f0106996:	c3                   	ret    $/;"	l
f0106997	obj/kern/kernel.asm	/^f0106997 <memset>:$/;"	l
f0106997	obj/kern/kernel.asm	/^f0106997:	55                   	push   %ebp$/;"	l
f0106998	obj/kern/kernel.asm	/^f0106998:	89 e5                	mov    %esp,%ebp$/;"	l
f010699a	obj/kern/kernel.asm	/^f010699a:	57                   	push   %edi$/;"	l
f010699b	obj/kern/kernel.asm	/^f010699b:	56                   	push   %esi$/;"	l
f010699c	obj/kern/kernel.asm	/^f010699c:	53                   	push   %ebx$/;"	l
f010699d	obj/kern/kernel.asm	/^f010699d:	8b 7d 08             	mov    0x8(%ebp),%edi$/;"	l
f01069a0	obj/kern/kernel.asm	/^f01069a0:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
f01069a3	obj/kern/kernel.asm	/^f01069a3:	85 c9                	test   %ecx,%ecx$/;"	l
f01069a5	obj/kern/kernel.asm	/^f01069a5:	74 36                	je     f01069dd <memset+0x46>$/;"	l
f01069a7	obj/kern/kernel.asm	/^f01069a7:	f7 c7 03 00 00 00    	test   $0x3,%edi$/;"	l
f01069ad	obj/kern/kernel.asm	/^f01069ad:	75 28                	jne    f01069d7 <memset+0x40>$/;"	l
f01069af	obj/kern/kernel.asm	/^f01069af:	f6 c1 03             	test   $0x3,%cl$/;"	l
f01069b2	obj/kern/kernel.asm	/^f01069b2:	75 23                	jne    f01069d7 <memset+0x40>$/;"	l
f01069b4	obj/kern/kernel.asm	/^f01069b4:	0f b6 55 0c          	movzbl 0xc(%ebp),%edx$/;"	l
f01069b8	obj/kern/kernel.asm	/^f01069b8:	89 d3                	mov    %edx,%ebx$/;"	l
f01069ba	obj/kern/kernel.asm	/^f01069ba:	c1 e3 08             	shl    $0x8,%ebx$/;"	l
f01069bd	obj/kern/kernel.asm	/^f01069bd:	89 d6                	mov    %edx,%esi$/;"	l
f01069bf	obj/kern/kernel.asm	/^f01069bf:	c1 e6 18             	shl    $0x18,%esi$/;"	l
f01069c2	obj/kern/kernel.asm	/^f01069c2:	89 d0                	mov    %edx,%eax$/;"	l
f01069c4	obj/kern/kernel.asm	/^f01069c4:	c1 e0 10             	shl    $0x10,%eax$/;"	l
f01069c7	obj/kern/kernel.asm	/^f01069c7:	09 f0                	or     %esi,%eax$/;"	l
f01069c9	obj/kern/kernel.asm	/^f01069c9:	09 c2                	or     %eax,%edx$/;"	l
f01069cb	obj/kern/kernel.asm	/^f01069cb:	89 d0                	mov    %edx,%eax$/;"	l
f01069cd	obj/kern/kernel.asm	/^f01069cd:	09 d8                	or     %ebx,%eax$/;"	l
f01069cf	obj/kern/kernel.asm	/^f01069cf:	c1 e9 02             	shr    $0x2,%ecx$/;"	l
f01069d2	obj/kern/kernel.asm	/^f01069d2:	fc                   	cld    $/;"	l
f01069d3	obj/kern/kernel.asm	/^f01069d3:	f3 ab                	rep stos %eax,%es:(%edi)$/;"	l
f01069d5	obj/kern/kernel.asm	/^f01069d5:	eb 06                	jmp    f01069dd <memset+0x46>$/;"	l
f01069d7	obj/kern/kernel.asm	/^f01069d7:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01069da	obj/kern/kernel.asm	/^f01069da:	fc                   	cld    $/;"	l
f01069db	obj/kern/kernel.asm	/^f01069db:	f3 aa                	rep stos %al,%es:(%edi)$/;"	l
f01069dd	obj/kern/kernel.asm	/^f01069dd:	89 f8                	mov    %edi,%eax$/;"	l
f01069df	obj/kern/kernel.asm	/^f01069df:	5b                   	pop    %ebx$/;"	l
f01069e0	obj/kern/kernel.asm	/^f01069e0:	5e                   	pop    %esi$/;"	l
f01069e1	obj/kern/kernel.asm	/^f01069e1:	5f                   	pop    %edi$/;"	l
f01069e2	obj/kern/kernel.asm	/^f01069e2:	5d                   	pop    %ebp$/;"	l
f01069e3	obj/kern/kernel.asm	/^f01069e3:	c3                   	ret    $/;"	l
f01069e4	obj/kern/kernel.asm	/^f01069e4 <memmove>:$/;"	l
f01069e4	obj/kern/kernel.asm	/^f01069e4:	55                   	push   %ebp$/;"	l
f01069e5	obj/kern/kernel.asm	/^f01069e5:	89 e5                	mov    %esp,%ebp$/;"	l
f01069e7	obj/kern/kernel.asm	/^f01069e7:	57                   	push   %edi$/;"	l
f01069e8	obj/kern/kernel.asm	/^f01069e8:	56                   	push   %esi$/;"	l
f01069e9	obj/kern/kernel.asm	/^f01069e9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01069ec	obj/kern/kernel.asm	/^f01069ec:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f01069ef	obj/kern/kernel.asm	/^f01069ef:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
f01069f2	obj/kern/kernel.asm	/^f01069f2:	39 c6                	cmp    %eax,%esi$/;"	l
f01069f4	obj/kern/kernel.asm	/^f01069f4:	73 35                	jae    f0106a2b <memmove+0x47>$/;"	l
f01069f6	obj/kern/kernel.asm	/^f01069f6:	8d 14 0e             	lea    (%esi,%ecx,1),%edx$/;"	l
f01069f9	obj/kern/kernel.asm	/^f01069f9:	39 d0                	cmp    %edx,%eax$/;"	l
f01069fb	obj/kern/kernel.asm	/^f01069fb:	73 2e                	jae    f0106a2b <memmove+0x47>$/;"	l
f01069fd	obj/kern/kernel.asm	/^f01069fd:	8d 3c 08             	lea    (%eax,%ecx,1),%edi$/;"	l
f0106a00	obj/kern/kernel.asm	/^f0106a00:	89 d6                	mov    %edx,%esi$/;"	l
f0106a02	obj/kern/kernel.asm	/^f0106a02:	09 fe                	or     %edi,%esi$/;"	l
f0106a04	obj/kern/kernel.asm	/^f0106a04:	f7 c6 03 00 00 00    	test   $0x3,%esi$/;"	l
f0106a0a	obj/kern/kernel.asm	/^f0106a0a:	75 13                	jne    f0106a1f <memmove+0x3b>$/;"	l
f0106a0c	obj/kern/kernel.asm	/^f0106a0c:	f6 c1 03             	test   $0x3,%cl$/;"	l
f0106a0f	obj/kern/kernel.asm	/^f0106a0f:	75 0e                	jne    f0106a1f <memmove+0x3b>$/;"	l
f0106a11	obj/kern/kernel.asm	/^f0106a11:	83 ef 04             	sub    $0x4,%edi$/;"	l
f0106a14	obj/kern/kernel.asm	/^f0106a14:	8d 72 fc             	lea    -0x4(%edx),%esi$/;"	l
f0106a17	obj/kern/kernel.asm	/^f0106a17:	c1 e9 02             	shr    $0x2,%ecx$/;"	l
f0106a1a	obj/kern/kernel.asm	/^f0106a1a:	fd                   	std    $/;"	l
f0106a1b	obj/kern/kernel.asm	/^f0106a1b:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f0106a1d	obj/kern/kernel.asm	/^f0106a1d:	eb 09                	jmp    f0106a28 <memmove+0x44>$/;"	l
f0106a1f	obj/kern/kernel.asm	/^f0106a1f:	83 ef 01             	sub    $0x1,%edi$/;"	l
f0106a22	obj/kern/kernel.asm	/^f0106a22:	8d 72 ff             	lea    -0x1(%edx),%esi$/;"	l
f0106a25	obj/kern/kernel.asm	/^f0106a25:	fd                   	std    $/;"	l
f0106a26	obj/kern/kernel.asm	/^f0106a26:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)$/;"	l
f0106a28	obj/kern/kernel.asm	/^f0106a28:	fc                   	cld    $/;"	l
f0106a29	obj/kern/kernel.asm	/^f0106a29:	eb 1d                	jmp    f0106a48 <memmove+0x64>$/;"	l
f0106a2b	obj/kern/kernel.asm	/^f0106a2b:	89 f2                	mov    %esi,%edx$/;"	l
f0106a2d	obj/kern/kernel.asm	/^f0106a2d:	09 c2                	or     %eax,%edx$/;"	l
f0106a2f	obj/kern/kernel.asm	/^f0106a2f:	f6 c2 03             	test   $0x3,%dl$/;"	l
f0106a32	obj/kern/kernel.asm	/^f0106a32:	75 0f                	jne    f0106a43 <memmove+0x5f>$/;"	l
f0106a34	obj/kern/kernel.asm	/^f0106a34:	f6 c1 03             	test   $0x3,%cl$/;"	l
f0106a37	obj/kern/kernel.asm	/^f0106a37:	75 0a                	jne    f0106a43 <memmove+0x5f>$/;"	l
f0106a39	obj/kern/kernel.asm	/^f0106a39:	c1 e9 02             	shr    $0x2,%ecx$/;"	l
f0106a3c	obj/kern/kernel.asm	/^f0106a3c:	89 c7                	mov    %eax,%edi$/;"	l
f0106a3e	obj/kern/kernel.asm	/^f0106a3e:	fc                   	cld    $/;"	l
f0106a3f	obj/kern/kernel.asm	/^f0106a3f:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f0106a41	obj/kern/kernel.asm	/^f0106a41:	eb 05                	jmp    f0106a48 <memmove+0x64>$/;"	l
f0106a43	obj/kern/kernel.asm	/^f0106a43:	89 c7                	mov    %eax,%edi$/;"	l
f0106a45	obj/kern/kernel.asm	/^f0106a45:	fc                   	cld    $/;"	l
f0106a46	obj/kern/kernel.asm	/^f0106a46:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)$/;"	l
f0106a48	obj/kern/kernel.asm	/^f0106a48:	5e                   	pop    %esi$/;"	l
f0106a49	obj/kern/kernel.asm	/^f0106a49:	5f                   	pop    %edi$/;"	l
f0106a4a	obj/kern/kernel.asm	/^f0106a4a:	5d                   	pop    %ebp$/;"	l
f0106a4b	obj/kern/kernel.asm	/^f0106a4b:	c3                   	ret    $/;"	l
f0106a4c	obj/kern/kernel.asm	/^f0106a4c <memcpy>:$/;"	l
f0106a4c	obj/kern/kernel.asm	/^f0106a4c:	55                   	push   %ebp$/;"	l
f0106a4d	obj/kern/kernel.asm	/^f0106a4d:	89 e5                	mov    %esp,%ebp$/;"	l
f0106a4f	obj/kern/kernel.asm	/^f0106a4f:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0106a52	obj/kern/kernel.asm	/^f0106a52:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0106a55	obj/kern/kernel.asm	/^f0106a55:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0106a59	obj/kern/kernel.asm	/^f0106a59:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0106a5c	obj/kern/kernel.asm	/^f0106a5c:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0106a60	obj/kern/kernel.asm	/^f0106a60:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0106a63	obj/kern/kernel.asm	/^f0106a63:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0106a66	obj/kern/kernel.asm	/^f0106a66:	e8 79 ff ff ff       	call   f01069e4 <memmove>$/;"	l
f0106a6b	obj/kern/kernel.asm	/^f0106a6b:	c9                   	leave  $/;"	l
f0106a6c	obj/kern/kernel.asm	/^f0106a6c:	c3                   	ret    $/;"	l
f0106a6d	obj/kern/kernel.asm	/^f0106a6d <memcmp>:$/;"	l
f0106a6d	obj/kern/kernel.asm	/^f0106a6d:	55                   	push   %ebp$/;"	l
f0106a6e	obj/kern/kernel.asm	/^f0106a6e:	89 e5                	mov    %esp,%ebp$/;"	l
f0106a70	obj/kern/kernel.asm	/^f0106a70:	56                   	push   %esi$/;"	l
f0106a71	obj/kern/kernel.asm	/^f0106a71:	53                   	push   %ebx$/;"	l
f0106a72	obj/kern/kernel.asm	/^f0106a72:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0106a75	obj/kern/kernel.asm	/^f0106a75:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f0106a78	obj/kern/kernel.asm	/^f0106a78:	89 d6                	mov    %edx,%esi$/;"	l
f0106a7a	obj/kern/kernel.asm	/^f0106a7a:	03 75 10             	add    0x10(%ebp),%esi$/;"	l
f0106a7d	obj/kern/kernel.asm	/^f0106a7d:	eb 1a                	jmp    f0106a99 <memcmp+0x2c>$/;"	l
f0106a7f	obj/kern/kernel.asm	/^f0106a7f:	0f b6 02             	movzbl (%edx),%eax$/;"	l
f0106a82	obj/kern/kernel.asm	/^f0106a82:	0f b6 19             	movzbl (%ecx),%ebx$/;"	l
f0106a85	obj/kern/kernel.asm	/^f0106a85:	38 d8                	cmp    %bl,%al$/;"	l
f0106a87	obj/kern/kernel.asm	/^f0106a87:	74 0a                	je     f0106a93 <memcmp+0x26>$/;"	l
f0106a89	obj/kern/kernel.asm	/^f0106a89:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0106a8c	obj/kern/kernel.asm	/^f0106a8c:	0f b6 db             	movzbl %bl,%ebx$/;"	l
f0106a8f	obj/kern/kernel.asm	/^f0106a8f:	29 d8                	sub    %ebx,%eax$/;"	l
f0106a91	obj/kern/kernel.asm	/^f0106a91:	eb 0f                	jmp    f0106aa2 <memcmp+0x35>$/;"	l
f0106a93	obj/kern/kernel.asm	/^f0106a93:	83 c2 01             	add    $0x1,%edx$/;"	l
f0106a96	obj/kern/kernel.asm	/^f0106a96:	83 c1 01             	add    $0x1,%ecx$/;"	l
f0106a99	obj/kern/kernel.asm	/^f0106a99:	39 f2                	cmp    %esi,%edx$/;"	l
f0106a9b	obj/kern/kernel.asm	/^f0106a9b:	75 e2                	jne    f0106a7f <memcmp+0x12>$/;"	l
f0106a9d	obj/kern/kernel.asm	/^f0106a9d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0106aa2	obj/kern/kernel.asm	/^f0106aa2:	5b                   	pop    %ebx$/;"	l
f0106aa3	obj/kern/kernel.asm	/^f0106aa3:	5e                   	pop    %esi$/;"	l
f0106aa4	obj/kern/kernel.asm	/^f0106aa4:	5d                   	pop    %ebp$/;"	l
f0106aa5	obj/kern/kernel.asm	/^f0106aa5:	c3                   	ret    $/;"	l
f0106aa6	obj/kern/kernel.asm	/^f0106aa6 <memfind>:$/;"	l
f0106aa6	obj/kern/kernel.asm	/^f0106aa6:	55                   	push   %ebp$/;"	l
f0106aa7	obj/kern/kernel.asm	/^f0106aa7:	89 e5                	mov    %esp,%ebp$/;"	l
f0106aa9	obj/kern/kernel.asm	/^f0106aa9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0106aac	obj/kern/kernel.asm	/^f0106aac:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
f0106aaf	obj/kern/kernel.asm	/^f0106aaf:	89 c2                	mov    %eax,%edx$/;"	l
f0106ab1	obj/kern/kernel.asm	/^f0106ab1:	03 55 10             	add    0x10(%ebp),%edx$/;"	l
f0106ab4	obj/kern/kernel.asm	/^f0106ab4:	eb 07                	jmp    f0106abd <memfind+0x17>$/;"	l
f0106ab6	obj/kern/kernel.asm	/^f0106ab6:	38 08                	cmp    %cl,(%eax)$/;"	l
f0106ab8	obj/kern/kernel.asm	/^f0106ab8:	74 07                	je     f0106ac1 <memfind+0x1b>$/;"	l
f0106aba	obj/kern/kernel.asm	/^f0106aba:	83 c0 01             	add    $0x1,%eax$/;"	l
f0106abd	obj/kern/kernel.asm	/^f0106abd:	39 d0                	cmp    %edx,%eax$/;"	l
f0106abf	obj/kern/kernel.asm	/^f0106abf:	72 f5                	jb     f0106ab6 <memfind+0x10>$/;"	l
f0106ac1	obj/kern/kernel.asm	/^f0106ac1:	5d                   	pop    %ebp$/;"	l
f0106ac2	obj/kern/kernel.asm	/^f0106ac2:	c3                   	ret    $/;"	l
f0106ac3	obj/kern/kernel.asm	/^f0106ac3 <strtol>:$/;"	l
f0106ac3	obj/kern/kernel.asm	/^f0106ac3:	55                   	push   %ebp$/;"	l
f0106ac4	obj/kern/kernel.asm	/^f0106ac4:	89 e5                	mov    %esp,%ebp$/;"	l
f0106ac6	obj/kern/kernel.asm	/^f0106ac6:	57                   	push   %edi$/;"	l
f0106ac7	obj/kern/kernel.asm	/^f0106ac7:	56                   	push   %esi$/;"	l
f0106ac8	obj/kern/kernel.asm	/^f0106ac8:	53                   	push   %ebx$/;"	l
f0106ac9	obj/kern/kernel.asm	/^f0106ac9:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0106acc	obj/kern/kernel.asm	/^f0106acc:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0106acf	obj/kern/kernel.asm	/^f0106acf:	eb 03                	jmp    f0106ad4 <strtol+0x11>$/;"	l
f0106ad1	obj/kern/kernel.asm	/^f0106ad1:	83 c2 01             	add    $0x1,%edx$/;"	l
f0106ad4	obj/kern/kernel.asm	/^f0106ad4:	0f b6 0a             	movzbl (%edx),%ecx$/;"	l
f0106ad7	obj/kern/kernel.asm	/^f0106ad7:	80 f9 09             	cmp    $0x9,%cl$/;"	l
f0106ada	obj/kern/kernel.asm	/^f0106ada:	74 f5                	je     f0106ad1 <strtol+0xe>$/;"	l
f0106adc	obj/kern/kernel.asm	/^f0106adc:	80 f9 20             	cmp    $0x20,%cl$/;"	l
f0106adf	obj/kern/kernel.asm	/^f0106adf:	74 f0                	je     f0106ad1 <strtol+0xe>$/;"	l
f0106ae1	obj/kern/kernel.asm	/^f0106ae1:	80 f9 2b             	cmp    $0x2b,%cl$/;"	l
f0106ae4	obj/kern/kernel.asm	/^f0106ae4:	75 0a                	jne    f0106af0 <strtol+0x2d>$/;"	l
f0106ae6	obj/kern/kernel.asm	/^f0106ae6:	83 c2 01             	add    $0x1,%edx$/;"	l
f0106ae9	obj/kern/kernel.asm	/^f0106ae9:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f0106aee	obj/kern/kernel.asm	/^f0106aee:	eb 11                	jmp    f0106b01 <strtol+0x3e>$/;"	l
f0106af0	obj/kern/kernel.asm	/^f0106af0:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f0106af5	obj/kern/kernel.asm	/^f0106af5:	80 f9 2d             	cmp    $0x2d,%cl$/;"	l
f0106af8	obj/kern/kernel.asm	/^f0106af8:	75 07                	jne    f0106b01 <strtol+0x3e>$/;"	l
f0106afa	obj/kern/kernel.asm	/^f0106afa:	8d 52 01             	lea    0x1(%edx),%edx$/;"	l
f0106afd	obj/kern/kernel.asm	/^f0106afd:	66 bf 01 00          	mov    $0x1,%di$/;"	l
f0106b01	obj/kern/kernel.asm	/^f0106b01:	a9 ef ff ff ff       	test   $0xffffffef,%eax$/;"	l
f0106b06	obj/kern/kernel.asm	/^f0106b06:	75 15                	jne    f0106b1d <strtol+0x5a>$/;"	l
f0106b08	obj/kern/kernel.asm	/^f0106b08:	80 3a 30             	cmpb   $0x30,(%edx)$/;"	l
f0106b0b	obj/kern/kernel.asm	/^f0106b0b:	75 10                	jne    f0106b1d <strtol+0x5a>$/;"	l
f0106b0d	obj/kern/kernel.asm	/^f0106b0d:	80 7a 01 78          	cmpb   $0x78,0x1(%edx)$/;"	l
f0106b11	obj/kern/kernel.asm	/^f0106b11:	75 0a                	jne    f0106b1d <strtol+0x5a>$/;"	l
f0106b13	obj/kern/kernel.asm	/^f0106b13:	83 c2 02             	add    $0x2,%edx$/;"	l
f0106b16	obj/kern/kernel.asm	/^f0106b16:	b8 10 00 00 00       	mov    $0x10,%eax$/;"	l
f0106b1b	obj/kern/kernel.asm	/^f0106b1b:	eb 10                	jmp    f0106b2d <strtol+0x6a>$/;"	l
f0106b1d	obj/kern/kernel.asm	/^f0106b1d:	85 c0                	test   %eax,%eax$/;"	l
f0106b1f	obj/kern/kernel.asm	/^f0106b1f:	75 0c                	jne    f0106b2d <strtol+0x6a>$/;"	l
f0106b21	obj/kern/kernel.asm	/^f0106b21:	b0 0a                	mov    $0xa,%al$/;"	l
f0106b23	obj/kern/kernel.asm	/^f0106b23:	80 3a 30             	cmpb   $0x30,(%edx)$/;"	l
f0106b26	obj/kern/kernel.asm	/^f0106b26:	75 05                	jne    f0106b2d <strtol+0x6a>$/;"	l
f0106b28	obj/kern/kernel.asm	/^f0106b28:	83 c2 01             	add    $0x1,%edx$/;"	l
f0106b2b	obj/kern/kernel.asm	/^f0106b2b:	b0 08                	mov    $0x8,%al$/;"	l
f0106b2d	obj/kern/kernel.asm	/^f0106b2d:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0106b32	obj/kern/kernel.asm	/^f0106b32:	89 45 10             	mov    %eax,0x10(%ebp)$/;"	l
f0106b35	obj/kern/kernel.asm	/^f0106b35:	0f b6 0a             	movzbl (%edx),%ecx$/;"	l
f0106b38	obj/kern/kernel.asm	/^f0106b38:	8d 71 d0             	lea    -0x30(%ecx),%esi$/;"	l
f0106b3b	obj/kern/kernel.asm	/^f0106b3b:	89 f0                	mov    %esi,%eax$/;"	l
f0106b3d	obj/kern/kernel.asm	/^f0106b3d:	3c 09                	cmp    $0x9,%al$/;"	l
f0106b3f	obj/kern/kernel.asm	/^f0106b3f:	77 08                	ja     f0106b49 <strtol+0x86>$/;"	l
f0106b41	obj/kern/kernel.asm	/^f0106b41:	0f be c9             	movsbl %cl,%ecx$/;"	l
f0106b44	obj/kern/kernel.asm	/^f0106b44:	83 e9 30             	sub    $0x30,%ecx$/;"	l
f0106b47	obj/kern/kernel.asm	/^f0106b47:	eb 20                	jmp    f0106b69 <strtol+0xa6>$/;"	l
f0106b49	obj/kern/kernel.asm	/^f0106b49:	8d 71 9f             	lea    -0x61(%ecx),%esi$/;"	l
f0106b4c	obj/kern/kernel.asm	/^f0106b4c:	89 f0                	mov    %esi,%eax$/;"	l
f0106b4e	obj/kern/kernel.asm	/^f0106b4e:	3c 19                	cmp    $0x19,%al$/;"	l
f0106b50	obj/kern/kernel.asm	/^f0106b50:	77 08                	ja     f0106b5a <strtol+0x97>$/;"	l
f0106b52	obj/kern/kernel.asm	/^f0106b52:	0f be c9             	movsbl %cl,%ecx$/;"	l
f0106b55	obj/kern/kernel.asm	/^f0106b55:	83 e9 57             	sub    $0x57,%ecx$/;"	l
f0106b58	obj/kern/kernel.asm	/^f0106b58:	eb 0f                	jmp    f0106b69 <strtol+0xa6>$/;"	l
f0106b5a	obj/kern/kernel.asm	/^f0106b5a:	8d 71 bf             	lea    -0x41(%ecx),%esi$/;"	l
f0106b5d	obj/kern/kernel.asm	/^f0106b5d:	89 f0                	mov    %esi,%eax$/;"	l
f0106b5f	obj/kern/kernel.asm	/^f0106b5f:	3c 19                	cmp    $0x19,%al$/;"	l
f0106b61	obj/kern/kernel.asm	/^f0106b61:	77 16                	ja     f0106b79 <strtol+0xb6>$/;"	l
f0106b63	obj/kern/kernel.asm	/^f0106b63:	0f be c9             	movsbl %cl,%ecx$/;"	l
f0106b66	obj/kern/kernel.asm	/^f0106b66:	83 e9 37             	sub    $0x37,%ecx$/;"	l
f0106b69	obj/kern/kernel.asm	/^f0106b69:	3b 4d 10             	cmp    0x10(%ebp),%ecx$/;"	l
f0106b6c	obj/kern/kernel.asm	/^f0106b6c:	7d 0f                	jge    f0106b7d <strtol+0xba>$/;"	l
f0106b6e	obj/kern/kernel.asm	/^f0106b6e:	83 c2 01             	add    $0x1,%edx$/;"	l
f0106b71	obj/kern/kernel.asm	/^f0106b71:	0f af 5d 10          	imul   0x10(%ebp),%ebx$/;"	l
f0106b75	obj/kern/kernel.asm	/^f0106b75:	01 cb                	add    %ecx,%ebx$/;"	l
f0106b77	obj/kern/kernel.asm	/^f0106b77:	eb bc                	jmp    f0106b35 <strtol+0x72>$/;"	l
f0106b79	obj/kern/kernel.asm	/^f0106b79:	89 d8                	mov    %ebx,%eax$/;"	l
f0106b7b	obj/kern/kernel.asm	/^f0106b7b:	eb 02                	jmp    f0106b7f <strtol+0xbc>$/;"	l
f0106b7d	obj/kern/kernel.asm	/^f0106b7d:	89 d8                	mov    %ebx,%eax$/;"	l
f0106b7f	obj/kern/kernel.asm	/^f0106b7f:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
f0106b83	obj/kern/kernel.asm	/^f0106b83:	74 05                	je     f0106b8a <strtol+0xc7>$/;"	l
f0106b85	obj/kern/kernel.asm	/^f0106b85:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f0106b88	obj/kern/kernel.asm	/^f0106b88:	89 16                	mov    %edx,(%esi)$/;"	l
f0106b8a	obj/kern/kernel.asm	/^f0106b8a:	f7 d8                	neg    %eax$/;"	l
f0106b8c	obj/kern/kernel.asm	/^f0106b8c:	85 ff                	test   %edi,%edi$/;"	l
f0106b8e	obj/kern/kernel.asm	/^f0106b8e:	0f 44 c3             	cmove  %ebx,%eax$/;"	l
f0106b91	obj/kern/kernel.asm	/^f0106b91:	5b                   	pop    %ebx$/;"	l
f0106b92	obj/kern/kernel.asm	/^f0106b92:	5e                   	pop    %esi$/;"	l
f0106b93	obj/kern/kernel.asm	/^f0106b93:	5f                   	pop    %edi$/;"	l
f0106b94	obj/kern/kernel.asm	/^f0106b94:	5d                   	pop    %ebp$/;"	l
f0106b95	obj/kern/kernel.asm	/^f0106b95:	c3                   	ret    $/;"	l
f0106b96	obj/kern/kernel.asm	/^f0106b96:	66 90                	xchg   %ax,%ax$/;"	l
f0106b98	obj/kern/kernel.asm	/^f0106b98 <mpentry_start>:$/;"	l
f0106b98	obj/kern/kernel.asm	/^f0106b98:	fa                   	cli    $/;"	l
f0106b99	obj/kern/kernel.asm	/^f0106b99:	31 c0                	xor    %eax,%eax$/;"	l
f0106b9b	obj/kern/kernel.asm	/^f0106b9b:	8e d8                	mov    %eax,%ds$/;"	l
f0106b9d	obj/kern/kernel.asm	/^f0106b9d:	8e c0                	mov    %eax,%es$/;"	l
f0106b9f	obj/kern/kernel.asm	/^f0106b9f:	8e d0                	mov    %eax,%ss$/;"	l
f0106ba1	obj/kern/kernel.asm	/^f0106ba1:	0f 01 16             	lgdtl  (%esi)$/;"	l
f0106ba4	obj/kern/kernel.asm	/^f0106ba4:	74 70                	je     f0106c16 <mpentry_end+0x4>$/;"	l
f0106ba6	obj/kern/kernel.asm	/^f0106ba6:	0f 20 c0             	mov    %cr0,%eax$/;"	l
f0106ba9	obj/kern/kernel.asm	/^f0106ba9:	66 83 c8 01          	or     $0x1,%ax$/;"	l
f0106bad	obj/kern/kernel.asm	/^f0106bad:	0f 22 c0             	mov    %eax,%cr0$/;"	l
f0106bb0	obj/kern/kernel.asm	/^f0106bb0:	66 ea 20 70 00 00    	ljmpw  $0x0,$0x7020$/;"	l
f0106bb6	obj/kern/kernel.asm	/^f0106bb6:	08 00                	or     %al,(%eax)$/;"	l
f0106bb8	obj/kern/kernel.asm	/^f0106bb8 <start32>:$/;"	l
f0106bb8	obj/kern/kernel.asm	/^f0106bb8:	66 b8 10 00          	mov    $0x10,%ax$/;"	l
f0106bbc	obj/kern/kernel.asm	/^f0106bbc:	8e d8                	mov    %eax,%ds$/;"	l
f0106bbe	obj/kern/kernel.asm	/^f0106bbe:	8e c0                	mov    %eax,%es$/;"	l
f0106bc0	obj/kern/kernel.asm	/^f0106bc0:	8e d0                	mov    %eax,%ss$/;"	l
f0106bc2	obj/kern/kernel.asm	/^f0106bc2:	66 b8 00 00          	mov    $0x0,%ax$/;"	l
f0106bc6	obj/kern/kernel.asm	/^f0106bc6:	8e e0                	mov    %eax,%fs$/;"	l
f0106bc8	obj/kern/kernel.asm	/^f0106bc8:	8e e8                	mov    %eax,%gs$/;"	l
f0106bca	obj/kern/kernel.asm	/^f0106bca:	b8 00 10 12 00       	mov    $0x121000,%eax$/;"	l
f0106bcf	obj/kern/kernel.asm	/^f0106bcf:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f0106bd2	obj/kern/kernel.asm	/^f0106bd2:	0f 20 c0             	mov    %cr0,%eax$/;"	l
f0106bd5	obj/kern/kernel.asm	/^f0106bd5:	0d 01 00 01 80       	or     $0x80010001,%eax$/;"	l
f0106bda	obj/kern/kernel.asm	/^f0106bda:	0f 22 c0             	mov    %eax,%cr0$/;"	l
f0106bdd	obj/kern/kernel.asm	/^f0106bdd:	8b 25 84 de 20 f0    	mov    0xf020de84,%esp$/;"	l
f0106be3	obj/kern/kernel.asm	/^f0106be3:	bd 00 00 00 00       	mov    $0x0,%ebp$/;"	l
f0106be8	obj/kern/kernel.asm	/^f0106be8:	b8 fb 01 10 f0       	mov    $0xf01001fb,%eax$/;"	l
f0106bed	obj/kern/kernel.asm	/^f0106bed:	ff d0                	call   *%eax$/;"	l
f0106bef	obj/kern/kernel.asm	/^f0106bef <spin>:$/;"	l
f0106bef	obj/kern/kernel.asm	/^f0106bef:	eb fe                	jmp    f0106bef <spin>$/;"	l
f0106bf1	obj/kern/kernel.asm	/^f0106bf1:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
f0106bf4	obj/kern/kernel.asm	/^f0106bf4 <gdt>:$/;"	l
f0106bfc	obj/kern/kernel.asm	/^f0106bfc:	ff                   	(bad)  $/;"	l
f0106bfd	obj/kern/kernel.asm	/^f0106bfd:	ff 00                	incl   (%eax)$/;"	l
f0106bff	obj/kern/kernel.asm	/^f0106bff:	00 00                	add    %al,(%eax)$/;"	l
f0106c01	obj/kern/kernel.asm	/^f0106c01:	9a cf 00 ff ff 00 00 	lcall  $0x0,$0xffff00cf$/;"	l
f0106c08	obj/kern/kernel.asm	/^f0106c08:	00                   	.byte 0x0$/;"	l
f0106c09	obj/kern/kernel.asm	/^f0106c09:	92                   	xchg   %eax,%edx$/;"	l
f0106c0a	obj/kern/kernel.asm	/^f0106c0a:	cf                   	iret   $/;"	l
f0106c0c	obj/kern/kernel.asm	/^f0106c0c <gdtdesc>:$/;"	l
f0106c0c	obj/kern/kernel.asm	/^f0106c0c:	17                   	pop    %ss$/;"	l
f0106c0d	obj/kern/kernel.asm	/^f0106c0d:	00 5c 70 00          	add    %bl,0x0(%eax,%esi,2)$/;"	l
f0106c12	obj/kern/kernel.asm	/^f0106c12 <mpentry_end>:$/;"	l
f0106c12	obj/kern/kernel.asm	/^f0106c12:	90                   	nop$/;"	l
f0106c13	obj/kern/kernel.asm	/^f0106c13:	66 90                	xchg   %ax,%ax$/;"	l
f0106c15	obj/kern/kernel.asm	/^f0106c15:	66 90                	xchg   %ax,%ax$/;"	l
f0106c17	obj/kern/kernel.asm	/^f0106c17:	66 90                	xchg   %ax,%ax$/;"	l
f0106c19	obj/kern/kernel.asm	/^f0106c19:	66 90                	xchg   %ax,%ax$/;"	l
f0106c1b	obj/kern/kernel.asm	/^f0106c1b:	66 90                	xchg   %ax,%ax$/;"	l
f0106c1d	obj/kern/kernel.asm	/^f0106c1d:	66 90                	xchg   %ax,%ax$/;"	l
f0106c1f	obj/kern/kernel.asm	/^f0106c1f:	90                   	nop$/;"	l
f0106c20	obj/kern/kernel.asm	/^f0106c20 <mpsearch1>:$/;"	l
f0106c20	obj/kern/kernel.asm	/^f0106c20:	55                   	push   %ebp$/;"	l
f0106c21	obj/kern/kernel.asm	/^f0106c21:	89 e5                	mov    %esp,%ebp$/;"	l
f0106c23	obj/kern/kernel.asm	/^f0106c23:	56                   	push   %esi$/;"	l
f0106c24	obj/kern/kernel.asm	/^f0106c24:	53                   	push   %ebx$/;"	l
f0106c25	obj/kern/kernel.asm	/^f0106c25:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0106c28	obj/kern/kernel.asm	/^f0106c28:	8b 0d 88 de 20 f0    	mov    0xf020de88,%ecx$/;"	l
f0106c2e	obj/kern/kernel.asm	/^f0106c2e:	89 c3                	mov    %eax,%ebx$/;"	l
f0106c30	obj/kern/kernel.asm	/^f0106c30:	c1 eb 0c             	shr    $0xc,%ebx$/;"	l
f0106c33	obj/kern/kernel.asm	/^f0106c33:	39 cb                	cmp    %ecx,%ebx$/;"	l
f0106c35	obj/kern/kernel.asm	/^f0106c35:	72 20                	jb     f0106c57 <mpsearch1+0x37>$/;"	l
f0106c37	obj/kern/kernel.asm	/^f0106c37:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0106c3b	obj/kern/kernel.asm	/^f0106c3b:	c7 44 24 08 e4 76 10 	movl   $0xf01076e4,0x8(%esp)$/;"	l
f0106c42	obj/kern/kernel.asm	/^f0106c42:	f0 $/;"	l
f0106c43	obj/kern/kernel.asm	/^f0106c43:	c7 44 24 04 57 00 00 	movl   $0x57,0x4(%esp)$/;"	l
f0106c4a	obj/kern/kernel.asm	/^f0106c4a:	00 $/;"	l
f0106c4b	obj/kern/kernel.asm	/^f0106c4b:	c7 04 24 fd 94 10 f0 	movl   $0xf01094fd,(%esp)$/;"	l
f0106c52	obj/kern/kernel.asm	/^f0106c52:	e8 e9 93 ff ff       	call   f0100040 <_panic>$/;"	l
f0106c57	obj/kern/kernel.asm	/^f0106c57:	8d 98 00 00 00 f0    	lea    -0x10000000(%eax),%ebx$/;"	l
f0106c5d	obj/kern/kernel.asm	/^f0106c5d:	01 d0                	add    %edx,%eax$/;"	l
f0106c5f	obj/kern/kernel.asm	/^f0106c5f:	89 c2                	mov    %eax,%edx$/;"	l
f0106c61	obj/kern/kernel.asm	/^f0106c61:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0106c64	obj/kern/kernel.asm	/^f0106c64:	39 d1                	cmp    %edx,%ecx$/;"	l
f0106c66	obj/kern/kernel.asm	/^f0106c66:	77 20                	ja     f0106c88 <mpsearch1+0x68>$/;"	l
f0106c68	obj/kern/kernel.asm	/^f0106c68:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f0106c6c	obj/kern/kernel.asm	/^f0106c6c:	c7 44 24 08 e4 76 10 	movl   $0xf01076e4,0x8(%esp)$/;"	l
f0106c73	obj/kern/kernel.asm	/^f0106c73:	f0 $/;"	l
f0106c74	obj/kern/kernel.asm	/^f0106c74:	c7 44 24 04 57 00 00 	movl   $0x57,0x4(%esp)$/;"	l
f0106c7b	obj/kern/kernel.asm	/^f0106c7b:	00 $/;"	l
f0106c7c	obj/kern/kernel.asm	/^f0106c7c:	c7 04 24 fd 94 10 f0 	movl   $0xf01094fd,(%esp)$/;"	l
f0106c83	obj/kern/kernel.asm	/^f0106c83:	e8 b8 93 ff ff       	call   f0100040 <_panic>$/;"	l
f0106c88	obj/kern/kernel.asm	/^f0106c88:	8d b0 00 00 00 f0    	lea    -0x10000000(%eax),%esi$/;"	l
f0106c8e	obj/kern/kernel.asm	/^f0106c8e:	eb 36                	jmp    f0106cc6 <mpsearch1+0xa6>$/;"	l
f0106c90	obj/kern/kernel.asm	/^f0106c90:	c7 44 24 08 04 00 00 	movl   $0x4,0x8(%esp)$/;"	l
f0106c97	obj/kern/kernel.asm	/^f0106c97:	00 $/;"	l
f0106c98	obj/kern/kernel.asm	/^f0106c98:	c7 44 24 04 0d 95 10 	movl   $0xf010950d,0x4(%esp)$/;"	l
f0106c9f	obj/kern/kernel.asm	/^f0106c9f:	f0 $/;"	l
f0106ca0	obj/kern/kernel.asm	/^f0106ca0:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0106ca3	obj/kern/kernel.asm	/^f0106ca3:	e8 c5 fd ff ff       	call   f0106a6d <memcmp>$/;"	l
f0106ca8	obj/kern/kernel.asm	/^f0106ca8:	85 c0                	test   %eax,%eax$/;"	l
f0106caa	obj/kern/kernel.asm	/^f0106caa:	75 17                	jne    f0106cc3 <mpsearch1+0xa3>$/;"	l
f0106cac	obj/kern/kernel.asm	/^f0106cac:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0106cb1	obj/kern/kernel.asm	/^f0106cb1:	0f b6 0c 13          	movzbl (%ebx,%edx,1),%ecx$/;"	l
f0106cb5	obj/kern/kernel.asm	/^f0106cb5:	01 c8                	add    %ecx,%eax$/;"	l
f0106cb7	obj/kern/kernel.asm	/^f0106cb7:	83 c2 01             	add    $0x1,%edx$/;"	l
f0106cba	obj/kern/kernel.asm	/^f0106cba:	83 fa 10             	cmp    $0x10,%edx$/;"	l
f0106cbd	obj/kern/kernel.asm	/^f0106cbd:	75 f2                	jne    f0106cb1 <mpsearch1+0x91>$/;"	l
f0106cbf	obj/kern/kernel.asm	/^f0106cbf:	84 c0                	test   %al,%al$/;"	l
f0106cc1	obj/kern/kernel.asm	/^f0106cc1:	74 0e                	je     f0106cd1 <mpsearch1+0xb1>$/;"	l
f0106cc3	obj/kern/kernel.asm	/^f0106cc3:	83 c3 10             	add    $0x10,%ebx$/;"	l
f0106cc6	obj/kern/kernel.asm	/^f0106cc6:	39 f3                	cmp    %esi,%ebx$/;"	l
f0106cc8	obj/kern/kernel.asm	/^f0106cc8:	72 c6                	jb     f0106c90 <mpsearch1+0x70>$/;"	l
f0106cca	obj/kern/kernel.asm	/^f0106cca:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0106ccf	obj/kern/kernel.asm	/^f0106ccf:	eb 02                	jmp    f0106cd3 <mpsearch1+0xb3>$/;"	l
f0106cd1	obj/kern/kernel.asm	/^f0106cd1:	89 d8                	mov    %ebx,%eax$/;"	l
f0106cd3	obj/kern/kernel.asm	/^f0106cd3:	83 c4 10             	add    $0x10,%esp$/;"	l
f0106cd6	obj/kern/kernel.asm	/^f0106cd6:	5b                   	pop    %ebx$/;"	l
f0106cd7	obj/kern/kernel.asm	/^f0106cd7:	5e                   	pop    %esi$/;"	l
f0106cd8	obj/kern/kernel.asm	/^f0106cd8:	5d                   	pop    %ebp$/;"	l
f0106cd9	obj/kern/kernel.asm	/^f0106cd9:	c3                   	ret    $/;"	l
f0106cda	obj/kern/kernel.asm	/^f0106cda <mp_init>:$/;"	l
f0106cda	obj/kern/kernel.asm	/^f0106cda:	55                   	push   %ebp$/;"	l
f0106cdb	obj/kern/kernel.asm	/^f0106cdb:	89 e5                	mov    %esp,%ebp$/;"	l
f0106cdd	obj/kern/kernel.asm	/^f0106cdd:	57                   	push   %edi$/;"	l
f0106cde	obj/kern/kernel.asm	/^f0106cde:	56                   	push   %esi$/;"	l
f0106cdf	obj/kern/kernel.asm	/^f0106cdf:	53                   	push   %ebx$/;"	l
f0106ce0	obj/kern/kernel.asm	/^f0106ce0:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
f0106ce3	obj/kern/kernel.asm	/^f0106ce3:	c7 05 c0 e3 20 f0 20 	movl   $0xf020e020,0xf020e3c0$/;"	l
f0106cea	obj/kern/kernel.asm	/^f0106cea:	e0 20 f0 $/;"	l
f0106ced	obj/kern/kernel.asm	/^f0106ced:	83 3d 88 de 20 f0 00 	cmpl   $0x0,0xf020de88$/;"	l
f0106cf4	obj/kern/kernel.asm	/^f0106cf4:	75 24                	jne    f0106d1a <mp_init+0x40>$/;"	l
f0106cf6	obj/kern/kernel.asm	/^f0106cf6:	c7 44 24 0c 00 04 00 	movl   $0x400,0xc(%esp)$/;"	l
f0106cfd	obj/kern/kernel.asm	/^f0106cfd:	00 $/;"	l
f0106cfe	obj/kern/kernel.asm	/^f0106cfe:	c7 44 24 08 e4 76 10 	movl   $0xf01076e4,0x8(%esp)$/;"	l
f0106d05	obj/kern/kernel.asm	/^f0106d05:	f0 $/;"	l
f0106d06	obj/kern/kernel.asm	/^f0106d06:	c7 44 24 04 6f 00 00 	movl   $0x6f,0x4(%esp)$/;"	l
f0106d0d	obj/kern/kernel.asm	/^f0106d0d:	00 $/;"	l
f0106d0e	obj/kern/kernel.asm	/^f0106d0e:	c7 04 24 fd 94 10 f0 	movl   $0xf01094fd,(%esp)$/;"	l
f0106d15	obj/kern/kernel.asm	/^f0106d15:	e8 26 93 ff ff       	call   f0100040 <_panic>$/;"	l
f0106d1a	obj/kern/kernel.asm	/^f0106d1a:	0f b7 05 0e 04 00 f0 	movzwl 0xf000040e,%eax$/;"	l
f0106d21	obj/kern/kernel.asm	/^f0106d21:	85 c0                	test   %eax,%eax$/;"	l
f0106d23	obj/kern/kernel.asm	/^f0106d23:	74 16                	je     f0106d3b <mp_init+0x61>$/;"	l
f0106d25	obj/kern/kernel.asm	/^f0106d25:	c1 e0 04             	shl    $0x4,%eax$/;"	l
f0106d28	obj/kern/kernel.asm	/^f0106d28:	ba 00 04 00 00       	mov    $0x400,%edx$/;"	l
f0106d2d	obj/kern/kernel.asm	/^f0106d2d:	e8 ee fe ff ff       	call   f0106c20 <mpsearch1>$/;"	l
f0106d32	obj/kern/kernel.asm	/^f0106d32:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0106d35	obj/kern/kernel.asm	/^f0106d35:	85 c0                	test   %eax,%eax$/;"	l
f0106d37	obj/kern/kernel.asm	/^f0106d37:	75 3c                	jne    f0106d75 <mp_init+0x9b>$/;"	l
f0106d39	obj/kern/kernel.asm	/^f0106d39:	eb 20                	jmp    f0106d5b <mp_init+0x81>$/;"	l
f0106d3b	obj/kern/kernel.asm	/^f0106d3b:	0f b7 05 13 04 00 f0 	movzwl 0xf0000413,%eax$/;"	l
f0106d42	obj/kern/kernel.asm	/^f0106d42:	c1 e0 0a             	shl    $0xa,%eax$/;"	l
f0106d45	obj/kern/kernel.asm	/^f0106d45:	2d 00 04 00 00       	sub    $0x400,%eax$/;"	l
f0106d4a	obj/kern/kernel.asm	/^f0106d4a:	ba 00 04 00 00       	mov    $0x400,%edx$/;"	l
f0106d4f	obj/kern/kernel.asm	/^f0106d4f:	e8 cc fe ff ff       	call   f0106c20 <mpsearch1>$/;"	l
f0106d54	obj/kern/kernel.asm	/^f0106d54:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0106d57	obj/kern/kernel.asm	/^f0106d57:	85 c0                	test   %eax,%eax$/;"	l
f0106d59	obj/kern/kernel.asm	/^f0106d59:	75 1a                	jne    f0106d75 <mp_init+0x9b>$/;"	l
f0106d5b	obj/kern/kernel.asm	/^f0106d5b:	ba 00 00 01 00       	mov    $0x10000,%edx$/;"	l
f0106d60	obj/kern/kernel.asm	/^f0106d60:	b8 00 00 0f 00       	mov    $0xf0000,%eax$/;"	l
f0106d65	obj/kern/kernel.asm	/^f0106d65:	e8 b6 fe ff ff       	call   f0106c20 <mpsearch1>$/;"	l
f0106d6a	obj/kern/kernel.asm	/^f0106d6a:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0106d6d	obj/kern/kernel.asm	/^f0106d6d:	85 c0                	test   %eax,%eax$/;"	l
f0106d6f	obj/kern/kernel.asm	/^f0106d6f:	0f 84 54 02 00 00    	je     f0106fc9 <mp_init+0x2ef>$/;"	l
f0106d75	obj/kern/kernel.asm	/^f0106d75:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0106d78	obj/kern/kernel.asm	/^f0106d78:	8b 70 04             	mov    0x4(%eax),%esi$/;"	l
f0106d7b	obj/kern/kernel.asm	/^f0106d7b:	85 f6                	test   %esi,%esi$/;"	l
f0106d7d	obj/kern/kernel.asm	/^f0106d7d:	74 06                	je     f0106d85 <mp_init+0xab>$/;"	l
f0106d7f	obj/kern/kernel.asm	/^f0106d7f:	80 78 0b 00          	cmpb   $0x0,0xb(%eax)$/;"	l
f0106d83	obj/kern/kernel.asm	/^f0106d83:	74 11                	je     f0106d96 <mp_init+0xbc>$/;"	l
f0106d85	obj/kern/kernel.asm	/^f0106d85:	c7 04 24 70 93 10 f0 	movl   $0xf0109370,(%esp)$/;"	l
f0106d8c	obj/kern/kernel.asm	/^f0106d8c:	e8 0d d6 ff ff       	call   f010439e <cprintf>$/;"	l
f0106d91	obj/kern/kernel.asm	/^f0106d91:	e9 33 02 00 00       	jmp    f0106fc9 <mp_init+0x2ef>$/;"	l
f0106d96	obj/kern/kernel.asm	/^f0106d96:	89 f0                	mov    %esi,%eax$/;"	l
f0106d98	obj/kern/kernel.asm	/^f0106d98:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0106d9b	obj/kern/kernel.asm	/^f0106d9b:	3b 05 88 de 20 f0    	cmp    0xf020de88,%eax$/;"	l
f0106da1	obj/kern/kernel.asm	/^f0106da1:	72 20                	jb     f0106dc3 <mp_init+0xe9>$/;"	l
f0106da3	obj/kern/kernel.asm	/^f0106da3:	89 74 24 0c          	mov    %esi,0xc(%esp)$/;"	l
f0106da7	obj/kern/kernel.asm	/^f0106da7:	c7 44 24 08 e4 76 10 	movl   $0xf01076e4,0x8(%esp)$/;"	l
f0106dae	obj/kern/kernel.asm	/^f0106dae:	f0 $/;"	l
f0106daf	obj/kern/kernel.asm	/^f0106daf:	c7 44 24 04 90 00 00 	movl   $0x90,0x4(%esp)$/;"	l
f0106db6	obj/kern/kernel.asm	/^f0106db6:	00 $/;"	l
f0106db7	obj/kern/kernel.asm	/^f0106db7:	c7 04 24 fd 94 10 f0 	movl   $0xf01094fd,(%esp)$/;"	l
f0106dbe	obj/kern/kernel.asm	/^f0106dbe:	e8 7d 92 ff ff       	call   f0100040 <_panic>$/;"	l
f0106dc3	obj/kern/kernel.asm	/^f0106dc3:	8d 9e 00 00 00 f0    	lea    -0x10000000(%esi),%ebx$/;"	l
f0106dc9	obj/kern/kernel.asm	/^f0106dc9:	c7 44 24 08 04 00 00 	movl   $0x4,0x8(%esp)$/;"	l
f0106dd0	obj/kern/kernel.asm	/^f0106dd0:	00 $/;"	l
f0106dd1	obj/kern/kernel.asm	/^f0106dd1:	c7 44 24 04 12 95 10 	movl   $0xf0109512,0x4(%esp)$/;"	l
f0106dd8	obj/kern/kernel.asm	/^f0106dd8:	f0 $/;"	l
f0106dd9	obj/kern/kernel.asm	/^f0106dd9:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0106ddc	obj/kern/kernel.asm	/^f0106ddc:	e8 8c fc ff ff       	call   f0106a6d <memcmp>$/;"	l
f0106de1	obj/kern/kernel.asm	/^f0106de1:	85 c0                	test   %eax,%eax$/;"	l
f0106de3	obj/kern/kernel.asm	/^f0106de3:	74 11                	je     f0106df6 <mp_init+0x11c>$/;"	l
f0106de5	obj/kern/kernel.asm	/^f0106de5:	c7 04 24 a0 93 10 f0 	movl   $0xf01093a0,(%esp)$/;"	l
f0106dec	obj/kern/kernel.asm	/^f0106dec:	e8 ad d5 ff ff       	call   f010439e <cprintf>$/;"	l
f0106df1	obj/kern/kernel.asm	/^f0106df1:	e9 d3 01 00 00       	jmp    f0106fc9 <mp_init+0x2ef>$/;"	l
f0106df6	obj/kern/kernel.asm	/^f0106df6:	0f b7 43 04          	movzwl 0x4(%ebx),%eax$/;"	l
f0106dfa	obj/kern/kernel.asm	/^f0106dfa:	66 89 45 e2          	mov    %ax,-0x1e(%ebp)$/;"	l
f0106dfe	obj/kern/kernel.asm	/^f0106dfe:	0f b7 f8             	movzwl %ax,%edi$/;"	l
f0106e01	obj/kern/kernel.asm	/^f0106e01:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0106e06	obj/kern/kernel.asm	/^f0106e06:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0106e0b	obj/kern/kernel.asm	/^f0106e0b:	eb 0d                	jmp    f0106e1a <mp_init+0x140>$/;"	l
f0106e0d	obj/kern/kernel.asm	/^f0106e0d:	0f b6 8c 30 00 00 00 	movzbl -0x10000000(%eax,%esi,1),%ecx$/;"	l
f0106e14	obj/kern/kernel.asm	/^f0106e14:	f0 $/;"	l
f0106e15	obj/kern/kernel.asm	/^f0106e15:	01 ca                	add    %ecx,%edx$/;"	l
f0106e17	obj/kern/kernel.asm	/^f0106e17:	83 c0 01             	add    $0x1,%eax$/;"	l
f0106e1a	obj/kern/kernel.asm	/^f0106e1a:	39 c7                	cmp    %eax,%edi$/;"	l
f0106e1c	obj/kern/kernel.asm	/^f0106e1c:	7f ef                	jg     f0106e0d <mp_init+0x133>$/;"	l
f0106e1e	obj/kern/kernel.asm	/^f0106e1e:	84 d2                	test   %dl,%dl$/;"	l
f0106e20	obj/kern/kernel.asm	/^f0106e20:	74 11                	je     f0106e33 <mp_init+0x159>$/;"	l
f0106e22	obj/kern/kernel.asm	/^f0106e22:	c7 04 24 d4 93 10 f0 	movl   $0xf01093d4,(%esp)$/;"	l
f0106e29	obj/kern/kernel.asm	/^f0106e29:	e8 70 d5 ff ff       	call   f010439e <cprintf>$/;"	l
f0106e2e	obj/kern/kernel.asm	/^f0106e2e:	e9 96 01 00 00       	jmp    f0106fc9 <mp_init+0x2ef>$/;"	l
f0106e33	obj/kern/kernel.asm	/^f0106e33:	0f b6 43 06          	movzbl 0x6(%ebx),%eax$/;"	l
f0106e37	obj/kern/kernel.asm	/^f0106e37:	3c 04                	cmp    $0x4,%al$/;"	l
f0106e39	obj/kern/kernel.asm	/^f0106e39:	74 1f                	je     f0106e5a <mp_init+0x180>$/;"	l
f0106e3b	obj/kern/kernel.asm	/^f0106e3b:	3c 01                	cmp    $0x1,%al$/;"	l
f0106e3d	obj/kern/kernel.asm	/^f0106e3d:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
f0106e40	obj/kern/kernel.asm	/^f0106e40:	74 18                	je     f0106e5a <mp_init+0x180>$/;"	l
f0106e42	obj/kern/kernel.asm	/^f0106e42:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0106e45	obj/kern/kernel.asm	/^f0106e45:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0106e49	obj/kern/kernel.asm	/^f0106e49:	c7 04 24 f8 93 10 f0 	movl   $0xf01093f8,(%esp)$/;"	l
f0106e50	obj/kern/kernel.asm	/^f0106e50:	e8 49 d5 ff ff       	call   f010439e <cprintf>$/;"	l
f0106e55	obj/kern/kernel.asm	/^f0106e55:	e9 6f 01 00 00       	jmp    f0106fc9 <mp_init+0x2ef>$/;"	l
f0106e5a	obj/kern/kernel.asm	/^f0106e5a:	0f b7 73 28          	movzwl 0x28(%ebx),%esi$/;"	l
f0106e5e	obj/kern/kernel.asm	/^f0106e5e:	0f b7 7d e2          	movzwl -0x1e(%ebp),%edi$/;"	l
f0106e62	obj/kern/kernel.asm	/^f0106e62:	01 df                	add    %ebx,%edi$/;"	l
f0106e64	obj/kern/kernel.asm	/^f0106e64:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0106e69	obj/kern/kernel.asm	/^f0106e69:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0106e6e	obj/kern/kernel.asm	/^f0106e6e:	eb 09                	jmp    f0106e79 <mp_init+0x19f>$/;"	l
f0106e70	obj/kern/kernel.asm	/^f0106e70:	0f b6 0c 07          	movzbl (%edi,%eax,1),%ecx$/;"	l
f0106e74	obj/kern/kernel.asm	/^f0106e74:	01 ca                	add    %ecx,%edx$/;"	l
f0106e76	obj/kern/kernel.asm	/^f0106e76:	83 c0 01             	add    $0x1,%eax$/;"	l
f0106e79	obj/kern/kernel.asm	/^f0106e79:	39 c6                	cmp    %eax,%esi$/;"	l
f0106e7b	obj/kern/kernel.asm	/^f0106e7b:	7f f3                	jg     f0106e70 <mp_init+0x196>$/;"	l
f0106e7d	obj/kern/kernel.asm	/^f0106e7d:	02 53 2a             	add    0x2a(%ebx),%dl$/;"	l
f0106e80	obj/kern/kernel.asm	/^f0106e80:	84 d2                	test   %dl,%dl$/;"	l
f0106e82	obj/kern/kernel.asm	/^f0106e82:	74 11                	je     f0106e95 <mp_init+0x1bb>$/;"	l
f0106e84	obj/kern/kernel.asm	/^f0106e84:	c7 04 24 18 94 10 f0 	movl   $0xf0109418,(%esp)$/;"	l
f0106e8b	obj/kern/kernel.asm	/^f0106e8b:	e8 0e d5 ff ff       	call   f010439e <cprintf>$/;"	l
f0106e90	obj/kern/kernel.asm	/^f0106e90:	e9 34 01 00 00       	jmp    f0106fc9 <mp_init+0x2ef>$/;"	l
f0106e95	obj/kern/kernel.asm	/^f0106e95:	85 db                	test   %ebx,%ebx$/;"	l
f0106e97	obj/kern/kernel.asm	/^f0106e97:	0f 84 2c 01 00 00    	je     f0106fc9 <mp_init+0x2ef>$/;"	l
f0106e9d	obj/kern/kernel.asm	/^f0106e9d:	c7 05 00 e0 20 f0 01 	movl   $0x1,0xf020e000$/;"	l
f0106ea4	obj/kern/kernel.asm	/^f0106ea4:	00 00 00 $/;"	l
f0106ea7	obj/kern/kernel.asm	/^f0106ea7:	8b 43 24             	mov    0x24(%ebx),%eax$/;"	l
f0106eaa	obj/kern/kernel.asm	/^f0106eaa:	a3 00 f0 24 f0       	mov    %eax,0xf024f000$/;"	l
f0106eaf	obj/kern/kernel.asm	/^f0106eaf:	8d 7b 2c             	lea    0x2c(%ebx),%edi$/;"	l
f0106eb2	obj/kern/kernel.asm	/^f0106eb2:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f0106eb7	obj/kern/kernel.asm	/^f0106eb7:	e9 86 00 00 00       	jmp    f0106f42 <mp_init+0x268>$/;"	l
f0106ebc	obj/kern/kernel.asm	/^f0106ebc:	0f b6 07             	movzbl (%edi),%eax$/;"	l
f0106ebf	obj/kern/kernel.asm	/^f0106ebf:	84 c0                	test   %al,%al$/;"	l
f0106ec1	obj/kern/kernel.asm	/^f0106ec1:	74 06                	je     f0106ec9 <mp_init+0x1ef>$/;"	l
f0106ec3	obj/kern/kernel.asm	/^f0106ec3:	3c 04                	cmp    $0x4,%al$/;"	l
f0106ec5	obj/kern/kernel.asm	/^f0106ec5:	77 57                	ja     f0106f1e <mp_init+0x244>$/;"	l
f0106ec7	obj/kern/kernel.asm	/^f0106ec7:	eb 50                	jmp    f0106f19 <mp_init+0x23f>$/;"	l
f0106ec9	obj/kern/kernel.asm	/^f0106ec9:	f6 47 03 02          	testb  $0x2,0x3(%edi)$/;"	l
f0106ecd	obj/kern/kernel.asm	/^f0106ecd:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
f0106ed0	obj/kern/kernel.asm	/^f0106ed0:	74 11                	je     f0106ee3 <mp_init+0x209>$/;"	l
f0106ed2	obj/kern/kernel.asm	/^f0106ed2:	6b 05 c4 e3 20 f0 74 	imul   $0x74,0xf020e3c4,%eax$/;"	l
f0106ed9	obj/kern/kernel.asm	/^f0106ed9:	05 20 e0 20 f0       	add    $0xf020e020,%eax$/;"	l
f0106ede	obj/kern/kernel.asm	/^f0106ede:	a3 c0 e3 20 f0       	mov    %eax,0xf020e3c0$/;"	l
f0106ee3	obj/kern/kernel.asm	/^f0106ee3:	a1 c4 e3 20 f0       	mov    0xf020e3c4,%eax$/;"	l
f0106ee8	obj/kern/kernel.asm	/^f0106ee8:	83 f8 07             	cmp    $0x7,%eax$/;"	l
f0106eeb	obj/kern/kernel.asm	/^f0106eeb:	7f 13                	jg     f0106f00 <mp_init+0x226>$/;"	l
f0106eed	obj/kern/kernel.asm	/^f0106eed:	6b d0 74             	imul   $0x74,%eax,%edx$/;"	l
f0106ef0	obj/kern/kernel.asm	/^f0106ef0:	88 82 20 e0 20 f0    	mov    %al,-0xfdf1fe0(%edx)$/;"	l
f0106ef6	obj/kern/kernel.asm	/^f0106ef6:	83 c0 01             	add    $0x1,%eax$/;"	l
f0106ef9	obj/kern/kernel.asm	/^f0106ef9:	a3 c4 e3 20 f0       	mov    %eax,0xf020e3c4$/;"	l
f0106efe	obj/kern/kernel.asm	/^f0106efe:	eb 14                	jmp    f0106f14 <mp_init+0x23a>$/;"	l
f0106f00	obj/kern/kernel.asm	/^f0106f00:	0f b6 47 01          	movzbl 0x1(%edi),%eax$/;"	l
f0106f04	obj/kern/kernel.asm	/^f0106f04:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0106f08	obj/kern/kernel.asm	/^f0106f08:	c7 04 24 48 94 10 f0 	movl   $0xf0109448,(%esp)$/;"	l
f0106f0f	obj/kern/kernel.asm	/^f0106f0f:	e8 8a d4 ff ff       	call   f010439e <cprintf>$/;"	l
f0106f14	obj/kern/kernel.asm	/^f0106f14:	83 c7 14             	add    $0x14,%edi$/;"	l
f0106f17	obj/kern/kernel.asm	/^f0106f17:	eb 26                	jmp    f0106f3f <mp_init+0x265>$/;"	l
f0106f19	obj/kern/kernel.asm	/^f0106f19:	83 c7 08             	add    $0x8,%edi$/;"	l
f0106f1c	obj/kern/kernel.asm	/^f0106f1c:	eb 21                	jmp    f0106f3f <mp_init+0x265>$/;"	l
f0106f1e	obj/kern/kernel.asm	/^f0106f1e:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0106f21	obj/kern/kernel.asm	/^f0106f21:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0106f25	obj/kern/kernel.asm	/^f0106f25:	c7 04 24 70 94 10 f0 	movl   $0xf0109470,(%esp)$/;"	l
f0106f2c	obj/kern/kernel.asm	/^f0106f2c:	e8 6d d4 ff ff       	call   f010439e <cprintf>$/;"	l
f0106f31	obj/kern/kernel.asm	/^f0106f31:	c7 05 00 e0 20 f0 00 	movl   $0x0,0xf020e000$/;"	l
f0106f38	obj/kern/kernel.asm	/^f0106f38:	00 00 00 $/;"	l
f0106f3b	obj/kern/kernel.asm	/^f0106f3b:	0f b7 73 22          	movzwl 0x22(%ebx),%esi$/;"	l
f0106f3f	obj/kern/kernel.asm	/^f0106f3f:	83 c6 01             	add    $0x1,%esi$/;"	l
f0106f42	obj/kern/kernel.asm	/^f0106f42:	0f b7 43 22          	movzwl 0x22(%ebx),%eax$/;"	l
f0106f46	obj/kern/kernel.asm	/^f0106f46:	39 c6                	cmp    %eax,%esi$/;"	l
f0106f48	obj/kern/kernel.asm	/^f0106f48:	0f 82 6e ff ff ff    	jb     f0106ebc <mp_init+0x1e2>$/;"	l
f0106f4e	obj/kern/kernel.asm	/^f0106f4e:	a1 c0 e3 20 f0       	mov    0xf020e3c0,%eax$/;"	l
f0106f53	obj/kern/kernel.asm	/^f0106f53:	c7 40 04 01 00 00 00 	movl   $0x1,0x4(%eax)$/;"	l
f0106f5a	obj/kern/kernel.asm	/^f0106f5a:	83 3d 00 e0 20 f0 00 	cmpl   $0x0,0xf020e000$/;"	l
f0106f61	obj/kern/kernel.asm	/^f0106f61:	75 22                	jne    f0106f85 <mp_init+0x2ab>$/;"	l
f0106f63	obj/kern/kernel.asm	/^f0106f63:	c7 05 c4 e3 20 f0 01 	movl   $0x1,0xf020e3c4$/;"	l
f0106f6a	obj/kern/kernel.asm	/^f0106f6a:	00 00 00 $/;"	l
f0106f6d	obj/kern/kernel.asm	/^f0106f6d:	c7 05 00 f0 24 f0 00 	movl   $0x0,0xf024f000$/;"	l
f0106f74	obj/kern/kernel.asm	/^f0106f74:	00 00 00 $/;"	l
f0106f77	obj/kern/kernel.asm	/^f0106f77:	c7 04 24 90 94 10 f0 	movl   $0xf0109490,(%esp)$/;"	l
f0106f7e	obj/kern/kernel.asm	/^f0106f7e:	e8 1b d4 ff ff       	call   f010439e <cprintf>$/;"	l
f0106f83	obj/kern/kernel.asm	/^f0106f83:	eb 44                	jmp    f0106fc9 <mp_init+0x2ef>$/;"	l
f0106f85	obj/kern/kernel.asm	/^f0106f85:	8b 15 c4 e3 20 f0    	mov    0xf020e3c4,%edx$/;"	l
f0106f8b	obj/kern/kernel.asm	/^f0106f8b:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f0106f8f	obj/kern/kernel.asm	/^f0106f8f:	0f b6 00             	movzbl (%eax),%eax$/;"	l
f0106f92	obj/kern/kernel.asm	/^f0106f92:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0106f96	obj/kern/kernel.asm	/^f0106f96:	c7 04 24 17 95 10 f0 	movl   $0xf0109517,(%esp)$/;"	l
f0106f9d	obj/kern/kernel.asm	/^f0106f9d:	e8 fc d3 ff ff       	call   f010439e <cprintf>$/;"	l
f0106fa2	obj/kern/kernel.asm	/^f0106fa2:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0106fa5	obj/kern/kernel.asm	/^f0106fa5:	80 78 0c 00          	cmpb   $0x0,0xc(%eax)$/;"	l
f0106fa9	obj/kern/kernel.asm	/^f0106fa9:	74 1e                	je     f0106fc9 <mp_init+0x2ef>$/;"	l
f0106fab	obj/kern/kernel.asm	/^f0106fab:	c7 04 24 bc 94 10 f0 	movl   $0xf01094bc,(%esp)$/;"	l
f0106fb2	obj/kern/kernel.asm	/^f0106fb2:	e8 e7 d3 ff ff       	call   f010439e <cprintf>$/;"	l
f0106fb7	obj/kern/kernel.asm	/^f0106fb7:	ba 22 00 00 00       	mov    $0x22,%edx$/;"	l
f0106fbc	obj/kern/kernel.asm	/^f0106fbc:	b8 70 00 00 00       	mov    $0x70,%eax$/;"	l
f0106fc1	obj/kern/kernel.asm	/^f0106fc1:	ee                   	out    %al,(%dx)$/;"	l
f0106fc2	obj/kern/kernel.asm	/^f0106fc2:	b2 23                	mov    $0x23,%dl$/;"	l
f0106fc4	obj/kern/kernel.asm	/^f0106fc4:	ec                   	in     (%dx),%al$/;"	l
f0106fc5	obj/kern/kernel.asm	/^f0106fc5:	83 c8 01             	or     $0x1,%eax$/;"	l
f0106fc8	obj/kern/kernel.asm	/^f0106fc8:	ee                   	out    %al,(%dx)$/;"	l
f0106fc9	obj/kern/kernel.asm	/^f0106fc9:	83 c4 2c             	add    $0x2c,%esp$/;"	l
f0106fcc	obj/kern/kernel.asm	/^f0106fcc:	5b                   	pop    %ebx$/;"	l
f0106fcd	obj/kern/kernel.asm	/^f0106fcd:	5e                   	pop    %esi$/;"	l
f0106fce	obj/kern/kernel.asm	/^f0106fce:	5f                   	pop    %edi$/;"	l
f0106fcf	obj/kern/kernel.asm	/^f0106fcf:	5d                   	pop    %ebp$/;"	l
f0106fd0	obj/kern/kernel.asm	/^f0106fd0:	c3                   	ret    $/;"	l
f0106fd1	obj/kern/kernel.asm	/^f0106fd1:	66 90                	xchg   %ax,%ax$/;"	l
f0106fd3	obj/kern/kernel.asm	/^f0106fd3:	90                   	nop$/;"	l
f0106fd4	obj/kern/kernel.asm	/^f0106fd4 <lapicw>:$/;"	l
f0106fd4	obj/kern/kernel.asm	/^f0106fd4:	55                   	push   %ebp$/;"	l
f0106fd5	obj/kern/kernel.asm	/^f0106fd5:	89 e5                	mov    %esp,%ebp$/;"	l
f0106fd7	obj/kern/kernel.asm	/^f0106fd7:	8b 0d 04 f0 24 f0    	mov    0xf024f004,%ecx$/;"	l
f0106fdd	obj/kern/kernel.asm	/^f0106fdd:	8d 04 81             	lea    (%ecx,%eax,4),%eax$/;"	l
f0106fe0	obj/kern/kernel.asm	/^f0106fe0:	89 10                	mov    %edx,(%eax)$/;"	l
f0106fe2	obj/kern/kernel.asm	/^f0106fe2:	a1 04 f0 24 f0       	mov    0xf024f004,%eax$/;"	l
f0106fe7	obj/kern/kernel.asm	/^f0106fe7:	8b 40 20             	mov    0x20(%eax),%eax$/;"	l
f0106fea	obj/kern/kernel.asm	/^f0106fea:	5d                   	pop    %ebp$/;"	l
f0106feb	obj/kern/kernel.asm	/^f0106feb:	c3                   	ret    $/;"	l
f0106fec	obj/kern/kernel.asm	/^f0106fec <cpunum>:$/;"	l
f0106fec	obj/kern/kernel.asm	/^f0106fec:	55                   	push   %ebp$/;"	l
f0106fed	obj/kern/kernel.asm	/^f0106fed:	89 e5                	mov    %esp,%ebp$/;"	l
f0106fef	obj/kern/kernel.asm	/^f0106fef:	a1 04 f0 24 f0       	mov    0xf024f004,%eax$/;"	l
f0106ff4	obj/kern/kernel.asm	/^f0106ff4:	85 c0                	test   %eax,%eax$/;"	l
f0106ff6	obj/kern/kernel.asm	/^f0106ff6:	74 08                	je     f0107000 <cpunum+0x14>$/;"	l
f0106ff8	obj/kern/kernel.asm	/^f0106ff8:	8b 40 20             	mov    0x20(%eax),%eax$/;"	l
f0106ffb	obj/kern/kernel.asm	/^f0106ffb:	c1 e8 18             	shr    $0x18,%eax$/;"	l
f0106ffe	obj/kern/kernel.asm	/^f0106ffe:	eb 05                	jmp    f0107005 <cpunum+0x19>$/;"	l
f0107000	obj/kern/kernel.asm	/^f0107000:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0107005	obj/kern/kernel.asm	/^f0107005:	5d                   	pop    %ebp$/;"	l
f0107006	obj/kern/kernel.asm	/^f0107006:	c3                   	ret    $/;"	l
f0107007	obj/kern/kernel.asm	/^f0107007 <lapic_init>:$/;"	l
f0107007	obj/kern/kernel.asm	/^f0107007:	a1 00 f0 24 f0       	mov    0xf024f000,%eax$/;"	l
f010700c	obj/kern/kernel.asm	/^f010700c:	85 c0                	test   %eax,%eax$/;"	l
f010700e	obj/kern/kernel.asm	/^f010700e:	0f 84 23 01 00 00    	je     f0107137 <lapic_init+0x130>$/;"	l
f0107014	obj/kern/kernel.asm	/^f0107014:	55                   	push   %ebp$/;"	l
f0107015	obj/kern/kernel.asm	/^f0107015:	89 e5                	mov    %esp,%ebp$/;"	l
f0107017	obj/kern/kernel.asm	/^f0107017:	83 ec 18             	sub    $0x18,%esp$/;"	l
f010701a	obj/kern/kernel.asm	/^f010701a:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
f0107021	obj/kern/kernel.asm	/^f0107021:	00 $/;"	l
f0107022	obj/kern/kernel.asm	/^f0107022:	89 04 24             	mov    %eax,(%esp)$/;"	l
f0107025	obj/kern/kernel.asm	/^f0107025:	e8 52 a8 ff ff       	call   f010187c <mmio_map_region>$/;"	l
f010702a	obj/kern/kernel.asm	/^f010702a:	a3 04 f0 24 f0       	mov    %eax,0xf024f004$/;"	l
f010702f	obj/kern/kernel.asm	/^f010702f:	ba 27 01 00 00       	mov    $0x127,%edx$/;"	l
f0107034	obj/kern/kernel.asm	/^f0107034:	b8 3c 00 00 00       	mov    $0x3c,%eax$/;"	l
f0107039	obj/kern/kernel.asm	/^f0107039:	e8 96 ff ff ff       	call   f0106fd4 <lapicw>$/;"	l
f010703e	obj/kern/kernel.asm	/^f010703e:	ba 0b 00 00 00       	mov    $0xb,%edx$/;"	l
f0107043	obj/kern/kernel.asm	/^f0107043:	b8 f8 00 00 00       	mov    $0xf8,%eax$/;"	l
f0107048	obj/kern/kernel.asm	/^f0107048:	e8 87 ff ff ff       	call   f0106fd4 <lapicw>$/;"	l
f010704d	obj/kern/kernel.asm	/^f010704d:	ba 20 00 02 00       	mov    $0x20020,%edx$/;"	l
f0107052	obj/kern/kernel.asm	/^f0107052:	b8 c8 00 00 00       	mov    $0xc8,%eax$/;"	l
f0107057	obj/kern/kernel.asm	/^f0107057:	e8 78 ff ff ff       	call   f0106fd4 <lapicw>$/;"	l
f010705c	obj/kern/kernel.asm	/^f010705c:	ba 80 96 98 00       	mov    $0x989680,%edx$/;"	l
f0107061	obj/kern/kernel.asm	/^f0107061:	b8 e0 00 00 00       	mov    $0xe0,%eax$/;"	l
f0107066	obj/kern/kernel.asm	/^f0107066:	e8 69 ff ff ff       	call   f0106fd4 <lapicw>$/;"	l
f010706b	obj/kern/kernel.asm	/^f010706b:	e8 7c ff ff ff       	call   f0106fec <cpunum>$/;"	l
f0107070	obj/kern/kernel.asm	/^f0107070:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0107073	obj/kern/kernel.asm	/^f0107073:	05 20 e0 20 f0       	add    $0xf020e020,%eax$/;"	l
f0107078	obj/kern/kernel.asm	/^f0107078:	39 05 c0 e3 20 f0    	cmp    %eax,0xf020e3c0$/;"	l
f010707e	obj/kern/kernel.asm	/^f010707e:	74 0f                	je     f010708f <lapic_init+0x88>$/;"	l
f0107080	obj/kern/kernel.asm	/^f0107080:	ba 00 00 01 00       	mov    $0x10000,%edx$/;"	l
f0107085	obj/kern/kernel.asm	/^f0107085:	b8 d4 00 00 00       	mov    $0xd4,%eax$/;"	l
f010708a	obj/kern/kernel.asm	/^f010708a:	e8 45 ff ff ff       	call   f0106fd4 <lapicw>$/;"	l
f010708f	obj/kern/kernel.asm	/^f010708f:	ba 00 00 01 00       	mov    $0x10000,%edx$/;"	l
f0107094	obj/kern/kernel.asm	/^f0107094:	b8 d8 00 00 00       	mov    $0xd8,%eax$/;"	l
f0107099	obj/kern/kernel.asm	/^f0107099:	e8 36 ff ff ff       	call   f0106fd4 <lapicw>$/;"	l
f010709e	obj/kern/kernel.asm	/^f010709e:	a1 04 f0 24 f0       	mov    0xf024f004,%eax$/;"	l
f01070a3	obj/kern/kernel.asm	/^f01070a3:	8b 40 30             	mov    0x30(%eax),%eax$/;"	l
f01070a6	obj/kern/kernel.asm	/^f01070a6:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01070a9	obj/kern/kernel.asm	/^f01070a9:	3c 03                	cmp    $0x3,%al$/;"	l
f01070ab	obj/kern/kernel.asm	/^f01070ab:	76 0f                	jbe    f01070bc <lapic_init+0xb5>$/;"	l
f01070ad	obj/kern/kernel.asm	/^f01070ad:	ba 00 00 01 00       	mov    $0x10000,%edx$/;"	l
f01070b2	obj/kern/kernel.asm	/^f01070b2:	b8 d0 00 00 00       	mov    $0xd0,%eax$/;"	l
f01070b7	obj/kern/kernel.asm	/^f01070b7:	e8 18 ff ff ff       	call   f0106fd4 <lapicw>$/;"	l
f01070bc	obj/kern/kernel.asm	/^f01070bc:	ba 33 00 00 00       	mov    $0x33,%edx$/;"	l
f01070c1	obj/kern/kernel.asm	/^f01070c1:	b8 dc 00 00 00       	mov    $0xdc,%eax$/;"	l
f01070c6	obj/kern/kernel.asm	/^f01070c6:	e8 09 ff ff ff       	call   f0106fd4 <lapicw>$/;"	l
f01070cb	obj/kern/kernel.asm	/^f01070cb:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01070d0	obj/kern/kernel.asm	/^f01070d0:	b8 a0 00 00 00       	mov    $0xa0,%eax$/;"	l
f01070d5	obj/kern/kernel.asm	/^f01070d5:	e8 fa fe ff ff       	call   f0106fd4 <lapicw>$/;"	l
f01070da	obj/kern/kernel.asm	/^f01070da:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01070df	obj/kern/kernel.asm	/^f01070df:	b8 a0 00 00 00       	mov    $0xa0,%eax$/;"	l
f01070e4	obj/kern/kernel.asm	/^f01070e4:	e8 eb fe ff ff       	call   f0106fd4 <lapicw>$/;"	l
f01070e9	obj/kern/kernel.asm	/^f01070e9:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01070ee	obj/kern/kernel.asm	/^f01070ee:	b8 2c 00 00 00       	mov    $0x2c,%eax$/;"	l
f01070f3	obj/kern/kernel.asm	/^f01070f3:	e8 dc fe ff ff       	call   f0106fd4 <lapicw>$/;"	l
f01070f8	obj/kern/kernel.asm	/^f01070f8:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01070fd	obj/kern/kernel.asm	/^f01070fd:	b8 c4 00 00 00       	mov    $0xc4,%eax$/;"	l
f0107102	obj/kern/kernel.asm	/^f0107102:	e8 cd fe ff ff       	call   f0106fd4 <lapicw>$/;"	l
f0107107	obj/kern/kernel.asm	/^f0107107:	ba 00 85 08 00       	mov    $0x88500,%edx$/;"	l
f010710c	obj/kern/kernel.asm	/^f010710c:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f0107111	obj/kern/kernel.asm	/^f0107111:	e8 be fe ff ff       	call   f0106fd4 <lapicw>$/;"	l
f0107116	obj/kern/kernel.asm	/^f0107116:	8b 15 04 f0 24 f0    	mov    0xf024f004,%edx$/;"	l
f010711c	obj/kern/kernel.asm	/^f010711c:	8b 82 00 03 00 00    	mov    0x300(%edx),%eax$/;"	l
f0107122	obj/kern/kernel.asm	/^f0107122:	f6 c4 10             	test   $0x10,%ah$/;"	l
f0107125	obj/kern/kernel.asm	/^f0107125:	75 f5                	jne    f010711c <lapic_init+0x115>$/;"	l
f0107127	obj/kern/kernel.asm	/^f0107127:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f010712c	obj/kern/kernel.asm	/^f010712c:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f0107131	obj/kern/kernel.asm	/^f0107131:	e8 9e fe ff ff       	call   f0106fd4 <lapicw>$/;"	l
f0107136	obj/kern/kernel.asm	/^f0107136:	c9                   	leave  $/;"	l
f0107137	obj/kern/kernel.asm	/^f0107137:	f3 c3                	repz ret $/;"	l
f0107139	obj/kern/kernel.asm	/^f0107139 <lapic_eoi>:$/;"	l
f0107139	obj/kern/kernel.asm	/^f0107139:	83 3d 04 f0 24 f0 00 	cmpl   $0x0,0xf024f004$/;"	l
f0107140	obj/kern/kernel.asm	/^f0107140:	74 13                	je     f0107155 <lapic_eoi+0x1c>$/;"	l
f0107142	obj/kern/kernel.asm	/^f0107142:	55                   	push   %ebp$/;"	l
f0107143	obj/kern/kernel.asm	/^f0107143:	89 e5                	mov    %esp,%ebp$/;"	l
f0107145	obj/kern/kernel.asm	/^f0107145:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f010714a	obj/kern/kernel.asm	/^f010714a:	b8 2c 00 00 00       	mov    $0x2c,%eax$/;"	l
f010714f	obj/kern/kernel.asm	/^f010714f:	e8 80 fe ff ff       	call   f0106fd4 <lapicw>$/;"	l
f0107154	obj/kern/kernel.asm	/^f0107154:	5d                   	pop    %ebp$/;"	l
f0107155	obj/kern/kernel.asm	/^f0107155:	f3 c3                	repz ret $/;"	l
f0107157	obj/kern/kernel.asm	/^f0107157 <lapic_startap>:$/;"	l
f0107157	obj/kern/kernel.asm	/^f0107157:	55                   	push   %ebp$/;"	l
f0107158	obj/kern/kernel.asm	/^f0107158:	89 e5                	mov    %esp,%ebp$/;"	l
f010715a	obj/kern/kernel.asm	/^f010715a:	56                   	push   %esi$/;"	l
f010715b	obj/kern/kernel.asm	/^f010715b:	53                   	push   %ebx$/;"	l
f010715c	obj/kern/kernel.asm	/^f010715c:	83 ec 10             	sub    $0x10,%esp$/;"	l
f010715f	obj/kern/kernel.asm	/^f010715f:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0107162	obj/kern/kernel.asm	/^f0107162:	8b 75 0c             	mov    0xc(%ebp),%esi$/;"	l
f0107165	obj/kern/kernel.asm	/^f0107165:	ba 70 00 00 00       	mov    $0x70,%edx$/;"	l
f010716a	obj/kern/kernel.asm	/^f010716a:	b8 0f 00 00 00       	mov    $0xf,%eax$/;"	l
f010716f	obj/kern/kernel.asm	/^f010716f:	ee                   	out    %al,(%dx)$/;"	l
f0107170	obj/kern/kernel.asm	/^f0107170:	b2 71                	mov    $0x71,%dl$/;"	l
f0107172	obj/kern/kernel.asm	/^f0107172:	b8 0a 00 00 00       	mov    $0xa,%eax$/;"	l
f0107177	obj/kern/kernel.asm	/^f0107177:	ee                   	out    %al,(%dx)$/;"	l
f0107178	obj/kern/kernel.asm	/^f0107178:	83 3d 88 de 20 f0 00 	cmpl   $0x0,0xf020de88$/;"	l
f010717f	obj/kern/kernel.asm	/^f010717f:	75 24                	jne    f01071a5 <lapic_startap+0x4e>$/;"	l
f0107181	obj/kern/kernel.asm	/^f0107181:	c7 44 24 0c 67 04 00 	movl   $0x467,0xc(%esp)$/;"	l
f0107188	obj/kern/kernel.asm	/^f0107188:	00 $/;"	l
f0107189	obj/kern/kernel.asm	/^f0107189:	c7 44 24 08 e4 76 10 	movl   $0xf01076e4,0x8(%esp)$/;"	l
f0107190	obj/kern/kernel.asm	/^f0107190:	f0 $/;"	l
f0107191	obj/kern/kernel.asm	/^f0107191:	c7 44 24 04 98 00 00 	movl   $0x98,0x4(%esp)$/;"	l
f0107198	obj/kern/kernel.asm	/^f0107198:	00 $/;"	l
f0107199	obj/kern/kernel.asm	/^f0107199:	c7 04 24 34 95 10 f0 	movl   $0xf0109534,(%esp)$/;"	l
f01071a0	obj/kern/kernel.asm	/^f01071a0:	e8 9b 8e ff ff       	call   f0100040 <_panic>$/;"	l
f01071a5	obj/kern/kernel.asm	/^f01071a5:	66 c7 05 67 04 00 f0 	movw   $0x0,0xf0000467$/;"	l
f01071ac	obj/kern/kernel.asm	/^f01071ac:	00 00 $/;"	l
f01071ae	obj/kern/kernel.asm	/^f01071ae:	89 f0                	mov    %esi,%eax$/;"	l
f01071b0	obj/kern/kernel.asm	/^f01071b0:	c1 e8 04             	shr    $0x4,%eax$/;"	l
f01071b3	obj/kern/kernel.asm	/^f01071b3:	66 a3 69 04 00 f0    	mov    %ax,0xf0000469$/;"	l
f01071b9	obj/kern/kernel.asm	/^f01071b9:	c1 e3 18             	shl    $0x18,%ebx$/;"	l
f01071bc	obj/kern/kernel.asm	/^f01071bc:	89 da                	mov    %ebx,%edx$/;"	l
f01071be	obj/kern/kernel.asm	/^f01071be:	b8 c4 00 00 00       	mov    $0xc4,%eax$/;"	l
f01071c3	obj/kern/kernel.asm	/^f01071c3:	e8 0c fe ff ff       	call   f0106fd4 <lapicw>$/;"	l
f01071c8	obj/kern/kernel.asm	/^f01071c8:	ba 00 c5 00 00       	mov    $0xc500,%edx$/;"	l
f01071cd	obj/kern/kernel.asm	/^f01071cd:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f01071d2	obj/kern/kernel.asm	/^f01071d2:	e8 fd fd ff ff       	call   f0106fd4 <lapicw>$/;"	l
f01071d7	obj/kern/kernel.asm	/^f01071d7:	ba 00 85 00 00       	mov    $0x8500,%edx$/;"	l
f01071dc	obj/kern/kernel.asm	/^f01071dc:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f01071e1	obj/kern/kernel.asm	/^f01071e1:	e8 ee fd ff ff       	call   f0106fd4 <lapicw>$/;"	l
f01071e6	obj/kern/kernel.asm	/^f01071e6:	c1 ee 0c             	shr    $0xc,%esi$/;"	l
f01071e9	obj/kern/kernel.asm	/^f01071e9:	81 ce 00 06 00 00    	or     $0x600,%esi$/;"	l
f01071ef	obj/kern/kernel.asm	/^f01071ef:	89 da                	mov    %ebx,%edx$/;"	l
f01071f1	obj/kern/kernel.asm	/^f01071f1:	b8 c4 00 00 00       	mov    $0xc4,%eax$/;"	l
f01071f6	obj/kern/kernel.asm	/^f01071f6:	e8 d9 fd ff ff       	call   f0106fd4 <lapicw>$/;"	l
f01071fb	obj/kern/kernel.asm	/^f01071fb:	89 f2                	mov    %esi,%edx$/;"	l
f01071fd	obj/kern/kernel.asm	/^f01071fd:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f0107202	obj/kern/kernel.asm	/^f0107202:	e8 cd fd ff ff       	call   f0106fd4 <lapicw>$/;"	l
f0107207	obj/kern/kernel.asm	/^f0107207:	89 da                	mov    %ebx,%edx$/;"	l
f0107209	obj/kern/kernel.asm	/^f0107209:	b8 c4 00 00 00       	mov    $0xc4,%eax$/;"	l
f010720e	obj/kern/kernel.asm	/^f010720e:	e8 c1 fd ff ff       	call   f0106fd4 <lapicw>$/;"	l
f0107213	obj/kern/kernel.asm	/^f0107213:	89 f2                	mov    %esi,%edx$/;"	l
f0107215	obj/kern/kernel.asm	/^f0107215:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f010721a	obj/kern/kernel.asm	/^f010721a:	e8 b5 fd ff ff       	call   f0106fd4 <lapicw>$/;"	l
f010721f	obj/kern/kernel.asm	/^f010721f:	83 c4 10             	add    $0x10,%esp$/;"	l
f0107222	obj/kern/kernel.asm	/^f0107222:	5b                   	pop    %ebx$/;"	l
f0107223	obj/kern/kernel.asm	/^f0107223:	5e                   	pop    %esi$/;"	l
f0107224	obj/kern/kernel.asm	/^f0107224:	5d                   	pop    %ebp$/;"	l
f0107225	obj/kern/kernel.asm	/^f0107225:	c3                   	ret    $/;"	l
f0107226	obj/kern/kernel.asm	/^f0107226 <lapic_ipi>:$/;"	l
f0107226	obj/kern/kernel.asm	/^f0107226:	55                   	push   %ebp$/;"	l
f0107227	obj/kern/kernel.asm	/^f0107227:	89 e5                	mov    %esp,%ebp$/;"	l
f0107229	obj/kern/kernel.asm	/^f0107229:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f010722c	obj/kern/kernel.asm	/^f010722c:	81 ca 00 00 0c 00    	or     $0xc0000,%edx$/;"	l
f0107232	obj/kern/kernel.asm	/^f0107232:	b8 c0 00 00 00       	mov    $0xc0,%eax$/;"	l
f0107237	obj/kern/kernel.asm	/^f0107237:	e8 98 fd ff ff       	call   f0106fd4 <lapicw>$/;"	l
f010723c	obj/kern/kernel.asm	/^f010723c:	8b 15 04 f0 24 f0    	mov    0xf024f004,%edx$/;"	l
f0107242	obj/kern/kernel.asm	/^f0107242:	8b 82 00 03 00 00    	mov    0x300(%edx),%eax$/;"	l
f0107248	obj/kern/kernel.asm	/^f0107248:	f6 c4 10             	test   $0x10,%ah$/;"	l
f010724b	obj/kern/kernel.asm	/^f010724b:	75 f5                	jne    f0107242 <lapic_ipi+0x1c>$/;"	l
f010724d	obj/kern/kernel.asm	/^f010724d:	5d                   	pop    %ebp$/;"	l
f010724e	obj/kern/kernel.asm	/^f010724e:	c3                   	ret    $/;"	l
f010724f	obj/kern/kernel.asm	/^f010724f:	90                   	nop$/;"	l
f0107250	obj/kern/kernel.asm	/^f0107250 <__spin_initlock>:$/;"	l
f0107250	obj/kern/kernel.asm	/^f0107250:	55                   	push   %ebp$/;"	l
f0107251	obj/kern/kernel.asm	/^f0107251:	89 e5                	mov    %esp,%ebp$/;"	l
f0107253	obj/kern/kernel.asm	/^f0107253:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0107256	obj/kern/kernel.asm	/^f0107256:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f010725c	obj/kern/kernel.asm	/^f010725c:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f010725f	obj/kern/kernel.asm	/^f010725f:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
f0107262	obj/kern/kernel.asm	/^f0107262:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)$/;"	l
f0107269	obj/kern/kernel.asm	/^f0107269:	5d                   	pop    %ebp$/;"	l
f010726a	obj/kern/kernel.asm	/^f010726a:	c3                   	ret    $/;"	l
f010726b	obj/kern/kernel.asm	/^f010726b <spin_lock>:$/;"	l
f010726b	obj/kern/kernel.asm	/^f010726b:	55                   	push   %ebp$/;"	l
f010726c	obj/kern/kernel.asm	/^f010726c:	89 e5                	mov    %esp,%ebp$/;"	l
f010726e	obj/kern/kernel.asm	/^f010726e:	56                   	push   %esi$/;"	l
f010726f	obj/kern/kernel.asm	/^f010726f:	53                   	push   %ebx$/;"	l
f0107270	obj/kern/kernel.asm	/^f0107270:	83 ec 20             	sub    $0x20,%esp$/;"	l
f0107273	obj/kern/kernel.asm	/^f0107273:	8b 5d 08             	mov    0x8(%ebp),%ebx$/;"	l
f0107276	obj/kern/kernel.asm	/^f0107276:	83 3b 00             	cmpl   $0x0,(%ebx)$/;"	l
f0107279	obj/kern/kernel.asm	/^f0107279:	75 07                	jne    f0107282 <spin_lock+0x17>$/;"	l
f010727b	obj/kern/kernel.asm	/^f010727b:	ba 01 00 00 00       	mov    $0x1,%edx$/;"	l
f0107280	obj/kern/kernel.asm	/^f0107280:	eb 42                	jmp    f01072c4 <spin_lock+0x59>$/;"	l
f0107282	obj/kern/kernel.asm	/^f0107282:	8b 73 08             	mov    0x8(%ebx),%esi$/;"	l
f0107285	obj/kern/kernel.asm	/^f0107285:	e8 62 fd ff ff       	call   f0106fec <cpunum>$/;"	l
f010728a	obj/kern/kernel.asm	/^f010728a:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010728d	obj/kern/kernel.asm	/^f010728d:	05 20 e0 20 f0       	add    $0xf020e020,%eax$/;"	l
f0107292	obj/kern/kernel.asm	/^f0107292:	39 c6                	cmp    %eax,%esi$/;"	l
f0107294	obj/kern/kernel.asm	/^f0107294:	75 e5                	jne    f010727b <spin_lock+0x10>$/;"	l
f0107296	obj/kern/kernel.asm	/^f0107296:	8b 5b 04             	mov    0x4(%ebx),%ebx$/;"	l
f0107299	obj/kern/kernel.asm	/^f0107299:	e8 4e fd ff ff       	call   f0106fec <cpunum>$/;"	l
f010729e	obj/kern/kernel.asm	/^f010729e:	89 5c 24 10          	mov    %ebx,0x10(%esp)$/;"	l
f01072a2	obj/kern/kernel.asm	/^f01072a2:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f01072a6	obj/kern/kernel.asm	/^f01072a6:	c7 44 24 08 44 95 10 	movl   $0xf0109544,0x8(%esp)$/;"	l
f01072ad	obj/kern/kernel.asm	/^f01072ad:	f0 $/;"	l
f01072ae	obj/kern/kernel.asm	/^f01072ae:	c7 44 24 04 41 00 00 	movl   $0x41,0x4(%esp)$/;"	l
f01072b5	obj/kern/kernel.asm	/^f01072b5:	00 $/;"	l
f01072b6	obj/kern/kernel.asm	/^f01072b6:	c7 04 24 a8 95 10 f0 	movl   $0xf01095a8,(%esp)$/;"	l
f01072bd	obj/kern/kernel.asm	/^f01072bd:	e8 7e 8d ff ff       	call   f0100040 <_panic>$/;"	l
f01072c2	obj/kern/kernel.asm	/^f01072c2:	f3 90                	pause  $/;"	l
f01072c4	obj/kern/kernel.asm	/^f01072c4:	89 d0                	mov    %edx,%eax$/;"	l
f01072c6	obj/kern/kernel.asm	/^f01072c6:	f0 87 03             	lock xchg %eax,(%ebx)$/;"	l
f01072c9	obj/kern/kernel.asm	/^f01072c9:	85 c0                	test   %eax,%eax$/;"	l
f01072cb	obj/kern/kernel.asm	/^f01072cb:	75 f5                	jne    f01072c2 <spin_lock+0x57>$/;"	l
f01072cd	obj/kern/kernel.asm	/^f01072cd:	e8 1a fd ff ff       	call   f0106fec <cpunum>$/;"	l
f01072d2	obj/kern/kernel.asm	/^f01072d2:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01072d5	obj/kern/kernel.asm	/^f01072d5:	05 20 e0 20 f0       	add    $0xf020e020,%eax$/;"	l
f01072da	obj/kern/kernel.asm	/^f01072da:	89 43 08             	mov    %eax,0x8(%ebx)$/;"	l
f01072dd	obj/kern/kernel.asm	/^f01072dd:	83 c3 0c             	add    $0xc,%ebx$/;"	l
f01072e0	obj/kern/kernel.asm	/^f01072e0:	89 ea                	mov    %ebp,%edx$/;"	l
f01072e2	obj/kern/kernel.asm	/^f01072e2:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01072e7	obj/kern/kernel.asm	/^f01072e7:	81 fa ff ff 7f ef    	cmp    $0xef7fffff,%edx$/;"	l
f01072ed	obj/kern/kernel.asm	/^f01072ed:	76 12                	jbe    f0107301 <spin_lock+0x96>$/;"	l
f01072ef	obj/kern/kernel.asm	/^f01072ef:	8b 4a 04             	mov    0x4(%edx),%ecx$/;"	l
f01072f2	obj/kern/kernel.asm	/^f01072f2:	89 0c 83             	mov    %ecx,(%ebx,%eax,4)$/;"	l
f01072f5	obj/kern/kernel.asm	/^f01072f5:	8b 12                	mov    (%edx),%edx$/;"	l
f01072f7	obj/kern/kernel.asm	/^f01072f7:	83 c0 01             	add    $0x1,%eax$/;"	l
f01072fa	obj/kern/kernel.asm	/^f01072fa:	83 f8 0a             	cmp    $0xa,%eax$/;"	l
f01072fd	obj/kern/kernel.asm	/^f01072fd:	75 e8                	jne    f01072e7 <spin_lock+0x7c>$/;"	l
f01072ff	obj/kern/kernel.asm	/^f01072ff:	eb 0f                	jmp    f0107310 <spin_lock+0xa5>$/;"	l
f0107301	obj/kern/kernel.asm	/^f0107301:	c7 04 83 00 00 00 00 	movl   $0x0,(%ebx,%eax,4)$/;"	l
f0107308	obj/kern/kernel.asm	/^f0107308:	83 c0 01             	add    $0x1,%eax$/;"	l
f010730b	obj/kern/kernel.asm	/^f010730b:	83 f8 09             	cmp    $0x9,%eax$/;"	l
f010730e	obj/kern/kernel.asm	/^f010730e:	7e f1                	jle    f0107301 <spin_lock+0x96>$/;"	l
f0107310	obj/kern/kernel.asm	/^f0107310:	83 c4 20             	add    $0x20,%esp$/;"	l
f0107313	obj/kern/kernel.asm	/^f0107313:	5b                   	pop    %ebx$/;"	l
f0107314	obj/kern/kernel.asm	/^f0107314:	5e                   	pop    %esi$/;"	l
f0107315	obj/kern/kernel.asm	/^f0107315:	5d                   	pop    %ebp$/;"	l
f0107316	obj/kern/kernel.asm	/^f0107316:	c3                   	ret    $/;"	l
f0107317	obj/kern/kernel.asm	/^f0107317 <spin_unlock>:$/;"	l
f0107317	obj/kern/kernel.asm	/^f0107317:	55                   	push   %ebp$/;"	l
f0107318	obj/kern/kernel.asm	/^f0107318:	89 e5                	mov    %esp,%ebp$/;"	l
f010731a	obj/kern/kernel.asm	/^f010731a:	57                   	push   %edi$/;"	l
f010731b	obj/kern/kernel.asm	/^f010731b:	56                   	push   %esi$/;"	l
f010731c	obj/kern/kernel.asm	/^f010731c:	53                   	push   %ebx$/;"	l
f010731d	obj/kern/kernel.asm	/^f010731d:	83 ec 6c             	sub    $0x6c,%esp$/;"	l
f0107320	obj/kern/kernel.asm	/^f0107320:	8b 75 08             	mov    0x8(%ebp),%esi$/;"	l
f0107323	obj/kern/kernel.asm	/^f0107323:	83 3e 00             	cmpl   $0x0,(%esi)$/;"	l
f0107326	obj/kern/kernel.asm	/^f0107326:	74 18                	je     f0107340 <spin_unlock+0x29>$/;"	l
f0107328	obj/kern/kernel.asm	/^f0107328:	8b 5e 08             	mov    0x8(%esi),%ebx$/;"	l
f010732b	obj/kern/kernel.asm	/^f010732b:	e8 bc fc ff ff       	call   f0106fec <cpunum>$/;"	l
f0107330	obj/kern/kernel.asm	/^f0107330:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0107333	obj/kern/kernel.asm	/^f0107333:	05 20 e0 20 f0       	add    $0xf020e020,%eax$/;"	l
f0107338	obj/kern/kernel.asm	/^f0107338:	39 c3                	cmp    %eax,%ebx$/;"	l
f010733a	obj/kern/kernel.asm	/^f010733a:	0f 84 ce 00 00 00    	je     f010740e <spin_unlock+0xf7>$/;"	l
f0107340	obj/kern/kernel.asm	/^f0107340:	c7 44 24 08 28 00 00 	movl   $0x28,0x8(%esp)$/;"	l
f0107347	obj/kern/kernel.asm	/^f0107347:	00 $/;"	l
f0107348	obj/kern/kernel.asm	/^f0107348:	8d 46 0c             	lea    0xc(%esi),%eax$/;"	l
f010734b	obj/kern/kernel.asm	/^f010734b:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f010734f	obj/kern/kernel.asm	/^f010734f:	8d 5d c0             	lea    -0x40(%ebp),%ebx$/;"	l
f0107352	obj/kern/kernel.asm	/^f0107352:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
f0107355	obj/kern/kernel.asm	/^f0107355:	e8 8a f6 ff ff       	call   f01069e4 <memmove>$/;"	l
f010735a	obj/kern/kernel.asm	/^f010735a:	8b 46 08             	mov    0x8(%esi),%eax$/;"	l
f010735d	obj/kern/kernel.asm	/^f010735d:	0f b6 38             	movzbl (%eax),%edi$/;"	l
f0107360	obj/kern/kernel.asm	/^f0107360:	8b 76 04             	mov    0x4(%esi),%esi$/;"	l
f0107363	obj/kern/kernel.asm	/^f0107363:	e8 84 fc ff ff       	call   f0106fec <cpunum>$/;"	l
f0107368	obj/kern/kernel.asm	/^f0107368:	89 7c 24 0c          	mov    %edi,0xc(%esp)$/;"	l
f010736c	obj/kern/kernel.asm	/^f010736c:	89 74 24 08          	mov    %esi,0x8(%esp)$/;"	l
f0107370	obj/kern/kernel.asm	/^f0107370:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0107374	obj/kern/kernel.asm	/^f0107374:	c7 04 24 70 95 10 f0 	movl   $0xf0109570,(%esp)$/;"	l
f010737b	obj/kern/kernel.asm	/^f010737b:	e8 1e d0 ff ff       	call   f010439e <cprintf>$/;"	l
f0107380	obj/kern/kernel.asm	/^f0107380:	8d 7d a8             	lea    -0x58(%ebp),%edi$/;"	l
f0107383	obj/kern/kernel.asm	/^f0107383:	eb 65                	jmp    f01073ea <spin_unlock+0xd3>$/;"	l
f0107385	obj/kern/kernel.asm	/^f0107385:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f0107389	obj/kern/kernel.asm	/^f0107389:	89 04 24             	mov    %eax,(%esp)$/;"	l
f010738c	obj/kern/kernel.asm	/^f010738c:	e8 c1 ea ff ff       	call   f0105e52 <debuginfo_eip>$/;"	l
f0107391	obj/kern/kernel.asm	/^f0107391:	85 c0                	test   %eax,%eax$/;"	l
f0107393	obj/kern/kernel.asm	/^f0107393:	78 39                	js     f01073ce <spin_unlock+0xb7>$/;"	l
f0107395	obj/kern/kernel.asm	/^f0107395:	8b 06                	mov    (%esi),%eax$/;"	l
f0107397	obj/kern/kernel.asm	/^f0107397:	89 c2                	mov    %eax,%edx$/;"	l
f0107399	obj/kern/kernel.asm	/^f0107399:	2b 55 b8             	sub    -0x48(%ebp),%edx$/;"	l
f010739c	obj/kern/kernel.asm	/^f010739c:	89 54 24 18          	mov    %edx,0x18(%esp)$/;"	l
f01073a0	obj/kern/kernel.asm	/^f01073a0:	8b 55 b0             	mov    -0x50(%ebp),%edx$/;"	l
f01073a3	obj/kern/kernel.asm	/^f01073a3:	89 54 24 14          	mov    %edx,0x14(%esp)$/;"	l
f01073a7	obj/kern/kernel.asm	/^f01073a7:	8b 55 b4             	mov    -0x4c(%ebp),%edx$/;"	l
f01073aa	obj/kern/kernel.asm	/^f01073aa:	89 54 24 10          	mov    %edx,0x10(%esp)$/;"	l
f01073ae	obj/kern/kernel.asm	/^f01073ae:	8b 55 ac             	mov    -0x54(%ebp),%edx$/;"	l
f01073b1	obj/kern/kernel.asm	/^f01073b1:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
f01073b5	obj/kern/kernel.asm	/^f01073b5:	8b 55 a8             	mov    -0x58(%ebp),%edx$/;"	l
f01073b8	obj/kern/kernel.asm	/^f01073b8:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
f01073bc	obj/kern/kernel.asm	/^f01073bc:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01073c0	obj/kern/kernel.asm	/^f01073c0:	c7 04 24 b8 95 10 f0 	movl   $0xf01095b8,(%esp)$/;"	l
f01073c7	obj/kern/kernel.asm	/^f01073c7:	e8 d2 cf ff ff       	call   f010439e <cprintf>$/;"	l
f01073cc	obj/kern/kernel.asm	/^f01073cc:	eb 12                	jmp    f01073e0 <spin_unlock+0xc9>$/;"	l
f01073ce	obj/kern/kernel.asm	/^f01073ce:	8b 06                	mov    (%esi),%eax$/;"	l
f01073d0	obj/kern/kernel.asm	/^f01073d0:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f01073d4	obj/kern/kernel.asm	/^f01073d4:	c7 04 24 cf 95 10 f0 	movl   $0xf01095cf,(%esp)$/;"	l
f01073db	obj/kern/kernel.asm	/^f01073db:	e8 be cf ff ff       	call   f010439e <cprintf>$/;"	l
f01073e0	obj/kern/kernel.asm	/^f01073e0:	83 c3 04             	add    $0x4,%ebx$/;"	l
f01073e3	obj/kern/kernel.asm	/^f01073e3:	8d 45 e8             	lea    -0x18(%ebp),%eax$/;"	l
f01073e6	obj/kern/kernel.asm	/^f01073e6:	39 c3                	cmp    %eax,%ebx$/;"	l
f01073e8	obj/kern/kernel.asm	/^f01073e8:	74 08                	je     f01073f2 <spin_unlock+0xdb>$/;"	l
f01073ea	obj/kern/kernel.asm	/^f01073ea:	89 de                	mov    %ebx,%esi$/;"	l
f01073ec	obj/kern/kernel.asm	/^f01073ec:	8b 03                	mov    (%ebx),%eax$/;"	l
f01073ee	obj/kern/kernel.asm	/^f01073ee:	85 c0                	test   %eax,%eax$/;"	l
f01073f0	obj/kern/kernel.asm	/^f01073f0:	75 93                	jne    f0107385 <spin_unlock+0x6e>$/;"	l
f01073f2	obj/kern/kernel.asm	/^f01073f2:	c7 44 24 08 d7 95 10 	movl   $0xf01095d7,0x8(%esp)$/;"	l
f01073f9	obj/kern/kernel.asm	/^f01073f9:	f0 $/;"	l
f01073fa	obj/kern/kernel.asm	/^f01073fa:	c7 44 24 04 67 00 00 	movl   $0x67,0x4(%esp)$/;"	l
f0107401	obj/kern/kernel.asm	/^f0107401:	00 $/;"	l
f0107402	obj/kern/kernel.asm	/^f0107402:	c7 04 24 a8 95 10 f0 	movl   $0xf01095a8,(%esp)$/;"	l
f0107409	obj/kern/kernel.asm	/^f0107409:	e8 32 8c ff ff       	call   f0100040 <_panic>$/;"	l
f010740e	obj/kern/kernel.asm	/^f010740e:	c7 46 0c 00 00 00 00 	movl   $0x0,0xc(%esi)$/;"	l
f0107415	obj/kern/kernel.asm	/^f0107415:	c7 46 08 00 00 00 00 	movl   $0x0,0x8(%esi)$/;"	l
f010741c	obj/kern/kernel.asm	/^f010741c:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0107421	obj/kern/kernel.asm	/^f0107421:	f0 87 06             	lock xchg %eax,(%esi)$/;"	l
f0107424	obj/kern/kernel.asm	/^f0107424:	83 c4 6c             	add    $0x6c,%esp$/;"	l
f0107427	obj/kern/kernel.asm	/^f0107427:	5b                   	pop    %ebx$/;"	l
f0107428	obj/kern/kernel.asm	/^f0107428:	5e                   	pop    %esi$/;"	l
f0107429	obj/kern/kernel.asm	/^f0107429:	5f                   	pop    %edi$/;"	l
f010742a	obj/kern/kernel.asm	/^f010742a:	5d                   	pop    %ebp$/;"	l
f010742b	obj/kern/kernel.asm	/^f010742b:	c3                   	ret    $/;"	l
f010742c	obj/kern/kernel.asm	/^f010742c:	66 90                	xchg   %ax,%ax$/;"	l
f010742e	obj/kern/kernel.asm	/^f010742e:	66 90                	xchg   %ax,%ax$/;"	l
f0107430	obj/kern/kernel.asm	/^f0107430 <__udivdi3>:$/;"	l
f0107430	obj/kern/kernel.asm	/^f0107430:	55                   	push   %ebp$/;"	l
f0107431	obj/kern/kernel.asm	/^f0107431:	57                   	push   %edi$/;"	l
f0107432	obj/kern/kernel.asm	/^f0107432:	56                   	push   %esi$/;"	l
f0107433	obj/kern/kernel.asm	/^f0107433:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0107436	obj/kern/kernel.asm	/^f0107436:	8b 44 24 28          	mov    0x28(%esp),%eax$/;"	l
f010743a	obj/kern/kernel.asm	/^f010743a:	8b 7c 24 1c          	mov    0x1c(%esp),%edi$/;"	l
f010743e	obj/kern/kernel.asm	/^f010743e:	8b 6c 24 20          	mov    0x20(%esp),%ebp$/;"	l
f0107442	obj/kern/kernel.asm	/^f0107442:	8b 4c 24 24          	mov    0x24(%esp),%ecx$/;"	l
f0107446	obj/kern/kernel.asm	/^f0107446:	85 c0                	test   %eax,%eax$/;"	l
f0107448	obj/kern/kernel.asm	/^f0107448:	89 7c 24 04          	mov    %edi,0x4(%esp)$/;"	l
f010744c	obj/kern/kernel.asm	/^f010744c:	89 ea                	mov    %ebp,%edx$/;"	l
f010744e	obj/kern/kernel.asm	/^f010744e:	89 0c 24             	mov    %ecx,(%esp)$/;"	l
f0107451	obj/kern/kernel.asm	/^f0107451:	75 2d                	jne    f0107480 <__udivdi3+0x50>$/;"	l
f0107453	obj/kern/kernel.asm	/^f0107453:	39 e9                	cmp    %ebp,%ecx$/;"	l
f0107455	obj/kern/kernel.asm	/^f0107455:	77 61                	ja     f01074b8 <__udivdi3+0x88>$/;"	l
f0107457	obj/kern/kernel.asm	/^f0107457:	85 c9                	test   %ecx,%ecx$/;"	l
f0107459	obj/kern/kernel.asm	/^f0107459:	89 ce                	mov    %ecx,%esi$/;"	l
f010745b	obj/kern/kernel.asm	/^f010745b:	75 0b                	jne    f0107468 <__udivdi3+0x38>$/;"	l
f010745d	obj/kern/kernel.asm	/^f010745d:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0107462	obj/kern/kernel.asm	/^f0107462:	31 d2                	xor    %edx,%edx$/;"	l
f0107464	obj/kern/kernel.asm	/^f0107464:	f7 f1                	div    %ecx$/;"	l
f0107466	obj/kern/kernel.asm	/^f0107466:	89 c6                	mov    %eax,%esi$/;"	l
f0107468	obj/kern/kernel.asm	/^f0107468:	31 d2                	xor    %edx,%edx$/;"	l
f010746a	obj/kern/kernel.asm	/^f010746a:	89 e8                	mov    %ebp,%eax$/;"	l
f010746c	obj/kern/kernel.asm	/^f010746c:	f7 f6                	div    %esi$/;"	l
f010746e	obj/kern/kernel.asm	/^f010746e:	89 c5                	mov    %eax,%ebp$/;"	l
f0107470	obj/kern/kernel.asm	/^f0107470:	89 f8                	mov    %edi,%eax$/;"	l
f0107472	obj/kern/kernel.asm	/^f0107472:	f7 f6                	div    %esi$/;"	l
f0107474	obj/kern/kernel.asm	/^f0107474:	89 ea                	mov    %ebp,%edx$/;"	l
f0107476	obj/kern/kernel.asm	/^f0107476:	83 c4 0c             	add    $0xc,%esp$/;"	l
f0107479	obj/kern/kernel.asm	/^f0107479:	5e                   	pop    %esi$/;"	l
f010747a	obj/kern/kernel.asm	/^f010747a:	5f                   	pop    %edi$/;"	l
f010747b	obj/kern/kernel.asm	/^f010747b:	5d                   	pop    %ebp$/;"	l
f010747c	obj/kern/kernel.asm	/^f010747c:	c3                   	ret    $/;"	l
f010747d	obj/kern/kernel.asm	/^f010747d:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
f0107480	obj/kern/kernel.asm	/^f0107480:	39 e8                	cmp    %ebp,%eax$/;"	l
f0107482	obj/kern/kernel.asm	/^f0107482:	77 24                	ja     f01074a8 <__udivdi3+0x78>$/;"	l
f0107484	obj/kern/kernel.asm	/^f0107484:	0f bd e8             	bsr    %eax,%ebp$/;"	l
f0107487	obj/kern/kernel.asm	/^f0107487:	83 f5 1f             	xor    $0x1f,%ebp$/;"	l
f010748a	obj/kern/kernel.asm	/^f010748a:	75 3c                	jne    f01074c8 <__udivdi3+0x98>$/;"	l
f010748c	obj/kern/kernel.asm	/^f010748c:	8b 74 24 04          	mov    0x4(%esp),%esi$/;"	l
f0107490	obj/kern/kernel.asm	/^f0107490:	39 34 24             	cmp    %esi,(%esp)$/;"	l
f0107493	obj/kern/kernel.asm	/^f0107493:	0f 86 9f 00 00 00    	jbe    f0107538 <__udivdi3+0x108>$/;"	l
f0107499	obj/kern/kernel.asm	/^f0107499:	39 d0                	cmp    %edx,%eax$/;"	l
f010749b	obj/kern/kernel.asm	/^f010749b:	0f 82 97 00 00 00    	jb     f0107538 <__udivdi3+0x108>$/;"	l
f01074a1	obj/kern/kernel.asm	/^f01074a1:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f01074a8	obj/kern/kernel.asm	/^f01074a8:	31 d2                	xor    %edx,%edx$/;"	l
f01074aa	obj/kern/kernel.asm	/^f01074aa:	31 c0                	xor    %eax,%eax$/;"	l
f01074ac	obj/kern/kernel.asm	/^f01074ac:	83 c4 0c             	add    $0xc,%esp$/;"	l
f01074af	obj/kern/kernel.asm	/^f01074af:	5e                   	pop    %esi$/;"	l
f01074b0	obj/kern/kernel.asm	/^f01074b0:	5f                   	pop    %edi$/;"	l
f01074b1	obj/kern/kernel.asm	/^f01074b1:	5d                   	pop    %ebp$/;"	l
f01074b2	obj/kern/kernel.asm	/^f01074b2:	c3                   	ret    $/;"	l
f01074b3	obj/kern/kernel.asm	/^f01074b3:	90                   	nop$/;"	l
f01074b4	obj/kern/kernel.asm	/^f01074b4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f01074b8	obj/kern/kernel.asm	/^f01074b8:	89 f8                	mov    %edi,%eax$/;"	l
f01074ba	obj/kern/kernel.asm	/^f01074ba:	f7 f1                	div    %ecx$/;"	l
f01074bc	obj/kern/kernel.asm	/^f01074bc:	31 d2                	xor    %edx,%edx$/;"	l
f01074be	obj/kern/kernel.asm	/^f01074be:	83 c4 0c             	add    $0xc,%esp$/;"	l
f01074c1	obj/kern/kernel.asm	/^f01074c1:	5e                   	pop    %esi$/;"	l
f01074c2	obj/kern/kernel.asm	/^f01074c2:	5f                   	pop    %edi$/;"	l
f01074c3	obj/kern/kernel.asm	/^f01074c3:	5d                   	pop    %ebp$/;"	l
f01074c4	obj/kern/kernel.asm	/^f01074c4:	c3                   	ret    $/;"	l
f01074c5	obj/kern/kernel.asm	/^f01074c5:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
f01074c8	obj/kern/kernel.asm	/^f01074c8:	89 e9                	mov    %ebp,%ecx$/;"	l
f01074ca	obj/kern/kernel.asm	/^f01074ca:	8b 3c 24             	mov    (%esp),%edi$/;"	l
f01074cd	obj/kern/kernel.asm	/^f01074cd:	d3 e0                	shl    %cl,%eax$/;"	d
f01074cf	obj/kern/kernel.asm	/^f01074cf:	89 c6                	mov    %eax,%esi$/;"	l
f01074d1	obj/kern/kernel.asm	/^f01074d1:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f01074d6	obj/kern/kernel.asm	/^f01074d6:	29 e8                	sub    %ebp,%eax$/;"	l
f01074d8	obj/kern/kernel.asm	/^f01074d8:	89 c1                	mov    %eax,%ecx$/;"	l
f01074da	obj/kern/kernel.asm	/^f01074da:	d3 ef                	shr    %cl,%edi$/;"	d
f01074dc	obj/kern/kernel.asm	/^f01074dc:	89 e9                	mov    %ebp,%ecx$/;"	l
f01074de	obj/kern/kernel.asm	/^f01074de:	89 7c 24 08          	mov    %edi,0x8(%esp)$/;"	l
f01074e2	obj/kern/kernel.asm	/^f01074e2:	8b 3c 24             	mov    (%esp),%edi$/;"	l
f01074e5	obj/kern/kernel.asm	/^f01074e5:	09 74 24 08          	or     %esi,0x8(%esp)$/;"	l
f01074e9	obj/kern/kernel.asm	/^f01074e9:	89 d6                	mov    %edx,%esi$/;"	l
f01074eb	obj/kern/kernel.asm	/^f01074eb:	d3 e7                	shl    %cl,%edi$/;"	d
f01074ed	obj/kern/kernel.asm	/^f01074ed:	89 c1                	mov    %eax,%ecx$/;"	l
f01074ef	obj/kern/kernel.asm	/^f01074ef:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f01074f2	obj/kern/kernel.asm	/^f01074f2:	8b 7c 24 04          	mov    0x4(%esp),%edi$/;"	l
f01074f6	obj/kern/kernel.asm	/^f01074f6:	d3 ee                	shr    %cl,%esi$/;"	d
f01074f8	obj/kern/kernel.asm	/^f01074f8:	89 e9                	mov    %ebp,%ecx$/;"	l
f01074fa	obj/kern/kernel.asm	/^f01074fa:	d3 e2                	shl    %cl,%edx$/;"	d
f01074fc	obj/kern/kernel.asm	/^f01074fc:	89 c1                	mov    %eax,%ecx$/;"	l
f01074fe	obj/kern/kernel.asm	/^f01074fe:	d3 ef                	shr    %cl,%edi$/;"	d
f0107500	obj/kern/kernel.asm	/^f0107500:	09 d7                	or     %edx,%edi$/;"	l
f0107502	obj/kern/kernel.asm	/^f0107502:	89 f2                	mov    %esi,%edx$/;"	l
f0107504	obj/kern/kernel.asm	/^f0107504:	89 f8                	mov    %edi,%eax$/;"	l
f0107506	obj/kern/kernel.asm	/^f0107506:	f7 74 24 08          	divl   0x8(%esp)$/;"	l
f010750a	obj/kern/kernel.asm	/^f010750a:	89 d6                	mov    %edx,%esi$/;"	l
f010750c	obj/kern/kernel.asm	/^f010750c:	89 c7                	mov    %eax,%edi$/;"	l
f010750e	obj/kern/kernel.asm	/^f010750e:	f7 24 24             	mull   (%esp)$/;"	l
f0107511	obj/kern/kernel.asm	/^f0107511:	39 d6                	cmp    %edx,%esi$/;"	l
f0107513	obj/kern/kernel.asm	/^f0107513:	89 14 24             	mov    %edx,(%esp)$/;"	l
f0107516	obj/kern/kernel.asm	/^f0107516:	72 30                	jb     f0107548 <__udivdi3+0x118>$/;"	l
f0107518	obj/kern/kernel.asm	/^f0107518:	8b 54 24 04          	mov    0x4(%esp),%edx$/;"	l
f010751c	obj/kern/kernel.asm	/^f010751c:	89 e9                	mov    %ebp,%ecx$/;"	l
f010751e	obj/kern/kernel.asm	/^f010751e:	d3 e2                	shl    %cl,%edx$/;"	d
f0107520	obj/kern/kernel.asm	/^f0107520:	39 c2                	cmp    %eax,%edx$/;"	l
f0107522	obj/kern/kernel.asm	/^f0107522:	73 05                	jae    f0107529 <__udivdi3+0xf9>$/;"	l
f0107524	obj/kern/kernel.asm	/^f0107524:	3b 34 24             	cmp    (%esp),%esi$/;"	l
f0107527	obj/kern/kernel.asm	/^f0107527:	74 1f                	je     f0107548 <__udivdi3+0x118>$/;"	l
f0107529	obj/kern/kernel.asm	/^f0107529:	89 f8                	mov    %edi,%eax$/;"	l
f010752b	obj/kern/kernel.asm	/^f010752b:	31 d2                	xor    %edx,%edx$/;"	l
f010752d	obj/kern/kernel.asm	/^f010752d:	e9 7a ff ff ff       	jmp    f01074ac <__udivdi3+0x7c>$/;"	l
f0107532	obj/kern/kernel.asm	/^f0107532:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi$/;"	l
f0107538	obj/kern/kernel.asm	/^f0107538:	31 d2                	xor    %edx,%edx$/;"	l
f010753a	obj/kern/kernel.asm	/^f010753a:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f010753f	obj/kern/kernel.asm	/^f010753f:	e9 68 ff ff ff       	jmp    f01074ac <__udivdi3+0x7c>$/;"	l
f0107544	obj/kern/kernel.asm	/^f0107544:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f0107548	obj/kern/kernel.asm	/^f0107548:	8d 47 ff             	lea    -0x1(%edi),%eax$/;"	l
f010754b	obj/kern/kernel.asm	/^f010754b:	31 d2                	xor    %edx,%edx$/;"	l
f010754d	obj/kern/kernel.asm	/^f010754d:	83 c4 0c             	add    $0xc,%esp$/;"	l
f0107550	obj/kern/kernel.asm	/^f0107550:	5e                   	pop    %esi$/;"	l
f0107551	obj/kern/kernel.asm	/^f0107551:	5f                   	pop    %edi$/;"	l
f0107552	obj/kern/kernel.asm	/^f0107552:	5d                   	pop    %ebp$/;"	l
f0107553	obj/kern/kernel.asm	/^f0107553:	c3                   	ret    $/;"	l
f0107554	obj/kern/kernel.asm	/^f0107554:	66 90                	xchg   %ax,%ax$/;"	l
f0107556	obj/kern/kernel.asm	/^f0107556:	66 90                	xchg   %ax,%ax$/;"	l
f0107558	obj/kern/kernel.asm	/^f0107558:	66 90                	xchg   %ax,%ax$/;"	l
f010755a	obj/kern/kernel.asm	/^f010755a:	66 90                	xchg   %ax,%ax$/;"	l
f010755c	obj/kern/kernel.asm	/^f010755c:	66 90                	xchg   %ax,%ax$/;"	l
f010755e	obj/kern/kernel.asm	/^f010755e:	66 90                	xchg   %ax,%ax$/;"	l
f0107560	obj/kern/kernel.asm	/^f0107560 <__umoddi3>:$/;"	l
f0107560	obj/kern/kernel.asm	/^f0107560:	55                   	push   %ebp$/;"	l
f0107561	obj/kern/kernel.asm	/^f0107561:	57                   	push   %edi$/;"	l
f0107562	obj/kern/kernel.asm	/^f0107562:	56                   	push   %esi$/;"	l
f0107563	obj/kern/kernel.asm	/^f0107563:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0107566	obj/kern/kernel.asm	/^f0107566:	8b 44 24 28          	mov    0x28(%esp),%eax$/;"	l
f010756a	obj/kern/kernel.asm	/^f010756a:	8b 4c 24 24          	mov    0x24(%esp),%ecx$/;"	l
f010756e	obj/kern/kernel.asm	/^f010756e:	8b 74 24 2c          	mov    0x2c(%esp),%esi$/;"	l
f0107572	obj/kern/kernel.asm	/^f0107572:	89 c7                	mov    %eax,%edi$/;"	l
f0107574	obj/kern/kernel.asm	/^f0107574:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0107578	obj/kern/kernel.asm	/^f0107578:	8b 44 24 30          	mov    0x30(%esp),%eax$/;"	l
f010757c	obj/kern/kernel.asm	/^f010757c:	89 4c 24 10          	mov    %ecx,0x10(%esp)$/;"	l
f0107580	obj/kern/kernel.asm	/^f0107580:	89 34 24             	mov    %esi,(%esp)$/;"	l
f0107583	obj/kern/kernel.asm	/^f0107583:	89 4c 24 08          	mov    %ecx,0x8(%esp)$/;"	l
f0107587	obj/kern/kernel.asm	/^f0107587:	85 c0                	test   %eax,%eax$/;"	l
f0107589	obj/kern/kernel.asm	/^f0107589:	89 c2                	mov    %eax,%edx$/;"	l
f010758b	obj/kern/kernel.asm	/^f010758b:	89 7c 24 0c          	mov    %edi,0xc(%esp)$/;"	l
f010758f	obj/kern/kernel.asm	/^f010758f:	75 17                	jne    f01075a8 <__umoddi3+0x48>$/;"	l
f0107591	obj/kern/kernel.asm	/^f0107591:	39 fe                	cmp    %edi,%esi$/;"	l
f0107593	obj/kern/kernel.asm	/^f0107593:	76 4b                	jbe    f01075e0 <__umoddi3+0x80>$/;"	l
f0107595	obj/kern/kernel.asm	/^f0107595:	89 c8                	mov    %ecx,%eax$/;"	l
f0107597	obj/kern/kernel.asm	/^f0107597:	89 fa                	mov    %edi,%edx$/;"	l
f0107599	obj/kern/kernel.asm	/^f0107599:	f7 f6                	div    %esi$/;"	l
f010759b	obj/kern/kernel.asm	/^f010759b:	89 d0                	mov    %edx,%eax$/;"	l
f010759d	obj/kern/kernel.asm	/^f010759d:	31 d2                	xor    %edx,%edx$/;"	l
f010759f	obj/kern/kernel.asm	/^f010759f:	83 c4 14             	add    $0x14,%esp$/;"	l
f01075a2	obj/kern/kernel.asm	/^f01075a2:	5e                   	pop    %esi$/;"	l
f01075a3	obj/kern/kernel.asm	/^f01075a3:	5f                   	pop    %edi$/;"	l
f01075a4	obj/kern/kernel.asm	/^f01075a4:	5d                   	pop    %ebp$/;"	l
f01075a5	obj/kern/kernel.asm	/^f01075a5:	c3                   	ret    $/;"	l
f01075a6	obj/kern/kernel.asm	/^f01075a6:	66 90                	xchg   %ax,%ax$/;"	l
f01075a8	obj/kern/kernel.asm	/^f01075a8:	39 f8                	cmp    %edi,%eax$/;"	l
f01075aa	obj/kern/kernel.asm	/^f01075aa:	77 54                	ja     f0107600 <__umoddi3+0xa0>$/;"	l
f01075ac	obj/kern/kernel.asm	/^f01075ac:	0f bd e8             	bsr    %eax,%ebp$/;"	l
f01075af	obj/kern/kernel.asm	/^f01075af:	83 f5 1f             	xor    $0x1f,%ebp$/;"	l
f01075b2	obj/kern/kernel.asm	/^f01075b2:	75 5c                	jne    f0107610 <__umoddi3+0xb0>$/;"	l
f01075b4	obj/kern/kernel.asm	/^f01075b4:	8b 7c 24 08          	mov    0x8(%esp),%edi$/;"	l
f01075b8	obj/kern/kernel.asm	/^f01075b8:	39 3c 24             	cmp    %edi,(%esp)$/;"	l
f01075bb	obj/kern/kernel.asm	/^f01075bb:	0f 87 e7 00 00 00    	ja     f01076a8 <__umoddi3+0x148>$/;"	l
f01075c1	obj/kern/kernel.asm	/^f01075c1:	8b 7c 24 04          	mov    0x4(%esp),%edi$/;"	l
f01075c5	obj/kern/kernel.asm	/^f01075c5:	29 f1                	sub    %esi,%ecx$/;"	l
f01075c7	obj/kern/kernel.asm	/^f01075c7:	19 c7                	sbb    %eax,%edi$/;"	l
f01075c9	obj/kern/kernel.asm	/^f01075c9:	89 4c 24 08          	mov    %ecx,0x8(%esp)$/;"	l
f01075cd	obj/kern/kernel.asm	/^f01075cd:	89 7c 24 0c          	mov    %edi,0xc(%esp)$/;"	l
f01075d1	obj/kern/kernel.asm	/^f01075d1:	8b 44 24 08          	mov    0x8(%esp),%eax$/;"	l
f01075d5	obj/kern/kernel.asm	/^f01075d5:	8b 54 24 0c          	mov    0xc(%esp),%edx$/;"	l
f01075d9	obj/kern/kernel.asm	/^f01075d9:	83 c4 14             	add    $0x14,%esp$/;"	l
f01075dc	obj/kern/kernel.asm	/^f01075dc:	5e                   	pop    %esi$/;"	l
f01075dd	obj/kern/kernel.asm	/^f01075dd:	5f                   	pop    %edi$/;"	l
f01075de	obj/kern/kernel.asm	/^f01075de:	5d                   	pop    %ebp$/;"	l
f01075df	obj/kern/kernel.asm	/^f01075df:	c3                   	ret    $/;"	l
f01075e0	obj/kern/kernel.asm	/^f01075e0:	85 f6                	test   %esi,%esi$/;"	l
f01075e2	obj/kern/kernel.asm	/^f01075e2:	89 f5                	mov    %esi,%ebp$/;"	l
f01075e4	obj/kern/kernel.asm	/^f01075e4:	75 0b                	jne    f01075f1 <__umoddi3+0x91>$/;"	l
f01075e6	obj/kern/kernel.asm	/^f01075e6:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f01075eb	obj/kern/kernel.asm	/^f01075eb:	31 d2                	xor    %edx,%edx$/;"	l
f01075ed	obj/kern/kernel.asm	/^f01075ed:	f7 f6                	div    %esi$/;"	l
f01075ef	obj/kern/kernel.asm	/^f01075ef:	89 c5                	mov    %eax,%ebp$/;"	l
f01075f1	obj/kern/kernel.asm	/^f01075f1:	8b 44 24 04          	mov    0x4(%esp),%eax$/;"	l
f01075f5	obj/kern/kernel.asm	/^f01075f5:	31 d2                	xor    %edx,%edx$/;"	l
f01075f7	obj/kern/kernel.asm	/^f01075f7:	f7 f5                	div    %ebp$/;"	l
f01075f9	obj/kern/kernel.asm	/^f01075f9:	89 c8                	mov    %ecx,%eax$/;"	l
f01075fb	obj/kern/kernel.asm	/^f01075fb:	f7 f5                	div    %ebp$/;"	l
f01075fd	obj/kern/kernel.asm	/^f01075fd:	eb 9c                	jmp    f010759b <__umoddi3+0x3b>$/;"	l
f01075ff	obj/kern/kernel.asm	/^f01075ff:	90                   	nop$/;"	l
f0107600	obj/kern/kernel.asm	/^f0107600:	89 c8                	mov    %ecx,%eax$/;"	l
f0107602	obj/kern/kernel.asm	/^f0107602:	89 fa                	mov    %edi,%edx$/;"	l
f0107604	obj/kern/kernel.asm	/^f0107604:	83 c4 14             	add    $0x14,%esp$/;"	l
f0107607	obj/kern/kernel.asm	/^f0107607:	5e                   	pop    %esi$/;"	l
f0107608	obj/kern/kernel.asm	/^f0107608:	5f                   	pop    %edi$/;"	l
f0107609	obj/kern/kernel.asm	/^f0107609:	5d                   	pop    %ebp$/;"	l
f010760a	obj/kern/kernel.asm	/^f010760a:	c3                   	ret    $/;"	l
f010760b	obj/kern/kernel.asm	/^f010760b:	90                   	nop$/;"	l
f010760c	obj/kern/kernel.asm	/^f010760c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f0107610	obj/kern/kernel.asm	/^f0107610:	8b 04 24             	mov    (%esp),%eax$/;"	l
f0107613	obj/kern/kernel.asm	/^f0107613:	be 20 00 00 00       	mov    $0x20,%esi$/;"	l
f0107618	obj/kern/kernel.asm	/^f0107618:	89 e9                	mov    %ebp,%ecx$/;"	l
f010761a	obj/kern/kernel.asm	/^f010761a:	29 ee                	sub    %ebp,%esi$/;"	l
f010761c	obj/kern/kernel.asm	/^f010761c:	d3 e2                	shl    %cl,%edx$/;"	d
f010761e	obj/kern/kernel.asm	/^f010761e:	89 f1                	mov    %esi,%ecx$/;"	l
f0107620	obj/kern/kernel.asm	/^f0107620:	d3 e8                	shr    %cl,%eax$/;"	d
f0107622	obj/kern/kernel.asm	/^f0107622:	89 e9                	mov    %ebp,%ecx$/;"	l
f0107624	obj/kern/kernel.asm	/^f0107624:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
f0107628	obj/kern/kernel.asm	/^f0107628:	8b 04 24             	mov    (%esp),%eax$/;"	l
f010762b	obj/kern/kernel.asm	/^f010762b:	09 54 24 04          	or     %edx,0x4(%esp)$/;"	l
f010762f	obj/kern/kernel.asm	/^f010762f:	89 fa                	mov    %edi,%edx$/;"	l
f0107631	obj/kern/kernel.asm	/^f0107631:	d3 e0                	shl    %cl,%eax$/;"	d
f0107633	obj/kern/kernel.asm	/^f0107633:	89 f1                	mov    %esi,%ecx$/;"	l
f0107635	obj/kern/kernel.asm	/^f0107635:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
f0107639	obj/kern/kernel.asm	/^f0107639:	8b 44 24 10          	mov    0x10(%esp),%eax$/;"	l
f010763d	obj/kern/kernel.asm	/^f010763d:	d3 ea                	shr    %cl,%edx$/;"	d
f010763f	obj/kern/kernel.asm	/^f010763f:	89 e9                	mov    %ebp,%ecx$/;"	l
f0107641	obj/kern/kernel.asm	/^f0107641:	d3 e7                	shl    %cl,%edi$/;"	d
f0107643	obj/kern/kernel.asm	/^f0107643:	89 f1                	mov    %esi,%ecx$/;"	l
f0107645	obj/kern/kernel.asm	/^f0107645:	d3 e8                	shr    %cl,%eax$/;"	d
f0107647	obj/kern/kernel.asm	/^f0107647:	89 e9                	mov    %ebp,%ecx$/;"	l
f0107649	obj/kern/kernel.asm	/^f0107649:	09 f8                	or     %edi,%eax$/;"	l
f010764b	obj/kern/kernel.asm	/^f010764b:	8b 7c 24 10          	mov    0x10(%esp),%edi$/;"	l
f010764f	obj/kern/kernel.asm	/^f010764f:	f7 74 24 04          	divl   0x4(%esp)$/;"	l
f0107653	obj/kern/kernel.asm	/^f0107653:	d3 e7                	shl    %cl,%edi$/;"	d
f0107655	obj/kern/kernel.asm	/^f0107655:	89 7c 24 0c          	mov    %edi,0xc(%esp)$/;"	l
f0107659	obj/kern/kernel.asm	/^f0107659:	89 d7                	mov    %edx,%edi$/;"	l
f010765b	obj/kern/kernel.asm	/^f010765b:	f7 64 24 08          	mull   0x8(%esp)$/;"	l
f010765f	obj/kern/kernel.asm	/^f010765f:	39 d7                	cmp    %edx,%edi$/;"	l
f0107661	obj/kern/kernel.asm	/^f0107661:	89 c1                	mov    %eax,%ecx$/;"	l
f0107663	obj/kern/kernel.asm	/^f0107663:	89 14 24             	mov    %edx,(%esp)$/;"	l
f0107666	obj/kern/kernel.asm	/^f0107666:	72 2c                	jb     f0107694 <__umoddi3+0x134>$/;"	l
f0107668	obj/kern/kernel.asm	/^f0107668:	39 44 24 0c          	cmp    %eax,0xc(%esp)$/;"	l
f010766c	obj/kern/kernel.asm	/^f010766c:	72 22                	jb     f0107690 <__umoddi3+0x130>$/;"	l
f010766e	obj/kern/kernel.asm	/^f010766e:	8b 44 24 0c          	mov    0xc(%esp),%eax$/;"	l
f0107672	obj/kern/kernel.asm	/^f0107672:	29 c8                	sub    %ecx,%eax$/;"	l
f0107674	obj/kern/kernel.asm	/^f0107674:	19 d7                	sbb    %edx,%edi$/;"	l
f0107676	obj/kern/kernel.asm	/^f0107676:	89 e9                	mov    %ebp,%ecx$/;"	l
f0107678	obj/kern/kernel.asm	/^f0107678:	89 fa                	mov    %edi,%edx$/;"	l
f010767a	obj/kern/kernel.asm	/^f010767a:	d3 e8                	shr    %cl,%eax$/;"	d
f010767c	obj/kern/kernel.asm	/^f010767c:	89 f1                	mov    %esi,%ecx$/;"	l
f010767e	obj/kern/kernel.asm	/^f010767e:	d3 e2                	shl    %cl,%edx$/;"	d
f0107680	obj/kern/kernel.asm	/^f0107680:	89 e9                	mov    %ebp,%ecx$/;"	l
f0107682	obj/kern/kernel.asm	/^f0107682:	d3 ef                	shr    %cl,%edi$/;"	d
f0107684	obj/kern/kernel.asm	/^f0107684:	09 d0                	or     %edx,%eax$/;"	l
f0107686	obj/kern/kernel.asm	/^f0107686:	89 fa                	mov    %edi,%edx$/;"	l
f0107688	obj/kern/kernel.asm	/^f0107688:	83 c4 14             	add    $0x14,%esp$/;"	l
f010768b	obj/kern/kernel.asm	/^f010768b:	5e                   	pop    %esi$/;"	l
f010768c	obj/kern/kernel.asm	/^f010768c:	5f                   	pop    %edi$/;"	l
f010768d	obj/kern/kernel.asm	/^f010768d:	5d                   	pop    %ebp$/;"	l
f010768e	obj/kern/kernel.asm	/^f010768e:	c3                   	ret    $/;"	l
f010768f	obj/kern/kernel.asm	/^f010768f:	90                   	nop$/;"	l
f0107690	obj/kern/kernel.asm	/^f0107690:	39 d7                	cmp    %edx,%edi$/;"	l
f0107692	obj/kern/kernel.asm	/^f0107692:	75 da                	jne    f010766e <__umoddi3+0x10e>$/;"	l
f0107694	obj/kern/kernel.asm	/^f0107694:	8b 14 24             	mov    (%esp),%edx$/;"	l
f0107697	obj/kern/kernel.asm	/^f0107697:	89 c1                	mov    %eax,%ecx$/;"	l
f0107699	obj/kern/kernel.asm	/^f0107699:	2b 4c 24 08          	sub    0x8(%esp),%ecx$/;"	l
f010769d	obj/kern/kernel.asm	/^f010769d:	1b 54 24 04          	sbb    0x4(%esp),%edx$/;"	l
f01076a1	obj/kern/kernel.asm	/^f01076a1:	eb cb                	jmp    f010766e <__umoddi3+0x10e>$/;"	l
f01076a3	obj/kern/kernel.asm	/^f01076a3:	90                   	nop$/;"	l
f01076a4	obj/kern/kernel.asm	/^f01076a4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f01076a8	obj/kern/kernel.asm	/^f01076a8:	3b 44 24 0c          	cmp    0xc(%esp),%eax$/;"	l
f01076ac	obj/kern/kernel.asm	/^f01076ac:	0f 82 0f ff ff ff    	jb     f01075c1 <__umoddi3+0x61>$/;"	l
f01076b2	obj/kern/kernel.asm	/^f01076b2:	e9 1a ff ff ff       	jmp    f01075d1 <__umoddi3+0x71>$/;"	l
f_direct	inc/fs.h	/^	uint32_t f_direct[NDIRECT];	\/\/ direct blocks$/;"	m	struct:File
f_indirect	inc/fs.h	/^	uint32_t f_indirect;		\/\/ indirect block$/;"	m	struct:File
f_name	inc/fs.h	/^	char f_name[MAXNAMELEN];	\/\/ filename$/;"	m	struct:File
f_pad	inc/fs.h	/^	uint8_t f_pad[256 - MAXNAMELEN - 8 - 4*NDIRECT - 4];$/;"	m	struct:File
f_size	inc/fs.h	/^	off_t f_size;			\/\/ file size in bytes$/;"	m	struct:File
f_type	inc/fs.h	/^	uint32_t f_type;		\/\/ file type$/;"	m	struct:File
false	inc/types.h	/^enum { false, true };$/;"	e	enum:__anon7
fault_va	obj/kern/kernel.asm	/^	fault_va = rcr2();$/;"	d
fd	homework/hw2-shell/sh.c	/^  int fd;            \/\/ the file descriptor number to use for the file$/;"	m	struct:redircmd	file:
fd	lib/fprintf.c	/^	int fd;		\/\/ file descriptor$/;"	m	struct:printbuf	file:
fd	obj/fs/fs.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/fs/fs.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/badsegment.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/badsegment.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/breakpoint.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/breakpoint.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/buggyhello.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/buggyhello.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/buggyhello2.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/buggyhello2.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/cat.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/cat.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/divzero.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/divzero.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/dumbfork.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/dumbfork.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/echo.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/echo.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/evilhello.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/evilhello.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/fairness.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/fairness.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/faultalloc.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultalloc.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/faultallocbad.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultallocbad.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/faultbadhandler.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultbadhandler.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/faultdie.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultdie.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/faultevilhandler.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultevilhandler.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/faultnostack.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultnostack.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/faultread.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultread.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/faultreadkernel.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultreadkernel.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/faultregs.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultregs.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/faultwrite.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultwrite.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/faultwritekernel.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/faultwritekernel.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/forktree.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/forktree.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/hello.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/hello.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/icode.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/icode.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/icode.asm	/^	fd = r;$/;"	d
fd	obj/user/idle.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/idle.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/init.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/init.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/init.asm	/^	fd = r;$/;"	d
fd	obj/user/ls.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/ls.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/lsfd.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/lsfd.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/num.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/num.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/pingpong.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/pingpong.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/pingpongs.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/pingpongs.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/primes.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/primes.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/primespipe.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/primespipe.asm	/^		fd = pfd[0];$/;"	d
fd	obj/user/primespipe.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/sendpage.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/sendpage.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/sh.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/sh.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/sh.asm	/^	fd = r;$/;"	d
fd	obj/user/softint.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/softint.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/spawnhello.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/spawnhello.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/spawnhello.asm	/^	fd = r;$/;"	d
fd	obj/user/spin.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/spin.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/stresssched.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/stresssched.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/testbss.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/testbss.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/testfdsharing.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/testfdsharing.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/testfile.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/testfile.asm	/^	fd = (struct Fd*) (0xD0000000 + r*PGSIZE);$/;"	d
fd	obj/user/testfile.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/testkbd.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/testkbd.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/testpipe.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/testpipe.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/testpiperace.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/testpiperace.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/testpiperace2.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/testpiperace2.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/testpteshare.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/testpteshare.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/testpteshare.asm	/^	fd = r;$/;"	d
fd	obj/user/testshell.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/testshell.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/testshell.asm	/^	fd = r;$/;"	d
fd	obj/user/yield.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/yield.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd2data	lib/fd.c	/^fd2data(struct Fd *fd)$/;"	f
fd2num	lib/fd.c	/^fd2num(struct Fd *fd)$/;"	f
fd_alloc	lib/fd.c	/^fd_alloc(struct Fd **fd_store)$/;"	f
fd_close	lib/fd.c	/^fd_close(struct Fd *fd, bool must_exist)$/;"	f
fd_dev_id	inc/fd.h	/^	int fd_dev_id;$/;"	m	struct:Fd
fd_file	inc/fd.h	/^		struct FdFile fd_file;$/;"	m	union:Fd::__anon4	typeref:struct:Fd::__anon4::FdFile
fd_lookup	lib/fd.c	/^fd_lookup(int fdnum, struct Fd **fd_store)$/;"	f
fd_offset	inc/fd.h	/^	off_t fd_offset;$/;"	m	struct:Fd
fd_omode	inc/fd.h	/^	int fd_omode;$/;"	m	struct:Fd
fdcopy	obj/user/testfile.asm	/^	fdcopy = *FVA;$/;"	d
feature	kern/mpconfig.c	/^	uint32_t feature;               \/\/ feature flags from CPUID instruction$/;"	m	struct:mpproc	file:
file	homework/hw2-shell/sh.c	/^  char *file;        \/\/ the input\/output file$/;"	m	struct:redircmd	file:
file_block_walk	fs/fs.c	/^file_block_walk(struct File *f, uint32_t filebno, uint32_t **ppdiskbno, bool alloc)$/;"	f	file:
file_create	fs/fs.c	/^file_create(const char *path, struct File **pf)$/;"	f
file_flush	fs/fs.c	/^file_flush(struct File *f)$/;"	f
file_free_block	fs/fs.c	/^file_free_block(struct File *f, uint32_t filebno)$/;"	f	file:
file_get_block	fs/fs.c	/^file_get_block(struct File *f, uint32_t filebno, char **blk)$/;"	f
file_open	fs/fs.c	/^file_open(const char *path, struct File **pf)$/;"	f
file_read	fs/fs.c	/^file_read(struct File *f, void *buf, size_t count, off_t offset)$/;"	f
file_set_size	fs/fs.c	/^file_set_size(struct File *f, off_t newsize)$/;"	f
file_truncate_blocks	fs/fs.c	/^file_truncate_blocks(struct File *f, off_t newsize)$/;"	f	file:
file_write	fs/fs.c	/^file_write(struct File *f, const void *buf, size_t count, off_t offset)$/;"	f
fileid	obj/fs/fs.asm	/^	fileid = r;$/;"	d
fileno	gradelib.py	/^    def fileno(self):$/;"	f
fileno	gradelib.py	/^    def fileno(self):$/;"	m	class:GDBClient
finishdir	fs/fsformat.c	/^finishdir(struct Dir *d)$/;"	f
finishdisk	fs/fsformat.c	/^finishdisk(void)$/;"	f
finishfile	fs/fsformat.c	/^finishfile(struct File *f, uint32_t start, uint32_t len)$/;"	f
first_free_page	obj/kern/kernel.asm	/^	first_free_page = (char *) boot_alloc(0);$/;"	d
fl	obj/kern/kernel.asm	/^	fl = page_free_list;$/;"	d
flag	user/ls.c	/^int flag[256];$/;"	v
flags	kern/mpconfig.c	/^	uint8_t flags;                  \/\/ CPU flags$/;"	m	struct:mpproc	file:
flush	inc/fs.h	/^	} flush;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsreq_flush
flush_block	fs/bc.c	/^flush_block(void *addr)$/;"	f
fork	lib/fork.c	/^fork(void)$/;"	f
fork1	homework/hw2-shell/sh.c	/^fork1(void)$/;"	f
forkchild	user/forktree.c	/^forkchild(const char *cur, char branch)$/;"	f
forktree	user/forktree.c	/^forktree(const char *cur)$/;"	f
fprintf	lib/fprintf.c	/^fprintf(int fd, const char *fmt, ...)$/;"	f
free_block	fs/fs.c	/^free_block(uint32_t blockno)$/;"	f
fs_init	fs/fs.c	/^fs_init(void)$/;"	f
fs_sync	fs/fs.c	/^fs_sync(void)$/;"	f
fs_test	fs/test.c	/^fs_test(void)$/;"	f
fsenv	obj/fs/fs.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/badsegment.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/breakpoint.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/buggyhello.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/buggyhello2.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/cat.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/divzero.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/dumbfork.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/echo.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/evilhello.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/fairness.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/faultalloc.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/faultallocbad.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/faultbadhandler.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/faultdie.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/faultevilhandler.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/faultnostack.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/faultread.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/faultreadkernel.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/faultregs.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/faultwrite.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/faultwritekernel.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/forktree.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/hello.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/icode.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/idle.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/init.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/ls.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/lsfd.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/num.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/pingpong.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/pingpongs.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/primes.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/primespipe.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/sendpage.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/sh.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/softint.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/spawnhello.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/spin.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/stresssched.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/testbss.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/testfdsharing.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/testfile.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/testfile.asm	/^	fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/testkbd.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/testpipe.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/testpiperace.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/testpiperace2.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/testpteshare.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/testshell.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/yield.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fshandler	fs/serv.c	/^typedef int (*fshandler)(envid_t envid, union Fsipc *req);$/;"	t	file:
fsipc	lib/file.c	/^fsipc(unsigned type, void *dstva)$/;"	f	file:
fsipcbuf	lib/file.c	/^union Fsipc fsipcbuf __attribute__((aligned(PGSIZE)));$/;"	v	typeref:union:Fsipc
fsreq	fs/serv.c	/^union Fsipc *fsreq = (union Fsipc *)0x0ffff000;$/;"	v	typeref:union:Fsipc
fstat	lib/fd.c	/^fstat(int fdnum, struct Stat *stat)$/;"	f
ftruncate	lib/fd.c	/^ftruncate(int fdnum, off_t newsize)$/;"	f
func	kern/monitor.c	/^	int (*func)(int argc, char** argv, struct Trapframe* tf);$/;"	m	struct:Command	file:
gd_args	inc/mmu.h	/^	unsigned gd_args : 5;        \/\/ # args, 0 for interrupt\/trap gates$/;"	m	struct:Gatedesc
gd_dpl	inc/mmu.h	/^	unsigned gd_dpl : 2;         \/\/ descriptor(meaning new) privilege level$/;"	m	struct:Gatedesc
gd_off_15_0	inc/mmu.h	/^	unsigned gd_off_15_0 : 16;   \/\/ low 16 bits of offset in segment$/;"	m	struct:Gatedesc
gd_off_31_16	inc/mmu.h	/^	unsigned gd_off_31_16 : 16;  \/\/ high bits of offset in segment$/;"	m	struct:Gatedesc
gd_p	inc/mmu.h	/^	unsigned gd_p : 1;           \/\/ Present$/;"	m	struct:Gatedesc
gd_rsv1	inc/mmu.h	/^	unsigned gd_rsv1 : 3;        \/\/ reserved(should be zero I guess)$/;"	m	struct:Gatedesc
gd_s	inc/mmu.h	/^	unsigned gd_s : 1;           \/\/ must be 0 (system)$/;"	m	struct:Gatedesc
gd_sel	inc/mmu.h	/^	unsigned gd_sel : 16;        \/\/ segment selector$/;"	m	struct:Gatedesc
gd_type	inc/mmu.h	/^	unsigned gd_type : 4;        \/\/ type(STS_{TG,IG32,TG32})$/;"	m	struct:Gatedesc
gdt	boot/boot.S	/^gdt:$/;"	l
gdt	kern/env.c	/^struct Segdesc gdt[NCPU + 5] =$/;"	v	typeref:struct:Segdesc
gdt	kern/mpentry.S	/^gdt:$/;"	l
gdt_pd	kern/env.c	/^struct Pseudodesc gdt_pd = {$/;"	v	typeref:struct:Pseudodesc
gdtdesc	boot/boot.S	/^gdtdesc:$/;"	l
gdtdesc	kern/mpentry.S	/^gdtdesc:$/;"	l
gen_primes	grade-lab5	/^def gen_primes(n):$/;"	f
generation	obj/kern/kernel.asm	/^		generation = 1 << ENVGENSHIFT;$/;"	d
generation	obj/kern/kernel.asm	/^	generation = (e->env_id + (1 << ENVGENSHIFT)) & ~(NENV - 1);$/;"	d
get	ph.c	/^get(int key)$/;"	f	file:
get_caller_pcs	kern/spinlock.c	/^get_caller_pcs(uint32_t pcs[])$/;"	f	file:
get_current_test	gradelib.py	/^def get_current_test():$/;"	f
get_gdb_port	gradelib.py	/^    def get_gdb_port():$/;"	f
getchar	kern/console.c	/^getchar(void)$/;"	f
getchar	lib/console.c	/^getchar(void)$/;"	f
getcmd	homework/hw2-shell/sh.c	/^getcmd(char *buf, int nbuf)$/;"	f
getint	lib/printfmt.c	/^getint(va_list *ap, int lflag)$/;"	f	file:
gettoken	homework/hw2-shell/sh.c	/^gettoken(char **ps, char *es, char **q, char **eq)$/;"	f
gettoken	user/sh.c	/^gettoken(char *s, char **p1)$/;"	f
getuint	lib/printfmt.c	/^getuint(va_list *ap, int lflag)$/;"	f	file:
handle_output	gradelib.py	/^        def handle_output(output):$/;"	f	function:call_on_line.setup_call_on_line
handle_read	gradelib.py	/^    def handle_read(self):$/;"	f
handle_read	gradelib.py	/^    def handle_read(self):$/;"	m	class:GDBClient
handler	user/faultalloc.c	/^handler(struct UTrapframe *utf)$/;"	f
handler	user/faultallocbad.c	/^handler(struct UTrapframe *utf)$/;"	f
handler	user/faultdie.c	/^handler(struct UTrapframe *utf)$/;"	f
handlers	fs/serv.c	/^fshandler handlers[] = {$/;"	v
hello	user/buggyhello2.c	/^const char *hello = "hello, world\\n";$/;"	v
help	kern/monitor.h	/^MON_CMD_DECL(help);$/;"	v
holding	kern/spinlock.c	/^holding(struct spinlock *lock)$/;"	f	file:
i	obj/kern/kernel.asm	/^			i = conf->entry;$/;"	d
i	obj/kern/kernel.asm	/^	i = 0;$/;"	d
i	obj/user/pingpongs.asm	/^	i = 0;$/;"	d
i	obj/user/primes.asm	/^		i = ipc_recv(&envid, 0, 0);$/;"	d
i	obj/user/sh.asm	/^	i = 0;$/;"	d
i	obj/user/testkbd.asm	/^	i = 0;$/;"	d
i	obj/user/testpipe.asm	/^		i = readn(p[0], buf, sizeof buf-1);$/;"	d
i386_detect_memory	kern/pmap.c	/^i386_detect_memory(void)$/;"	f	file:
i386_init	kern/init.c	/^i386_init(void)$/;"	f
id	inc/fd.h	/^	int id;$/;"	m	struct:FdFile
id	obj/user/fairness.asm	/^	id = sys_getenvid();$/;"	d
ide_probe_disk1	fs/ide.c	/^ide_probe_disk1(void)$/;"	f
ide_read	fs/ide.c	/^ide_read(uint32_t secno, void *dst, size_t nsecs)$/;"	f
ide_set_disk	fs/ide.c	/^ide_set_disk(int d)$/;"	f
ide_wait_ready	fs/ide.c	/^ide_wait_ready(bool check_error)$/;"	f	file:
ide_write	fs/ide.c	/^ide_write(uint32_t secno, const void *src, size_t nsecs)$/;"	f
idt	kern/trap.c	/^struct Gatedesc idt[256] = { { 0 } };$/;"	v	typeref:struct:Gatedesc
idt_pd	kern/trap.c	/^struct Pseudodesc idt_pd = {$/;"	v	typeref:struct:Pseudodesc
idx	lib/fprintf.c	/^	int idx;	\/\/ current buffer index$/;"	m	struct:printbuf	file:
idx	lib/printf.c	/^	int idx;	\/\/ current buffer index$/;"	m	struct:printbuf	file:
imcrp	kern/mpconfig.c	/^	uint8_t imcrp;$/;"	m	struct:mp	file:
inb	inc/x86.h	/^inb(int port)$/;"	f
init_stack	lib/spawn.c	/^init_stack(envid_t child, const char **argv, uintptr_t *init_esp)$/;"	f	file:
inl	inc/x86.h	/^inl(int port)$/;"	f
inline	obj/kern/kernel.asm	/^inline static int $/;"	l
insb	inc/x86.h	/^insb(int port, void *addr, int cnt)$/;"	f
insert	ph.c	/^insert(int key, int value, struct entry **p, struct entry *n)$/;"	f	file:
insl	inc/x86.h	/^insl(int port, void *addr, int cnt)$/;"	f
insw	inc/x86.h	/^insw(int port, void *addr, int cnt)$/;"	f
int	obj/fs/fs.asm	/^int$/;"	l
int	obj/kern/kernel.asm	/^int $/;"	l
int	obj/kern/kernel.asm	/^int$/;"	l
int	obj/user/badsegment.asm	/^int$/;"	l
int	obj/user/breakpoint.asm	/^int$/;"	l
int	obj/user/buggyhello.asm	/^int$/;"	l
int	obj/user/buggyhello2.asm	/^int$/;"	l
int	obj/user/cat.asm	/^int$/;"	l
int	obj/user/divzero.asm	/^int zero;$/;"	l
int	obj/user/divzero.asm	/^int$/;"	l
int	obj/user/dumbfork.asm	/^int$/;"	l
int	obj/user/echo.asm	/^int$/;"	l
int	obj/user/evilhello.asm	/^int$/;"	l
int	obj/user/fairness.asm	/^int$/;"	l
int	obj/user/faultalloc.asm	/^int$/;"	l
int	obj/user/faultallocbad.asm	/^int$/;"	l
int	obj/user/faultbadhandler.asm	/^int$/;"	l
int	obj/user/faultdie.asm	/^int$/;"	l
int	obj/user/faultevilhandler.asm	/^int$/;"	l
int	obj/user/faultnostack.asm	/^int$/;"	l
int	obj/user/faultread.asm	/^int$/;"	l
int	obj/user/faultreadkernel.asm	/^int$/;"	l
int	obj/user/faultregs.asm	/^int$/;"	l
int	obj/user/faultwrite.asm	/^int$/;"	l
int	obj/user/faultwritekernel.asm	/^int$/;"	l
int	obj/user/forktree.asm	/^int$/;"	l
int	obj/user/hello.asm	/^int$/;"	l
int	obj/user/icode.asm	/^int$/;"	l
int	obj/user/idle.asm	/^int$/;"	l
int	obj/user/init.asm	/^int$/;"	l
int	obj/user/ls.asm	/^int$/;"	l
int	obj/user/lsfd.asm	/^int$/;"	l
int	obj/user/num.asm	/^int bol = 1;$/;"	l
int	obj/user/num.asm	/^int line = 0;$/;"	l
int	obj/user/num.asm	/^int$/;"	l
int	obj/user/pingpong.asm	/^int$/;"	l
int	obj/user/pingpongs.asm	/^int$/;"	l
int	obj/user/primes.asm	/^int$/;"	l
int	obj/user/primespipe.asm	/^int$/;"	l
int	obj/user/sendpage.asm	/^int$/;"	l
int	obj/user/sh.asm	/^int$/;"	l
int	obj/user/softint.asm	/^int$/;"	l
int	obj/user/spawnhello.asm	/^int$/;"	l
int	obj/user/spin.asm	/^int$/;"	l
int	obj/user/stresssched.asm	/^int$/;"	l
int	obj/user/testbss.asm	/^int$/;"	l
int	obj/user/testfdsharing.asm	/^int$/;"	l
int	obj/user/testfile.asm	/^int$/;"	l
int	obj/user/testkbd.asm	/^int$/;"	l
int	obj/user/testpipe.asm	/^int$/;"	l
int	obj/user/testpiperace.asm	/^int$/;"	l
int	obj/user/testpiperace2.asm	/^int$/;"	l
int	obj/user/testpteshare.asm	/^int$/;"	l
int	obj/user/testshell.asm	/^int$/;"	l
int	obj/user/yield.asm	/^int$/;"	l
int16_t	inc/types.h	/^typedef short int16_t;$/;"	t
int32_t	inc/types.h	/^typedef int int32_t;$/;"	t
int32_t	obj/fs/fs.asm	/^int32_t$/;"	l
int32_t	obj/kern/kernel.asm	/^int32_t$/;"	l
int32_t	obj/user/badsegment.asm	/^int32_t$/;"	l
int32_t	obj/user/breakpoint.asm	/^int32_t$/;"	l
int32_t	obj/user/buggyhello.asm	/^int32_t$/;"	l
int32_t	obj/user/buggyhello2.asm	/^int32_t$/;"	l
int32_t	obj/user/cat.asm	/^int32_t$/;"	l
int32_t	obj/user/divzero.asm	/^int32_t$/;"	l
int32_t	obj/user/dumbfork.asm	/^int32_t$/;"	l
int32_t	obj/user/echo.asm	/^int32_t$/;"	l
int32_t	obj/user/evilhello.asm	/^int32_t$/;"	l
int32_t	obj/user/fairness.asm	/^int32_t$/;"	l
int32_t	obj/user/faultalloc.asm	/^int32_t$/;"	l
int32_t	obj/user/faultallocbad.asm	/^int32_t$/;"	l
int32_t	obj/user/faultbadhandler.asm	/^int32_t$/;"	l
int32_t	obj/user/faultdie.asm	/^int32_t$/;"	l
int32_t	obj/user/faultevilhandler.asm	/^int32_t$/;"	l
int32_t	obj/user/faultnostack.asm	/^int32_t$/;"	l
int32_t	obj/user/faultread.asm	/^int32_t$/;"	l
int32_t	obj/user/faultreadkernel.asm	/^int32_t$/;"	l
int32_t	obj/user/faultregs.asm	/^int32_t$/;"	l
int32_t	obj/user/faultwrite.asm	/^int32_t$/;"	l
int32_t	obj/user/faultwritekernel.asm	/^int32_t$/;"	l
int32_t	obj/user/forktree.asm	/^int32_t$/;"	l
int32_t	obj/user/hello.asm	/^int32_t$/;"	l
int32_t	obj/user/icode.asm	/^int32_t$/;"	l
int32_t	obj/user/idle.asm	/^int32_t$/;"	l
int32_t	obj/user/init.asm	/^int32_t$/;"	l
int32_t	obj/user/ls.asm	/^int32_t$/;"	l
int32_t	obj/user/lsfd.asm	/^int32_t$/;"	l
int32_t	obj/user/num.asm	/^int32_t$/;"	l
int32_t	obj/user/pingpong.asm	/^int32_t$/;"	l
int32_t	obj/user/pingpongs.asm	/^int32_t$/;"	l
int32_t	obj/user/primes.asm	/^int32_t$/;"	l
int32_t	obj/user/primespipe.asm	/^int32_t$/;"	l
int32_t	obj/user/sendpage.asm	/^int32_t$/;"	l
int32_t	obj/user/sh.asm	/^int32_t$/;"	l
int32_t	obj/user/softint.asm	/^int32_t$/;"	l
int32_t	obj/user/spawnhello.asm	/^int32_t$/;"	l
int32_t	obj/user/spin.asm	/^int32_t$/;"	l
int32_t	obj/user/stresssched.asm	/^int32_t$/;"	l
int32_t	obj/user/testbss.asm	/^int32_t$/;"	l
int32_t	obj/user/testfdsharing.asm	/^int32_t$/;"	l
int32_t	obj/user/testfile.asm	/^int32_t$/;"	l
int32_t	obj/user/testkbd.asm	/^int32_t$/;"	l
int32_t	obj/user/testpipe.asm	/^int32_t$/;"	l
int32_t	obj/user/testpiperace.asm	/^int32_t$/;"	l
int32_t	obj/user/testpiperace2.asm	/^int32_t$/;"	l
int32_t	obj/user/testpteshare.asm	/^int32_t$/;"	l
int32_t	obj/user/testshell.asm	/^int32_t$/;"	l
int32_t	obj/user/yield.asm	/^int32_t$/;"	l
int64_t	inc/types.h	/^typedef long long int64_t;$/;"	t
int8_t	inc/types.h	/^typedef __signed char int8_t;$/;"	t
interactive	obj/user/sh.asm	/^			interactive = 1;$/;"	d
interactive	obj/user/sh.asm	/^		interactive = iscons(0);$/;"	d
interactive	obj/user/sh.asm	/^	interactive = '?';$/;"	d
intptr_t	inc/types.h	/^typedef int32_t intptr_t;$/;"	t
invlpg	inc/x86.h	/^invlpg(void *addr)$/;"	f
inw	inc/x86.h	/^inw(int port)$/;"	f
ipc_find_env	lib/ipc.c	/^ipc_find_env(enum EnvType type)$/;"	f
ipc_recv	lib/ipc.c	/^ipc_recv(envid_t *from_env_store, void *pg, int *perm_store)$/;"	f
ipc_send	lib/ipc.c	/^ipc_send(envid_t to_env, uint32_t val, void *pg, int perm)$/;"	f
irq_mask_8259A	kern/picirq.c	/^uint16_t irq_mask_8259A = 0xFFFF & ~(1<<IRQ_SLAVE);$/;"	v
irq_mask_8259A	obj/kern/kernel.asm	/^	irq_mask_8259A = mask;$/;"	d
irq_setmask_8259A	kern/picirq.c	/^irq_setmask_8259A(uint16_t mask)$/;"	f
iscons	kern/console.c	/^iscons(int fdnum)$/;"	f
iscons	lib/console.c	/^iscons(int fdnum)$/;"	f
ismp	kern/mpconfig.c	/^int ismp;$/;"	v
ismp	obj/kern/kernel.asm	/^			ismp = 0;$/;"	d
ismp	obj/kern/kernel.asm	/^	ismp = 1;$/;"	d
kbd_init	kern/console.c	/^kbd_init(void)$/;"	f	file:
kbd_intr	kern/console.c	/^kbd_intr(void)$/;"	f
kbd_proc_data	kern/console.c	/^kbd_proc_data(void)$/;"	f	file:
kern_pgdir	kern/pmap.c	/^pde_t *kern_pgdir;		\/\/ Kernel's initial page directory$/;"	v
kern_pgdir	obj/kern/kernel.asm	/^	kern_pgdir = (pde_t *) boot_alloc(PGSIZE);$/;"	d
kernel_lock	kern/spinlock.c	/^struct spinlock kernel_lock = {$/;"	v	typeref:struct:spinlock
kerninfo	kern/monitor.h	/^MON_CMD_DECL(kerninfo);$/;"	v
key	ph.c	/^	int key;$/;"	m	struct:entry	file:
keys	ph.c	/^int keys[NKEYS];$/;"	v
kid	obj/user/testpiperace.asm	/^	kid = &envs[ENVX(pid)];$/;"	d
kid	obj/user/testpiperace2.asm	/^	kid = &envs[ENVX(r)];$/;"	d
kill	gradelib.py	/^    def kill(self):$/;"	f
l	obj/kern/kernel.asm	/^			l = m;$/;"	d
l	obj/kern/kernel.asm	/^			l = true_m + 1;$/;"	d
lapic	kern/lapic.c	/^volatile uint32_t *lapic;$/;"	v
lapic	obj/kern/kernel.asm	/^	lapic = mmio_map_region(lapicaddr, 4096);$/;"	d
lapic_eoi	kern/lapic.c	/^lapic_eoi(void)$/;"	f
lapic_init	kern/lapic.c	/^lapic_init(void)$/;"	f
lapic_ipi	kern/lapic.c	/^lapic_ipi(int vector)$/;"	f
lapic_startap	kern/lapic.c	/^lapic_startap(uint8_t apicid, uint32_t addr)$/;"	f
lapicaddr	kern/lapic.c	/^physaddr_t lapicaddr;        \/\/ Initialized in mpconfig.c$/;"	v
lapicaddr	kern/mpconfig.c	/^	physaddr_t lapicaddr;           \/\/ address of local APIC$/;"	m	struct:mpconf	file:
lapicaddr	obj/kern/kernel.asm	/^		lapicaddr = 0;$/;"	d
lapicaddr	obj/kern/kernel.asm	/^	lapicaddr = conf->lapicaddr;$/;"	d
lapicw	kern/lapic.c	/^lapicw(int index, int value)$/;"	f	file:
last_tf	kern/trap.c	/^static struct Trapframe *last_tf;$/;"	v	typeref:struct:Trapframe	file:
last_tf	obj/kern/kernel.asm	/^	last_tf = tf;$/;"	d
lba_length	inc/partition.h	/^	uint32_t lba_length;$/;"	m	struct:Partitiondesc
lba_start	inc/partition.h	/^	uint32_t lba_start;$/;"	m	struct:Partitiondesc
lcr0	inc/x86.h	/^lcr0(uint32_t val)$/;"	f
lcr3	inc/x86.h	/^lcr3(uint32_t val)$/;"	f
lcr4	inc/x86.h	/^lcr4(uint32_t val)$/;"	f
left	homework/hw2-shell/sh.c	/^  struct cmd *left;  \/\/ left side of pipe$/;"	m	struct:pipecmd	typeref:struct:pipecmd::cmd	file:
length	kern/mpconfig.c	/^	uint16_t length;                \/\/ total table length$/;"	m	struct:mpconf	file:
length	kern/mpconfig.c	/^	uint8_t length;                 \/\/ 1$/;"	m	struct:mp	file:
lfile	obj/kern/kernel.asm	/^	lfile = 0;$/;"	d
lflag	obj/fs/fs.asm	/^		lflag = 0;$/;"	d
lflag	obj/kern/kernel.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/badsegment.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/breakpoint.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/buggyhello.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/buggyhello2.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/cat.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/divzero.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/dumbfork.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/echo.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/evilhello.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/fairness.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultalloc.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultallocbad.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultbadhandler.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultdie.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultevilhandler.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultnostack.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultread.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultreadkernel.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultregs.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultwrite.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultwritekernel.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/forktree.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/hello.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/icode.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/idle.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/init.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/ls.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/lsfd.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/num.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/pingpong.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/pingpongs.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/primes.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/primespipe.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/sendpage.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/sh.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/softint.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/spawnhello.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/spin.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/stresssched.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/testbss.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/testfdsharing.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/testfile.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/testkbd.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/testpipe.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/testpiperace.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/testpiperace2.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/testpteshare.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/testshell.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/yield.asm	/^		lflag = 0;$/;"	d
lfun	obj/kern/kernel.asm	/^	lfun = lfile;$/;"	d
lgdt	inc/x86.h	/^lgdt(void *p)$/;"	f
libmain	lib/libmain.c	/^libmain(int argc, char **argv)$/;"	f
lidt	inc/x86.h	/^lidt(void *p)$/;"	f
line	user/num.c	/^int line = 0;$/;"	v
lldt	inc/x86.h	/^lldt(uint16_t sel)$/;"	f
lline	obj/kern/kernel.asm	/^		lline = lfile;$/;"	d
lline	obj/kern/kernel.asm	/^		lline = lfun;$/;"	d
load_icode	kern/env.c	/^load_icode(struct Env *e, uint8_t *binary)$/;"	f	file:
lock_kernel	kern/spinlock.h	/^lock_kernel(void)$/;"	f
locked	kern/spinlock.h	/^	unsigned locked;       \/\/ Is the lock held?$/;"	m	struct:spinlock
locks	ph.c	/^pthread_mutex_t locks[NBUCKET];$/;"	v
long	obj/fs/fs.asm	/^long$/;"	l
long	obj/kern/kernel.asm	/^long$/;"	l
long	obj/user/badsegment.asm	/^long$/;"	l
long	obj/user/breakpoint.asm	/^long$/;"	l
long	obj/user/buggyhello.asm	/^long$/;"	l
long	obj/user/buggyhello2.asm	/^long$/;"	l
long	obj/user/cat.asm	/^long$/;"	l
long	obj/user/divzero.asm	/^long$/;"	l
long	obj/user/dumbfork.asm	/^long$/;"	l
long	obj/user/echo.asm	/^long$/;"	l
long	obj/user/evilhello.asm	/^long$/;"	l
long	obj/user/fairness.asm	/^long$/;"	l
long	obj/user/faultalloc.asm	/^long$/;"	l
long	obj/user/faultallocbad.asm	/^long$/;"	l
long	obj/user/faultbadhandler.asm	/^long$/;"	l
long	obj/user/faultdie.asm	/^long$/;"	l
long	obj/user/faultevilhandler.asm	/^long$/;"	l
long	obj/user/faultnostack.asm	/^long$/;"	l
long	obj/user/faultread.asm	/^long$/;"	l
long	obj/user/faultreadkernel.asm	/^long$/;"	l
long	obj/user/faultregs.asm	/^long$/;"	l
long	obj/user/faultwrite.asm	/^long$/;"	l
long	obj/user/faultwritekernel.asm	/^long$/;"	l
long	obj/user/forktree.asm	/^long$/;"	l
long	obj/user/hello.asm	/^long$/;"	l
long	obj/user/icode.asm	/^long$/;"	l
long	obj/user/idle.asm	/^long$/;"	l
long	obj/user/init.asm	/^long$/;"	l
long	obj/user/ls.asm	/^long$/;"	l
long	obj/user/lsfd.asm	/^long$/;"	l
long	obj/user/num.asm	/^long$/;"	l
long	obj/user/pingpong.asm	/^long$/;"	l
long	obj/user/pingpongs.asm	/^long$/;"	l
long	obj/user/primes.asm	/^long$/;"	l
long	obj/user/primespipe.asm	/^long$/;"	l
long	obj/user/sendpage.asm	/^long$/;"	l
long	obj/user/sh.asm	/^long$/;"	l
long	obj/user/softint.asm	/^long$/;"	l
long	obj/user/spawnhello.asm	/^long$/;"	l
long	obj/user/spin.asm	/^long$/;"	l
long	obj/user/stresssched.asm	/^long$/;"	l
long	obj/user/testbss.asm	/^long$/;"	l
long	obj/user/testfdsharing.asm	/^long$/;"	l
long	obj/user/testfile.asm	/^long$/;"	l
long	obj/user/testkbd.asm	/^long$/;"	l
long	obj/user/testpipe.asm	/^long$/;"	l
long	obj/user/testpiperace.asm	/^long$/;"	l
long	obj/user/testpiperace2.asm	/^long$/;"	l
long	obj/user/testpteshare.asm	/^long$/;"	l
long	obj/user/testshell.asm	/^long$/;"	l
long	obj/user/yield.asm	/^long$/;"	l
lpt_putc	kern/console.c	/^lpt_putc(int c)$/;"	f	file:
ls	user/ls.c	/^ls(const char *path, const char *prefix)$/;"	f
ls1	user/ls.c	/^ls1(const char *prefix, bool isdir, off_t size, const char *name)$/;"	f
lsdir	user/ls.c	/^lsdir(const char *path, const char *prefix)$/;"	f
ltr	inc/x86.h	/^ltr(uint16_t sel)$/;"	f
m	obj/fs/fs.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/fs/fs.asm	/^		m = n - tot;$/;"	d
m	obj/fs/fs.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/badsegment.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/badsegment.asm	/^		m = n - tot;$/;"	d
m	obj/user/badsegment.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/breakpoint.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/breakpoint.asm	/^		m = n - tot;$/;"	d
m	obj/user/breakpoint.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/buggyhello.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/buggyhello.asm	/^		m = n - tot;$/;"	d
m	obj/user/buggyhello.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/buggyhello2.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/buggyhello2.asm	/^		m = n - tot;$/;"	d
m	obj/user/buggyhello2.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/cat.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/cat.asm	/^		m = n - tot;$/;"	d
m	obj/user/cat.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/divzero.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/divzero.asm	/^		m = n - tot;$/;"	d
m	obj/user/divzero.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/dumbfork.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/dumbfork.asm	/^		m = n - tot;$/;"	d
m	obj/user/dumbfork.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/echo.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/echo.asm	/^		m = n - tot;$/;"	d
m	obj/user/echo.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/evilhello.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/evilhello.asm	/^		m = n - tot;$/;"	d
m	obj/user/evilhello.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/fairness.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/fairness.asm	/^		m = n - tot;$/;"	d
m	obj/user/fairness.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/faultalloc.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/faultalloc.asm	/^		m = n - tot;$/;"	d
m	obj/user/faultalloc.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/faultallocbad.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/faultallocbad.asm	/^		m = n - tot;$/;"	d
m	obj/user/faultallocbad.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/faultbadhandler.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/faultbadhandler.asm	/^		m = n - tot;$/;"	d
m	obj/user/faultbadhandler.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/faultdie.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/faultdie.asm	/^		m = n - tot;$/;"	d
m	obj/user/faultdie.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/faultevilhandler.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/faultevilhandler.asm	/^		m = n - tot;$/;"	d
m	obj/user/faultevilhandler.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/faultnostack.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/faultnostack.asm	/^		m = n - tot;$/;"	d
m	obj/user/faultnostack.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/faultread.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/faultread.asm	/^		m = n - tot;$/;"	d
m	obj/user/faultread.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/faultreadkernel.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/faultreadkernel.asm	/^		m = n - tot;$/;"	d
m	obj/user/faultreadkernel.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/faultregs.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/faultregs.asm	/^		m = n - tot;$/;"	d
m	obj/user/faultregs.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/faultwrite.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/faultwrite.asm	/^		m = n - tot;$/;"	d
m	obj/user/faultwrite.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/faultwritekernel.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/faultwritekernel.asm	/^		m = n - tot;$/;"	d
m	obj/user/faultwritekernel.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/forktree.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/forktree.asm	/^		m = n - tot;$/;"	d
m	obj/user/forktree.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/hello.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/hello.asm	/^		m = n - tot;$/;"	d
m	obj/user/hello.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/icode.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/icode.asm	/^		m = n - tot;$/;"	d
m	obj/user/icode.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/idle.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/idle.asm	/^		m = n - tot;$/;"	d
m	obj/user/idle.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/init.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/init.asm	/^		m = n - tot;$/;"	d
m	obj/user/init.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/ls.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/ls.asm	/^		m = n - tot;$/;"	d
m	obj/user/ls.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/lsfd.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/lsfd.asm	/^		m = n - tot;$/;"	d
m	obj/user/lsfd.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/num.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/num.asm	/^		m = n - tot;$/;"	d
m	obj/user/num.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/pingpong.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/pingpong.asm	/^		m = n - tot;$/;"	d
m	obj/user/pingpong.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/pingpongs.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/pingpongs.asm	/^		m = n - tot;$/;"	d
m	obj/user/pingpongs.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/primes.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/primes.asm	/^		m = n - tot;$/;"	d
m	obj/user/primes.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/primespipe.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/primespipe.asm	/^		m = n - tot;$/;"	d
m	obj/user/primespipe.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/sendpage.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/sendpage.asm	/^		m = n - tot;$/;"	d
m	obj/user/sendpage.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/sh.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/sh.asm	/^		m = n - tot;$/;"	d
m	obj/user/sh.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/softint.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/softint.asm	/^		m = n - tot;$/;"	d
m	obj/user/softint.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/spawnhello.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/spawnhello.asm	/^		m = n - tot;$/;"	d
m	obj/user/spawnhello.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/spin.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/spin.asm	/^		m = n - tot;$/;"	d
m	obj/user/spin.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/stresssched.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/stresssched.asm	/^		m = n - tot;$/;"	d
m	obj/user/stresssched.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/testbss.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/testbss.asm	/^		m = n - tot;$/;"	d
m	obj/user/testbss.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/testfdsharing.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/testfdsharing.asm	/^		m = n - tot;$/;"	d
m	obj/user/testfdsharing.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/testfile.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/testfile.asm	/^		m = n - tot;$/;"	d
m	obj/user/testfile.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/testkbd.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/testkbd.asm	/^		m = n - tot;$/;"	d
m	obj/user/testkbd.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/testpipe.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/testpipe.asm	/^		m = n - tot;$/;"	d
m	obj/user/testpipe.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/testpiperace.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/testpiperace.asm	/^		m = n - tot;$/;"	d
m	obj/user/testpiperace.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/testpiperace2.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/testpiperace2.asm	/^		m = n - tot;$/;"	d
m	obj/user/testpiperace2.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/testpteshare.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/testpteshare.asm	/^		m = n - tot;$/;"	d
m	obj/user/testpteshare.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/testshell.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/testshell.asm	/^		m = n - tot;$/;"	d
m	obj/user/testshell.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/yield.asm	/^			m = sizeof(buf) - 1;$/;"	d
m	obj/user/yield.asm	/^		m = n - tot;$/;"	d
m	obj/user/yield.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
main	barrier.c	/^main(int argc, char *argv[])$/;"	f
main	fs/fsformat.c	/^main(int argc, char **argv)$/;"	f
main	homework/hw2-shell/sh.c	/^main(void)$/;"	f
main	ph.c	/^main(int argc, char *argv[])$/;"	f
make	gradelib.py	/^def make(*target):$/;"	f
map_segment	lib/spawn.c	/^map_segment(envid_t child, uintptr_t va, size_t memsz,$/;"	f	file:
match	gradelib.py	/^    def match(self, *args, **kwargs):$/;"	m	class:Runner
matchtest	grade-lab5	/^def matchtest(parent, name, *args, **kw):$/;"	f
max	obj/user/testpiperace.asm	/^	max = 200;$/;"	d
maybe_unlink	gradelib.py	/^def maybe_unlink(*paths):$/;"	f
mc146818_read	kern/kclock.c	/^mc146818_read(unsigned reg)$/;"	f
mc146818_write	kern/kclock.c	/^mc146818_write(unsigned reg, unsigned datum)$/;"	f
mem_init	kern/pmap.c	/^mem_init(void)$/;"	f
mem_init_mp	kern/pmap.c	/^mem_init_mp(void)$/;"	f	file:
memcmp	lib/string.c	/^memcmp(const void *v1, const void *v2, size_t n)$/;"	f
memcpy	lib/string.c	/^memcpy(void *dst, const void *src, size_t n)$/;"	f
memfind	lib/string.c	/^memfind(const void *s, int c, size_t n)$/;"	f
memmove	lib/string.c	/^memmove(void *dst, const void *src, size_t n)$/;"	f
memset	lib/string.c	/^memset(void *v, int c, size_t n)$/;"	f
microdelay	kern/lapic.c	/^microdelay(int us)$/;"	f	file:
mismatch	obj/user/faultregs.asm	/^			mismatch = 1;					\\$/;"	d
mkcopy	homework/hw2-shell/sh.c	/^*mkcopy(char *s, char *es)$/;"	f
mm1	obj/kern/kernel.asm	/^	mm1 = (uintptr_t) mmio_map_region(0, 4097);$/;"	d
mm2	obj/kern/kernel.asm	/^	mm2 = (uintptr_t) mmio_map_region(0, 4096);$/;"	d
mmio_map_region	kern/pmap.c	/^mmio_map_region(physaddr_t pa, size_t size)$/;"	f
mode	homework/hw2-shell/sh.c	/^  int mode;          \/\/ the mode to open the file with$/;"	m	struct:redircmd	file:
mon_backtrace	kern/monitor.c	/^mon_backtrace(int argc, char **argv, struct Trapframe *tf)$/;"	f
mon_changeperms	kern/monitor.c	/^mon_changeperms(int argc, char** argv, struct Trapframe *tf) $/;"	f
mon_dumpcontents	kern/monitor.c	/^mon_dumpcontents(int argc, char **argv, struct Trapframe *tf) $/;"	f
mon_exit	kern/monitor.c	/^mon_exit(int argc, char **argv, struct Trapframe *tf)$/;"	f
mon_help	kern/monitor.c	/^mon_help(int argc, char **argv, struct Trapframe *tf)$/;"	f
mon_kerninfo	kern/monitor.c	/^mon_kerninfo(int argc, char **argv, struct Trapframe *tf)$/;"	f
mon_showmappings	kern/monitor.c	/^mon_showmappings(int argc, char** argv, struct Trapframe *tf) $/;"	f
monitor	kern/monitor.c	/^monitor(struct Trapframe *tf)$/;"	f
mp	kern/mpconfig.c	/^struct mp {             \/\/ floating pointer [MP 4.1]$/;"	s	file:
mp_init	kern/mpconfig.c	/^mp_init(void)$/;"	f
mp_main	kern/init.c	/^mp_main(void)$/;"	f
mpconf	kern/mpconfig.c	/^struct mpconf {         \/\/ configuration table header [MP 4.2]$/;"	s	file:
mpconfig	kern/mpconfig.c	/^mpconfig(struct mp **pmp)$/;"	f	file:
mpentry_end	kern/mpentry.S	/^mpentry_end:$/;"	l
mpentry_end	obj/kern/kernel.asm	/^mpentry_end:$/;"	l
mpentry_kstack	kern/init.c	/^void *mpentry_kstack;$/;"	v
mpentry_kstack	obj/kern/kernel.asm	/^		mpentry_kstack = percpu_kstacks[c - cpus] + KSTKSIZE;$/;"	d
mpentry_start	kern/mpentry.S	/^mpentry_start:$/;"	l
mpentry_start	obj/kern/kernel.asm	/^mpentry_start:$/;"	l
mpproc	kern/mpconfig.c	/^struct mpproc {         \/\/ processor table entry [MP 4.3.1]$/;"	s	file:
mpsearch	kern/mpconfig.c	/^mpsearch(void)$/;"	f	file:
mpsearch1	kern/mpconfig.c	/^mpsearch1(physaddr_t a, int len)$/;"	f	file:
msg	fs/test.c	/^static char *msg = "This is the NEW message of the day!\\n\\n";$/;"	v	file:
msg	user/testfile.c	/^const char *msg = "This is the NEW message of the day!\\n\\n";$/;"	v
msg	user/testpipe.c	/^char *msg = "Now is the time for all good men to come to the aid of their party.";$/;"	v
msg	user/testptelibrary.c	/^const char *msg = "hello, world\\n";$/;"	v
msg	user/testpteshare.c	/^const char *msg = "hello, world\\n";$/;"	v
msg1	user/init.c	/^	char msg1[5000];$/;"	m	struct:__anon10	file:
msg2	user/init.c	/^	char msg2[1000];$/;"	m	struct:__anon10	file:
msg2	user/testptelibrary.c	/^const char *msg2 = "goodbye, world\\n";$/;"	v
msg2	user/testpteshare.c	/^const char *msg2 = "goodbye, world\\n";$/;"	v
myexecv	homework/hw2-shell/sh.c	/^myexecv(char**argv) $/;"	f
n	fs/fsformat.c	/^	int n;$/;"	m	struct:Dir	file:
n	obj/fs/fs.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/kern/kernel.asm	/^	n = (uint32_t)(-1) - KERNBASE + 1;$/;"	d
n	obj/kern/kernel.asm	/^	n = NENV * sizeof(struct Env);$/;"	d
n	obj/kern/kernel.asm	/^	n = ROUNDUP(NENV*sizeof(struct Env), PGSIZE);$/;"	d
n	obj/kern/kernel.asm	/^	n = ROUNDUP(n, PGSIZE);$/;"	d
n	obj/kern/kernel.asm	/^	n = ROUNDUP(npages*sizeof(struct PageInfo), PGSIZE);$/;"	d
n	obj/kern/kernel.asm	/^	n = npages * sizeof(struct PageInfo);$/;"	d
n	obj/user/badsegment.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/breakpoint.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/buggyhello.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/buggyhello2.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/cat.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/divzero.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/dumbfork.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/echo.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/evilhello.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/fairness.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/faultalloc.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/faultallocbad.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/faultbadhandler.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/faultdie.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/faultevilhandler.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/faultnostack.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/faultread.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/faultreadkernel.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/faultregs.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/faultwrite.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/faultwritekernel.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/forktree.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/hello.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/icode.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/idle.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/init.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/ls.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/lsfd.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/num.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/pingpong.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/pingpongs.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/primes.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/primespipe.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/sendpage.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/sh.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/softint.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/spawnhello.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/spin.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/stresssched.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/testbss.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/testfdsharing.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/testfile.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/testkbd.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/testpipe.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/testpiperace.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/testpiperace2.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/testpteshare.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/testshell.asm	/^		n = thisenv->env_runs;$/;"	d
n	obj/user/yield.asm	/^		n = thisenv->env_runs;$/;"	d
n1	obj/user/testshell.asm	/^		n1 = read(rfd, &c1, 1);$/;"	d
n2	obj/user/testshell.asm	/^		n2 = read(kfd, &c2, 1);$/;"	d
n_desc	inc/stab.h	/^	uint16_t n_desc;        \/\/ description field$/;"	m	struct:Stab
n_other	inc/stab.h	/^	uint8_t n_other;        \/\/ misc info (usually empty)$/;"	m	struct:Stab
n_strx	inc/stab.h	/^	uint32_t n_strx;	\/\/ index into string table of name$/;"	m	struct:Stab
n_type	inc/stab.h	/^	uint8_t n_type;         \/\/ type of symbol$/;"	m	struct:Stab
n_value	inc/stab.h	/^	uintptr_t n_value;	\/\/ value of symbol$/;"	m	struct:Stab
name	kern/monitor.c	/^	const char *name;$/;"	m	struct:Command	file:
name	kern/spinlock.h	/^	char *name;            \/\/ Name of lock.$/;"	m	struct:spinlock
name	kern/trapentry.S	/^	name:								\\$/;"	l
name	kern/trapentry.S	/^	name:			\/* function starts here *\/		\\$/;"	l
nblock	obj/fs/fs.asm	/^	nblock = dir->f_size \/ BLKSIZE;$/;"	d
nblocks	fs/fsformat.c	/^uint32_t nblocks;$/;"	v
nc	obj/user/sh.asm	/^		nc = _gettoken(s, &np1, &np2);$/;"	d
nc	obj/user/sh.asm	/^	nc = _gettoken(np2, &np1, &np2);$/;"	d
ncpu	kern/mpconfig.c	/^int ncpu;$/;"	v
ncpu	obj/kern/kernel.asm	/^		ncpu = 1;$/;"	d
new_nblocks	obj/fs/fs.asm	/^	new_nblocks = (newsize + BLKSIZE - 1) \/ BLKSIZE;$/;"	d
newfd	obj/fs/fs.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/badsegment.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/breakpoint.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/buggyhello.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/buggyhello2.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/cat.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/divzero.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/dumbfork.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/echo.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/evilhello.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/fairness.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/faultalloc.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/faultallocbad.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/faultbadhandler.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/faultdie.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/faultevilhandler.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/faultnostack.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/faultread.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/faultreadkernel.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/faultregs.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/faultwrite.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/faultwritekernel.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/forktree.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/hello.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/icode.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/idle.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/init.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/ls.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/lsfd.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/num.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/pingpong.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/pingpongs.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/primes.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/primespipe.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/sendpage.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/sh.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/softint.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/spawnhello.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/spin.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/stresssched.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/testbss.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/testfdsharing.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/testfile.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/testkbd.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/testpipe.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/testpiperace.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/testpiperace2.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/testpteshare.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/testshell.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/yield.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
next	ph.c	/^	struct entry *next;$/;"	m	struct:entry	typeref:struct:entry::entry	file:
nextfree	obj/kern/kernel.asm	/^		nextfree = ROUNDUP((char *) end, PGSIZE);$/;"	d
nexti	obj/kern/kernel.asm	/^		nexti = (ENVX(curenv->env_id) + 1) % NENV;$/;"	d
nexti	obj/kern/kernel.asm	/^		nexti = (nexti + 1) % NENV;$/;"	d
nflag	obj/user/echo.asm	/^		nflag = 1;$/;"	d
nflag	obj/user/echo.asm	/^	nflag = 0;$/;"	d
nloff	obj/user/testshell.asm	/^			nloff = off+1;$/;"	d
nloff	obj/user/testshell.asm	/^	nloff = 0;$/;"	d
nn	obj/fs/fs.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/badsegment.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/breakpoint.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/buggyhello.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/buggyhello2.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/cat.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/divzero.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/dumbfork.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/echo.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/evilhello.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/fairness.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/faultalloc.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/faultallocbad.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/faultbadhandler.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/faultdie.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/faultevilhandler.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/faultnostack.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/faultread.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/faultreadkernel.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/faultregs.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/faultwrite.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/faultwritekernel.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/forktree.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/hello.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/icode.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/idle.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/init.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/ls.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/lsfd.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/num.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/pingpong.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/pingpongs.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/primes.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/primespipe.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/sendpage.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/sh.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/softint.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/spawnhello.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/spin.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/stresssched.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/testbss.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/testfdsharing.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/testfile.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/testkbd.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/testpipe.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/testpiperace.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/testpiperace2.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/testpteshare.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/testshell.asm	/^		nn = thisenv->env_runs;$/;"	d
nn	obj/user/yield.asm	/^		nn = thisenv->env_runs;$/;"	d
normalmap	kern/console.c	/^static uint8_t normalmap[256] =$/;"	v	file:
now	ph.c	/^now()$/;"	f
npages	kern/pmap.c	/^size_t npages;			\/\/ Amount of physical memory (in pages)$/;"	v
npages	obj/kern/kernel.asm	/^		npages = (EXTPHYSMEM \/ PGSIZE) + npages_extmem;$/;"	d
npages	obj/kern/kernel.asm	/^		npages = npages_basemem;$/;"	d
npages_basemem	kern/pmap.c	/^static size_t npages_basemem;	\/\/ Amount of base memory (in pages)$/;"	v	file:
npages_basemem	obj/kern/kernel.asm	/^	npages_basemem = (nvram_read(NVRAM_BASELO) * 1024) \/ PGSIZE;$/;"	d
npages_extmem	obj/kern/kernel.asm	/^	npages_extmem = (nvram_read(NVRAM_EXTLO) * 1024) \/ PGSIZE;$/;"	d
nthread	barrier.c	/^  int nthread;        \/\/ Number of threads that have reached this round of the barrier$/;"	m	struct:barrier	file:
nthread	barrier.c	/^static int nthread = 1;$/;"	v	file:
nthread	ph.c	/^int nthread = 1;$/;"	v
nthread_exited	barrier.c	/^  int nthread_exited; \/\/ Number of threads that have exited this round of the barrier$/;"	m	struct:barrier	file:
num	obj/fs/fs.asm	/^				num = -(long long) num;$/;"	d
num	obj/fs/fs.asm	/^			num = (unsigned long long)$/;"	d
num	obj/fs/fs.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/fs/fs.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/kern/kernel.asm	/^				num = -(long long) num;$/;"	d
num	obj/kern/kernel.asm	/^			num = (unsigned long long)$/;"	d
num	obj/kern/kernel.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/kern/kernel.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/badsegment.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/badsegment.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/badsegment.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/badsegment.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/breakpoint.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/breakpoint.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/breakpoint.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/breakpoint.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/buggyhello.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/buggyhello.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/buggyhello.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/buggyhello.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/buggyhello2.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/buggyhello2.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/buggyhello2.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/buggyhello2.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/cat.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/cat.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/cat.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/cat.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/divzero.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/divzero.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/divzero.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/divzero.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/dumbfork.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/dumbfork.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/dumbfork.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/dumbfork.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/echo.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/echo.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/echo.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/echo.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/evilhello.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/evilhello.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/evilhello.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/evilhello.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/fairness.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/fairness.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/fairness.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/fairness.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultalloc.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultalloc.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultalloc.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultalloc.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultallocbad.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultallocbad.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultallocbad.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultallocbad.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultbadhandler.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultbadhandler.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultbadhandler.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultbadhandler.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultdie.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultdie.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultdie.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultdie.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultevilhandler.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultevilhandler.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultevilhandler.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultevilhandler.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultnostack.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultnostack.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultnostack.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultnostack.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultread.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultread.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultread.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultread.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultreadkernel.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultreadkernel.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultreadkernel.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultreadkernel.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultregs.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultregs.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultregs.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultregs.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultwrite.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultwrite.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultwrite.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultwrite.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultwritekernel.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultwritekernel.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultwritekernel.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultwritekernel.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/forktree.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/forktree.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/forktree.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/forktree.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/hello.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/hello.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/hello.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/hello.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/icode.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/icode.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/icode.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/icode.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/idle.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/idle.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/idle.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/idle.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/init.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/init.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/init.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/init.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/ls.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/ls.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/ls.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/ls.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/lsfd.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/lsfd.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/lsfd.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/lsfd.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/num.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/num.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/num.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/num.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/pingpong.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/pingpong.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/pingpong.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/pingpong.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/pingpongs.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/pingpongs.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/pingpongs.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/pingpongs.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/primes.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/primes.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/primes.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/primes.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/primespipe.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/primespipe.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/primespipe.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/primespipe.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/sendpage.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/sendpage.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/sendpage.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/sendpage.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/sh.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/sh.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/sh.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/sh.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/softint.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/softint.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/softint.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/softint.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/spawnhello.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/spawnhello.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/spawnhello.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/spawnhello.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/spin.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/spin.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/spin.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/spin.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/stresssched.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/stresssched.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/stresssched.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/stresssched.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/testbss.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testbss.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testbss.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/testbss.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/testfdsharing.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testfdsharing.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testfdsharing.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/testfdsharing.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/testfile.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testfile.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testfile.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/testfile.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/testkbd.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testkbd.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testkbd.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/testkbd.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/testpipe.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testpipe.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testpipe.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/testpipe.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/testpiperace.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testpiperace.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testpiperace.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/testpiperace.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/testpiperace2.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testpiperace2.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testpiperace2.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/testpiperace2.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/testpteshare.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testpteshare.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testpteshare.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/testpteshare.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/testshell.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testshell.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testshell.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/testshell.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/yield.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/yield.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/yield.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/yield.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	user/num.c	/^num(int f, const char *s)$/;"	f
number	obj/fs/fs.asm	/^		number:$/;"	l
number	obj/kern/kernel.asm	/^		number:$/;"	l
number	obj/user/badsegment.asm	/^		number:$/;"	l
number	obj/user/breakpoint.asm	/^		number:$/;"	l
number	obj/user/buggyhello.asm	/^		number:$/;"	l
number	obj/user/buggyhello2.asm	/^		number:$/;"	l
number	obj/user/cat.asm	/^		number:$/;"	l
number	obj/user/divzero.asm	/^		number:$/;"	l
number	obj/user/dumbfork.asm	/^		number:$/;"	l
number	obj/user/echo.asm	/^		number:$/;"	l
number	obj/user/evilhello.asm	/^		number:$/;"	l
number	obj/user/fairness.asm	/^		number:$/;"	l
number	obj/user/faultalloc.asm	/^		number:$/;"	l
number	obj/user/faultallocbad.asm	/^		number:$/;"	l
number	obj/user/faultbadhandler.asm	/^		number:$/;"	l
number	obj/user/faultdie.asm	/^		number:$/;"	l
number	obj/user/faultevilhandler.asm	/^		number:$/;"	l
number	obj/user/faultnostack.asm	/^		number:$/;"	l
number	obj/user/faultread.asm	/^		number:$/;"	l
number	obj/user/faultreadkernel.asm	/^		number:$/;"	l
number	obj/user/faultregs.asm	/^		number:$/;"	l
number	obj/user/faultwrite.asm	/^		number:$/;"	l
number	obj/user/faultwritekernel.asm	/^		number:$/;"	l
number	obj/user/forktree.asm	/^		number:$/;"	l
number	obj/user/hello.asm	/^		number:$/;"	l
number	obj/user/icode.asm	/^		number:$/;"	l
number	obj/user/idle.asm	/^		number:$/;"	l
number	obj/user/init.asm	/^		number:$/;"	l
number	obj/user/ls.asm	/^		number:$/;"	l
number	obj/user/lsfd.asm	/^		number:$/;"	l
number	obj/user/num.asm	/^		number:$/;"	l
number	obj/user/pingpong.asm	/^		number:$/;"	l
number	obj/user/pingpongs.asm	/^		number:$/;"	l
number	obj/user/primes.asm	/^		number:$/;"	l
number	obj/user/primespipe.asm	/^		number:$/;"	l
number	obj/user/sendpage.asm	/^		number:$/;"	l
number	obj/user/sh.asm	/^		number:$/;"	l
number	obj/user/softint.asm	/^		number:$/;"	l
number	obj/user/spawnhello.asm	/^		number:$/;"	l
number	obj/user/spin.asm	/^		number:$/;"	l
number	obj/user/stresssched.asm	/^		number:$/;"	l
number	obj/user/testbss.asm	/^		number:$/;"	l
number	obj/user/testfdsharing.asm	/^		number:$/;"	l
number	obj/user/testfile.asm	/^		number:$/;"	l
number	obj/user/testkbd.asm	/^		number:$/;"	l
number	obj/user/testpipe.asm	/^		number:$/;"	l
number	obj/user/testpiperace.asm	/^		number:$/;"	l
number	obj/user/testpiperace2.asm	/^		number:$/;"	l
number	obj/user/testpteshare.asm	/^		number:$/;"	l
number	obj/user/testshell.asm	/^		number:$/;"	l
number	obj/user/yield.asm	/^		number:$/;"	l
nva	obj/fs/fs.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/badsegment.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/breakpoint.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/buggyhello.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/buggyhello2.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/cat.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/divzero.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/dumbfork.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/echo.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/evilhello.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/fairness.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/faultalloc.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/faultallocbad.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/faultbadhandler.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/faultdie.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/faultevilhandler.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/faultnostack.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/faultread.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/faultreadkernel.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/faultregs.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/faultwrite.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/faultwritekernel.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/forktree.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/hello.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/icode.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/idle.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/init.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/ls.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/lsfd.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/num.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/pingpong.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/pingpongs.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/primes.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/primespipe.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/sendpage.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/sh.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/softint.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/spawnhello.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/spin.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/stresssched.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/testbss.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/testfdsharing.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/testfile.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/testkbd.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/testpipe.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/testpiperace.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/testpiperace2.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/testpteshare.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/testshell.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/yield.asm	/^	nva = fd2data(newfd);$/;"	d
nvram_read	kern/pmap.c	/^nvram_read(int r)$/;"	f	file:
o	obj/fs/fs.asm	/^	o = &opentab[fileid % MAXOPEN];$/;"	d
o_fd	fs/serv.c	/^	struct Fd *o_fd;	\/\/ Fd page$/;"	m	struct:OpenFile	typeref:struct:OpenFile::Fd	file:
o_file	fs/serv.c	/^	struct File *o_file;	\/\/ mapped descriptor for open file$/;"	m	struct:OpenFile	typeref:struct:OpenFile::File	file:
o_fileid	fs/serv.c	/^	uint32_t o_fileid;	\/\/ file id$/;"	m	struct:OpenFile	file:
o_mode	fs/serv.c	/^	int o_mode;		\/\/ open mode$/;"	m	struct:OpenFile	file:
oemlength	kern/mpconfig.c	/^	uint16_t oemlength;             \/\/ OEM table length$/;"	m	struct:mpconf	file:
oemtable	kern/mpconfig.c	/^	physaddr_t oemtable;            \/\/ OEM table pointer$/;"	m	struct:mpconf	file:
off_t	fs/fsformat.c	/^typedef uint32_t off_t;$/;"	t	file:
off_t	fs/fsformat.c	20;"	d	file:
off_t	fs/fsformat.c	6;"	d	file:
off_t	inc/types.h	/^typedef int32_t off_t;$/;"	t
offset	obj/boot/boot.asm	/^	offset = (offset \/ SECTSIZE) + 1;$/;"	d
offsetof	inc/types.h	71;"	d
old_nblocks	obj/fs/fs.asm	/^	old_nblocks = (f->f_size + BLKSIZE - 1) \/ BLKSIZE;$/;"	d
open	inc/fs.h	/^	} open;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsreq_open
open	lib/file.c	/^open(const char *path, int mode)$/;"	f
opencons	lib/console.c	/^opencons(void)$/;"	f
opendisk	fs/fsformat.c	/^opendisk(const char *name)$/;"	f
openfile_alloc	fs/serv.c	/^openfile_alloc(struct OpenFile **o)$/;"	f
openfile_lookup	fs/serv.c	/^openfile_lookup(envid_t envid, uint32_t fileid, struct OpenFile **po)$/;"	f
opentab	fs/serv.c	/^struct OpenFile opentab[MAXOPEN] = {$/;"	v	typeref:struct:OpenFile
os	gradelib.py	/^import sys, os, re, time, socket, select, subprocess, errno, shutil$/;"	i
outb	inc/x86.h	/^outb(int port, uint8_t data)$/;"	f
outl	inc/x86.h	/^outl(int port, uint32_t data)$/;"	f
outsb	inc/x86.h	/^outsb(int port, const void *addr, int cnt)$/;"	f
outsl	inc/x86.h	/^outsl(int port, const void *addr, int cnt)$/;"	f
outsw	inc/x86.h	/^outsw(int port, const void *addr, int cnt)$/;"	f
outw	inc/x86.h	/^outw(int port, uint16_t data)$/;"	f
ova	obj/fs/fs.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/badsegment.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/breakpoint.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/buggyhello.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/buggyhello2.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/cat.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/divzero.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/dumbfork.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/echo.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/evilhello.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/fairness.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/faultalloc.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/faultallocbad.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/faultbadhandler.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/faultdie.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/faultevilhandler.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/faultnostack.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/faultread.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/faultreadkernel.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/faultregs.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/faultwrite.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/faultwritekernel.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/forktree.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/hello.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/icode.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/idle.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/init.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/ls.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/lsfd.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/num.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/pingpong.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/pingpongs.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/primes.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/primespipe.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/sendpage.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/sh.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/softint.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/spawnhello.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/spin.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/stresssched.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/testbss.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/testfdsharing.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/testfile.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/testkbd.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/testpipe.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/testpiperace.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/testpiperace2.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/testpteshare.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/testshell.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/yield.asm	/^	ova = fd2data(oldfd);$/;"	d
p	obj/fs/fs.asm	/^				p = "(null)";$/;"	d
p	obj/fs/fs.asm	/^		p = path;$/;"	d
p	obj/fs/fs.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/fs/fs.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/kern/kernel.asm	/^				p = "(null)";$/;"	d
p	obj/kern/kernel.asm	/^		p = *(uint16_t *) (bda + 0x13) * 1024;$/;"	d
p	obj/kern/kernel.asm	/^	p = (pte_t*) KADDR(PTE_ADDR(*pgdir));$/;"	d
p	obj/user/badsegment.asm	/^				p = "(null)";$/;"	d
p	obj/user/badsegment.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/badsegment.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/breakpoint.asm	/^				p = "(null)";$/;"	d
p	obj/user/breakpoint.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/breakpoint.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/buggyhello.asm	/^				p = "(null)";$/;"	d
p	obj/user/buggyhello.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/buggyhello.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/buggyhello2.asm	/^				p = "(null)";$/;"	d
p	obj/user/buggyhello2.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/buggyhello2.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/cat.asm	/^				p = "(null)";$/;"	d
p	obj/user/cat.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/cat.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/divzero.asm	/^				p = "(null)";$/;"	d
p	obj/user/divzero.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/divzero.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/dumbfork.asm	/^				p = "(null)";$/;"	d
p	obj/user/dumbfork.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/dumbfork.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/echo.asm	/^				p = "(null)";$/;"	d
p	obj/user/echo.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/echo.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/evilhello.asm	/^				p = "(null)";$/;"	d
p	obj/user/evilhello.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/evilhello.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/fairness.asm	/^				p = "(null)";$/;"	d
p	obj/user/fairness.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/fairness.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/faultalloc.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultalloc.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/faultalloc.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/faultallocbad.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultallocbad.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/faultallocbad.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/faultbadhandler.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultbadhandler.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/faultbadhandler.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/faultdie.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultdie.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/faultdie.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/faultevilhandler.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultevilhandler.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/faultevilhandler.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/faultnostack.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultnostack.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/faultnostack.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/faultread.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultread.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/faultread.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/faultreadkernel.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultreadkernel.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/faultreadkernel.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/faultregs.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultregs.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/faultregs.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/faultwrite.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultwrite.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/faultwrite.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/faultwritekernel.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultwritekernel.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/faultwritekernel.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/forktree.asm	/^				p = "(null)";$/;"	d
p	obj/user/forktree.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/forktree.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/hello.asm	/^				p = "(null)";$/;"	d
p	obj/user/hello.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/hello.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/icode.asm	/^				p = "(null)";$/;"	d
p	obj/user/icode.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/icode.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/idle.asm	/^				p = "(null)";$/;"	d
p	obj/user/idle.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/idle.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/init.asm	/^				p = "(null)";$/;"	d
p	obj/user/init.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/init.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/ls.asm	/^				p = "(null)";$/;"	d
p	obj/user/ls.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/ls.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/lsfd.asm	/^				p = "(null)";$/;"	d
p	obj/user/lsfd.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/lsfd.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/num.asm	/^				p = "(null)";$/;"	d
p	obj/user/num.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/num.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/pingpong.asm	/^				p = "(null)";$/;"	d
p	obj/user/pingpong.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/pingpong.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/pingpongs.asm	/^				p = "(null)";$/;"	d
p	obj/user/pingpongs.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/pingpongs.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/primes.asm	/^				p = "(null)";$/;"	d
p	obj/user/primes.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/primes.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/primes.asm	/^	p = ipc_recv(&envid, 0, 0);$/;"	d
p	obj/user/primespipe.asm	/^				p = "(null)";$/;"	d
p	obj/user/primespipe.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/primespipe.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/sendpage.asm	/^				p = "(null)";$/;"	d
p	obj/user/sendpage.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/sendpage.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/sh.asm	/^				p = "(null)";$/;"	d
p	obj/user/sh.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/sh.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/softint.asm	/^				p = "(null)";$/;"	d
p	obj/user/softint.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/softint.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/spawnhello.asm	/^				p = "(null)";$/;"	d
p	obj/user/spawnhello.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/spawnhello.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/spin.asm	/^				p = "(null)";$/;"	d
p	obj/user/spin.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/spin.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/stresssched.asm	/^				p = "(null)";$/;"	d
p	obj/user/stresssched.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/stresssched.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/testbss.asm	/^				p = "(null)";$/;"	d
p	obj/user/testbss.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/testbss.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/testfdsharing.asm	/^				p = "(null)";$/;"	d
p	obj/user/testfdsharing.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/testfdsharing.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/testfile.asm	/^				p = "(null)";$/;"	d
p	obj/user/testfile.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/testfile.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/testkbd.asm	/^				p = "(null)";$/;"	d
p	obj/user/testkbd.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/testkbd.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/testpipe.asm	/^				p = "(null)";$/;"	d
p	obj/user/testpipe.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/testpipe.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/testpiperace.asm	/^				p = "(null)";$/;"	d
p	obj/user/testpiperace.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/testpiperace.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/testpiperace2.asm	/^				p = "(null)";$/;"	d
p	obj/user/testpiperace2.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/testpiperace2.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/testpteshare.asm	/^				p = "(null)";$/;"	d
p	obj/user/testpteshare.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/testpteshare.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/testshell.asm	/^				p = "(null)";$/;"	d
p	obj/user/testshell.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/testshell.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p	obj/user/yield.asm	/^				p = "(null)";$/;"	d
p	obj/user/yield.asm	/^	p = (struct Pipe*) fd2data(fd);$/;"	d
p	obj/user/yield.asm	/^	p = (struct Pipe*)fd2data(fd);$/;"	d
p_align	inc/elf.h	/^	uint32_t p_align;$/;"	m	struct:Proghdr
p_buf	lib/pipe.c	/^	uint8_t p_buf[PIPEBUFSIZ];	\/\/ data buffer$/;"	m	struct:Pipe	file:
p_filesz	inc/elf.h	/^	uint32_t p_filesz;$/;"	m	struct:Proghdr
p_flags	inc/elf.h	/^	uint32_t p_flags;$/;"	m	struct:Proghdr
p_memsz	inc/elf.h	/^	uint32_t p_memsz;$/;"	m	struct:Proghdr
p_offset	inc/elf.h	/^	uint32_t p_offset;$/;"	m	struct:Proghdr
p_pa	inc/elf.h	/^	uint32_t p_pa;$/;"	m	struct:Proghdr
p_rpos	lib/pipe.c	/^	off_t p_rpos;		\/\/ read position$/;"	m	struct:Pipe	file:
p_type	inc/elf.h	/^	uint32_t p_type;$/;"	m	struct:Proghdr
p_va	inc/elf.h	/^	uint32_t p_va;$/;"	m	struct:Proghdr
p_wpos	lib/pipe.c	/^	off_t p_wpos;		\/\/ write position$/;"	m	struct:Pipe	file:
pa	obj/kern/kernel.asm	/^		pa = PTE_ADDR(e->env_pgdir[pdeno]);$/;"	d
pa	obj/kern/kernel.asm	/^	pa = PADDR(e->env_pgdir);$/;"	d
pa2page	kern/pmap.h	/^pa2page(physaddr_t pa)$/;"	f
padc	obj/fs/fs.asm	/^			padc = '-';$/;"	d
padc	obj/fs/fs.asm	/^			padc = '0';$/;"	d
padc	obj/kern/kernel.asm	/^			padc = '-';$/;"	d
padc	obj/kern/kernel.asm	/^			padc = '0';$/;"	d
padc	obj/user/badsegment.asm	/^			padc = '-';$/;"	d
padc	obj/user/badsegment.asm	/^			padc = '0';$/;"	d
padc	obj/user/breakpoint.asm	/^			padc = '-';$/;"	d
padc	obj/user/breakpoint.asm	/^			padc = '0';$/;"	d
padc	obj/user/buggyhello.asm	/^			padc = '-';$/;"	d
padc	obj/user/buggyhello.asm	/^			padc = '0';$/;"	d
padc	obj/user/buggyhello2.asm	/^			padc = '-';$/;"	d
padc	obj/user/buggyhello2.asm	/^			padc = '0';$/;"	d
padc	obj/user/cat.asm	/^			padc = '-';$/;"	d
padc	obj/user/cat.asm	/^			padc = '0';$/;"	d
padc	obj/user/divzero.asm	/^			padc = '-';$/;"	d
padc	obj/user/divzero.asm	/^			padc = '0';$/;"	d
padc	obj/user/dumbfork.asm	/^			padc = '-';$/;"	d
padc	obj/user/dumbfork.asm	/^			padc = '0';$/;"	d
padc	obj/user/echo.asm	/^			padc = '-';$/;"	d
padc	obj/user/echo.asm	/^			padc = '0';$/;"	d
padc	obj/user/evilhello.asm	/^			padc = '-';$/;"	d
padc	obj/user/evilhello.asm	/^			padc = '0';$/;"	d
padc	obj/user/fairness.asm	/^			padc = '-';$/;"	d
padc	obj/user/fairness.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultalloc.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultalloc.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultallocbad.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultallocbad.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultbadhandler.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultbadhandler.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultdie.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultdie.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultevilhandler.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultevilhandler.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultnostack.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultnostack.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultread.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultread.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultreadkernel.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultreadkernel.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultregs.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultregs.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultwrite.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultwrite.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultwritekernel.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultwritekernel.asm	/^			padc = '0';$/;"	d
padc	obj/user/forktree.asm	/^			padc = '-';$/;"	d
padc	obj/user/forktree.asm	/^			padc = '0';$/;"	d
padc	obj/user/hello.asm	/^			padc = '-';$/;"	d
padc	obj/user/hello.asm	/^			padc = '0';$/;"	d
padc	obj/user/icode.asm	/^			padc = '-';$/;"	d
padc	obj/user/icode.asm	/^			padc = '0';$/;"	d
padc	obj/user/idle.asm	/^			padc = '-';$/;"	d
padc	obj/user/idle.asm	/^			padc = '0';$/;"	d
padc	obj/user/init.asm	/^			padc = '-';$/;"	d
padc	obj/user/init.asm	/^			padc = '0';$/;"	d
padc	obj/user/ls.asm	/^			padc = '-';$/;"	d
padc	obj/user/ls.asm	/^			padc = '0';$/;"	d
padc	obj/user/lsfd.asm	/^			padc = '-';$/;"	d
padc	obj/user/lsfd.asm	/^			padc = '0';$/;"	d
padc	obj/user/num.asm	/^			padc = '-';$/;"	d
padc	obj/user/num.asm	/^			padc = '0';$/;"	d
padc	obj/user/pingpong.asm	/^			padc = '-';$/;"	d
padc	obj/user/pingpong.asm	/^			padc = '0';$/;"	d
padc	obj/user/pingpongs.asm	/^			padc = '-';$/;"	d
padc	obj/user/pingpongs.asm	/^			padc = '0';$/;"	d
padc	obj/user/primes.asm	/^			padc = '-';$/;"	d
padc	obj/user/primes.asm	/^			padc = '0';$/;"	d
padc	obj/user/primespipe.asm	/^			padc = '-';$/;"	d
padc	obj/user/primespipe.asm	/^			padc = '0';$/;"	d
padc	obj/user/sendpage.asm	/^			padc = '-';$/;"	d
padc	obj/user/sendpage.asm	/^			padc = '0';$/;"	d
padc	obj/user/sh.asm	/^			padc = '-';$/;"	d
padc	obj/user/sh.asm	/^			padc = '0';$/;"	d
padc	obj/user/softint.asm	/^			padc = '-';$/;"	d
padc	obj/user/softint.asm	/^			padc = '0';$/;"	d
padc	obj/user/spawnhello.asm	/^			padc = '-';$/;"	d
padc	obj/user/spawnhello.asm	/^			padc = '0';$/;"	d
padc	obj/user/spin.asm	/^			padc = '-';$/;"	d
padc	obj/user/spin.asm	/^			padc = '0';$/;"	d
padc	obj/user/stresssched.asm	/^			padc = '-';$/;"	d
padc	obj/user/stresssched.asm	/^			padc = '0';$/;"	d
padc	obj/user/testbss.asm	/^			padc = '-';$/;"	d
padc	obj/user/testbss.asm	/^			padc = '0';$/;"	d
padc	obj/user/testfdsharing.asm	/^			padc = '-';$/;"	d
padc	obj/user/testfdsharing.asm	/^			padc = '0';$/;"	d
padc	obj/user/testfile.asm	/^			padc = '-';$/;"	d
padc	obj/user/testfile.asm	/^			padc = '0';$/;"	d
padc	obj/user/testkbd.asm	/^			padc = '-';$/;"	d
padc	obj/user/testkbd.asm	/^			padc = '0';$/;"	d
padc	obj/user/testpipe.asm	/^			padc = '-';$/;"	d
padc	obj/user/testpipe.asm	/^			padc = '0';$/;"	d
padc	obj/user/testpiperace.asm	/^			padc = '-';$/;"	d
padc	obj/user/testpiperace.asm	/^			padc = '0';$/;"	d
padc	obj/user/testpiperace2.asm	/^			padc = '-';$/;"	d
padc	obj/user/testpiperace2.asm	/^			padc = '0';$/;"	d
padc	obj/user/testpteshare.asm	/^			padc = '-';$/;"	d
padc	obj/user/testpteshare.asm	/^			padc = '0';$/;"	d
padc	obj/user/testshell.asm	/^			padc = '-';$/;"	d
padc	obj/user/testshell.asm	/^			padc = '0';$/;"	d
padc	obj/user/yield.asm	/^			padc = '-';$/;"	d
padc	obj/user/yield.asm	/^			padc = '0';$/;"	d
page2kva	kern/pmap.h	/^page2kva(struct PageInfo *pp)$/;"	f
page2pa	kern/pmap.h	/^page2pa(struct PageInfo *pp)$/;"	f
page_alloc	kern/pmap.c	/^page_alloc(int alloc_flags)$/;"	f
page_decref	kern/pmap.c	/^page_decref(struct PageInfo* pp)$/;"	f
page_fault_handler	kern/trap.c	/^page_fault_handler(struct Trapframe *tf)$/;"	f
page_free	kern/pmap.c	/^page_free(struct PageInfo *pp)$/;"	f
page_free_list	kern/pmap.c	/^static struct PageInfo *page_free_list;	\/\/ Free list of physical pages$/;"	v	typeref:struct:PageInfo	file:
page_free_list	obj/kern/kernel.asm	/^		page_free_list = &pages[i];$/;"	d
page_free_list	obj/kern/kernel.asm	/^		page_free_list = page_free_list->pp_link;$/;"	d
page_free_list	obj/kern/kernel.asm	/^		page_free_list = pp1;$/;"	d
page_free_list	obj/kern/kernel.asm	/^	page_free_list = 0;$/;"	d
page_free_list	obj/kern/kernel.asm	/^	page_free_list = fl;$/;"	d
page_free_list	obj/kern/kernel.asm	/^	page_free_list = pp;$/;"	d
page_init	kern/pmap.c	/^page_init(void)$/;"	f
page_insert	kern/pmap.c	/^page_insert(pde_t *pgdir, struct PageInfo *pp, void *va, int perm)$/;"	f
page_lookup	kern/pmap.c	/^page_lookup(pde_t *pgdir, void *va, pte_t **pte_store)$/;"	f
page_remove	kern/pmap.c	/^page_remove(pde_t *pgdir, void *va)$/;"	f
pageref	lib/pageref.c	/^pageref(void *v)$/;"	f
pages	kern/pmap.c	/^struct PageInfo *pages;		\/\/ Physical page state array$/;"	v	typeref:struct:PageInfo
pages	obj/kern/kernel.asm	/^	pages = (struct PageInfo *) boot_alloc(n);$/;"	d
panic	fs/fsformat.c	/^panic(const char *fmt, ...)$/;"	f
panic	inc/assert.h	12;"	d
panicstr	kern/init.c	/^const char *panicstr;$/;"	v
panicstr	obj/kern/kernel.asm	/^	panicstr = fmt;$/;"	d
parsecmd	homework/hw2-shell/sh.c	/^parsecmd(char *s)$/;"	f
parseexec	homework/hw2-shell/sh.c	/^parseexec(char **ps, char *es)$/;"	f
parseline	homework/hw2-shell/sh.c	/^parseline(char **ps, char *es)$/;"	f
parsepipe	homework/hw2-shell/sh.c	/^parsepipe(char **ps, char *es)$/;"	f
parseredirs	homework/hw2-shell/sh.c	/^parseredirs(struct cmd *cmd, char **ps, char *es)$/;"	f
path	obj/fs/fs.asm	/^		path = skip_slash(path);$/;"	d
path	obj/fs/fs.asm	/^	path = skip_slash(path);$/;"	d
pcs	kern/spinlock.h	/^	uintptr_t pcs[10];     \/\/ The call stack (an array of program counters)$/;"	m	struct:spinlock
pd_base	inc/mmu.h	/^	uint32_t pd_base;		\/\/ Base address$/;"	m	struct:Pseudodesc
pd_lim	inc/mmu.h	/^	uint16_t pd_lim;		\/\/ Limit$/;"	m	struct:Pseudodesc
pde_t	inc/memlayout.h	/^typedef uint32_t pde_t;$/;"	t
peek	homework/hw2-shell/sh.c	/^peek(char **ps, char *es, char *toks)$/;"	f
percpu_kstacks	kern/mpconfig.c	/^unsigned char percpu_kstacks[NCPU][KSTKSIZE]$/;"	v
perm	obj/fs/fs.asm	/^		perm = 0;$/;"	d
perm	obj/kern/kernel.asm	/^		perm = 0; \/\/ no page sent$/;"	d
perm	obj/kern/kernel.asm	/^		perm = 0;$/;"	d
perm	obj/user/icode.asm	/^		perm = PTE_P | PTE_U;$/;"	d
perm	obj/user/init.asm	/^		perm = PTE_P | PTE_U;$/;"	d
perm	obj/user/sh.asm	/^		perm = PTE_P | PTE_U;$/;"	d
perm	obj/user/spawnhello.asm	/^		perm = PTE_P | PTE_U;$/;"	d
perm	obj/user/testpteshare.asm	/^		perm = PTE_P | PTE_U;$/;"	d
perm	obj/user/testshell.asm	/^		perm = PTE_P | PTE_U;$/;"	d
pg	obj/fs/fs.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/fs/fs.asm	/^		pg = NULL;$/;"	d
pg	obj/user/badsegment.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/breakpoint.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/buggyhello.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/buggyhello2.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/cat.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/divzero.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/dumbfork.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/echo.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/evilhello.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/fairness.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/faultalloc.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/faultallocbad.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/faultbadhandler.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/faultdie.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/faultevilhandler.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/faultnostack.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/faultread.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/faultreadkernel.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/faultregs.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/faultwrite.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/faultwritekernel.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/forktree.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/hello.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/icode.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/idle.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/init.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/ls.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/lsfd.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/num.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/pingpong.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/pingpongs.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/primes.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/primespipe.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/sendpage.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/sh.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/softint.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/spawnhello.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/spin.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/stresssched.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/testbss.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/testfdsharing.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/testfile.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/testkbd.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/testpipe.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/testpiperace.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/testpiperace2.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/testpteshare.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/testshell.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/yield.asm	/^		pg = (void *) UTOP;$/;"	d
pgdir	obj/kern/kernel.asm	/^	pgdir = &pgdir[PDX(va)];$/;"	d
pgdir	obj/kern/kernel.asm	/^	pgdir = kern_pgdir;$/;"	d
pgdir_walk	kern/pmap.c	/^pgdir_walk(pde_t *pgdir, const void *va, int create)$/;"	f
pgfault	lib/fork.c	/^pgfault(struct UTrapframe *utf)$/;"	f	file:
pgfault	user/faultregs.c	/^pgfault(struct UTrapframe *utf)$/;"	f	file:
pgtbl	obj/kern/kernel.asm	/^	pgtbl = (pte_t *) KADDR(PTE_ADDR(pgdir[pdx]));$/;"	d
ph	obj/boot/boot.asm	/^	ph = (struct Proghdr *) ((uint8_t *) ELFHDR + ELFHDR->e_phoff);$/;"	d
ph	obj/kern/kernel.asm	/^	ph = (struct Proghdr *) ((char *) elf_hdr + elf_hdr->e_phoff); $/;"	d
ph	obj/user/icode.asm	/^	ph = (struct Proghdr*) (elf_buf + elf->e_phoff);$/;"	d
ph	obj/user/init.asm	/^	ph = (struct Proghdr*) (elf_buf + elf->e_phoff);$/;"	d
ph	obj/user/sh.asm	/^	ph = (struct Proghdr*) (elf_buf + elf->e_phoff);$/;"	d
ph	obj/user/spawnhello.asm	/^	ph = (struct Proghdr*) (elf_buf + elf->e_phoff);$/;"	d
ph	obj/user/testpteshare.asm	/^	ph = (struct Proghdr*) (elf_buf + elf->e_phoff);$/;"	d
ph	obj/user/testshell.asm	/^	ph = (struct Proghdr*) (elf_buf + elf->e_phoff);$/;"	d
physaddr	kern/mpconfig.c	/^	physaddr_t physaddr;            \/\/ phys addr of MP config table$/;"	m	struct:mp	file:
physaddr_t	fs/fsformat.c	/^typedef uint32_t physaddr_t;$/;"	t	file:
physaddr_t	inc/types.h	/^typedef uint32_t physaddr_t;$/;"	t
physaddr_t	obj/kern/kernel.asm	/^physaddr_t lapicaddr;        \/\/ Initialized in mpconfig.c$/;"	l
pic_init	kern/picirq.c	/^pic_init(void)$/;"	f
pid	obj/user/testpiperace.asm	/^	pid = r;$/;"	d
pipe	lib/pipe.c	/^pipe(int pfd[2])$/;"	f
pipe_child	obj/user/sh.asm	/^				pipe_child = r;$/;"	d
pipe_child	obj/user/sh.asm	/^	pipe_child = 0;$/;"	d
pipecmd	homework/hw2-shell/sh.c	/^pipecmd(struct cmd *left, struct cmd *right)$/;"	f
pipecmd	homework/hw2-shell/sh.c	/^struct pipecmd {$/;"	s	file:
pipeisclosed	lib/pipe.c	/^pipeisclosed(int fdnum)$/;"	f
pos	obj/kern/kernel.asm	/^	pos = inb(addr_6845 + 1) << 8;$/;"	d
post_make	gradelib.py	/^def post_make():$/;"	f
pp	obj/kern/kernel.asm	/^		pp = page_alloc(0);$/;"	d
pp	obj/kern/kernel.asm	/^		pp = page_alloc(ALLOC_ZERO);$/;"	d
pp0	obj/kern/kernel.asm	/^	pp0 = pp1 = pp2 = 0;$/;"	d
pp1	obj/kern/kernel.asm	/^	pp1 = pp2 = 0;$/;"	d
pp_link	inc/memlayout.h	/^	struct PageInfo *pp_link;$/;"	m	struct:PageInfo	typeref:struct:PageInfo::PageInfo
pp_ref	inc/memlayout.h	/^	uint16_t pp_ref;$/;"	m	struct:PageInfo
ppn_t	inc/types.h	/^typedef uint32_t ppn_t;$/;"	t
pre_make	gradelib.py	/^def pre_make():$/;"	f
precision	obj/fs/fs.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/fs/fs.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/fs/fs.asm	/^		precision = -1;$/;"	d
precision	obj/kern/kernel.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/kern/kernel.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/kern/kernel.asm	/^		precision = -1;$/;"	d
precision	obj/user/badsegment.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/badsegment.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/badsegment.asm	/^		precision = -1;$/;"	d
precision	obj/user/breakpoint.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/breakpoint.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/breakpoint.asm	/^		precision = -1;$/;"	d
precision	obj/user/buggyhello.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/buggyhello.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/buggyhello.asm	/^		precision = -1;$/;"	d
precision	obj/user/buggyhello2.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/buggyhello2.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/buggyhello2.asm	/^		precision = -1;$/;"	d
precision	obj/user/cat.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/cat.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/cat.asm	/^		precision = -1;$/;"	d
precision	obj/user/divzero.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/divzero.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/divzero.asm	/^		precision = -1;$/;"	d
precision	obj/user/dumbfork.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/dumbfork.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/dumbfork.asm	/^		precision = -1;$/;"	d
precision	obj/user/echo.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/echo.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/echo.asm	/^		precision = -1;$/;"	d
precision	obj/user/evilhello.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/evilhello.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/evilhello.asm	/^		precision = -1;$/;"	d
precision	obj/user/fairness.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/fairness.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/fairness.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultalloc.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultalloc.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultalloc.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultallocbad.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultallocbad.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultallocbad.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultbadhandler.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultbadhandler.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultbadhandler.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultdie.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultdie.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultdie.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultevilhandler.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultevilhandler.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultevilhandler.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultnostack.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultnostack.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultnostack.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultread.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultread.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultread.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultreadkernel.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultreadkernel.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultreadkernel.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultregs.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultregs.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultregs.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultwrite.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultwrite.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultwrite.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultwritekernel.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultwritekernel.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultwritekernel.asm	/^		precision = -1;$/;"	d
precision	obj/user/forktree.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/forktree.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/forktree.asm	/^		precision = -1;$/;"	d
precision	obj/user/hello.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/hello.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/hello.asm	/^		precision = -1;$/;"	d
precision	obj/user/icode.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/icode.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/icode.asm	/^		precision = -1;$/;"	d
precision	obj/user/idle.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/idle.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/idle.asm	/^		precision = -1;$/;"	d
precision	obj/user/init.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/init.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/init.asm	/^		precision = -1;$/;"	d
precision	obj/user/ls.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/ls.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/ls.asm	/^		precision = -1;$/;"	d
precision	obj/user/lsfd.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/lsfd.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/lsfd.asm	/^		precision = -1;$/;"	d
precision	obj/user/num.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/num.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/num.asm	/^		precision = -1;$/;"	d
precision	obj/user/pingpong.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/pingpong.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/pingpong.asm	/^		precision = -1;$/;"	d
precision	obj/user/pingpongs.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/pingpongs.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/pingpongs.asm	/^		precision = -1;$/;"	d
precision	obj/user/primes.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/primes.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/primes.asm	/^		precision = -1;$/;"	d
precision	obj/user/primespipe.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/primespipe.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/primespipe.asm	/^		precision = -1;$/;"	d
precision	obj/user/sendpage.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/sendpage.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/sendpage.asm	/^		precision = -1;$/;"	d
precision	obj/user/sh.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/sh.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/sh.asm	/^		precision = -1;$/;"	d
precision	obj/user/softint.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/softint.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/softint.asm	/^		precision = -1;$/;"	d
precision	obj/user/spawnhello.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/spawnhello.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/spawnhello.asm	/^		precision = -1;$/;"	d
precision	obj/user/spin.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/spin.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/spin.asm	/^		precision = -1;$/;"	d
precision	obj/user/stresssched.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/stresssched.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/stresssched.asm	/^		precision = -1;$/;"	d
precision	obj/user/testbss.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testbss.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/testbss.asm	/^		precision = -1;$/;"	d
precision	obj/user/testfdsharing.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testfdsharing.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/testfdsharing.asm	/^		precision = -1;$/;"	d
precision	obj/user/testfile.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testfile.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/testfile.asm	/^		precision = -1;$/;"	d
precision	obj/user/testkbd.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testkbd.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/testkbd.asm	/^		precision = -1;$/;"	d
precision	obj/user/testpipe.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testpipe.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/testpipe.asm	/^		precision = -1;$/;"	d
precision	obj/user/testpiperace.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testpiperace.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/testpiperace.asm	/^		precision = -1;$/;"	d
precision	obj/user/testpiperace2.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testpiperace2.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/testpiperace2.asm	/^		precision = -1;$/;"	d
precision	obj/user/testpteshare.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testpteshare.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/testpteshare.asm	/^		precision = -1;$/;"	d
precision	obj/user/testshell.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testshell.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/testshell.asm	/^		precision = -1;$/;"	d
precision	obj/user/yield.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/yield.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/yield.asm	/^		precision = -1;$/;"	d
primeproc	user/primes.c	/^primeproc(void)$/;"	f
primeproc	user/primespipe.c	/^primeproc(int fd)$/;"	f
print	ph.c	/^print(void)$/;"	f	file:
print_function	gradelib.py	/^from __future__ import print_function$/;"	i
print_regs	kern/trap.c	/^print_regs(struct PushRegs *regs)$/;"	f
print_trapframe	kern/trap.c	/^print_trapframe(struct Trapframe *tf)$/;"	f
printbuf	lib/fprintf.c	/^struct printbuf {$/;"	s	file:
printbuf	lib/printf.c	/^struct printbuf {$/;"	s	file:
printf	lib/fprintf.c	/^printf(const char *fmt, ...)$/;"	f
printfmt	lib/printfmt.c	/^printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...)$/;"	f
printnum	lib/printfmt.c	/^printnum(void (*putch)(int, void*), void *putdat,$/;"	f	file:
proc	obj/kern/kernel.asm	/^			proc = (struct mpproc *)p;$/;"	d
process_precision	obj/fs/fs.asm	/^		process_precision:$/;"	l
process_precision	obj/kern/kernel.asm	/^		process_precision:$/;"	l
process_precision	obj/user/badsegment.asm	/^		process_precision:$/;"	l
process_precision	obj/user/breakpoint.asm	/^		process_precision:$/;"	l
process_precision	obj/user/buggyhello.asm	/^		process_precision:$/;"	l
process_precision	obj/user/buggyhello2.asm	/^		process_precision:$/;"	l
process_precision	obj/user/cat.asm	/^		process_precision:$/;"	l
process_precision	obj/user/divzero.asm	/^		process_precision:$/;"	l
process_precision	obj/user/dumbfork.asm	/^		process_precision:$/;"	l
process_precision	obj/user/echo.asm	/^		process_precision:$/;"	l
process_precision	obj/user/evilhello.asm	/^		process_precision:$/;"	l
process_precision	obj/user/fairness.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultalloc.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultallocbad.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultbadhandler.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultdie.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultevilhandler.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultnostack.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultread.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultreadkernel.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultregs.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultwrite.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultwritekernel.asm	/^		process_precision:$/;"	l
process_precision	obj/user/forktree.asm	/^		process_precision:$/;"	l
process_precision	obj/user/hello.asm	/^		process_precision:$/;"	l
process_precision	obj/user/icode.asm	/^		process_precision:$/;"	l
process_precision	obj/user/idle.asm	/^		process_precision:$/;"	l
process_precision	obj/user/init.asm	/^		process_precision:$/;"	l
process_precision	obj/user/ls.asm	/^		process_precision:$/;"	l
process_precision	obj/user/lsfd.asm	/^		process_precision:$/;"	l
process_precision	obj/user/num.asm	/^		process_precision:$/;"	l
process_precision	obj/user/pingpong.asm	/^		process_precision:$/;"	l
process_precision	obj/user/pingpongs.asm	/^		process_precision:$/;"	l
process_precision	obj/user/primes.asm	/^		process_precision:$/;"	l
process_precision	obj/user/primespipe.asm	/^		process_precision:$/;"	l
process_precision	obj/user/sendpage.asm	/^		process_precision:$/;"	l
process_precision	obj/user/sh.asm	/^		process_precision:$/;"	l
process_precision	obj/user/softint.asm	/^		process_precision:$/;"	l
process_precision	obj/user/spawnhello.asm	/^		process_precision:$/;"	l
process_precision	obj/user/spin.asm	/^		process_precision:$/;"	l
process_precision	obj/user/stresssched.asm	/^		process_precision:$/;"	l
process_precision	obj/user/testbss.asm	/^		process_precision:$/;"	l
process_precision	obj/user/testfdsharing.asm	/^		process_precision:$/;"	l
process_precision	obj/user/testfile.asm	/^		process_precision:$/;"	l
process_precision	obj/user/testkbd.asm	/^		process_precision:$/;"	l
process_precision	obj/user/testpipe.asm	/^		process_precision:$/;"	l
process_precision	obj/user/testpiperace.asm	/^		process_precision:$/;"	l
process_precision	obj/user/testpiperace2.asm	/^		process_precision:$/;"	l
process_precision	obj/user/testpteshare.asm	/^		process_precision:$/;"	l
process_precision	obj/user/testshell.asm	/^		process_precision:$/;"	l
process_precision	obj/user/yield.asm	/^		process_precision:$/;"	l
product	kern/mpconfig.c	/^	uint8_t product[20];            \/\/ product id$/;"	m	struct:mpconf	file:
protcseg	boot/boot.S	/^protcseg:$/;"	l
protcseg	obj/boot/boot.asm	/^protcseg:$/;"	l
pt	obj/kern/kernel.asm	/^		pt = (pte_t*) KADDR(pa);$/;"	d
pte	obj/fs/fs.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/badsegment.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/breakpoint.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/buggyhello.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/buggyhello2.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/cat.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/divzero.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/dumbfork.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/echo.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/evilhello.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/fairness.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/faultalloc.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/faultallocbad.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/faultbadhandler.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/faultdie.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/faultevilhandler.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/faultnostack.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/faultread.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/faultreadkernel.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/faultregs.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/faultwrite.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/faultwritekernel.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/forktree.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/hello.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/icode.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/idle.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/init.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/ls.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/lsfd.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/num.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/pingpong.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/pingpongs.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/primes.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/primespipe.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/sendpage.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/sh.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/softint.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/spawnhello.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/spin.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/stresssched.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/testbss.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/testfdsharing.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/testfile.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/testkbd.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/testpipe.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/testpiperace.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/testpiperace2.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/testpteshare.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/testshell.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte	obj/user/yield.asm	/^	pte = uvpt[PGNUM(v)];$/;"	d
pte_t	inc/memlayout.h	/^typedef uint32_t pte_t;$/;"	t
pte_t	obj/kern/kernel.asm	/^pte_t *$/;"	l
ptep	obj/kern/kernel.asm	/^	ptep = (pte_t *) KADDR(PTE_ADDR(kern_pgdir[PDX(PGSIZE)]));$/;"	d
ptep	obj/kern/kernel.asm	/^	ptep = (pte_t *) page2kva(pp0);$/;"	d
ptep	obj/kern/kernel.asm	/^	ptep = pgdir_walk(kern_pgdir, va, 1);$/;"	d
ptep1	obj/kern/kernel.asm	/^	ptep1 = (pte_t *) KADDR(PTE_ADDR(kern_pgdir[PDX(va)]));$/;"	d
put	ph.c	/^put(int key, int value)$/;"	f	file:
putch	kern/printf.c	/^putch(int ch, int *cnt)$/;"	f	file:
putch	lib/fprintf.c	/^putch(int ch, void *thunk)$/;"	f	file:
putch	lib/printf.c	/^putch(int ch, struct printbuf *b)$/;"	f	file:
quote	gradelib.py	/^    from pipes import quote$/;"	i
r	grade-lab1	/^r = Runner(save("jos.out"),$/;"	v
r	grade-lab2	/^r = Runner(save("jos.out"),$/;"	v
r	grade-lab3	/^r = Runner(save("jos.out"),$/;"	v
r	grade-lab4	/^r = Runner(save("jos.out"),$/;"	v
r	grade-lab5	/^r = Runner(save("jos.out"),$/;"	v
r	obj/fs/fs.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/fs/fs.asm	/^			r = -E_INVAL;$/;"	d
r	obj/fs/fs.asm	/^			r = 0;$/;"	d
r	obj/fs/fs.asm	/^			r = handlers[req](whom, fsreq);$/;"	d
r	obj/fs/fs.asm	/^			r = serve_open(whom, (struct Fsreq_open*)fsreq, &pg, &perm);$/;"	d
r	obj/fs/fs.asm	/^		r = sys_page_alloc(0, (void *)(UXSTACKTOP - PGSIZE), PTE_U|PTE_W|PTE_P); $/;"	d
r	obj/fs/fs.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/fs/fs.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/kern/kernel.asm	/^			r = m - 1;$/;"	d
r	obj/user/badsegment.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/badsegment.asm	/^			r = 0;$/;"	d
r	obj/user/badsegment.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/badsegment.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/breakpoint.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/breakpoint.asm	/^			r = 0;$/;"	d
r	obj/user/breakpoint.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/breakpoint.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/buggyhello.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/buggyhello.asm	/^			r = 0;$/;"	d
r	obj/user/buggyhello.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/buggyhello.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/buggyhello2.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/buggyhello2.asm	/^			r = 0;$/;"	d
r	obj/user/buggyhello2.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/buggyhello2.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/cat.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/cat.asm	/^			r = 0;$/;"	d
r	obj/user/cat.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/cat.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/divzero.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/divzero.asm	/^			r = 0;$/;"	d
r	obj/user/divzero.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/divzero.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/dumbfork.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/dumbfork.asm	/^			r = 0;$/;"	d
r	obj/user/dumbfork.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/dumbfork.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/echo.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/echo.asm	/^			r = 0;$/;"	d
r	obj/user/echo.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/echo.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/evilhello.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/evilhello.asm	/^			r = 0;$/;"	d
r	obj/user/evilhello.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/evilhello.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/fairness.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/fairness.asm	/^			r = 0;$/;"	d
r	obj/user/fairness.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/fairness.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/faultalloc.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultalloc.asm	/^			r = 0;$/;"	d
r	obj/user/faultalloc.asm	/^		r = sys_page_alloc(0, (void *)(UXSTACKTOP - PGSIZE), PTE_U|PTE_W|PTE_P); $/;"	d
r	obj/user/faultalloc.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultalloc.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/faultallocbad.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultallocbad.asm	/^			r = 0;$/;"	d
r	obj/user/faultallocbad.asm	/^		r = sys_page_alloc(0, (void *)(UXSTACKTOP - PGSIZE), PTE_U|PTE_W|PTE_P); $/;"	d
r	obj/user/faultallocbad.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultallocbad.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/faultbadhandler.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultbadhandler.asm	/^			r = 0;$/;"	d
r	obj/user/faultbadhandler.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultbadhandler.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/faultdie.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultdie.asm	/^			r = 0;$/;"	d
r	obj/user/faultdie.asm	/^		r = sys_page_alloc(0, (void *)(UXSTACKTOP - PGSIZE), PTE_U|PTE_W|PTE_P); $/;"	d
r	obj/user/faultdie.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultdie.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/faultevilhandler.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultevilhandler.asm	/^			r = 0;$/;"	d
r	obj/user/faultevilhandler.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultevilhandler.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/faultnostack.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultnostack.asm	/^			r = 0;$/;"	d
r	obj/user/faultnostack.asm	/^		r = sys_page_alloc(0, (void *)(UXSTACKTOP - PGSIZE), PTE_U|PTE_W|PTE_P); $/;"	d
r	obj/user/faultnostack.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultnostack.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/faultread.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultread.asm	/^			r = 0;$/;"	d
r	obj/user/faultread.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultread.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/faultreadkernel.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultreadkernel.asm	/^			r = 0;$/;"	d
r	obj/user/faultreadkernel.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultreadkernel.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/faultregs.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultregs.asm	/^			r = 0;$/;"	d
r	obj/user/faultregs.asm	/^		r = sys_page_alloc(0, (void *)(UXSTACKTOP - PGSIZE), PTE_U|PTE_W|PTE_P); $/;"	d
r	obj/user/faultregs.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultregs.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/faultwrite.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultwrite.asm	/^			r = 0;$/;"	d
r	obj/user/faultwrite.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultwrite.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/faultwritekernel.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/faultwritekernel.asm	/^			r = 0;$/;"	d
r	obj/user/faultwritekernel.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/faultwritekernel.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/forktree.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/forktree.asm	/^			r = 0;$/;"	d
r	obj/user/forktree.asm	/^		r = sys_page_alloc(0, (void *)(UXSTACKTOP - PGSIZE), PTE_U|PTE_W|PTE_P); $/;"	d
r	obj/user/forktree.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/forktree.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/hello.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/hello.asm	/^			r = 0;$/;"	d
r	obj/user/hello.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/hello.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/icode.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/icode.asm	/^			r = 0;$/;"	d
r	obj/user/icode.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/icode.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/idle.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/idle.asm	/^			r = 0;$/;"	d
r	obj/user/idle.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/idle.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/init.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/init.asm	/^			r = 0;$/;"	d
r	obj/user/init.asm	/^		r = spawnl("\/sh", "sh", (char*)0);$/;"	d
r	obj/user/init.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/init.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/ls.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/ls.asm	/^			r = 0;$/;"	d
r	obj/user/ls.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/ls.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/lsfd.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/lsfd.asm	/^			r = 0;$/;"	d
r	obj/user/lsfd.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/lsfd.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/num.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/num.asm	/^			r = 0;$/;"	d
r	obj/user/num.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/num.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/pingpong.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/pingpong.asm	/^			r = 0;$/;"	d
r	obj/user/pingpong.asm	/^		r = sys_page_alloc(0, (void *)(UXSTACKTOP - PGSIZE), PTE_U|PTE_W|PTE_P); $/;"	d
r	obj/user/pingpong.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/pingpong.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/pingpongs.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/pingpongs.asm	/^			r = 0;$/;"	d
r	obj/user/pingpongs.asm	/^		r = sys_page_alloc(0, (void *)(UXSTACKTOP - PGSIZE), PTE_U|PTE_W|PTE_P); $/;"	d
r	obj/user/pingpongs.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/pingpongs.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/primes.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/primes.asm	/^			r = 0;$/;"	d
r	obj/user/primes.asm	/^		r = sys_page_alloc(0, (void *)(UXSTACKTOP - PGSIZE), PTE_U|PTE_W|PTE_P); $/;"	d
r	obj/user/primes.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/primes.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/primespipe.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/primespipe.asm	/^			r = 0;$/;"	d
r	obj/user/primespipe.asm	/^		r = sys_page_alloc(0, (void *)(UXSTACKTOP - PGSIZE), PTE_U|PTE_W|PTE_P); $/;"	d
r	obj/user/primespipe.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/primespipe.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/sendpage.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/sendpage.asm	/^			r = 0;$/;"	d
r	obj/user/sendpage.asm	/^		r = sys_page_alloc(0, (void *)(UXSTACKTOP - PGSIZE), PTE_U|PTE_W|PTE_P); $/;"	d
r	obj/user/sendpage.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/sendpage.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/sh.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/sh.asm	/^			r = 0;$/;"	d
r	obj/user/sh.asm	/^		r = sys_page_alloc(0, (void *)(UXSTACKTOP - PGSIZE), PTE_U|PTE_W|PTE_P); $/;"	d
r	obj/user/sh.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/sh.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/softint.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/softint.asm	/^			r = 0;$/;"	d
r	obj/user/softint.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/softint.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/spawnhello.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/spawnhello.asm	/^			r = 0;$/;"	d
r	obj/user/spawnhello.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/spawnhello.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/spin.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/spin.asm	/^			r = 0;$/;"	d
r	obj/user/spin.asm	/^		r = sys_page_alloc(0, (void *)(UXSTACKTOP - PGSIZE), PTE_U|PTE_W|PTE_P); $/;"	d
r	obj/user/spin.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/spin.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/stresssched.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/stresssched.asm	/^			r = 0;$/;"	d
r	obj/user/stresssched.asm	/^		r = sys_page_alloc(0, (void *)(UXSTACKTOP - PGSIZE), PTE_U|PTE_W|PTE_P); $/;"	d
r	obj/user/stresssched.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/stresssched.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/testbss.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/testbss.asm	/^			r = 0;$/;"	d
r	obj/user/testbss.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/testbss.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/testfdsharing.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/testfdsharing.asm	/^			r = 0;$/;"	d
r	obj/user/testfdsharing.asm	/^		r = sys_page_alloc(0, (void *)(UXSTACKTOP - PGSIZE), PTE_U|PTE_W|PTE_P); $/;"	d
r	obj/user/testfdsharing.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/testfdsharing.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/testfile.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/testfile.asm	/^			r = 0;$/;"	d
r	obj/user/testfile.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/testfile.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/testkbd.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/testkbd.asm	/^			r = 0;$/;"	d
r	obj/user/testkbd.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/testkbd.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/testpipe.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/testpipe.asm	/^			r = 0;$/;"	d
r	obj/user/testpipe.asm	/^		r = sys_page_alloc(0, (void *)(UXSTACKTOP - PGSIZE), PTE_U|PTE_W|PTE_P); $/;"	d
r	obj/user/testpipe.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/testpipe.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/testpiperace.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/testpiperace.asm	/^			r = 0;$/;"	d
r	obj/user/testpiperace.asm	/^		r = sys_page_alloc(0, (void *)(UXSTACKTOP - PGSIZE), PTE_U|PTE_W|PTE_P); $/;"	d
r	obj/user/testpiperace.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/testpiperace.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/testpiperace2.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/testpiperace2.asm	/^			r = 0;$/;"	d
r	obj/user/testpiperace2.asm	/^		r = sys_page_alloc(0, (void *)(UXSTACKTOP - PGSIZE), PTE_U|PTE_W|PTE_P); $/;"	d
r	obj/user/testpiperace2.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/testpiperace2.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/testpteshare.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/testpteshare.asm	/^			r = 0;$/;"	d
r	obj/user/testpteshare.asm	/^		r = sys_page_alloc(0, (void *)(UXSTACKTOP - PGSIZE), PTE_U|PTE_W|PTE_P); $/;"	d
r	obj/user/testpteshare.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/testpteshare.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/testshell.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/testshell.asm	/^			r = 0;$/;"	d
r	obj/user/testshell.asm	/^		r = sys_page_alloc(0, (void *)(UXSTACKTOP - PGSIZE), PTE_U|PTE_W|PTE_P); $/;"	d
r	obj/user/testshell.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/testshell.asm	/^	r = read(0, &c, 1);$/;"	d
r	obj/user/yield.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/yield.asm	/^			r = 0;$/;"	d
r	obj/user/yield.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/yield.asm	/^	r = read(0, &c, 1);$/;"	d
rc	obj/fs/fs.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/kern/kernel.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/badsegment.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/breakpoint.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/buggyhello.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/buggyhello2.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/cat.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/divzero.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/dumbfork.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/echo.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/evilhello.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/fairness.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultalloc.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultallocbad.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultbadhandler.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultdie.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultevilhandler.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultnostack.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultread.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultreadkernel.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultregs.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultwrite.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultwritekernel.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/forktree.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/hello.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/icode.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/idle.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/init.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/ls.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/lsfd.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/num.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/pingpong.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/pingpongs.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/primes.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/primespipe.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/sendpage.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/sh.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/softint.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/spawnhello.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/spin.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/stresssched.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/testbss.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/testfdsharing.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/testfile.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/testkbd.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/testpipe.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/testpiperace.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/testpiperace2.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/testpteshare.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/testshell.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/yield.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rcr0	inc/x86.h	/^rcr0(void)$/;"	f
rcr2	inc/x86.h	/^rcr2(void)$/;"	f
rcr3	inc/x86.h	/^rcr3(void)$/;"	f
rcr4	inc/x86.h	/^rcr4(void)$/;"	f
re	grade-lab1	/^import re$/;"	i
re	grade-lab4	/^import re$/;"	i
re	gradelib.py	/^import sys, os, re, time, socket, select, subprocess, errno, shutil$/;"	i
read	inc/fs.h	/^	} read;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsreq_read
read	lib/fd.c	/^read(int fdnum, void *buf, size_t n)$/;"	f
readRet	inc/fs.h	/^	} readRet;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsret_read
read_ebp	inc/x86.h	/^read_ebp(void)$/;"	f
read_eflags	inc/x86.h	/^read_eflags(void)$/;"	f
read_esp	inc/x86.h	/^read_esp(void)$/;"	f
read_tsc	inc/x86.h	/^read_tsc(void)$/;"	f
readdeps	mergedep.pl	/^sub readdeps {$/;"	s
readline	lib/readline.c	/^readline(const char *prompt)$/;"	f
readn	fs/fsformat.c	/^readn(int f, void *out, size_t n)$/;"	f
readn	lib/fd.c	/^readn(int fdnum, void *buf, size_t n)$/;"	f
readsect	boot/main.c	/^readsect(void *dst, uint32_t offset)$/;"	f
readseg	boot/main.c	/^readseg(uint32_t pa, uint32_t count, uint32_t offset)$/;"	f
redircmd	homework/hw2-shell/sh.c	/^redircmd(struct cmd *subcmd, char *file, int type)$/;"	f
redircmd	homework/hw2-shell/sh.c	/^struct redircmd {$/;"	s	file:
reg_eax	inc/trap.h	/^	uint32_t reg_eax;$/;"	m	struct:PushRegs
reg_ebp	inc/trap.h	/^	uint32_t reg_ebp;$/;"	m	struct:PushRegs
reg_ebx	inc/trap.h	/^	uint32_t reg_ebx;$/;"	m	struct:PushRegs
reg_ecx	inc/trap.h	/^	uint32_t reg_ecx;$/;"	m	struct:PushRegs
reg_edi	inc/trap.h	/^	uint32_t reg_edi;$/;"	m	struct:PushRegs
reg_edx	inc/trap.h	/^	uint32_t reg_edx;$/;"	m	struct:PushRegs
reg_esi	inc/trap.h	/^	uint32_t reg_esi;$/;"	m	struct:PushRegs
reg_oesp	inc/trap.h	/^	uint32_t reg_oesp;		\/* Useless *\/$/;"	m	struct:PushRegs
region_alloc	kern/env.c	/^region_alloc(struct Env *e, void *va, size_t len)$/;"	f	file:
register_test	gradelib.py	/^    def register_test(fn, title=title):$/;"	f	function:test
regs	user/faultregs.c	/^	struct PushRegs regs;$/;"	m	struct:regs	typeref:struct:regs::PushRegs	file:
regs	user/faultregs.c	/^struct regs$/;"	s	file:
relocated	kern/entry.S	/^relocated:$/;"	l
relocated	obj/kern/kernel.asm	/^relocated:$/;"	l
remove	inc/fs.h	/^	} remove;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsreq_remove
req	obj/fs/fs.asm	/^		req = ipc_recv((int32_t *) &whom, fsreq, &perm);$/;"	d
req_buf	inc/fs.h	/^		char req_buf[PGSIZE - (sizeof(int) + sizeof(size_t))];$/;"	m	struct:Fsipc::Fsreq_write
req_fileid	inc/fs.h	/^		int req_fileid;$/;"	m	struct:Fsipc::Fsreq_flush
req_fileid	inc/fs.h	/^		int req_fileid;$/;"	m	struct:Fsipc::Fsreq_read
req_fileid	inc/fs.h	/^		int req_fileid;$/;"	m	struct:Fsipc::Fsreq_set_size
req_fileid	inc/fs.h	/^		int req_fileid;$/;"	m	struct:Fsipc::Fsreq_stat
req_fileid	inc/fs.h	/^		int req_fileid;$/;"	m	struct:Fsipc::Fsreq_write
req_n	inc/fs.h	/^		size_t req_n;$/;"	m	struct:Fsipc::Fsreq_read
req_n	inc/fs.h	/^		size_t req_n;$/;"	m	struct:Fsipc::Fsreq_write
req_omode	inc/fs.h	/^		int req_omode;$/;"	m	struct:Fsipc::Fsreq_open
req_path	inc/fs.h	/^		char req_path[MAXPATHLEN];$/;"	m	struct:Fsipc::Fsreq_open
req_path	inc/fs.h	/^		char req_path[MAXPATHLEN];$/;"	m	struct:Fsipc::Fsreq_remove
req_size	inc/fs.h	/^		off_t req_size;$/;"	m	struct:Fsipc::Fsreq_set_size
reserved	kern/mpconfig.c	/^	uint8_t reserved;$/;"	m	struct:mpconf	file:
reserved	kern/mpconfig.c	/^	uint8_t reserved[3];$/;"	m	struct:mp	file:
reserved	kern/mpconfig.c	/^	uint8_t reserved[8];$/;"	m	struct:mpproc	file:
reset_fs	gradelib.py	/^def reset_fs():$/;"	f
result	lib/fprintf.c	/^	ssize_t result;	\/\/ accumulated results from write$/;"	m	struct:printbuf	file:
result	obj/kern/kernel.asm	/^		result = page_free_list;$/;"	d
result	obj/kern/kernel.asm	/^	result = KADDR(PADDR(nextfree));$/;"	d
reswitch	obj/fs/fs.asm	/^	reswitch:$/;"	l
reswitch	obj/kern/kernel.asm	/^	reswitch:$/;"	l
reswitch	obj/user/badsegment.asm	/^	reswitch:$/;"	l
reswitch	obj/user/breakpoint.asm	/^	reswitch:$/;"	l
reswitch	obj/user/buggyhello.asm	/^	reswitch:$/;"	l
reswitch	obj/user/buggyhello2.asm	/^	reswitch:$/;"	l
reswitch	obj/user/cat.asm	/^	reswitch:$/;"	l
reswitch	obj/user/divzero.asm	/^	reswitch:$/;"	l
reswitch	obj/user/dumbfork.asm	/^	reswitch:$/;"	l
reswitch	obj/user/echo.asm	/^	reswitch:$/;"	l
reswitch	obj/user/evilhello.asm	/^	reswitch:$/;"	l
reswitch	obj/user/fairness.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultalloc.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultallocbad.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultbadhandler.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultdie.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultevilhandler.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultnostack.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultread.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultreadkernel.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultregs.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultwrite.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultwritekernel.asm	/^	reswitch:$/;"	l
reswitch	obj/user/forktree.asm	/^	reswitch:$/;"	l
reswitch	obj/user/hello.asm	/^	reswitch:$/;"	l
reswitch	obj/user/icode.asm	/^	reswitch:$/;"	l
reswitch	obj/user/idle.asm	/^	reswitch:$/;"	l
reswitch	obj/user/init.asm	/^	reswitch:$/;"	l
reswitch	obj/user/ls.asm	/^	reswitch:$/;"	l
reswitch	obj/user/lsfd.asm	/^	reswitch:$/;"	l
reswitch	obj/user/num.asm	/^	reswitch:$/;"	l
reswitch	obj/user/pingpong.asm	/^	reswitch:$/;"	l
reswitch	obj/user/pingpongs.asm	/^	reswitch:$/;"	l
reswitch	obj/user/primes.asm	/^	reswitch:$/;"	l
reswitch	obj/user/primespipe.asm	/^	reswitch:$/;"	l
reswitch	obj/user/sendpage.asm	/^	reswitch:$/;"	l
reswitch	obj/user/sh.asm	/^	reswitch:$/;"	l
reswitch	obj/user/softint.asm	/^	reswitch:$/;"	l
reswitch	obj/user/spawnhello.asm	/^	reswitch:$/;"	l
reswitch	obj/user/spin.asm	/^	reswitch:$/;"	l
reswitch	obj/user/stresssched.asm	/^	reswitch:$/;"	l
reswitch	obj/user/testbss.asm	/^	reswitch:$/;"	l
reswitch	obj/user/testfdsharing.asm	/^	reswitch:$/;"	l
reswitch	obj/user/testfile.asm	/^	reswitch:$/;"	l
reswitch	obj/user/testkbd.asm	/^	reswitch:$/;"	l
reswitch	obj/user/testpipe.asm	/^	reswitch:$/;"	l
reswitch	obj/user/testpiperace.asm	/^	reswitch:$/;"	l
reswitch	obj/user/testpiperace2.asm	/^	reswitch:$/;"	l
reswitch	obj/user/testpteshare.asm	/^	reswitch:$/;"	l
reswitch	obj/user/testshell.asm	/^	reswitch:$/;"	l
reswitch	obj/user/yield.asm	/^	reswitch:$/;"	l
ret	obj/fs/fs.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/fs/fs.asm	/^		ret = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
ret	obj/fs/fs.asm	/^	ret = dst;$/;"	d
ret	obj/kern/kernel.asm	/^	ret = dst;$/;"	d
ret	obj/user/badsegment.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/badsegment.asm	/^		ret = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
ret	obj/user/badsegment.asm	/^	ret = dst;$/;"	d
ret	obj/user/breakpoint.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/breakpoint.asm	/^		ret = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
ret	obj/user/breakpoint.asm	/^	ret = dst;$/;"	d
ret	obj/user/buggyhello.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/buggyhello.asm	/^		ret = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
ret	obj/user/buggyhello.asm	/^	ret = dst;$/;"	d
ret	obj/user/buggyhello2.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/buggyhello2.asm	/^		ret = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
ret	obj/user/buggyhello2.asm	/^	ret = dst;$/;"	d
ret	obj/user/cat.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/cat.asm	/^		ret = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
ret	obj/user/cat.asm	/^	ret = dst;$/;"	d
ret	obj/user/divzero.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/divzero.asm	/^		ret = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
ret	obj/user/divzero.asm	/^	ret = dst;$/;"	d
ret	obj/user/dumbfork.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/dumbfork.asm	/^		ret = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
ret	obj/user/dumbfork.asm	/^	ret = dst;$/;"	d
ret	obj/user/echo.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/echo.asm	/^		ret = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
ret	obj/user/echo.asm	/^	ret = dst;$/;"	d
ret	obj/user/evilhello.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/evilhello.asm	/^		ret = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
ret	obj/user/evilhello.asm	/^	ret = dst;$/;"	d
ret	obj/user/fairness.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/fairness.asm	/^		ret = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
ret	obj/user/fairness.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultalloc.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/faultalloc.asm	/^		ret = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
ret	obj/user/faultalloc.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultallocbad.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/faultallocbad.asm	/^		ret = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
ret	obj/user/faultallocbad.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultbadhandler.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/faultbadhandler.asm	/^		ret = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
ret	obj/user/faultbadhandler.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultdie.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/faultdie.asm	/^		ret = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
ret	obj/user/faultdie.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultevilhandler.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/faultevilhandler.asm	/^		ret = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
ret	obj/user/faultevilhandler.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultnostack.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/faultnostack.asm	/^		ret = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
ret	obj/user/faultnostack.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultread.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/faultread.asm	/^		ret = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
ret	obj/user/faultread.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultreadkernel.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/faultreadkernel.asm	/^		ret = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
ret	obj/user/faultreadkernel.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultregs.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/faultregs.asm	/^		ret = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
ret	obj/user/faultregs.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultwrite.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/faultwrite.asm	/^		ret = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
ret	obj/user/faultwrite.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultwritekernel.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/faultwritekernel.asm	/^		ret = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
ret	obj/user/faultwritekernel.asm	/^	ret = dst;$/;"	d
ret	obj/user/forktree.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/forktree.asm	/^		ret = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
ret	obj/user/forktree.asm	/^	ret = dst;$/;"	d
ret	obj/user/forktree.asm	/^	ret = sys_page_alloc(envid, $/;"	d
ret	obj/user/hello.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/hello.asm	/^		ret = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
ret	obj/user/hello.asm	/^	ret = dst;$/;"	d
ret	obj/user/icode.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/icode.asm	/^		ret = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
ret	obj/user/icode.asm	/^	ret = dst;$/;"	d
ret	obj/user/idle.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/idle.asm	/^		ret = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
ret	obj/user/idle.asm	/^	ret = dst;$/;"	d
ret	obj/user/init.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/init.asm	/^		ret = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
ret	obj/user/init.asm	/^	ret = dst;$/;"	d
ret	obj/user/ls.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/ls.asm	/^		ret = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
ret	obj/user/ls.asm	/^	ret = dst;$/;"	d
ret	obj/user/lsfd.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/lsfd.asm	/^		ret = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
ret	obj/user/lsfd.asm	/^	ret = dst;$/;"	d
ret	obj/user/num.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/num.asm	/^		ret = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
ret	obj/user/num.asm	/^	ret = dst;$/;"	d
ret	obj/user/pingpong.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/pingpong.asm	/^		ret = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
ret	obj/user/pingpong.asm	/^	ret = dst;$/;"	d
ret	obj/user/pingpong.asm	/^	ret = sys_page_alloc(envid, $/;"	d
ret	obj/user/pingpongs.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/pingpongs.asm	/^		ret = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
ret	obj/user/pingpongs.asm	/^	ret = dst;$/;"	d
ret	obj/user/pingpongs.asm	/^	ret = sys_page_alloc(envid, $/;"	d
ret	obj/user/primes.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/primes.asm	/^		ret = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
ret	obj/user/primes.asm	/^	ret = dst;$/;"	d
ret	obj/user/primes.asm	/^	ret = sys_page_alloc(envid, $/;"	d
ret	obj/user/primespipe.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/primespipe.asm	/^		ret = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
ret	obj/user/primespipe.asm	/^	ret = dst;$/;"	d
ret	obj/user/primespipe.asm	/^	ret = sys_page_alloc(envid, $/;"	d
ret	obj/user/sendpage.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/sendpage.asm	/^		ret = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
ret	obj/user/sendpage.asm	/^	ret = dst;$/;"	d
ret	obj/user/sendpage.asm	/^	ret = sys_page_alloc(envid, $/;"	d
ret	obj/user/sh.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/sh.asm	/^		ret = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
ret	obj/user/sh.asm	/^	ret = dst;$/;"	d
ret	obj/user/sh.asm	/^	ret = sys_page_alloc(envid, $/;"	d
ret	obj/user/softint.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/softint.asm	/^		ret = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
ret	obj/user/softint.asm	/^	ret = dst;$/;"	d
ret	obj/user/spawnhello.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/spawnhello.asm	/^		ret = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
ret	obj/user/spawnhello.asm	/^	ret = dst;$/;"	d
ret	obj/user/spin.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/spin.asm	/^		ret = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
ret	obj/user/spin.asm	/^	ret = dst;$/;"	d
ret	obj/user/spin.asm	/^	ret = sys_page_alloc(envid, $/;"	d
ret	obj/user/stresssched.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/stresssched.asm	/^		ret = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
ret	obj/user/stresssched.asm	/^	ret = dst;$/;"	d
ret	obj/user/stresssched.asm	/^	ret = sys_page_alloc(envid, $/;"	d
ret	obj/user/testbss.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/testbss.asm	/^		ret = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
ret	obj/user/testbss.asm	/^	ret = dst;$/;"	d
ret	obj/user/testfdsharing.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/testfdsharing.asm	/^		ret = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
ret	obj/user/testfdsharing.asm	/^	ret = dst;$/;"	d
ret	obj/user/testfdsharing.asm	/^	ret = sys_page_alloc(envid, $/;"	d
ret	obj/user/testfile.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/testfile.asm	/^		ret = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
ret	obj/user/testfile.asm	/^	ret = dst;$/;"	d
ret	obj/user/testkbd.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/testkbd.asm	/^		ret = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
ret	obj/user/testkbd.asm	/^	ret = dst;$/;"	d
ret	obj/user/testpipe.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/testpipe.asm	/^		ret = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
ret	obj/user/testpipe.asm	/^	ret = dst;$/;"	d
ret	obj/user/testpipe.asm	/^	ret = sys_page_alloc(envid, $/;"	d
ret	obj/user/testpiperace.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/testpiperace.asm	/^		ret = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
ret	obj/user/testpiperace.asm	/^	ret = dst;$/;"	d
ret	obj/user/testpiperace.asm	/^	ret = sys_page_alloc(envid, $/;"	d
ret	obj/user/testpiperace2.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/testpiperace2.asm	/^		ret = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
ret	obj/user/testpiperace2.asm	/^	ret = dst;$/;"	d
ret	obj/user/testpiperace2.asm	/^	ret = sys_page_alloc(envid, $/;"	d
ret	obj/user/testpteshare.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/testpteshare.asm	/^		ret = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
ret	obj/user/testpteshare.asm	/^	ret = dst;$/;"	d
ret	obj/user/testpteshare.asm	/^	ret = sys_page_alloc(envid, $/;"	d
ret	obj/user/testshell.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/testshell.asm	/^		ret = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
ret	obj/user/testshell.asm	/^	ret = dst;$/;"	d
ret	obj/user/testshell.asm	/^	ret = sys_page_alloc(envid, $/;"	d
ret	obj/user/yield.asm	/^		ret = pageref(fd) == pageref(p);$/;"	d
ret	obj/user/yield.asm	/^		ret = sys_ipc_try_send(to_env, val, pg, perm);$/;"	d
ret	obj/user/yield.asm	/^	ret = dst;$/;"	d
ret_buf	inc/fs.h	/^		char ret_buf[PGSIZE];$/;"	m	struct:Fsipc::Fsret_read
ret_isdir	inc/fs.h	/^		int ret_isdir;$/;"	m	struct:Fsipc::Fsret_stat
ret_name	inc/fs.h	/^		char ret_name[MAXNAMELEN];$/;"	m	struct:Fsipc::Fsret_stat
ret_size	inc/fs.h	/^		off_t ret_size;$/;"	m	struct:Fsipc::Fsret_stat
rfd	obj/user/testshell.asm	/^	rfd = pfds[0];$/;"	d
rfile	obj/kern/kernel.asm	/^	rfile = (stab_end - stabs) - 1;$/;"	d
rfun	obj/kern/kernel.asm	/^	rfun = rfile;$/;"	d
right	homework/hw2-shell/sh.c	/^  struct cmd *right; \/\/ right side of pipe$/;"	m	struct:pipecmd	typeref:struct:pipecmd::cmd	file:
rline	obj/kern/kernel.asm	/^		rline = rfile;$/;"	d
rline	obj/kern/kernel.asm	/^		rline = rfun;$/;"	d
round	barrier.c	/^  int round;          \/\/ Barrier round$/;"	m	struct:barrier	file:
rpos	kern/console.c	/^	uint32_t rpos;$/;"	m	struct:__anon3	file:
run_qemu	gradelib.py	/^    def run_qemu(self, *monitors, **kw):$/;"	m	class:Runner
run_qemu_kw	gradelib.py	/^        def run_qemu_kw(target_base="qemu", make_args=[], timeout=30):$/;"	f	function:Runner.run_qemu
run_test	gradelib.py	/^        def run_test():$/;"	f	function:test.register_test
run_tests	gradelib.py	/^def run_tests():$/;"	f
runcmd	homework/hw2-shell/sh.c	/^runcmd(struct cmd *cmd)$/;"	f
runcmd	kern/monitor.c	/^runcmd(char *buf, struct Trapframe *tf)$/;"	f	file:
runcmd	user/sh.c	/^runcmd(char* s)$/;"	f
runit	obj/user/sh.asm	/^runit:$/;"	l
s	obj/fs/fs.asm	/^	s = src;$/;"	d
s	obj/kern/kernel.asm	/^	s = src;$/;"	d
s	obj/user/badsegment.asm	/^	s = src;$/;"	d
s	obj/user/breakpoint.asm	/^	s = src;$/;"	d
s	obj/user/buggyhello.asm	/^	s = src;$/;"	d
s	obj/user/buggyhello2.asm	/^	s = src;$/;"	d
s	obj/user/cat.asm	/^	s = src;$/;"	d
s	obj/user/divzero.asm	/^	s = src;$/;"	d
s	obj/user/dumbfork.asm	/^	s = src;$/;"	d
s	obj/user/echo.asm	/^	s = src;$/;"	d
s	obj/user/evilhello.asm	/^	s = src;$/;"	d
s	obj/user/fairness.asm	/^	s = src;$/;"	d
s	obj/user/faultalloc.asm	/^	s = src;$/;"	d
s	obj/user/faultallocbad.asm	/^	s = src;$/;"	d
s	obj/user/faultbadhandler.asm	/^	s = src;$/;"	d
s	obj/user/faultdie.asm	/^	s = src;$/;"	d
s	obj/user/faultevilhandler.asm	/^	s = src;$/;"	d
s	obj/user/faultnostack.asm	/^	s = src;$/;"	d
s	obj/user/faultread.asm	/^	s = src;$/;"	d
s	obj/user/faultreadkernel.asm	/^	s = src;$/;"	d
s	obj/user/faultregs.asm	/^	s = src;$/;"	d
s	obj/user/faultwrite.asm	/^	s = src;$/;"	d
s	obj/user/faultwritekernel.asm	/^	s = src;$/;"	d
s	obj/user/forktree.asm	/^	s = src;$/;"	d
s	obj/user/hello.asm	/^	s = src;$/;"	d
s	obj/user/icode.asm	/^	s = src;$/;"	d
s	obj/user/idle.asm	/^	s = src;$/;"	d
s	obj/user/init.asm	/^	s = src;$/;"	d
s	obj/user/ls.asm	/^	s = src;$/;"	d
s	obj/user/lsfd.asm	/^	s = src;$/;"	d
s	obj/user/num.asm	/^	s = src;$/;"	d
s	obj/user/pingpong.asm	/^	s = src;$/;"	d
s	obj/user/pingpongs.asm	/^	s = src;$/;"	d
s	obj/user/primes.asm	/^	s = src;$/;"	d
s	obj/user/primespipe.asm	/^	s = src;$/;"	d
s	obj/user/sendpage.asm	/^	s = src;$/;"	d
s	obj/user/sh.asm	/^	s = src;$/;"	d
s	obj/user/softint.asm	/^	s = src;$/;"	d
s	obj/user/spawnhello.asm	/^	s = src;$/;"	d
s	obj/user/spin.asm	/^	s = src;$/;"	d
s	obj/user/stresssched.asm	/^	s = src;$/;"	d
s	obj/user/testbss.asm	/^	s = src;$/;"	d
s	obj/user/testfdsharing.asm	/^	s = src;$/;"	d
s	obj/user/testfile.asm	/^	s = src;$/;"	d
s	obj/user/testkbd.asm	/^	s = src;$/;"	d
s	obj/user/testpipe.asm	/^	s = src;$/;"	d
s	obj/user/testpiperace.asm	/^	s = src;$/;"	d
s	obj/user/testpiperace2.asm	/^	s = src;$/;"	d
s	obj/user/testpteshare.asm	/^	s = src;$/;"	d
s	obj/user/testshell.asm	/^	s = src;$/;"	d
s	obj/user/yield.asm	/^	s = src;$/;"	d
s_magic	inc/fs.h	/^	uint32_t s_magic;		\/\/ Magic number: FS_MAGIC$/;"	m	struct:Super
s_nblocks	inc/fs.h	/^	uint32_t s_nblocks;		\/\/ Total number of blocks on disk$/;"	m	struct:Super
s_root	inc/fs.h	/^	struct File s_root;		\/\/ Root directory node$/;"	m	struct:Super	typeref:struct:Super::File
save	gradelib.py	/^def save(path):$/;"	f
save_on_finish	gradelib.py	/^    def save_on_finish(fail):$/;"	f	function:save
sched_halt	kern/sched.c	/^sched_halt(void)$/;"	f
sched_yield	kern/sched.c	/^sched_yield(void)$/;"	f
sd_avl	inc/mmu.h	/^	unsigned sd_avl : 1;        \/\/ Unused (available for software use)$/;"	m	struct:Segdesc
sd_base_15_0	inc/mmu.h	/^	unsigned sd_base_15_0 : 16; \/\/ Low bits of segment base address$/;"	m	struct:Segdesc
sd_base_23_16	inc/mmu.h	/^	unsigned sd_base_23_16 : 8; \/\/ Middle bits of segment base address$/;"	m	struct:Segdesc
sd_base_31_24	inc/mmu.h	/^	unsigned sd_base_31_24 : 8; \/\/ High bits of segment base address$/;"	m	struct:Segdesc
sd_db	inc/mmu.h	/^	unsigned sd_db : 1;         \/\/ 0 = 16-bit segment, 1 = 32-bit segment$/;"	m	struct:Segdesc
sd_dpl	inc/mmu.h	/^	unsigned sd_dpl : 2;        \/\/ Descriptor Privilege Level$/;"	m	struct:Segdesc
sd_g	inc/mmu.h	/^	unsigned sd_g : 1;          \/\/ Granularity: limit scaled by 4K when set$/;"	m	struct:Segdesc
sd_lim_15_0	inc/mmu.h	/^	unsigned sd_lim_15_0 : 16;  \/\/ Low bits of segment limit$/;"	m	struct:Segdesc
sd_lim_19_16	inc/mmu.h	/^	unsigned sd_lim_19_16 : 4;  \/\/ High bits of segment limit$/;"	m	struct:Segdesc
sd_p	inc/mmu.h	/^	unsigned sd_p : 1;          \/\/ Present$/;"	m	struct:Segdesc
sd_rsv1	inc/mmu.h	/^	unsigned sd_rsv1 : 1;       \/\/ Reserved$/;"	m	struct:Segdesc
sd_s	inc/mmu.h	/^	unsigned sd_s : 1;          \/\/ 0 = system, 1 = application$/;"	m	struct:Segdesc
sd_type	inc/mmu.h	/^	unsigned sd_type : 4;       \/\/ Segment type (see STS_ constants)$/;"	m	struct:Segdesc
seek	lib/fd.c	/^seek(int fdnum, off_t offset)$/;"	f
select	gradelib.py	/^import sys, os, re, time, socket, select, subprocess, errno, shutil$/;"	i
sep	obj/user/ls.asm	/^			sep = "";$/;"	d
sep	obj/user/ls.asm	/^			sep = "\/";$/;"	d
serial_exists	kern/console.c	/^static bool serial_exists;$/;"	v	file:
serial_exists	obj/kern/kernel.asm	/^	serial_exists = (inb(COM1+COM_LSR) != 0xFF);$/;"	d
serial_init	kern/console.c	/^serial_init(void)$/;"	f	file:
serial_intr	kern/console.c	/^serial_intr(void)$/;"	f
serial_proc_data	kern/console.c	/^serial_proc_data(void)$/;"	f	file:
serial_putc	kern/console.c	/^serial_putc(int c)$/;"	f	file:
serve	fs/serv.c	/^serve(void)$/;"	f
serve_flush	fs/serv.c	/^serve_flush(envid_t envid, struct Fsreq_flush *req)$/;"	f
serve_init	fs/serv.c	/^serve_init(void)$/;"	f
serve_open	fs/serv.c	/^serve_open(envid_t envid, struct Fsreq_open *req,$/;"	f
serve_read	fs/serv.c	/^serve_read(envid_t envid, union Fsipc *ipc)$/;"	f
serve_set_size	fs/serv.c	/^serve_set_size(envid_t envid, struct Fsreq_set_size *req)$/;"	f
serve_stat	fs/serv.c	/^serve_stat(envid_t envid, union Fsipc *ipc)$/;"	f
serve_sync	fs/serv.c	/^serve_sync(envid_t envid, union Fsipc *req)$/;"	f
serve_write	fs/serv.c	/^serve_write(envid_t envid, struct Fsreq_write *req)$/;"	f
set_pgfault_handler	lib/pgfault.c	/^set_pgfault_handler(void (*handler)(struct UTrapframe *utf))$/;"	f
set_size	inc/fs.h	/^	} set_size;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsreq_set_size
setup_breakpoint	gradelib.py	/^    def setup_breakpoint(runner):$/;"	f	function:stop_breakpoint
setup_call_on_line	gradelib.py	/^    def setup_call_on_line(runner):$/;"	f	function:call_on_line
setup_save	gradelib.py	/^    def setup_save(runner):$/;"	f	function:save
sfork	lib/fork.c	/^sfork(void)$/;"	f
sh_addr	inc/elf.h	/^	uint32_t sh_addr;$/;"	m	struct:Secthdr
sh_addralign	inc/elf.h	/^	uint32_t sh_addralign;$/;"	m	struct:Secthdr
sh_entsize	inc/elf.h	/^	uint32_t sh_entsize;$/;"	m	struct:Secthdr
sh_flags	inc/elf.h	/^	uint32_t sh_flags;$/;"	m	struct:Secthdr
sh_info	inc/elf.h	/^	uint32_t sh_info;$/;"	m	struct:Secthdr
sh_link	inc/elf.h	/^	uint32_t sh_link;$/;"	m	struct:Secthdr
sh_name	inc/elf.h	/^	uint32_t sh_name;$/;"	m	struct:Secthdr
sh_offset	inc/elf.h	/^	uint32_t sh_offset;$/;"	m	struct:Secthdr
sh_size	inc/elf.h	/^	uint32_t sh_size;$/;"	m	struct:Secthdr
sh_type	inc/elf.h	/^	uint32_t sh_type;$/;"	m	struct:Secthdr
shiftcode	kern/console.c	/^static uint8_t shiftcode[256] =$/;"	v	file:
shiftmap	kern/console.c	/^static uint8_t shiftmap[256] =$/;"	v	file:
show_command	gradelib.py	/^def show_command(cmd):$/;"	f
show_mapping	kern/monitor.c	/^show_mapping(void *vaddr)$/;"	f	file:
show_part	gradelib.py	/^    def show_part():$/;"	f	function:end_part
showmappings	kern/monitor.h	/^MON_CMD_DECL(showmappings);$/;"	v
shutil	gradelib.py	/^import sys, os, re, time, socket, select, subprocess, errno, shutil$/;"	i
signature	kern/mpconfig.c	/^	uint8_t signature[4];           \/\/ "PCMP"$/;"	m	struct:mpconf	file:
signature	kern/mpconfig.c	/^	uint8_t signature[4];           \/\/ "_MP_"$/;"	m	struct:mp	file:
signature	kern/mpconfig.c	/^	uint8_t signature[4];           \/\/ CPU signature$/;"	m	struct:mpproc	file:
size	obj/kern/kernel.asm	/^	size = ROUNDUP(size, PGSIZE);$/;"	d
size_t	inc/types.h	/^typedef uint32_t size_t;$/;"	t
size_t	obj/fs/fs.asm	/^size_t$/;"	l
size_t	obj/kern/kernel.asm	/^size_t$/;"	l
size_t	obj/user/badsegment.asm	/^size_t$/;"	l
size_t	obj/user/breakpoint.asm	/^size_t$/;"	l
size_t	obj/user/buggyhello.asm	/^size_t$/;"	l
size_t	obj/user/buggyhello2.asm	/^size_t$/;"	l
size_t	obj/user/cat.asm	/^size_t$/;"	l
size_t	obj/user/divzero.asm	/^size_t$/;"	l
size_t	obj/user/dumbfork.asm	/^size_t$/;"	l
size_t	obj/user/echo.asm	/^size_t$/;"	l
size_t	obj/user/evilhello.asm	/^size_t$/;"	l
size_t	obj/user/fairness.asm	/^size_t$/;"	l
size_t	obj/user/faultalloc.asm	/^size_t$/;"	l
size_t	obj/user/faultallocbad.asm	/^size_t$/;"	l
size_t	obj/user/faultbadhandler.asm	/^size_t$/;"	l
size_t	obj/user/faultdie.asm	/^size_t$/;"	l
size_t	obj/user/faultevilhandler.asm	/^size_t$/;"	l
size_t	obj/user/faultnostack.asm	/^size_t$/;"	l
size_t	obj/user/faultread.asm	/^size_t$/;"	l
size_t	obj/user/faultreadkernel.asm	/^size_t$/;"	l
size_t	obj/user/faultregs.asm	/^size_t$/;"	l
size_t	obj/user/faultwrite.asm	/^size_t$/;"	l
size_t	obj/user/faultwritekernel.asm	/^size_t$/;"	l
size_t	obj/user/forktree.asm	/^size_t$/;"	l
size_t	obj/user/hello.asm	/^size_t$/;"	l
size_t	obj/user/icode.asm	/^size_t$/;"	l
size_t	obj/user/idle.asm	/^size_t$/;"	l
size_t	obj/user/init.asm	/^size_t$/;"	l
size_t	obj/user/ls.asm	/^size_t$/;"	l
size_t	obj/user/lsfd.asm	/^size_t$/;"	l
size_t	obj/user/num.asm	/^size_t$/;"	l
size_t	obj/user/pingpong.asm	/^size_t$/;"	l
size_t	obj/user/pingpongs.asm	/^size_t$/;"	l
size_t	obj/user/primes.asm	/^size_t$/;"	l
size_t	obj/user/primespipe.asm	/^size_t$/;"	l
size_t	obj/user/sendpage.asm	/^size_t$/;"	l
size_t	obj/user/sh.asm	/^size_t$/;"	l
size_t	obj/user/softint.asm	/^size_t$/;"	l
size_t	obj/user/spawnhello.asm	/^size_t$/;"	l
size_t	obj/user/spin.asm	/^size_t$/;"	l
size_t	obj/user/stresssched.asm	/^size_t$/;"	l
size_t	obj/user/testbss.asm	/^size_t$/;"	l
size_t	obj/user/testfdsharing.asm	/^size_t$/;"	l
size_t	obj/user/testfile.asm	/^size_t$/;"	l
size_t	obj/user/testkbd.asm	/^size_t$/;"	l
size_t	obj/user/testpipe.asm	/^size_t$/;"	l
size_t	obj/user/testpiperace.asm	/^size_t$/;"	l
size_t	obj/user/testpiperace2.asm	/^size_t$/;"	l
size_t	obj/user/testpteshare.asm	/^size_t$/;"	l
size_t	obj/user/testshell.asm	/^size_t$/;"	l
size_t	obj/user/yield.asm	/^size_t$/;"	l
skip_slash	fs/fs.c	/^skip_slash(const char *p)$/;"	f	file:
snprintf	lib/printfmt.c	/^snprintf(char *buf, int n, const char *fmt, ...)$/;"	f
socket	gradelib.py	/^import sys, os, re, time, socket, select, subprocess, errno, shutil$/;"	i
spawn	lib/spawn.c	/^spawn(const char *prog, const char **argv)$/;"	f
spawnl	lib/spawn.c	/^spawnl(const char *prog, const char *arg0, ...)$/;"	f
specrev	kern/mpconfig.c	/^	uint8_t specrev;                \/\/ [14]$/;"	m	struct:mp	file:
spin	boot/boot.S	/^spin:$/;"	l
spin	kern/entry.S	/^spin:	jmp	spin$/;"	l
spin	kern/mpentry.S	/^spin:$/;"	l
spin	obj/boot/boot.asm	/^spin:$/;"	l
spin	obj/kern/kernel.asm	/^spin:	jmp	spin$/;"	l
spin	obj/kern/kernel.asm	/^spin:$/;"	l
spin_initlock	kern/spinlock.h	26;"	d
spin_lock	kern/spinlock.c	/^spin_lock(struct spinlock *lk)$/;"	f
spin_unlock	kern/spinlock.c	/^spin_unlock(struct spinlock *lk)$/;"	f
spinlock	kern/spinlock.h	/^struct spinlock {$/;"	s
sprintbuf	lib/printfmt.c	/^struct sprintbuf {$/;"	s	file:
sprintputch	lib/printfmt.c	/^sprintputch(int ch, struct sprintbuf *b)$/;"	f	file:
ssize_t	inc/types.h	/^typedef int32_t ssize_t;$/;"	t
ssize_t	obj/fs/fs.asm	/^ssize_t$/;"	l
ssize_t	obj/user/badsegment.asm	/^ssize_t$/;"	l
ssize_t	obj/user/breakpoint.asm	/^ssize_t$/;"	l
ssize_t	obj/user/buggyhello.asm	/^ssize_t$/;"	l
ssize_t	obj/user/buggyhello2.asm	/^ssize_t$/;"	l
ssize_t	obj/user/cat.asm	/^ssize_t$/;"	l
ssize_t	obj/user/divzero.asm	/^ssize_t$/;"	l
ssize_t	obj/user/dumbfork.asm	/^ssize_t$/;"	l
ssize_t	obj/user/echo.asm	/^ssize_t$/;"	l
ssize_t	obj/user/evilhello.asm	/^ssize_t$/;"	l
ssize_t	obj/user/fairness.asm	/^ssize_t$/;"	l
ssize_t	obj/user/faultalloc.asm	/^ssize_t$/;"	l
ssize_t	obj/user/faultallocbad.asm	/^ssize_t$/;"	l
ssize_t	obj/user/faultbadhandler.asm	/^ssize_t$/;"	l
ssize_t	obj/user/faultdie.asm	/^ssize_t$/;"	l
ssize_t	obj/user/faultevilhandler.asm	/^ssize_t$/;"	l
ssize_t	obj/user/faultnostack.asm	/^ssize_t$/;"	l
ssize_t	obj/user/faultread.asm	/^ssize_t$/;"	l
ssize_t	obj/user/faultreadkernel.asm	/^ssize_t$/;"	l
ssize_t	obj/user/faultregs.asm	/^ssize_t$/;"	l
ssize_t	obj/user/faultwrite.asm	/^ssize_t$/;"	l
ssize_t	obj/user/faultwritekernel.asm	/^ssize_t$/;"	l
ssize_t	obj/user/forktree.asm	/^ssize_t$/;"	l
ssize_t	obj/user/hello.asm	/^ssize_t$/;"	l
ssize_t	obj/user/icode.asm	/^ssize_t$/;"	l
ssize_t	obj/user/idle.asm	/^ssize_t$/;"	l
ssize_t	obj/user/init.asm	/^ssize_t$/;"	l
ssize_t	obj/user/ls.asm	/^ssize_t$/;"	l
ssize_t	obj/user/lsfd.asm	/^ssize_t$/;"	l
ssize_t	obj/user/num.asm	/^ssize_t$/;"	l
ssize_t	obj/user/pingpong.asm	/^ssize_t$/;"	l
ssize_t	obj/user/pingpongs.asm	/^ssize_t$/;"	l
ssize_t	obj/user/primes.asm	/^ssize_t$/;"	l
ssize_t	obj/user/primespipe.asm	/^ssize_t$/;"	l
ssize_t	obj/user/sendpage.asm	/^ssize_t$/;"	l
ssize_t	obj/user/sh.asm	/^ssize_t$/;"	l
ssize_t	obj/user/softint.asm	/^ssize_t$/;"	l
ssize_t	obj/user/spawnhello.asm	/^ssize_t$/;"	l
ssize_t	obj/user/spin.asm	/^ssize_t$/;"	l
ssize_t	obj/user/stresssched.asm	/^ssize_t$/;"	l
ssize_t	obj/user/testbss.asm	/^ssize_t$/;"	l
ssize_t	obj/user/testfdsharing.asm	/^ssize_t$/;"	l
ssize_t	obj/user/testfile.asm	/^ssize_t$/;"	l
ssize_t	obj/user/testkbd.asm	/^ssize_t$/;"	l
ssize_t	obj/user/testpipe.asm	/^ssize_t$/;"	l
ssize_t	obj/user/testpiperace.asm	/^ssize_t$/;"	l
ssize_t	obj/user/testpiperace2.asm	/^ssize_t$/;"	l
ssize_t	obj/user/testpteshare.asm	/^ssize_t$/;"	l
ssize_t	obj/user/testshell.asm	/^ssize_t$/;"	l
ssize_t	obj/user/yield.asm	/^ssize_t$/;"	l
st_dev	inc/fd.h	/^	struct Dev *st_dev;$/;"	m	struct:Stat	typeref:struct:Stat::Dev
st_isdir	inc/fd.h	/^	int st_isdir;$/;"	m	struct:Stat
st_name	inc/fd.h	/^	char st_name[MAXNAMELEN];$/;"	m	struct:Stat
st_size	inc/fd.h	/^	off_t st_size;$/;"	m	struct:Stat
stab_binsearch	kern/kdebug.c	/^stab_binsearch(const struct Stab *stabs, int *region_left, int *region_right,$/;"	f	file:
stab_end	kern/kdebug.c	/^	const struct Stab *stab_end;$/;"	m	struct:UserStabData	typeref:struct:UserStabData::Stab	file:
stab_end	obj/kern/kernel.asm	/^		stab_end = __STAB_END__;$/;"	d
stab_end	obj/kern/kernel.asm	/^		stab_end = usd->stab_end;$/;"	d
stabs	kern/kdebug.c	/^	const struct Stab *stabs;$/;"	m	struct:UserStabData	typeref:struct:UserStabData::Stab	file:
stabs	obj/kern/kernel.asm	/^		stabs = __STAB_BEGIN__;$/;"	d
stabs	obj/kern/kernel.asm	/^		stabs = usd->stabs;$/;"	d
stabstr	kern/kdebug.c	/^	const char *stabstr;$/;"	m	struct:UserStabData	file:
stabstr	obj/kern/kernel.asm	/^		stabstr = __STABSTR_BEGIN__;$/;"	d
stabstr	obj/kern/kernel.asm	/^		stabstr = usd->stabstr;$/;"	d
stabstr_end	kern/kdebug.c	/^	const char *stabstr_end;$/;"	m	struct:UserStabData	file:
stabstr_end	obj/kern/kernel.asm	/^		stabstr_end = __STABSTR_END__;$/;"	d
stabstr_end	obj/kern/kernel.asm	/^		stabstr_end = usd->stabstr_end;$/;"	d
stack_top	obj/kern/kernel.asm	/^		stack_top = (uint32_t *)(*stack_top);$/;"	d
start	boot/boot.S	/^start:$/;"	l
start	obj/boot/boot.asm	/^start:$/;"	l
start32	kern/mpentry.S	/^start32:$/;"	l
start32	obj/kern/kernel.asm	/^start32:$/;"	l
startdir	fs/fsformat.c	/^startdir(struct File *f, struct Dir *dout)$/;"	f
stat	inc/fs.h	/^	} stat;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsreq_stat
stat	lib/fd.c	/^stat(const char *path, struct Stat *stat)$/;"	f
statRet	inc/fs.h	/^	} statRet;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsret_stat
static	obj/boot/boot.asm	/^static __inline uint8_t$/;"	l
static	obj/boot/boot.asm	/^static __inline void$/;"	l
static	obj/fs/fs.asm	/^static __inline uint8_t$/;"	l
static	obj/fs/fs.asm	/^static __inline void$/;"	l
static	obj/fs/fs.asm	/^static char *msg = "This is the NEW message of the day!\\n\\n";$/;"	l
static	obj/fs/fs.asm	/^static const char*$/;"	l
static	obj/fs/fs.asm	/^static int diskno = 1;$/;"	l
static	obj/fs/fs.asm	/^static int$/;"	l
static	obj/fs/fs.asm	/^static long long$/;"	l
static	obj/fs/fs.asm	/^static ssize_t$/;"	l
static	obj/fs/fs.asm	/^static unsigned long long$/;"	l
static	obj/fs/fs.asm	/^static void$/;"	l
static	obj/kern/kernel.asm	/^static __inline uint32_t$/;"	l
static	obj/kern/kernel.asm	/^static __inline uint8_t$/;"	l
static	obj/kern/kernel.asm	/^static __inline void$/;"	l
static	obj/kern/kernel.asm	/^static bool didinit;$/;"	l
static	obj/kern/kernel.asm	/^static bool serial_exists;$/;"	l
static	obj/kern/kernel.asm	/^static char buf[BUFLEN];$/;"	l
static	obj/kern/kernel.asm	/^static envid_t$/;"	l
static	obj/kern/kernel.asm	/^static inline int$/;"	l
static	obj/kern/kernel.asm	/^static inline physaddr_t$/;"	l
static	obj/kern/kernel.asm	/^static inline struct PageInfo*$/;"	l
static	obj/kern/kernel.asm	/^static inline void$/;"	l
static	obj/kern/kernel.asm	/^static inline void*$/;"	l
static	obj/kern/kernel.asm	/^static int $/;"	l
static	obj/kern/kernel.asm	/^static int$/;"	l
static	obj/kern/kernel.asm	/^static long long$/;"	l
static	obj/kern/kernel.asm	/^static physaddr_t$/;"	l
static	obj/kern/kernel.asm	/^static struct mp *$/;"	t
static	obj/kern/kernel.asm	/^static uint8_t$/;"	l
static	obj/kern/kernel.asm	/^static unsigned long long$/;"	l
static	obj/kern/kernel.asm	/^static void $/;"	l
static	obj/kern/kernel.asm	/^static void *$/;"	l
static	obj/kern/kernel.asm	/^static void boot_aps(void);$/;"	l
static	obj/kern/kernel.asm	/^static void$/;"	l
static	obj/user/badsegment.asm	/^static int$/;"	l
static	obj/user/badsegment.asm	/^static long long$/;"	l
static	obj/user/badsegment.asm	/^static ssize_t$/;"	l
static	obj/user/badsegment.asm	/^static unsigned long long$/;"	l
static	obj/user/badsegment.asm	/^static void$/;"	l
static	obj/user/breakpoint.asm	/^static int$/;"	l
static	obj/user/breakpoint.asm	/^static long long$/;"	l
static	obj/user/breakpoint.asm	/^static ssize_t$/;"	l
static	obj/user/breakpoint.asm	/^static unsigned long long$/;"	l
static	obj/user/breakpoint.asm	/^static void$/;"	l
static	obj/user/buggyhello.asm	/^static int$/;"	l
static	obj/user/buggyhello.asm	/^static long long$/;"	l
static	obj/user/buggyhello.asm	/^static ssize_t$/;"	l
static	obj/user/buggyhello.asm	/^static unsigned long long$/;"	l
static	obj/user/buggyhello.asm	/^static void$/;"	l
static	obj/user/buggyhello2.asm	/^static int$/;"	l
static	obj/user/buggyhello2.asm	/^static long long$/;"	l
static	obj/user/buggyhello2.asm	/^static ssize_t$/;"	l
static	obj/user/buggyhello2.asm	/^static unsigned long long$/;"	l
static	obj/user/buggyhello2.asm	/^static void$/;"	l
static	obj/user/cat.asm	/^static int$/;"	l
static	obj/user/cat.asm	/^static long long$/;"	l
static	obj/user/cat.asm	/^static ssize_t$/;"	l
static	obj/user/cat.asm	/^static unsigned long long$/;"	l
static	obj/user/cat.asm	/^static void$/;"	l
static	obj/user/divzero.asm	/^static int$/;"	l
static	obj/user/divzero.asm	/^static long long$/;"	l
static	obj/user/divzero.asm	/^static ssize_t$/;"	l
static	obj/user/divzero.asm	/^static unsigned long long$/;"	l
static	obj/user/divzero.asm	/^static void$/;"	l
static	obj/user/dumbfork.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/dumbfork.asm	/^static int$/;"	l
static	obj/user/dumbfork.asm	/^static long long$/;"	l
static	obj/user/dumbfork.asm	/^static ssize_t$/;"	l
static	obj/user/dumbfork.asm	/^static unsigned long long$/;"	l
static	obj/user/dumbfork.asm	/^static void$/;"	l
static	obj/user/echo.asm	/^static int$/;"	l
static	obj/user/echo.asm	/^static long long$/;"	l
static	obj/user/echo.asm	/^static ssize_t$/;"	l
static	obj/user/echo.asm	/^static unsigned long long$/;"	l
static	obj/user/echo.asm	/^static void$/;"	l
static	obj/user/evilhello.asm	/^static int$/;"	l
static	obj/user/evilhello.asm	/^static long long$/;"	l
static	obj/user/evilhello.asm	/^static ssize_t$/;"	l
static	obj/user/evilhello.asm	/^static unsigned long long$/;"	l
static	obj/user/evilhello.asm	/^static void$/;"	l
static	obj/user/fairness.asm	/^static int$/;"	l
static	obj/user/fairness.asm	/^static long long$/;"	l
static	obj/user/fairness.asm	/^static ssize_t$/;"	l
static	obj/user/fairness.asm	/^static unsigned long long$/;"	l
static	obj/user/fairness.asm	/^static void$/;"	l
static	obj/user/faultalloc.asm	/^static int$/;"	l
static	obj/user/faultalloc.asm	/^static long long$/;"	l
static	obj/user/faultalloc.asm	/^static ssize_t$/;"	l
static	obj/user/faultalloc.asm	/^static unsigned long long$/;"	l
static	obj/user/faultalloc.asm	/^static void$/;"	l
static	obj/user/faultallocbad.asm	/^static int$/;"	l
static	obj/user/faultallocbad.asm	/^static long long$/;"	l
static	obj/user/faultallocbad.asm	/^static ssize_t$/;"	l
static	obj/user/faultallocbad.asm	/^static unsigned long long$/;"	l
static	obj/user/faultallocbad.asm	/^static void$/;"	l
static	obj/user/faultbadhandler.asm	/^static int$/;"	l
static	obj/user/faultbadhandler.asm	/^static long long$/;"	l
static	obj/user/faultbadhandler.asm	/^static ssize_t$/;"	l
static	obj/user/faultbadhandler.asm	/^static unsigned long long$/;"	l
static	obj/user/faultbadhandler.asm	/^static void$/;"	l
static	obj/user/faultdie.asm	/^static int$/;"	l
static	obj/user/faultdie.asm	/^static long long$/;"	l
static	obj/user/faultdie.asm	/^static ssize_t$/;"	l
static	obj/user/faultdie.asm	/^static unsigned long long$/;"	l
static	obj/user/faultdie.asm	/^static void$/;"	l
static	obj/user/faultevilhandler.asm	/^static int$/;"	l
static	obj/user/faultevilhandler.asm	/^static long long$/;"	l
static	obj/user/faultevilhandler.asm	/^static ssize_t$/;"	l
static	obj/user/faultevilhandler.asm	/^static unsigned long long$/;"	l
static	obj/user/faultevilhandler.asm	/^static void$/;"	l
static	obj/user/faultnostack.asm	/^static int$/;"	l
static	obj/user/faultnostack.asm	/^static long long$/;"	l
static	obj/user/faultnostack.asm	/^static ssize_t$/;"	l
static	obj/user/faultnostack.asm	/^static unsigned long long$/;"	l
static	obj/user/faultnostack.asm	/^static void$/;"	l
static	obj/user/faultread.asm	/^static int$/;"	l
static	obj/user/faultread.asm	/^static long long$/;"	l
static	obj/user/faultread.asm	/^static ssize_t$/;"	l
static	obj/user/faultread.asm	/^static unsigned long long$/;"	l
static	obj/user/faultread.asm	/^static void$/;"	l
static	obj/user/faultreadkernel.asm	/^static int$/;"	l
static	obj/user/faultreadkernel.asm	/^static long long$/;"	l
static	obj/user/faultreadkernel.asm	/^static ssize_t$/;"	l
static	obj/user/faultreadkernel.asm	/^static unsigned long long$/;"	l
static	obj/user/faultreadkernel.asm	/^static void$/;"	l
static	obj/user/faultregs.asm	/^static int$/;"	l
static	obj/user/faultregs.asm	/^static long long$/;"	l
static	obj/user/faultregs.asm	/^static ssize_t$/;"	l
static	obj/user/faultregs.asm	/^static struct regs before, during, after;$/;"	t
static	obj/user/faultregs.asm	/^static unsigned long long$/;"	l
static	obj/user/faultregs.asm	/^static void$/;"	l
static	obj/user/faultwrite.asm	/^static int$/;"	l
static	obj/user/faultwrite.asm	/^static long long$/;"	l
static	obj/user/faultwrite.asm	/^static ssize_t$/;"	l
static	obj/user/faultwrite.asm	/^static unsigned long long$/;"	l
static	obj/user/faultwrite.asm	/^static void$/;"	l
static	obj/user/faultwritekernel.asm	/^static int$/;"	l
static	obj/user/faultwritekernel.asm	/^static long long$/;"	l
static	obj/user/faultwritekernel.asm	/^static ssize_t$/;"	l
static	obj/user/faultwritekernel.asm	/^static unsigned long long$/;"	l
static	obj/user/faultwritekernel.asm	/^static void$/;"	l
static	obj/user/forktree.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/forktree.asm	/^static int$/;"	l
static	obj/user/forktree.asm	/^static long long$/;"	l
static	obj/user/forktree.asm	/^static ssize_t$/;"	l
static	obj/user/forktree.asm	/^static unsigned long long$/;"	l
static	obj/user/forktree.asm	/^static void$/;"	l
static	obj/user/hello.asm	/^static int$/;"	l
static	obj/user/hello.asm	/^static long long$/;"	l
static	obj/user/hello.asm	/^static ssize_t$/;"	l
static	obj/user/hello.asm	/^static unsigned long long$/;"	l
static	obj/user/hello.asm	/^static void$/;"	l
static	obj/user/icode.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/icode.asm	/^static int$/;"	l
static	obj/user/icode.asm	/^static long long$/;"	l
static	obj/user/icode.asm	/^static ssize_t$/;"	l
static	obj/user/icode.asm	/^static unsigned long long$/;"	l
static	obj/user/icode.asm	/^static void$/;"	l
static	obj/user/idle.asm	/^static int$/;"	l
static	obj/user/idle.asm	/^static long long$/;"	l
static	obj/user/idle.asm	/^static ssize_t$/;"	l
static	obj/user/idle.asm	/^static unsigned long long$/;"	l
static	obj/user/idle.asm	/^static void$/;"	l
static	obj/user/init.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/init.asm	/^static int$/;"	l
static	obj/user/init.asm	/^static long long$/;"	l
static	obj/user/init.asm	/^static ssize_t$/;"	l
static	obj/user/init.asm	/^static unsigned long long$/;"	l
static	obj/user/init.asm	/^static void$/;"	l
static	obj/user/ls.asm	/^static int$/;"	l
static	obj/user/ls.asm	/^static long long$/;"	l
static	obj/user/ls.asm	/^static ssize_t$/;"	l
static	obj/user/ls.asm	/^static unsigned long long$/;"	l
static	obj/user/ls.asm	/^static void$/;"	l
static	obj/user/lsfd.asm	/^static int$/;"	l
static	obj/user/lsfd.asm	/^static long long$/;"	l
static	obj/user/lsfd.asm	/^static ssize_t$/;"	l
static	obj/user/lsfd.asm	/^static unsigned long long$/;"	l
static	obj/user/lsfd.asm	/^static void$/;"	l
static	obj/user/num.asm	/^static int$/;"	l
static	obj/user/num.asm	/^static long long$/;"	l
static	obj/user/num.asm	/^static ssize_t$/;"	l
static	obj/user/num.asm	/^static unsigned long long$/;"	l
static	obj/user/num.asm	/^static void$/;"	l
static	obj/user/pingpong.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/pingpong.asm	/^static int$/;"	l
static	obj/user/pingpong.asm	/^static long long$/;"	l
static	obj/user/pingpong.asm	/^static ssize_t$/;"	l
static	obj/user/pingpong.asm	/^static unsigned long long$/;"	l
static	obj/user/pingpong.asm	/^static void$/;"	l
static	obj/user/pingpongs.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/pingpongs.asm	/^static int$/;"	l
static	obj/user/pingpongs.asm	/^static long long$/;"	l
static	obj/user/pingpongs.asm	/^static ssize_t$/;"	l
static	obj/user/pingpongs.asm	/^static unsigned long long$/;"	l
static	obj/user/pingpongs.asm	/^static void$/;"	l
static	obj/user/primes.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/primes.asm	/^static int$/;"	l
static	obj/user/primes.asm	/^static long long$/;"	l
static	obj/user/primes.asm	/^static ssize_t$/;"	l
static	obj/user/primes.asm	/^static unsigned long long$/;"	l
static	obj/user/primes.asm	/^static void$/;"	l
static	obj/user/primespipe.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/primespipe.asm	/^static int$/;"	l
static	obj/user/primespipe.asm	/^static long long$/;"	l
static	obj/user/primespipe.asm	/^static ssize_t$/;"	l
static	obj/user/primespipe.asm	/^static unsigned long long$/;"	l
static	obj/user/primespipe.asm	/^static void$/;"	l
static	obj/user/sendpage.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/sendpage.asm	/^static int$/;"	l
static	obj/user/sendpage.asm	/^static long long$/;"	l
static	obj/user/sendpage.asm	/^static ssize_t$/;"	l
static	obj/user/sendpage.asm	/^static unsigned long long$/;"	l
static	obj/user/sendpage.asm	/^static void$/;"	l
static	obj/user/sh.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/sh.asm	/^static char buf[BUFLEN];$/;"	l
static	obj/user/sh.asm	/^static int$/;"	l
static	obj/user/sh.asm	/^static long long$/;"	l
static	obj/user/sh.asm	/^static ssize_t$/;"	l
static	obj/user/sh.asm	/^static unsigned long long$/;"	l
static	obj/user/sh.asm	/^static void$/;"	l
static	obj/user/softint.asm	/^static int$/;"	l
static	obj/user/softint.asm	/^static long long$/;"	l
static	obj/user/softint.asm	/^static ssize_t$/;"	l
static	obj/user/softint.asm	/^static unsigned long long$/;"	l
static	obj/user/softint.asm	/^static void$/;"	l
static	obj/user/spawnhello.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/spawnhello.asm	/^static int$/;"	l
static	obj/user/spawnhello.asm	/^static long long$/;"	l
static	obj/user/spawnhello.asm	/^static ssize_t$/;"	l
static	obj/user/spawnhello.asm	/^static unsigned long long$/;"	l
static	obj/user/spawnhello.asm	/^static void$/;"	l
static	obj/user/spin.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/spin.asm	/^static int$/;"	l
static	obj/user/spin.asm	/^static long long$/;"	l
static	obj/user/spin.asm	/^static ssize_t$/;"	l
static	obj/user/spin.asm	/^static unsigned long long$/;"	l
static	obj/user/spin.asm	/^static void$/;"	l
static	obj/user/stresssched.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/stresssched.asm	/^static int$/;"	l
static	obj/user/stresssched.asm	/^static long long$/;"	l
static	obj/user/stresssched.asm	/^static ssize_t$/;"	l
static	obj/user/stresssched.asm	/^static unsigned long long$/;"	l
static	obj/user/stresssched.asm	/^static void$/;"	l
static	obj/user/testbss.asm	/^static int$/;"	l
static	obj/user/testbss.asm	/^static long long$/;"	l
static	obj/user/testbss.asm	/^static ssize_t$/;"	l
static	obj/user/testbss.asm	/^static unsigned long long$/;"	l
static	obj/user/testbss.asm	/^static void$/;"	l
static	obj/user/testfdsharing.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/testfdsharing.asm	/^static __inline uint64_t read_tsc(void) __attribute__((always_inline));$/;"	l
static	obj/user/testfdsharing.asm	/^static __inline void$/;"	l
static	obj/user/testfdsharing.asm	/^static int$/;"	l
static	obj/user/testfdsharing.asm	/^static long long$/;"	l
static	obj/user/testfdsharing.asm	/^static ssize_t$/;"	l
static	obj/user/testfdsharing.asm	/^static unsigned long long$/;"	l
static	obj/user/testfdsharing.asm	/^static void$/;"	l
static	obj/user/testfile.asm	/^static int$/;"	l
static	obj/user/testfile.asm	/^static long long$/;"	l
static	obj/user/testfile.asm	/^static ssize_t$/;"	l
static	obj/user/testfile.asm	/^static unsigned long long$/;"	l
static	obj/user/testfile.asm	/^static void$/;"	l
static	obj/user/testkbd.asm	/^static char buf[BUFLEN];$/;"	l
static	obj/user/testkbd.asm	/^static int$/;"	l
static	obj/user/testkbd.asm	/^static long long$/;"	l
static	obj/user/testkbd.asm	/^static ssize_t$/;"	l
static	obj/user/testkbd.asm	/^static unsigned long long$/;"	l
static	obj/user/testkbd.asm	/^static void$/;"	l
static	obj/user/testpipe.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/testpipe.asm	/^static int$/;"	l
static	obj/user/testpipe.asm	/^static long long$/;"	l
static	obj/user/testpipe.asm	/^static ssize_t$/;"	l
static	obj/user/testpipe.asm	/^static unsigned long long$/;"	l
static	obj/user/testpipe.asm	/^static void$/;"	l
static	obj/user/testpiperace.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/testpiperace.asm	/^static int$/;"	l
static	obj/user/testpiperace.asm	/^static long long$/;"	l
static	obj/user/testpiperace.asm	/^static ssize_t$/;"	l
static	obj/user/testpiperace.asm	/^static unsigned long long$/;"	l
static	obj/user/testpiperace.asm	/^static void$/;"	l
static	obj/user/testpiperace2.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/testpiperace2.asm	/^static int$/;"	l
static	obj/user/testpiperace2.asm	/^static long long$/;"	l
static	obj/user/testpiperace2.asm	/^static ssize_t$/;"	l
static	obj/user/testpiperace2.asm	/^static unsigned long long$/;"	l
static	obj/user/testpiperace2.asm	/^static void$/;"	l
static	obj/user/testpteshare.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/testpteshare.asm	/^static __inline uint64_t read_tsc(void) __attribute__((always_inline));$/;"	l
static	obj/user/testpteshare.asm	/^static __inline void$/;"	l
static	obj/user/testpteshare.asm	/^static int$/;"	l
static	obj/user/testpteshare.asm	/^static long long$/;"	l
static	obj/user/testpteshare.asm	/^static ssize_t$/;"	l
static	obj/user/testpteshare.asm	/^static unsigned long long$/;"	l
static	obj/user/testpteshare.asm	/^static void$/;"	l
static	obj/user/testshell.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/testshell.asm	/^static __inline uint64_t read_tsc(void) __attribute__((always_inline));$/;"	l
static	obj/user/testshell.asm	/^static __inline void$/;"	l
static	obj/user/testshell.asm	/^static int$/;"	l
static	obj/user/testshell.asm	/^static long long$/;"	l
static	obj/user/testshell.asm	/^static ssize_t$/;"	l
static	obj/user/testshell.asm	/^static unsigned long long$/;"	l
static	obj/user/testshell.asm	/^static void$/;"	l
static	obj/user/yield.asm	/^static int$/;"	l
static	obj/user/yield.asm	/^static long long$/;"	l
static	obj/user/yield.asm	/^static ssize_t$/;"	l
static	obj/user/yield.asm	/^static unsigned long long$/;"	l
static	obj/user/yield.asm	/^static void$/;"	l
static_assert	inc/assert.h	18;"	d
stop	gradelib.py	/^    def stop(line):$/;"	f	function:stop_on_line
stop_breakpoint	gradelib.py	/^def stop_breakpoint(addr):$/;"	f
stop_on_line	gradelib.py	/^def stop_on_line(regexp):$/;"	f
str1	user/sendpage.c	/^const char *str1 = "hello child environment! how are you?";$/;"	v
str2	user/sendpage.c	/^const char *str2 = "hello parent environment! I'm good.";$/;"	v
str2addr	kern/monitor.c	/^str2addr(char *str, void **result) {$/;"	f	file:
str2perm	kern/monitor.c	/^str2perm(const char* s) {$/;"	f	file:
strcat	lib/string.c	/^strcat(char *dst, const char *src)$/;"	f
strchr	lib/string.c	/^strchr(const char *s, char c)$/;"	f
strcmp	lib/string.c	/^strcmp(const char *p, const char *q)$/;"	f
strcpy	lib/string.c	/^strcpy(char *dst, const char *src)$/;"	f
strfind	lib/string.c	/^strfind(const char *s, char c)$/;"	f
string_size	obj/user/icode.asm	/^	string_size = 0;$/;"	d
string_size	obj/user/init.asm	/^	string_size = 0;$/;"	d
string_size	obj/user/sh.asm	/^	string_size = 0;$/;"	d
string_size	obj/user/spawnhello.asm	/^	string_size = 0;$/;"	d
string_size	obj/user/testpteshare.asm	/^	string_size = 0;$/;"	d
string_size	obj/user/testshell.asm	/^	string_size = 0;$/;"	d
string_store	obj/user/icode.asm	/^	string_store = (char*) UTEMP + PGSIZE - string_size;$/;"	d
string_store	obj/user/init.asm	/^	string_store = (char*) UTEMP + PGSIZE - string_size;$/;"	d
string_store	obj/user/sh.asm	/^	string_store = (char*) UTEMP + PGSIZE - string_size;$/;"	d
string_store	obj/user/spawnhello.asm	/^	string_store = (char*) UTEMP + PGSIZE - string_size;$/;"	d
string_store	obj/user/testpteshare.asm	/^	string_store = (char*) UTEMP + PGSIZE - string_size;$/;"	d
string_store	obj/user/testshell.asm	/^	string_store = (char*) UTEMP + PGSIZE - string_size;$/;"	d
strlcpy	lib/string.c	/^strlcpy(char *dst, const char *src, size_t size)$/;"	f
strlen	lib/string.c	/^strlen(const char *s)$/;"	f
strncmp	lib/string.c	/^strncmp(const char *p, const char *q, size_t n)$/;"	f
strncpy	lib/string.c	/^strncpy(char *dst, const char *src, size_t size) {$/;"	f
strnlen	lib/string.c	/^strnlen(const char *s, size_t size)$/;"	f
strtol	lib/string.c	/^strtol(const char *s, char **endptr, int base)$/;"	f
subprocess	gradelib.py	/^import sys, os, re, time, socket, select, subprocess, errno, shutil$/;"	i
sum	kern/mpconfig.c	/^sum(void *addr, int len)$/;"	f	file:
sum	obj/kern/kernel.asm	/^	sum = 0;$/;"	d
sum	user/init.c	/^sum(const char *s, int n)$/;"	f
super	fs/fs.h	/^struct Super *super;		\/\/ superblock$/;"	v	typeref:struct:Super
super	fs/fsformat.c	/^struct Super *super;$/;"	v	typeref:struct:Super
super	obj/fs/fs.asm	/^	super = diskaddr(1);$/;"	d
symbols	homework/hw2-shell/sh.c	/^char symbols[] = "<|>";$/;"	v
sync	lib/file.c	/^sync(void)$/;"	f
sys	gradelib.py	/^import sys, os, re, time, socket, select, subprocess, errno, shutil$/;"	i
sys_cgetc	kern/syscall.c	/^sys_cgetc(void)$/;"	f	file:
sys_cgetc	lib/syscall.c	/^sys_cgetc(void)$/;"	f
sys_cputs	kern/syscall.c	/^sys_cputs(const char *s, size_t len)$/;"	f	file:
sys_cputs	lib/syscall.c	/^sys_cputs(const char *s, size_t len)$/;"	f
sys_env_destroy	kern/syscall.c	/^sys_env_destroy(envid_t envid)$/;"	f	file:
sys_env_destroy	lib/syscall.c	/^sys_env_destroy(envid_t envid)$/;"	f
sys_env_set_pgfault_upcall	kern/syscall.c	/^sys_env_set_pgfault_upcall(envid_t envid, void *func)$/;"	f	file:
sys_env_set_pgfault_upcall	lib/syscall.c	/^sys_env_set_pgfault_upcall(envid_t envid, void *upcall)$/;"	f
sys_env_set_status	kern/syscall.c	/^sys_env_set_status(envid_t envid, int status)$/;"	f	file:
sys_env_set_status	lib/syscall.c	/^sys_env_set_status(envid_t envid, int status)$/;"	f
sys_env_set_trapframe	kern/syscall.c	/^sys_env_set_trapframe(envid_t envid, struct Trapframe *tf)$/;"	f	file:
sys_env_set_trapframe	lib/syscall.c	/^sys_env_set_trapframe(envid_t envid, struct Trapframe *tf)$/;"	f
sys_exofork	inc/lib.h	/^sys_exofork(void)$/;"	f
sys_exofork	kern/syscall.c	/^sys_exofork(void)$/;"	f	file:
sys_getenvid	kern/syscall.c	/^sys_getenvid(void)$/;"	f	file:
sys_getenvid	lib/syscall.c	/^sys_getenvid(void)$/;"	f
sys_ipc_recv	kern/syscall.c	/^sys_ipc_recv(void *dstva)$/;"	f	file:
sys_ipc_recv	lib/syscall.c	/^sys_ipc_recv(void *dstva)$/;"	f
sys_ipc_try_send	kern/syscall.c	/^sys_ipc_try_send(envid_t envid, uint32_t value, void *srcva, unsigned perm)$/;"	f	file:
sys_ipc_try_send	lib/syscall.c	/^sys_ipc_try_send(envid_t envid, uint32_t value, void *srcva, int perm)$/;"	f
sys_page_alloc	kern/syscall.c	/^sys_page_alloc(envid_t envid, void *va, int perm)$/;"	f	file:
sys_page_alloc	lib/syscall.c	/^sys_page_alloc(envid_t envid, void *va, int perm)$/;"	f
sys_page_map	kern/syscall.c	/^sys_page_map(envid_t srcenvid, void *srcva,$/;"	f	file:
sys_page_map	lib/syscall.c	/^sys_page_map(envid_t srcenv, void *srcva, envid_t dstenv, void *dstva, int perm)$/;"	f
sys_page_unmap	kern/syscall.c	/^sys_page_unmap(envid_t envid, void *va)$/;"	f	file:
sys_page_unmap	lib/syscall.c	/^sys_page_unmap(envid_t envid, void *va)$/;"	f
sys_yield	kern/syscall.c	/^sys_yield(void)$/;"	f	file:
sys_yield	lib/syscall.c	/^sys_yield(void)$/;"	f
syscall	kern/syscall.c	/^syscall(uint32_t syscallno, uint32_t a1, uint32_t a2, uint32_t a3, uint32_t a4, uint32_t a5)$/;"	f
syscall	lib/syscall.c	/^syscall(int num, int check, uint32_t a1, uint32_t a2, uint32_t a3, uint32_t a4, uint32_t a5)$/;"	f	file:
t	obj/user/sh.asm	/^		t = **p2;$/;"	d
t	obj/user/sh.asm	/^		t = *s;$/;"	d
table	ph.c	/^struct entry *table[NBUCKET];$/;"	v	typeref:struct:entry
test	gradelib.py	/^def test(points, title=None, parent=None):$/;"	f
test_backtrace_arguments	grade-lab1	/^def test_backtrace_arguments():$/;"	f
test_backtrace_count	grade-lab1	/^def test_backtrace_count():$/;"	f
test_backtrace_lines	grade-lab1	/^def test_backtrace_lines():$/;"	f
test_backtrace_symbols	grade-lab1	/^def test_backtrace_symbols():$/;"	f
test_badsegment	grade-lab3	/^def test_badsegment():$/;"	f
test_breakpoint	grade-lab3	/^def test_breakpoint():$/;"	f
test_buggyhello	grade-lab3	/^def test_buggyhello():$/;"	f
test_buggyhello2	grade-lab3	/^def test_buggyhello2():$/;"	f
test_check_kern_pgdir	grade-lab2	/^def test_check_kern_pgdir():$/;"	f
test_check_page	grade-lab2	/^def test_check_page():$/;"	f
test_check_page_alloc	grade-lab2	/^def test_check_page_alloc():$/;"	f
test_check_page_installed_pgdir	grade-lab2	/^def test_check_page_installed_pgdir():$/;"	f
test_divzero	grade-lab3	/^def test_divzero():$/;"	f
test_dumbfork	grade-lab4	/^def test_dumbfork():$/;"	f
test_evilhello	grade-lab3	/^def test_evilhello():$/;"	f
test_faultalloc	grade-lab4	/^def test_faultalloc():$/;"	f
test_faultallocbad	grade-lab4	/^def test_faultallocbad():$/;"	f
test_faultbadhandler	grade-lab4	/^def test_faultbadhandler():$/;"	f
test_faultdie	grade-lab4	/^def test_faultdie():$/;"	f
test_faultevilhandler	grade-lab4	/^def test_faultevilhandler():$/;"	f
test_faultnostack	grade-lab4	/^def test_faultnostack():$/;"	f
test_faultread	grade-lab3	/^def test_faultread():$/;"	f
test_faultread	grade-lab4	/^def test_faultread():$/;"	f
test_faultreadkernel	grade-lab3	/^def test_faultreadkernel():$/;"	f
test_faultregs	grade-lab4	/^def test_faultregs():$/;"	f
test_faultwrite	grade-lab3	/^def test_faultwrite():$/;"	f
test_faultwrite	grade-lab4	/^def test_faultwrite():$/;"	f
test_faultwritekernel	grade-lab3	/^def test_faultwritekernel():$/;"	f
test_fd_share	grade-lab5	/^def test_fd_share():$/;"	f
test_forktree	grade-lab4	/^def test_forktree():$/;"	f
test_fs	grade-lab5	/^def test_fs():$/;"	f
test_hello	grade-lab3	/^def test_hello():$/;"	f
test_icode	grade-lab5	/^def test_icode():$/;"	f
test_jos	grade-lab1	/^def test_jos():$/;"	f
test_jos	grade-lab2	/^def test_jos():$/;"	f
test_pingpong	grade-lab4	/^def test_pingpong():$/;"	f
test_primes	grade-lab4	/^def test_primes():$/;"	f
test_primespipe	grade-lab5	/^def test_primespipe():$/;"	f
test_printf	grade-lab1	/^def test_printf():$/;"	f
test_pte_share	grade-lab5	/^def test_pte_share():$/;"	f
test_sendpage	grade-lab4	/^def test_sendpage():$/;"	f
test_softint	grade-lab3	/^def test_softint():$/;"	f
test_spawn	grade-lab5	/^def test_spawn():$/;"	f
test_spin	grade-lab4	/^def test_spin():$/;"	f
test_stresssched	grade-lab4	/^def test_stresssched():$/;"	f
test_testbss	grade-lab3	/^def test_testbss():$/;"	f
test_testfile	grade-lab5	/^def test_testfile():$/;"	f
test_testshell	grade-lab5	/^def test_testshell():$/;"	f
tf	obj/kern/kernel.asm	/^		tf = &curenv->env_tf;$/;"	d
tf_cs	inc/trap.h	/^	uint16_t tf_cs;$/;"	m	struct:Trapframe
tf_ds	inc/trap.h	/^	uint16_t tf_ds;$/;"	m	struct:Trapframe
tf_eflags	inc/trap.h	/^	uint32_t tf_eflags;$/;"	m	struct:Trapframe
tf_eip	inc/trap.h	/^	uintptr_t tf_eip;$/;"	m	struct:Trapframe
tf_err	inc/trap.h	/^	uint32_t tf_err;$/;"	m	struct:Trapframe
tf_es	inc/trap.h	/^	uint16_t tf_es;$/;"	m	struct:Trapframe
tf_esp	inc/trap.h	/^	uintptr_t tf_esp;$/;"	m	struct:Trapframe
tf_padding1	inc/trap.h	/^	uint16_t tf_padding1;$/;"	m	struct:Trapframe
tf_padding2	inc/trap.h	/^	uint16_t tf_padding2;$/;"	m	struct:Trapframe
tf_padding3	inc/trap.h	/^	uint16_t tf_padding3;$/;"	m	struct:Trapframe
tf_padding4	inc/trap.h	/^	uint16_t tf_padding4;$/;"	m	struct:Trapframe
tf_regs	inc/trap.h	/^	struct PushRegs tf_regs;$/;"	m	struct:Trapframe	typeref:struct:Trapframe::PushRegs
tf_ss	inc/trap.h	/^	uint16_t tf_ss;$/;"	m	struct:Trapframe
tf_trapno	inc/trap.h	/^	uint32_t tf_trapno;$/;"	m	struct:Trapframe
thiscpu	kern/cpu.h	38;"	d
thisenv	lib/libmain.c	/^const volatile struct Env *thisenv;$/;"	v	typeref:struct:Env
thisenv	obj/fs/fs.asm	/^	thisenv = &envs[ENVX(envid)];$/;"	d
thisenv	obj/user/badsegment.asm	/^	thisenv = &envs[ENVX(envid)];$/;"	d
thisenv	obj/user/breakpoint.asm	/^	thisenv = &envs[ENVX(envid)];$/;"	d
thisenv	obj/user/buggyhello.asm	/^	thisenv = &envs[ENVX(envid)];$/;"	d
thisenv	obj/user/buggyhello2.asm	/^	thisenv = &envs[ENVX(envid)];$/;"	d
thisenv	obj/user/cat.asm	/^	thisenv = &envs[ENVX(envid)];$/;"	d
thisenv	obj/user/divzero.asm	/^	thisenv = &envs[ENVX(envid)];$/;"	d
thisenv	obj/user/dumbfork.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/dumbfork.asm	/^	thisenv = &envs[ENVX(envid)];$/;"	d
thisenv	obj/user/echo.asm	/^	thisenv = &envs[ENVX(envid)];$/;"	d
thisenv	obj/user/evilhello.asm	/^	thisenv = &envs[ENVX(envid)];$/;"	d
thisenv	obj/user/fairness.asm	/^	thisenv = &envs[ENVX(envid)];$/;"	d
thisenv	obj/user/faultalloc.asm	/^	thisenv = &envs[ENVX(envid)];$/;"	d
thisenv	obj/user/faultallocbad.asm	/^	thisenv = &envs[ENVX(envid)];$/;"	d
thisenv	obj/user/faultbadhandler.asm	/^	thisenv = &envs[ENVX(envid)];$/;"	d
thisenv	obj/user/faultdie.asm	/^	thisenv = &envs[ENVX(envid)];$/;"	d
thisenv	obj/user/faultevilhandler.asm	/^	thisenv = &envs[ENVX(envid)];$/;"	d
thisenv	obj/user/faultnostack.asm	/^	thisenv = &envs[ENVX(envid)];$/;"	d
thisenv	obj/user/faultread.asm	/^	thisenv = &envs[ENVX(envid)];$/;"	d
thisenv	obj/user/faultreadkernel.asm	/^	thisenv = &envs[ENVX(envid)];$/;"	d
thisenv	obj/user/faultregs.asm	/^	thisenv = &envs[ENVX(envid)];$/;"	d
thisenv	obj/user/faultwrite.asm	/^	thisenv = &envs[ENVX(envid)];$/;"	d
thisenv	obj/user/faultwritekernel.asm	/^	thisenv = &envs[ENVX(envid)];$/;"	d
thisenv	obj/user/forktree.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/forktree.asm	/^	thisenv = &envs[ENVX(envid)];$/;"	d
thisenv	obj/user/hello.asm	/^	thisenv = &envs[ENVX(envid)];$/;"	d
thisenv	obj/user/icode.asm	/^	thisenv = &envs[ENVX(envid)];$/;"	d
thisenv	obj/user/idle.asm	/^	thisenv = &envs[ENVX(envid)];$/;"	d
thisenv	obj/user/init.asm	/^	thisenv = &envs[ENVX(envid)];$/;"	d
thisenv	obj/user/ls.asm	/^	thisenv = &envs[ENVX(envid)];$/;"	d
thisenv	obj/user/lsfd.asm	/^	thisenv = &envs[ENVX(envid)];$/;"	d
thisenv	obj/user/num.asm	/^	thisenv = &envs[ENVX(envid)];$/;"	d
thisenv	obj/user/pingpong.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/pingpong.asm	/^	thisenv = &envs[ENVX(envid)];$/;"	d
thisenv	obj/user/pingpongs.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/pingpongs.asm	/^	thisenv = &envs[ENVX(envid)];$/;"	d
thisenv	obj/user/primes.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/primes.asm	/^	thisenv = &envs[ENVX(envid)];$/;"	d
thisenv	obj/user/primespipe.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/primespipe.asm	/^	thisenv = &envs[ENVX(envid)];$/;"	d
thisenv	obj/user/sendpage.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/sendpage.asm	/^	thisenv = &envs[ENVX(envid)];$/;"	d
thisenv	obj/user/sh.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/sh.asm	/^	thisenv = &envs[ENVX(envid)];$/;"	d
thisenv	obj/user/softint.asm	/^	thisenv = &envs[ENVX(envid)];$/;"	d
thisenv	obj/user/spawnhello.asm	/^	thisenv = &envs[ENVX(envid)];$/;"	d
thisenv	obj/user/spin.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/spin.asm	/^	thisenv = &envs[ENVX(envid)];$/;"	d
thisenv	obj/user/stresssched.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/stresssched.asm	/^	thisenv = &envs[ENVX(envid)];$/;"	d
thisenv	obj/user/testbss.asm	/^	thisenv = &envs[ENVX(envid)];$/;"	d
thisenv	obj/user/testfdsharing.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testfdsharing.asm	/^	thisenv = &envs[ENVX(envid)];$/;"	d
thisenv	obj/user/testfile.asm	/^	thisenv = &envs[ENVX(envid)];$/;"	d
thisenv	obj/user/testkbd.asm	/^	thisenv = &envs[ENVX(envid)];$/;"	d
thisenv	obj/user/testpipe.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testpipe.asm	/^	thisenv = &envs[ENVX(envid)];$/;"	d
thisenv	obj/user/testpiperace.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testpiperace.asm	/^	thisenv = &envs[ENVX(envid)];$/;"	d
thisenv	obj/user/testpiperace2.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testpiperace2.asm	/^	thisenv = &envs[ENVX(envid)];$/;"	d
thisenv	obj/user/testpteshare.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testpteshare.asm	/^	thisenv = &envs[ENVX(envid)];$/;"	d
thisenv	obj/user/testshell.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testshell.asm	/^	thisenv = &envs[ENVX(envid)];$/;"	d
thisenv	obj/user/yield.asm	/^	thisenv = &envs[ENVX(envid)];$/;"	d
thread	barrier.c	/^thread(void *xa)$/;"	f	file:
thread	ph.c	/^thread(void *xa)$/;"	f	file:
time	gradelib.py	/^import sys, os, re, time, socket, select, subprocess, errno, shutil$/;"	i
tlb_invalidate	kern/pmap.c	/^tlb_invalidate(pde_t *pgdir, void *va)$/;"	f
tlbflush	inc/x86.h	/^tlbflush(void)$/;"	f
togglecode	kern/console.c	/^static uint8_t togglecode[256] =$/;"	v	file:
top	obj/user/primes.asm	/^top:$/;"	l
top	obj/user/primespipe.asm	/^top:$/;"	l
trap	homework/hw4-lazy-page-allocation.c	/^trap(struct trapframe *tf)$/;"	f
trap	kern/trap.c	/^trap(struct Trapframe *tf)$/;"	f
trap_dispatch	kern/trap.c	/^trap_dispatch(struct Trapframe *tf)$/;"	f	file:
trap_init	kern/trap.c	/^trap_init(void)$/;"	f
trap_init_percpu	kern/trap.c	/^trap_init_percpu(void)$/;"	f
trapname	kern/trap.c	/^static const char *trapname(int trapno)$/;"	f	file:
true	inc/types.h	/^enum { false, true };$/;"	e	enum:__anon7
try_open	obj/fs/fs.asm	/^try_open:$/;"	l
ts	kern/trap.c	/^static struct Taskstate ts;$/;"	v	typeref:struct:Taskstate	file:
ts_cr3	inc/mmu.h	/^	physaddr_t ts_cr3;	\/\/ Page directory base$/;"	m	struct:Taskstate
ts_cs	inc/mmu.h	/^	uint16_t ts_cs;$/;"	m	struct:Taskstate
ts_ds	inc/mmu.h	/^	uint16_t ts_ds;$/;"	m	struct:Taskstate
ts_eax	inc/mmu.h	/^	uint32_t ts_eax;	\/\/ More saved state (registers)$/;"	m	struct:Taskstate
ts_ebp	inc/mmu.h	/^	uintptr_t ts_ebp;$/;"	m	struct:Taskstate
ts_ebx	inc/mmu.h	/^	uint32_t ts_ebx;$/;"	m	struct:Taskstate
ts_ecx	inc/mmu.h	/^	uint32_t ts_ecx;$/;"	m	struct:Taskstate
ts_edi	inc/mmu.h	/^	uint32_t ts_edi;$/;"	m	struct:Taskstate
ts_edx	inc/mmu.h	/^	uint32_t ts_edx;$/;"	m	struct:Taskstate
ts_eflags	inc/mmu.h	/^	uint32_t ts_eflags;$/;"	m	struct:Taskstate
ts_eip	inc/mmu.h	/^	uintptr_t ts_eip;	\/\/ Saved state from last task switch$/;"	m	struct:Taskstate
ts_es	inc/mmu.h	/^	uint16_t ts_es;		\/\/ Even more saved state (segment selectors)$/;"	m	struct:Taskstate
ts_esi	inc/mmu.h	/^	uint32_t ts_esi;$/;"	m	struct:Taskstate
ts_esp	inc/mmu.h	/^	uintptr_t ts_esp;$/;"	m	struct:Taskstate
ts_esp0	inc/mmu.h	/^	uintptr_t ts_esp0;	\/\/ Stack pointers and segment selectors$/;"	m	struct:Taskstate
ts_esp1	inc/mmu.h	/^	uintptr_t ts_esp1;$/;"	m	struct:Taskstate
ts_esp2	inc/mmu.h	/^	uintptr_t ts_esp2;$/;"	m	struct:Taskstate
ts_fs	inc/mmu.h	/^	uint16_t ts_fs;$/;"	m	struct:Taskstate
ts_gs	inc/mmu.h	/^	uint16_t ts_gs;$/;"	m	struct:Taskstate
ts_iomb	inc/mmu.h	/^	uint16_t ts_iomb;	\/\/ I\/O map base address$/;"	m	struct:Taskstate
ts_ldt	inc/mmu.h	/^	uint16_t ts_ldt;$/;"	m	struct:Taskstate
ts_link	inc/mmu.h	/^	uint32_t ts_link;	\/\/ Old ts selector$/;"	m	struct:Taskstate
ts_padding1	inc/mmu.h	/^	uint16_t ts_padding1;$/;"	m	struct:Taskstate
ts_padding10	inc/mmu.h	/^	uint16_t ts_padding10;$/;"	m	struct:Taskstate
ts_padding2	inc/mmu.h	/^	uint16_t ts_padding2;$/;"	m	struct:Taskstate
ts_padding3	inc/mmu.h	/^	uint16_t ts_padding3;$/;"	m	struct:Taskstate
ts_padding4	inc/mmu.h	/^	uint16_t ts_padding4;$/;"	m	struct:Taskstate
ts_padding5	inc/mmu.h	/^	uint16_t ts_padding5;$/;"	m	struct:Taskstate
ts_padding6	inc/mmu.h	/^	uint16_t ts_padding6;$/;"	m	struct:Taskstate
ts_padding7	inc/mmu.h	/^	uint16_t ts_padding7;$/;"	m	struct:Taskstate
ts_padding8	inc/mmu.h	/^	uint16_t ts_padding8;$/;"	m	struct:Taskstate
ts_padding9	inc/mmu.h	/^	uint16_t ts_padding9;$/;"	m	struct:Taskstate
ts_ss	inc/mmu.h	/^	uint16_t ts_ss;$/;"	m	struct:Taskstate
ts_ss0	inc/mmu.h	/^	uint16_t ts_ss0;	\/\/   after an increase in privilege level$/;"	m	struct:Taskstate
ts_ss1	inc/mmu.h	/^	uint16_t ts_ss1;$/;"	m	struct:Taskstate
ts_ss2	inc/mmu.h	/^	uint16_t ts_ss2;$/;"	m	struct:Taskstate
ts_t	inc/mmu.h	/^	uint16_t ts_t;		\/\/ Trap on task switch$/;"	m	struct:Taskstate
type	homework/hw2-shell/sh.c	/^  int type;              \/\/ ' '$/;"	m	struct:execcmd	file:
type	homework/hw2-shell/sh.c	/^  int type;          \/\/  ' ' (exec), | (pipe), '<' or '>' for redirection$/;"	m	struct:cmd	file:
type	homework/hw2-shell/sh.c	/^  int type;          \/\/ < or > $/;"	m	struct:redircmd	file:
type	homework/hw2-shell/sh.c	/^  int type;          \/\/ |$/;"	m	struct:pipecmd	file:
type	inc/partition.h	/^	uint8_t type;$/;"	m	struct:Partitiondesc
type	kern/mpconfig.c	/^	uint8_t type;                   \/\/ MP system config type$/;"	m	struct:mp	file:
type	kern/mpconfig.c	/^	uint8_t type;                   \/\/ entry type (0)$/;"	m	struct:mpproc	file:
uint16_t	inc/types.h	/^typedef unsigned short uint16_t;$/;"	t
uint32_t	inc/types.h	/^typedef unsigned int uint32_t;$/;"	t
uint32_t	obj/user/pingpongs.asm	/^uint32_t val;$/;"	l
uint32_t	obj/user/testbss.asm	/^uint32_t bigarray[ARRAYSIZE];$/;"	l
uint64_t	inc/types.h	/^typedef unsigned long long uint64_t;$/;"	t
uint8_t	inc/types.h	/^typedef unsigned char uint8_t;$/;"	t
uintptr_t	inc/types.h	/^typedef uint32_t uintptr_t;$/;"	t
umain	fs/serv.c	/^umain(int argc, char **argv)$/;"	f
umain	user/badsegment.c	/^umain(int argc, char **argv)$/;"	f
umain	user/breakpoint.c	/^umain(int argc, char **argv)$/;"	f
umain	user/buggyhello.c	/^umain(int argc, char **argv)$/;"	f
umain	user/buggyhello2.c	/^umain(int argc, char **argv)$/;"	f
umain	user/cat.c	/^umain(int argc, char **argv)$/;"	f
umain	user/divzero.c	/^umain(int argc, char **argv)$/;"	f
umain	user/dumbfork.c	/^umain(int argc, char **argv)$/;"	f
umain	user/echo.c	/^umain(int argc, char **argv)$/;"	f
umain	user/evilhello.c	/^umain(int argc, char **argv)$/;"	f
umain	user/fairness.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultalloc.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultallocbad.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultbadhandler.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultdie.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultevilhandler.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultnostack.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultread.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultreadkernel.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultregs.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultwrite.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultwritekernel.c	/^umain(int argc, char **argv)$/;"	f
umain	user/forktree.c	/^umain(int argc, char **argv)$/;"	f
umain	user/hello.c	/^umain(int argc, char **argv)$/;"	f
umain	user/icode.c	/^umain(int argc, char **argv)$/;"	f
umain	user/idle.c	/^umain(int argc, char **argv)$/;"	f
umain	user/init.c	/^umain(int argc, char **argv)$/;"	f
umain	user/initsh.c	/^umain(int argc, char **argv)$/;"	f
umain	user/ls.c	/^umain(int argc, char **argv)$/;"	f
umain	user/lsfd.c	/^umain(int argc, char **argv)$/;"	f
umain	user/num.c	/^umain(int argc, char **argv)$/;"	f
umain	user/pingpong.c	/^umain(int argc, char **argv)$/;"	f
umain	user/pingpongs.c	/^umain(int argc, char **argv)$/;"	f
umain	user/primes.c	/^umain(int argc, char **argv)$/;"	f
umain	user/primespipe.c	/^umain(int argc, char **argv)$/;"	f
umain	user/sendpage.c	/^umain(int argc, char **argv)$/;"	f
umain	user/sh.c	/^umain(int argc, char **argv)$/;"	f
umain	user/softint.c	/^umain(int argc, char **argv)$/;"	f
umain	user/spawnhello.c	/^umain(int argc, char **argv)$/;"	f
umain	user/spawninit.c	/^umain(int argc, char **argv)$/;"	f
umain	user/spin.c	/^umain(int argc, char **argv)$/;"	f
umain	user/stresssched.c	/^umain(int argc, char **argv)$/;"	f
umain	user/testbss.c	/^umain(int argc, char **argv)$/;"	f
umain	user/testfdsharing.c	/^umain(int argc, char **argv)$/;"	f
umain	user/testfile.c	/^umain(int argc, char **argv)$/;"	f
umain	user/testkbd.c	/^umain(int argc, char **argv)$/;"	f
umain	user/testmalloc.c	/^umain(int argc, char **argv)$/;"	f
umain	user/testpipe.c	/^umain(int argc, char **argv)$/;"	f
umain	user/testpiperace.c	/^umain(int argc, char **argv)$/;"	f
umain	user/testpiperace2.c	/^umain(int argc, char **argv)$/;"	f
umain	user/testptelibrary.c	/^umain(int argc, char **argv)$/;"	f
umain	user/testpteshare.c	/^umain(int argc, char **argv)$/;"	f
umain	user/testshell.c	/^umain(int argc, char **argv)$/;"	f
umain	user/writemotd.c	/^umain(int argc, char **argv)$/;"	f
umain	user/yield.c	/^umain(int argc, char **argv)$/;"	f
union	obj/fs/fs.asm	/^union Fsipc *fsreq = (union Fsipc *)0x0ffff000;$/;"	l
unlock_kernel	kern/spinlock.h	/^unlock_kernel(void)$/;"	f
unsigned	obj/kern/kernel.asm	/^unsigned$/;"	l
unsigned	obj/user/primes.asm	/^unsigned$/;"	l
unsigned	obj/user/primespipe.asm	/^unsigned$/;"	l
usage	fs/fsformat.c	/^usage(void)$/;"	f
usage	user/ls.c	/^usage(void)$/;"	f
usage	user/lsfd.c	/^usage(void)$/;"	f
usage	user/sh.c	/^usage(void)$/;"	f
usage_exit	kern/monitor.c	/^usage_exit(const char *usage) $/;"	f	file:
usefprint	obj/user/lsfd.asm	/^			usefprint = 1;$/;"	d
user_mem_assert	kern/pmap.c	/^user_mem_assert(struct Env *env, const void *va, size_t len, int perm)$/;"	f
user_mem_check	kern/pmap.c	/^user_mem_check(struct Env *env, const void *va, size_t len, int perm)$/;"	f
user_mem_check_addr	kern/pmap.c	/^static uintptr_t user_mem_check_addr;$/;"	v	file:
user_mem_check_addr	obj/kern/kernel.asm	/^		user_mem_check_addr = (uintptr_t) va;$/;"	d
user_test	gradelib.py	/^    def user_test(self, binary, *monitors, **kw):$/;"	m	class:Runner
utf_eflags	inc/trap.h	/^	uint32_t utf_eflags;$/;"	m	struct:UTrapframe
utf_eip	inc/trap.h	/^	uintptr_t utf_eip;$/;"	m	struct:UTrapframe
utf_err	inc/trap.h	/^	uint32_t utf_err;$/;"	m	struct:UTrapframe
utf_esp	inc/trap.h	/^	uintptr_t utf_esp;$/;"	m	struct:UTrapframe
utf_fault_va	inc/trap.h	/^	uint32_t utf_fault_va;	\/* va for T_PGFLT, 0 otherwise *\/$/;"	m	struct:UTrapframe
utf_regs	inc/trap.h	/^	struct PushRegs utf_regs;$/;"	m	struct:UTrapframe	typeref:struct:UTrapframe::PushRegs
va	obj/fs/fs.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/kern/kernel.asm	/^	va = (void*)(PGSIZE * NPDENTRIES + PGSIZE);$/;"	d
va	obj/user/badsegment.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/breakpoint.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/buggyhello.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/buggyhello2.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/cat.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/divzero.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/dumbfork.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/echo.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/evilhello.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/fairness.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/faultalloc.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/faultallocbad.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/faultbadhandler.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/faultdie.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/faultevilhandler.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/faultnostack.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/faultread.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/faultreadkernel.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/faultregs.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/faultwrite.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/faultwritekernel.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/forktree.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/hello.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/icode.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/idle.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/init.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/ls.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/lsfd.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/num.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/pingpong.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/pingpongs.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/primes.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/primespipe.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/sendpage.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/sh.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/softint.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/spawnhello.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/spin.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/stresssched.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/testbss.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/testfdsharing.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/testfile.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/testkbd.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/testpipe.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/testpiperace.asm	/^	va = 0;$/;"	d
va	obj/user/testpiperace.asm	/^	va = fd2data(fd);$/;"	d
va	obj/user/testpiperace.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/testpiperace2.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/testpteshare.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/testshell.asm	/^	va = fd2data(fd0);$/;"	d
va	obj/user/yield.asm	/^	va = fd2data(fd0);$/;"	d
va_arg	inc/stdarg.h	10;"	d
va_begin	obj/kern/kernel.asm	/^	va_begin = ROUNDUP(va_begin, PGSIZE);$/;"	d
va_end	inc/stdarg.h	12;"	d
va_end	obj/kern/kernel.asm	/^	va_end = base + size;$/;"	d
va_is_dirty	fs/bc.c	/^va_is_dirty(void *va)$/;"	f
va_is_mapped	fs/bc.c	/^va_is_mapped(void *va)$/;"	f
va_list	inc/stdarg.h	/^typedef __builtin_va_list va_list;$/;"	t
va_start	inc/stdarg.h	8;"	d
val	user/pingpongs.c	/^uint32_t val;$/;"	v
value	ph.c	/^	int value;$/;"	m	struct:entry	file:
vcprintf	kern/printf.c	/^vcprintf(const char *fmt, va_list ap)$/;"	f
vcprintf	lib/printf.c	/^vcprintf(const char *fmt, va_list ap)$/;"	f
vectors	kern/vectors.S	/^vectors:$/;"	l
version	kern/mpconfig.c	/^	uint8_t version;                \/\/ [14]$/;"	m	struct:mpconf	file:
version	kern/mpconfig.c	/^	uint8_t version;                \/\/ local APIC version$/;"	m	struct:mpproc	file:
vfprintf	lib/fprintf.c	/^vfprintf(int fd, const char *fmt, va_list ap)$/;"	f
void	obj/boot/boot.asm	/^void readsect(void*, uint32_t);$/;"	l
void	obj/boot/boot.asm	/^void readseg(uint32_t, uint32_t, uint32_t);$/;"	l
void	obj/boot/boot.asm	/^void$/;"	l
void	obj/fs/fs.asm	/^void *$/;"	l
void	obj/fs/fs.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/fs/fs.asm	/^void$/;"	l
void	obj/kern/kernel.asm	/^void	user_mem_assert(struct Env *env, const void *va, size_t len, int perm);$/;"	l
void	obj/kern/kernel.asm	/^void *$/;"	l
void	obj/kern/kernel.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/kern/kernel.asm	/^void sched_halt(void);$/;"	l
void	obj/kern/kernel.asm	/^void$/;"	l
void	obj/user/badsegment.asm	/^void *$/;"	l
void	obj/user/badsegment.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/badsegment.asm	/^void$/;"	l
void	obj/user/breakpoint.asm	/^void *$/;"	l
void	obj/user/breakpoint.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/breakpoint.asm	/^void$/;"	l
void	obj/user/buggyhello.asm	/^void *$/;"	l
void	obj/user/buggyhello.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/buggyhello.asm	/^void$/;"	l
void	obj/user/buggyhello2.asm	/^void *$/;"	l
void	obj/user/buggyhello2.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/buggyhello2.asm	/^void$/;"	l
void	obj/user/cat.asm	/^void *$/;"	l
void	obj/user/cat.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/cat.asm	/^void$/;"	l
void	obj/user/divzero.asm	/^void *$/;"	l
void	obj/user/divzero.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/divzero.asm	/^void$/;"	l
void	obj/user/dumbfork.asm	/^void *$/;"	l
void	obj/user/dumbfork.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/dumbfork.asm	/^void$/;"	l
void	obj/user/echo.asm	/^void *$/;"	l
void	obj/user/echo.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/echo.asm	/^void$/;"	l
void	obj/user/evilhello.asm	/^void *$/;"	l
void	obj/user/evilhello.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/evilhello.asm	/^void$/;"	l
void	obj/user/fairness.asm	/^void *$/;"	l
void	obj/user/fairness.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/fairness.asm	/^void$/;"	l
void	obj/user/faultalloc.asm	/^void *$/;"	l
void	obj/user/faultalloc.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultalloc.asm	/^void$/;"	l
void	obj/user/faultallocbad.asm	/^void *$/;"	l
void	obj/user/faultallocbad.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultallocbad.asm	/^void$/;"	l
void	obj/user/faultbadhandler.asm	/^void *$/;"	l
void	obj/user/faultbadhandler.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultbadhandler.asm	/^void$/;"	l
void	obj/user/faultdie.asm	/^void *$/;"	l
void	obj/user/faultdie.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultdie.asm	/^void$/;"	l
void	obj/user/faultevilhandler.asm	/^void *$/;"	l
void	obj/user/faultevilhandler.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultevilhandler.asm	/^void$/;"	l
void	obj/user/faultnostack.asm	/^void *$/;"	l
void	obj/user/faultnostack.asm	/^void _pgfault_upcall();$/;"	l
void	obj/user/faultnostack.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultnostack.asm	/^void$/;"	l
void	obj/user/faultread.asm	/^void *$/;"	l
void	obj/user/faultread.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultread.asm	/^void$/;"	l
void	obj/user/faultreadkernel.asm	/^void *$/;"	l
void	obj/user/faultreadkernel.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultreadkernel.asm	/^void$/;"	l
void	obj/user/faultregs.asm	/^void *$/;"	l
void	obj/user/faultregs.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultregs.asm	/^void$/;"	l
void	obj/user/faultwrite.asm	/^void *$/;"	l
void	obj/user/faultwrite.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultwrite.asm	/^void$/;"	l
void	obj/user/faultwritekernel.asm	/^void *$/;"	l
void	obj/user/faultwritekernel.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultwritekernel.asm	/^void$/;"	l
void	obj/user/forktree.asm	/^void *$/;"	l
void	obj/user/forktree.asm	/^void forktree(const char *cur);$/;"	l
void	obj/user/forktree.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/forktree.asm	/^void$/;"	l
void	obj/user/hello.asm	/^void *$/;"	l
void	obj/user/hello.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/hello.asm	/^void$/;"	l
void	obj/user/icode.asm	/^void *$/;"	l
void	obj/user/icode.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/icode.asm	/^void$/;"	l
void	obj/user/idle.asm	/^void *$/;"	l
void	obj/user/idle.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/idle.asm	/^void$/;"	l
void	obj/user/init.asm	/^void *$/;"	l
void	obj/user/init.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/init.asm	/^void$/;"	l
void	obj/user/ls.asm	/^void *$/;"	l
void	obj/user/ls.asm	/^void ls1(const char*, bool, off_t, const char*);$/;"	l
void	obj/user/ls.asm	/^void lsdir(const char*, const char*);$/;"	l
void	obj/user/ls.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/ls.asm	/^void$/;"	l
void	obj/user/lsfd.asm	/^void *$/;"	l
void	obj/user/lsfd.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/lsfd.asm	/^void$/;"	l
void	obj/user/num.asm	/^void *$/;"	l
void	obj/user/num.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/num.asm	/^void$/;"	l
void	obj/user/pingpong.asm	/^void *$/;"	l
void	obj/user/pingpong.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/pingpong.asm	/^void$/;"	l
void	obj/user/pingpongs.asm	/^void *$/;"	l
void	obj/user/pingpongs.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/pingpongs.asm	/^void$/;"	l
void	obj/user/primes.asm	/^void *$/;"	l
void	obj/user/primes.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/primes.asm	/^void$/;"	l
void	obj/user/primespipe.asm	/^void *$/;"	l
void	obj/user/primespipe.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/primespipe.asm	/^void$/;"	l
void	obj/user/sendpage.asm	/^void *$/;"	l
void	obj/user/sendpage.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/sendpage.asm	/^void$/;"	l
void	obj/user/sh.asm	/^void *$/;"	l
void	obj/user/sh.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/sh.asm	/^void$/;"	l
void	obj/user/softint.asm	/^void *$/;"	l
void	obj/user/softint.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/softint.asm	/^void$/;"	l
void	obj/user/spawnhello.asm	/^void *$/;"	l
void	obj/user/spawnhello.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/spawnhello.asm	/^void$/;"	l
void	obj/user/spin.asm	/^void *$/;"	l
void	obj/user/spin.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/spin.asm	/^void$/;"	l
void	obj/user/stresssched.asm	/^void *$/;"	l
void	obj/user/stresssched.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/stresssched.asm	/^void$/;"	l
void	obj/user/testbss.asm	/^void *$/;"	l
void	obj/user/testbss.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testbss.asm	/^void$/;"	l
void	obj/user/testfdsharing.asm	/^void *$/;"	l
void	obj/user/testfdsharing.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testfdsharing.asm	/^void$/;"	l
void	obj/user/testfile.asm	/^void *$/;"	l
void	obj/user/testfile.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testfile.asm	/^void$/;"	l
void	obj/user/testkbd.asm	/^void *$/;"	l
void	obj/user/testkbd.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testkbd.asm	/^void$/;"	l
void	obj/user/testpipe.asm	/^void *$/;"	l
void	obj/user/testpipe.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testpipe.asm	/^void$/;"	l
void	obj/user/testpiperace.asm	/^void *$/;"	l
void	obj/user/testpiperace.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testpiperace.asm	/^void$/;"	l
void	obj/user/testpiperace2.asm	/^void *$/;"	l
void	obj/user/testpiperace2.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testpiperace2.asm	/^void$/;"	l
void	obj/user/testpteshare.asm	/^void *$/;"	l
void	obj/user/testpteshare.asm	/^void childofspawn(void);$/;"	l
void	obj/user/testpteshare.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testpteshare.asm	/^void$/;"	l
void	obj/user/testshell.asm	/^void *$/;"	l
void	obj/user/testshell.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testshell.asm	/^void wrong(int, int, int);$/;"	l
void	obj/user/testshell.asm	/^void$/;"	l
void	obj/user/yield.asm	/^void *$/;"	l
void	obj/user/yield.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/yield.asm	/^void$/;"	l
volatile	obj/kern/kernel.asm	/^volatile uint32_t *lapic;$/;"	l
volatile	obj/user/stresssched.asm	/^volatile int counter;$/;"	l
vprintfmt	lib/printfmt.c	/^vprintfmt(void (*putch)(int, void*), void *putdat, const char *fmt, va_list ap)$/;"	f
vsnprintf	lib/printfmt.c	/^vsnprintf(char *buf, int n, const char *fmt, va_list ap)$/;"	f
wait	gradelib.py	/^    def wait(self):$/;"	f
wait	lib/wait.c	/^wait(envid_t envid)$/;"	f
waitdisk	boot/main.c	/^waitdisk(void)$/;"	f
walk_path	fs/fs.c	/^walk_path(const char *path, struct File **pdir, struct File **pf, char *lastelem)$/;"	f	file:
want	obj/user/init.asm	/^	want = 0xf989e;$/;"	d
warn	inc/assert.h	11;"	d
was	obj/kern/kernel.asm	/^	was = *cp;$/;"	d
wfd	obj/user/primespipe.asm	/^	wfd = pfd[1];$/;"	d
wfd	obj/user/testshell.asm	/^	wfd = pfds[1];$/;"	d
whitespace	homework/hw2-shell/sh.c	/^char whitespace[] = " \\t\\r\\n\\v";$/;"	v
who	obj/user/dumbfork.asm	/^	who = dumbfork();$/;"	d
width	obj/fs/fs.asm	/^				width = 0;$/;"	d
width	obj/fs/fs.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/fs/fs.asm	/^		width = -1;$/;"	d
width	obj/kern/kernel.asm	/^				width = 0;$/;"	d
width	obj/kern/kernel.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/kern/kernel.asm	/^		width = -1;$/;"	d
width	obj/user/badsegment.asm	/^				width = 0;$/;"	d
width	obj/user/badsegment.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/badsegment.asm	/^		width = -1;$/;"	d
width	obj/user/breakpoint.asm	/^				width = 0;$/;"	d
width	obj/user/breakpoint.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/breakpoint.asm	/^		width = -1;$/;"	d
width	obj/user/buggyhello.asm	/^				width = 0;$/;"	d
width	obj/user/buggyhello.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/buggyhello.asm	/^		width = -1;$/;"	d
width	obj/user/buggyhello2.asm	/^				width = 0;$/;"	d
width	obj/user/buggyhello2.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/buggyhello2.asm	/^		width = -1;$/;"	d
width	obj/user/cat.asm	/^				width = 0;$/;"	d
width	obj/user/cat.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/cat.asm	/^		width = -1;$/;"	d
width	obj/user/divzero.asm	/^				width = 0;$/;"	d
width	obj/user/divzero.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/divzero.asm	/^		width = -1;$/;"	d
width	obj/user/dumbfork.asm	/^				width = 0;$/;"	d
width	obj/user/dumbfork.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/dumbfork.asm	/^		width = -1;$/;"	d
width	obj/user/echo.asm	/^				width = 0;$/;"	d
width	obj/user/echo.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/echo.asm	/^		width = -1;$/;"	d
width	obj/user/evilhello.asm	/^				width = 0;$/;"	d
width	obj/user/evilhello.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/evilhello.asm	/^		width = -1;$/;"	d
width	obj/user/fairness.asm	/^				width = 0;$/;"	d
width	obj/user/fairness.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/fairness.asm	/^		width = -1;$/;"	d
width	obj/user/faultalloc.asm	/^				width = 0;$/;"	d
width	obj/user/faultalloc.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultalloc.asm	/^		width = -1;$/;"	d
width	obj/user/faultallocbad.asm	/^				width = 0;$/;"	d
width	obj/user/faultallocbad.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultallocbad.asm	/^		width = -1;$/;"	d
width	obj/user/faultbadhandler.asm	/^				width = 0;$/;"	d
width	obj/user/faultbadhandler.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultbadhandler.asm	/^		width = -1;$/;"	d
width	obj/user/faultdie.asm	/^				width = 0;$/;"	d
width	obj/user/faultdie.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultdie.asm	/^		width = -1;$/;"	d
width	obj/user/faultevilhandler.asm	/^				width = 0;$/;"	d
width	obj/user/faultevilhandler.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultevilhandler.asm	/^		width = -1;$/;"	d
width	obj/user/faultnostack.asm	/^				width = 0;$/;"	d
width	obj/user/faultnostack.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultnostack.asm	/^		width = -1;$/;"	d
width	obj/user/faultread.asm	/^				width = 0;$/;"	d
width	obj/user/faultread.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultread.asm	/^		width = -1;$/;"	d
width	obj/user/faultreadkernel.asm	/^				width = 0;$/;"	d
width	obj/user/faultreadkernel.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultreadkernel.asm	/^		width = -1;$/;"	d
width	obj/user/faultregs.asm	/^				width = 0;$/;"	d
width	obj/user/faultregs.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultregs.asm	/^		width = -1;$/;"	d
width	obj/user/faultwrite.asm	/^				width = 0;$/;"	d
width	obj/user/faultwrite.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultwrite.asm	/^		width = -1;$/;"	d
width	obj/user/faultwritekernel.asm	/^				width = 0;$/;"	d
width	obj/user/faultwritekernel.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultwritekernel.asm	/^		width = -1;$/;"	d
width	obj/user/forktree.asm	/^				width = 0;$/;"	d
width	obj/user/forktree.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/forktree.asm	/^		width = -1;$/;"	d
width	obj/user/hello.asm	/^				width = 0;$/;"	d
width	obj/user/hello.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/hello.asm	/^		width = -1;$/;"	d
width	obj/user/icode.asm	/^				width = 0;$/;"	d
width	obj/user/icode.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/icode.asm	/^		width = -1;$/;"	d
width	obj/user/idle.asm	/^				width = 0;$/;"	d
width	obj/user/idle.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/idle.asm	/^		width = -1;$/;"	d
width	obj/user/init.asm	/^				width = 0;$/;"	d
width	obj/user/init.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/init.asm	/^		width = -1;$/;"	d
width	obj/user/ls.asm	/^				width = 0;$/;"	d
width	obj/user/ls.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/ls.asm	/^		width = -1;$/;"	d
width	obj/user/lsfd.asm	/^				width = 0;$/;"	d
width	obj/user/lsfd.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/lsfd.asm	/^		width = -1;$/;"	d
width	obj/user/num.asm	/^				width = 0;$/;"	d
width	obj/user/num.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/num.asm	/^		width = -1;$/;"	d
width	obj/user/pingpong.asm	/^				width = 0;$/;"	d
width	obj/user/pingpong.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/pingpong.asm	/^		width = -1;$/;"	d
width	obj/user/pingpongs.asm	/^				width = 0;$/;"	d
width	obj/user/pingpongs.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/pingpongs.asm	/^		width = -1;$/;"	d
width	obj/user/primes.asm	/^				width = 0;$/;"	d
width	obj/user/primes.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/primes.asm	/^		width = -1;$/;"	d
width	obj/user/primespipe.asm	/^				width = 0;$/;"	d
width	obj/user/primespipe.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/primespipe.asm	/^		width = -1;$/;"	d
width	obj/user/sendpage.asm	/^				width = 0;$/;"	d
width	obj/user/sendpage.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/sendpage.asm	/^		width = -1;$/;"	d
width	obj/user/sh.asm	/^				width = 0;$/;"	d
width	obj/user/sh.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/sh.asm	/^		width = -1;$/;"	d
width	obj/user/softint.asm	/^				width = 0;$/;"	d
width	obj/user/softint.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/softint.asm	/^		width = -1;$/;"	d
width	obj/user/spawnhello.asm	/^				width = 0;$/;"	d
width	obj/user/spawnhello.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/spawnhello.asm	/^		width = -1;$/;"	d
width	obj/user/spin.asm	/^				width = 0;$/;"	d
width	obj/user/spin.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/spin.asm	/^		width = -1;$/;"	d
width	obj/user/stresssched.asm	/^				width = 0;$/;"	d
width	obj/user/stresssched.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/stresssched.asm	/^		width = -1;$/;"	d
width	obj/user/testbss.asm	/^				width = 0;$/;"	d
width	obj/user/testbss.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/testbss.asm	/^		width = -1;$/;"	d
width	obj/user/testfdsharing.asm	/^				width = 0;$/;"	d
width	obj/user/testfdsharing.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/testfdsharing.asm	/^		width = -1;$/;"	d
width	obj/user/testfile.asm	/^				width = 0;$/;"	d
width	obj/user/testfile.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/testfile.asm	/^		width = -1;$/;"	d
width	obj/user/testkbd.asm	/^				width = 0;$/;"	d
width	obj/user/testkbd.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/testkbd.asm	/^		width = -1;$/;"	d
width	obj/user/testpipe.asm	/^				width = 0;$/;"	d
width	obj/user/testpipe.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/testpipe.asm	/^		width = -1;$/;"	d
width	obj/user/testpiperace.asm	/^				width = 0;$/;"	d
width	obj/user/testpiperace.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/testpiperace.asm	/^		width = -1;$/;"	d
width	obj/user/testpiperace2.asm	/^				width = 0;$/;"	d
width	obj/user/testpiperace2.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/testpiperace2.asm	/^		width = -1;$/;"	d
width	obj/user/testpteshare.asm	/^				width = 0;$/;"	d
width	obj/user/testpteshare.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/testpteshare.asm	/^		width = -1;$/;"	d
width	obj/user/testshell.asm	/^				width = 0;$/;"	d
width	obj/user/testshell.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/testshell.asm	/^		width = -1;$/;"	d
width	obj/user/yield.asm	/^				width = 0;$/;"	d
width	obj/user/yield.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/yield.asm	/^		width = -1;$/;"	d
wpos	kern/console.c	/^	uint32_t wpos;$/;"	m	struct:__anon3	file:
write	inc/fs.h	/^	} write;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsreq_write
write	lib/fd.c	/^write(int fdnum, const void *buf, size_t n)$/;"	f
write_eflags	inc/x86.h	/^write_eflags(uint32_t eflags)$/;"	f
writebuf	lib/fprintf.c	/^writebuf(struct printbuf *b)$/;"	f	file:
writefile	fs/fsformat.c	/^writefile(struct Dir *dir, const char *name)$/;"	f
wrong	user/testshell.c	/^wrong(int rfd, int kfd, int off)$/;"	f
wrv	obj/kern/kernel.asm	/^	wrv = (uint16_t *)KADDR((0x40 << 4 | 0x67));  \/\/ Warm reset vector$/;"	d
xchecksum	kern/mpconfig.c	/^	uint8_t xchecksum;              \/\/ extended table checksum$/;"	m	struct:mpconf	file:
xchg	inc/x86.h	/^xchg(volatile uint32_t *addr, uint32_t newval)$/;"	f
xlength	kern/mpconfig.c	/^	uint16_t xlength;               \/\/ extended table length$/;"	m	struct:mpconf	file:
xopen	user/testfile.c	/^xopen(const char *path, int mode)$/;"	f	file:
zero	obj/user/divzero.asm	/^	zero = 0;$/;"	d
zero	user/divzero.c	/^int zero;$/;"	v
